{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/google/server/adwords/ad-groups/create.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"imports/modules/google/server/adwords/ad-groups/create.jsx","filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/google/server/adwords/ad-groups/create.jsx","passPerPreset":false,"envName":"development","cwd":"/home/blackstoneteam/repos/viralizing-web/app","root":"/home/blackstoneteam/repos/viralizing-web/app","presets":[],"generatorOpts":{"filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/google/server/adwords/ad-groups/create.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/modules/google/server/adwords/ad-groups/create.jsx"}},"code":"let AdWordsConnection;\nmodule.watch(require(\"../connection\"), {\n  default(v) {\n    AdWordsConnection = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet XML2JS;\nmodule.watch(require(\"xml2js\"), {\n  default(v) {\n    XML2JS = v;\n  }\n\n}, 2);\nMeteor.methods({\n  \"google-adwords-adGroup-create\": function (accountID, data) {\n    //console.log(\"google-adwords-adGroup-create\", accountID);\n    let account = SocialAccounts.findOne({\n      _id: accountID\n    });\n    let connection = account.connection;\n    let AdWords = AdWordsConnection(connection.idToken, connection.accessToken);\n    let adGroupService = AdWords.getService('AdGroupService', 'v201708');\n    let adGroup = {\n      operator: \"ADD\",\n      operand: {\n        name: \"Test AdGroup \" + moment(new Date()).format(\"DD/MM/YYYY hh:mm:ss A\"),\n        biddingStrategyConfiguration: {\n          biddingStrategyType: \"ENHANCED_CPC\",\n          biddingStrategySource: \"CAMPAIGN\"\n        },\n        contentBidCriterionTypeGroup: \"KEYWORD\",\n        campaignId: 934093898,\n\n        /*campaign: {\n            campaignId: \"934093898\"\n        },\n        status: \"PAUSED\",*/\n        urlCustomParameters: {\n          parameters: [],\n          doReplace: false\n          /*,\n          settings: {\n             \"xsi:type\": \"TargetingSetting\",\n             details: [\n                 {\n                     criterionTypeGroup: \"KEYWORD\",\n                     targetAll: true\n                 }\n             ]\n          }*/\n\n        }\n      }\n    };\n    /*campaignService.get({serviceSelector}, (error, result) => {\n        console.log(\"ADWORDS_CAMPAIGN\",error, typeof result, result);\n    });*/\n    //let res= await campaignService.get({serviceSelector});\n\n    let adGroupServiceClient = Meteor.wrapAsync(adGroupService.mutate, adGroupService);\n\n    try {\n      let adGroupRes = adGroupServiceClient({\n        operations: adGroup\n      }); //console.log(\"SYNC_RES\", adGroupRes);\n\n      return adGroupRes;\n    } catch (e) {\n      //console.log(\"ERROR\", typeof e.body, e);\n      let parser = Meteor.wrapAsync(XML2JS.parseString, XML2JS);\n      return parser(e.body)[\"soap:Envelope\"][\"soap:Body\"][0][\"soap:Fault\"][0].faultstring[0];\n    }\n  }\n});","map":{"version":3,"sources":["imports/modules/google/server/adwords/ad-groups/create.jsx"],"names":["AdWordsConnection","module","watch","require","default","v","Meteor","XML2JS","methods","accountID","data","account","SocialAccounts","findOne","_id","connection","AdWords","idToken","accessToken","adGroupService","getService","adGroup","operator","operand","name","moment","Date","format","biddingStrategyConfiguration","biddingStrategyType","biddingStrategySource","contentBidCriterionTypeGroup","campaignId","urlCustomParameters","parameters","doReplace","adGroupServiceClient","wrapAsync","mutate","adGroupRes","operations","e","parser","parseString","body","faultstring"],"mappings":"AAAA,IAAIA,iBAAJ;AAAsBC,OAAOC,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACC,UAAQC,CAAR,EAAU;AAACL,wBAAkBK,CAAlB;AAAoB;;AAAhC,CAAtC,EAAwE,CAAxE;AAA2E,IAAIC,MAAJ;AAAWL,OAAOC,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACG,SAAOD,CAAP,EAAS;AAACC,aAAOD,CAAP;AAAS;;AAApB,CAAtC,EAA4D,CAA5D;AAA+D,IAAIE,MAAJ;AAAWN,OAAOC,KAAP,CAAaC,QAAQ,QAAR,CAAb,EAA+B;AAACC,UAAQC,CAAR,EAAU;AAACE,aAAOF,CAAP;AAAS;;AAArB,CAA/B,EAAsD,CAAtD;AAItLC,OAAOE,OAAP,CAAe;AACX,mCAAiC,UAAUC,SAAV,EAAqBC,IAArB,EAA2B;AACxD;AACA,QAAIC,UAAUC,eAAeC,OAAf,CAAuB;AAACC,WAAKL;AAAN,KAAvB,CAAd;AACA,QAAIM,aAAaJ,QAAQI,UAAzB;AACA,QAAIC,UAAUhB,kBAAkBe,WAAWE,OAA7B,EAAsCF,WAAWG,WAAjD,CAAd;AACA,QAAIC,iBAAiBH,QAAQI,UAAR,CAAmB,gBAAnB,EAAqC,SAArC,CAArB;AAGA,QAAIC,UAAU;AACVC,gBAAU,KADA;AAEVC,eAAS;AACLC,cAAM,kBAAkBC,OAAO,IAAIC,IAAJ,EAAP,EAAmBC,MAAnB,CAA0B,uBAA1B,CADnB;AAELC,sCAA8B;AAC1BC,+BAAqB,cADK;AAE1BC,iCAAuB;AAFG,SAFzB;AAMLC,sCAA8B,SANzB;AAOLC,oBAAY,SAPP;;AAQL;;;;AAIAC,6BAAqB;AACjBC,sBAAY,EADK;AAEjBC,qBAAW;AACd;;;;;;;;;;;AAHoB;AAZhB;AAFC,KAAd;AA+BA;;;AAIA;;AAEA,QAAIC,uBAAuB9B,OAAO+B,SAAP,CAAiBlB,eAAemB,MAAhC,EAAwCnB,cAAxC,CAA3B;;AAEA,QAAI;AACA,UAAIoB,aAAaH,qBAAqB;AAACI,oBAAYnB;AAAb,OAArB,CAAjB,CADA,CAEA;;AACA,aAAOkB,UAAP;AACH,KAJD,CAIE,OAAOE,CAAP,EAAU;AACR;AACA,UAAIC,SAASpC,OAAO+B,SAAP,CAAiB9B,OAAOoC,WAAxB,EAAqCpC,MAArC,CAAb;AACA,aAAOmC,OAAOD,EAAEG,IAAT,EAAe,eAAf,EAAgC,WAAhC,EAA6C,CAA7C,EAAgD,YAAhD,EAA8D,CAA9D,EAAiEC,WAAjE,CAA6E,CAA7E,CAAP;AACH;AACJ;AAzDU,CAAf","sourcesContent":["import AdWordsConnection from \"../connection\";\nimport {Meteor} from \"meteor/meteor\";\nimport XML2JS from \"xml2js\";\n\nMeteor.methods({\n    \"google-adwords-adGroup-create\": function (accountID, data) {\n        //console.log(\"google-adwords-adGroup-create\", accountID);\n        let account = SocialAccounts.findOne({_id: accountID});\n        let connection = account.connection;\n        let AdWords = AdWordsConnection(connection.idToken, connection.accessToken);\n        let adGroupService = AdWords.getService('AdGroupService', 'v201708');\n\n\n        let adGroup = {\n            operator: \"ADD\",\n            operand: {\n                name: \"Test AdGroup \" + moment(new Date()).format(\"DD/MM/YYYY hh:mm:ss A\"),\n                biddingStrategyConfiguration: {\n                    biddingStrategyType: \"ENHANCED_CPC\",\n                    biddingStrategySource: \"CAMPAIGN\"\n                },\n                contentBidCriterionTypeGroup: \"KEYWORD\",\n                campaignId: 934093898,\n                /*campaign: {\n                    campaignId: \"934093898\"\n                },\n                status: \"PAUSED\",*/\n                urlCustomParameters: {\n                    parameters: [],\n                    doReplace: false\n                }/*,\n                settings: {\n                    \"xsi:type\": \"TargetingSetting\",\n                    details: [\n                        {\n                            criterionTypeGroup: \"KEYWORD\",\n                            targetAll: true\n                        }\n                    ]\n                }*/\n            }\n        };\n\n\n        /*campaignService.get({serviceSelector}, (error, result) => {\n            console.log(\"ADWORDS_CAMPAIGN\",error, typeof result, result);\n        });*/\n\n        //let res= await campaignService.get({serviceSelector});\n\n        let adGroupServiceClient = Meteor.wrapAsync(adGroupService.mutate, adGroupService);\n\n        try {\n            let adGroupRes = adGroupServiceClient({operations: adGroup});\n            //console.log(\"SYNC_RES\", adGroupRes);\n            return adGroupRes\n        } catch (e) {\n            //console.log(\"ERROR\", typeof e.body, e);\n            let parser = Meteor.wrapAsync(XML2JS.parseString, XML2JS);\n            return parser(e.body)[\"soap:Envelope\"][\"soap:Body\"][0][\"soap:Fault\"][0].faultstring[0]\n        }\n    }\n});"]},"sourceType":"script","hash":"2bb9d20c84263aa240e1b5f26dc4d9b0e34e78e8"}
