{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/statement/ui/components/statement/payments/table.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"imports/modules/statement/ui/components/statement/payments/table.jsx","filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/statement/ui/components/statement/payments/table.jsx","passPerPreset":false,"envName":"development","cwd":"/home/blackstoneteam/repos/viralizing-web/app","root":"/home/blackstoneteam/repos/viralizing-web/app","presets":[],"generatorOpts":{"filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/statement/ui/components/statement/payments/table.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/modules/statement/ui/components/statement/payments/table.jsx"}},"code":"let React;\nmodule.watch(require(\"react\"), {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet I18n, Localize, Translate;\nmodule.watch(require(\"react-redux-i18n\"), {\n  I18n(v) {\n    I18n = v;\n  },\n\n  Localize(v) {\n    Localize = v;\n  },\n\n  Translate(v) {\n    Translate = v;\n  }\n\n}, 1);\nlet BootstrapTable, TableHeaderColumn;\nmodule.watch(require(\"react-bootstrap-table\"), {\n  BootstrapTable(v) {\n    BootstrapTable = v;\n  },\n\n  TableHeaderColumn(v) {\n    TableHeaderColumn = v;\n  }\n\n}, 2);\nlet SocialAvatar;\nmodule.watch(require(\"../../../../../core/ui/components/social-avatar\"), {\n  default(v) {\n    SocialAvatar = v;\n  }\n\n}, 3);\nlet Modal;\nmodule.watch(require(\"react-modal\"), {\n  default(v) {\n    Modal = v;\n  }\n\n}, 4);\nlet CampaignTable;\nmodule.watch(require(\"./campaign-payments\"), {\n  default(v) {\n    CampaignTable = v;\n  }\n\n}, 5);\n\nlet getTranslation = key => {\n  return \"Statement.tabs.statement.\" + key;\n};\n\nconst renderPaymentMethod = function (cell, row) {\n  // String example\n  let getCard = card => {\n    switch (card) {\n      case \"Amex\":\n        return \"https://s3.amazonaws.com/ibol-app-media/cards/card_amex.png\";\n\n      case \"Visa\":\n        return \"https://s3.amazonaws.com/ibol-app-media/cards/card_visa.png\";\n\n      case \"MasterCard\":\n        return \"https://s3.amazonaws.com/ibol-app-media/cards/card_masterCard.png\";\n\n      case \"Discover\":\n        return \"https://s3.amazonaws.com/ibol-app-media/cards/card_discover.png\";\n\n      case \"DinersClub\":\n        return \"https://s3.amazonaws.com/ibol-app-media/cards/card_dinersClub.png\";\n    }\n  };\n\n  return React.createElement(\"div\", null, React.createElement(\"img\", {\n    src: getCard(cell.brand),\n    alt: cell.brand,\n    style: {\n      height: 32,\n      marginRight: 10\n    }\n  }), \"- \", cell.last4);\n};\n\nconst renderCampaignName = function (cell, row) {\n  // String example\n  return React.createElement(\"span\", null, cell || \"-\");\n};\n\nconst renderBalance = function (cell, row) {\n  // String example\n  return React.createElement(\"span\", null, React.createElement(Localize, {\n    value: cell,\n    options: {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    }\n  }), \" USD\");\n};\n\nconst renderName = function (cell, row) {\n  // String example\n  return React.createElement(\"div\", null, React.createElement(SocialAvatar, {\n    avatar: cell.avatar,\n    name: cell.name,\n    size: \"50\",\n    page: row.type === \"page\"\n  }), React.createElement(\"div\", {\n    className: \"icon-label\"\n  }, cell.name + \" \" + cell.lastName));\n};\n\nconst renderOwner = function (cell, row) {\n  // String example\n  if (!cell) return React.createElement(\"span\", null, \"\\\"-\\\"\");\n  return React.createElement(\"div\", null, React.createElement(SocialAvatar, {\n    avatar: cell.profile.avatar,\n    name: cell.profile.name,\n    size: \"50\"\n  }), React.createElement(\"div\", {\n    className: \"icon-label\"\n  }, cell.profile.name + \" \" + cell.profile.lastName));\n};\n\nconst renderManager = function (cell, row) {\n  // String example\n  return React.createElement(\"div\", null, React.createElement(SocialAvatar, {\n    avatar: cell.profile.avatar,\n    name: cell.profile.name,\n    size: \"50\"\n  }), React.createElement(\"div\", {\n    className: \"icon-label\"\n  }, cell.profile.name + \" \" + cell.profile.lastName));\n};\n\nconst renderDate = function (cell, row) {\n  // String example\n  return React.createElement(\"span\", null, moment(new Date(cell.from)).format(\"DD/MM/YY\"), \" - \", moment(new Date(cell.to)).format(\"DD/MM/YY\"));\n};\n\nconst renderBrands = function (cell, row) {\n  return React.createElement(\"div\", null, cell.map((a, i) => React.createElement(\"div\", {\n    className: \"icon\",\n    key: i\n  }, React.createElement(SocialAvatar, {\n    avatar: a.information.avatar,\n    network: a.network,\n    name: a.information.name,\n    size: \"50\",\n    type: a.information.type\n  }))));\n};\n\nclass Table extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sortName: undefined,\n      sortOrder: undefined,\n      modalType: \"income\",\n      modalData: null,\n      modalIsOpen: false\n    };\n    this.onSortChange = this.onSortChange.bind(this);\n    this.openModal = this.openModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n  }\n\n  onSortChange(sortName, sortOrder) {\n    this.setState({\n      sortName,\n      sortOrder\n    });\n  }\n\n  openModal(modalData, modalType) {\n    let component = this;\n    return function () {\n      component.setState({\n        modalIsOpen: true,\n        modalData,\n        modalType\n      });\n    };\n  }\n\n  closeModal() {\n    this.setState({\n      modalIsOpen: false,\n      modalData: null,\n      modalType: null\n    });\n  }\n\n  render() {\n    let {\n      payments\n    } = this.props;\n    let {\n      modalData,\n      modalType\n    } = this.state;\n    const options = {\n      sortName: this.state.sortName,\n      sortOrder: this.state.sortOrder,\n      onSortChange: this.onSortChange,\n      noDataText: I18n.t(getTranslation(\"table.empty\"))\n    };\n    /*\n    let balance=0;\n    let getBalance=(l)=>{\n        balance+=((l.type===\"outgoing\"?-1:1)*Number(l.amount));\n        return balance;\n    };\n    list = list.map((l, index) => Object.assign({}, l, {\n        index: (index + 1),\n        balance: getBalance(l)\n    }));*/\n\n    let {\n      openModal\n    } = this;\n\n    const renderIncome = function (cell, row) {\n      return cell ? React.createElement(\"span\", {\n        onClick: openModal(row, \"income\"),\n        style: {\n          cursor: \"pointer\"\n        }\n      }, React.createElement(Localize, {\n        value: cell,\n        options: {\n          style: 'currency',\n          currency: 'USD',\n          minimumFractionDigits: 2,\n          maximumFractionDigits: 2\n        }\n      }), \" USD\") : \"-\";\n    };\n\n    const renderExpense = function (cell, row) {\n      return cell ? React.createElement(\"span\", {\n        onClick: openModal(row, \"expense\"),\n        style: {\n          cursor: \"pointer\"\n        }\n      }, React.createElement(Localize, {\n        value: cell,\n        options: {\n          style: 'currency',\n          currency: 'USD',\n          minimumFractionDigits: 2,\n          maximumFractionDigits: 2\n        }\n      }), \" USD\") : \"-\";\n    };\n\n    return React.createElement(\"div\", {\n      className: \"statement-table\"\n    }, React.createElement(\"div\", {\n      className: \"ibol-table\"\n    }, React.createElement(BootstrapTable, {\n      data: payments,\n      options: options\n    }, React.createElement(TableHeaderColumn, {\n      isKey: true,\n      dataField: \"index\",\n      dataAlign: \"center\",\n      width: \"60px\"\n    }, React.createElement(Translate, {\n      value: getTranslation(\"table.headers.index\")\n    })), React.createElement(TableHeaderColumn, {\n      dataField: \"dates\",\n      dataFormat: renderDate,\n      dataAlign: \"center\",\n      width: \"180px\"\n    }, React.createElement(Translate, {\n      value: getTranslation(\"table.headers.dates\")\n    })), React.createElement(TableHeaderColumn, {\n      dataField: \"owner\",\n      dataAlign: \"center\",\n      dataFormat: renderOwner,\n      width: \"200px\"\n    }, React.createElement(Translate, {\n      value: getTranslation(\"table.headers.owner\")\n    })), React.createElement(TableHeaderColumn, {\n      dataField: \"manager\",\n      dataAlign: \"center\",\n      dataFormat: renderManager,\n      width: \"200px\"\n    }, React.createElement(Translate, {\n      value: getTranslation(\"table.headers.manager\")\n    })), React.createElement(TableHeaderColumn, {\n      dataField: \"brands\",\n      dataAlign: \"center\",\n      dataFormat: renderBrands,\n      width: \"200px\"\n    }, React.createElement(Translate, {\n      value: getTranslation(\"table.headers.brands\")\n    })), React.createElement(TableHeaderColumn, {\n      dataField: \"campaign\",\n      dataAlign: \"center\",\n      dataFormat: renderCampaignName,\n      width: \"200px\"\n    }, React.createElement(Translate, {\n      value: getTranslation(\"table.headers.campaign\")\n    })), React.createElement(TableHeaderColumn, {\n      dataField: \"income\",\n      dataFormat: renderIncome,\n      dataAlign: \"center\",\n      width: \"200px\"\n    }, React.createElement(Translate, {\n      value: getTranslation(\"table.headers.income\")\n    })), React.createElement(TableHeaderColumn, {\n      dataField: \"expense\",\n      dataFormat: renderExpense,\n      dataAlign: \"center\",\n      width: \"200px\"\n    }, React.createElement(Translate, {\n      value: getTranslation(\"table.headers.expense\")\n    })), React.createElement(TableHeaderColumn, {\n      dataField: \"balance\",\n      dataFormat: renderBalance,\n      dataAlign: \"center\",\n      width: \"200px\"\n    }, React.createElement(Translate, {\n      value: getTranslation(\"table.headers.balance\")\n    })))), React.createElement(Modal, {\n      isOpen: this.state.modalIsOpen,\n      onRequestClose: this.closeModal,\n      className: \"app-modal\",\n      contentLabel: \"Campaign's Payments\"\n    }, React.createElement(\"button\", {\n      className: \"close\",\n      onClick: this.closeModal\n    }, React.createElement(\"i\", {\n      className: \"icon wb-close-mini\",\n      \"aria-hidden\": \"true\"\n    })), React.createElement(CampaignTable, {\n      data: modalData,\n      type: modalType\n    })));\n  }\n\n}\n\nmodule.exportDefault(Table);","map":{"version":3,"sources":["imports/modules/statement/ui/components/statement/payments/table.jsx"],"names":["React","module","watch","require","default","v","I18n","Localize","Translate","BootstrapTable","TableHeaderColumn","SocialAvatar","Modal","CampaignTable","getTranslation","key","renderPaymentMethod","cell","row","getCard","card","brand","height","marginRight","last4","renderCampaignName","renderBalance","style","currency","minimumFractionDigits","maximumFractionDigits","renderName","avatar","name","type","lastName","renderOwner","profile","renderManager","renderDate","moment","Date","from","format","to","renderBrands","map","a","i","information","network","Table","Component","constructor","props","state","sortName","undefined","sortOrder","modalType","modalData","modalIsOpen","onSortChange","bind","openModal","closeModal","setState","component","render","payments","options","noDataText","t","renderIncome","cursor","renderExpense","exportDefault"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {I18n, Localize, Translate} from \"react-redux-i18n\";\nimport {BootstrapTable, TableHeaderColumn} from \"react-bootstrap-table\";\nimport SocialAvatar from \"../../../../../core/ui/components/social-avatar\";\nimport Modal from \"react-modal\";\nimport CampaignTable from \"./campaign-payments\";\n\nlet getTranslation = (key) => {\n    return \"Statement.tabs.statement.\" + key;\n};\n\nconst renderPaymentMethod = function (cell, row) {   // String example\n    let getCard = (card) => {\n        switch (card) {\n            case \"Amex\":\n                return \"https://s3.amazonaws.com/ibol-app-media/cards/card_amex.png\";\n            case \"Visa\":\n                return \"https://s3.amazonaws.com/ibol-app-media/cards/card_visa.png\";\n            case \"MasterCard\":\n                return \"https://s3.amazonaws.com/ibol-app-media/cards/card_masterCard.png\";\n            case \"Discover\":\n                return \"https://s3.amazonaws.com/ibol-app-media/cards/card_discover.png\";\n            case \"DinersClub\":\n                return \"https://s3.amazonaws.com/ibol-app-media/cards/card_dinersClub.png\";\n        }\n    };\n    return (\n        <div>\n            <img src={getCard(cell.brand)} alt={cell.brand} style={{height: 32, marginRight: 10}}/>\n            - {cell.last4}\n        </div>\n    );\n};\n\nconst renderCampaignName = function (cell, row) {   // String example\n    return (\n        <span>\n            {cell || \"-\"}\n        </span>\n    );\n};\n\n\n\nconst renderBalance = function (cell, row) {   // String example\n    return (\n        <span>\n            <Localize value={cell} options={{\n                style: 'currency',\n                currency: 'USD',\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2\n            }}/> USD\n        </span>\n    )\n};\n\nconst renderName = function (cell, row) {   // String example\n    return (\n        <div>\n            <SocialAvatar avatar={cell.avatar} name={cell.name} size=\"50\" page={row.type === \"page\"}/>\n            <div className=\"icon-label\">\n                {cell.name + \" \" + cell.lastName}\n            </div>\n        </div>\n    );\n};\n\nconst renderOwner = function (cell, row) {   // String example\n    if(!cell) return <span>\"-\"</span>;\n    return (\n        <div>\n            <SocialAvatar avatar={cell.profile.avatar} name={cell.profile.name} size=\"50\"/>\n            <div className=\"icon-label\">\n                {cell.profile.name + \" \" + cell.profile.lastName}\n            </div>\n        </div>\n    );\n};\n\nconst renderManager = function (cell, row) {   // String example\n    return (\n        <div>\n            <SocialAvatar avatar={cell.profile.avatar} name={cell.profile.name} size=\"50\"/>\n            <div className=\"icon-label\">\n                {cell.profile.name + \" \" + cell.profile.lastName}\n            </div>\n        </div>\n    );\n};\n\nconst renderDate = function (cell, row) {   // String example\n    return (\n        <span>{moment(new Date(cell.from)).format(\"DD/MM/YY\")} - {moment(new Date(cell.to)).format(\"DD/MM/YY\")}</span>\n    );\n};\n\nconst renderBrands = function (cell, row) {\n    return (\n        <div>\n            {cell.map((a,i) => (\n                <div className=\"icon\" key={i}>\n                    <SocialAvatar avatar={a.information.avatar}\n                                  network={a.network}\n                                  name={a.information.name}\n                                  size=\"50\"\n                                  type={a.information.type}/>\n                </div>\n            ))}\n        </div>\n    )\n};\n\n\nclass Table extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            sortName: undefined,\n            sortOrder: undefined,\n            modalType: \"income\",\n            modalData: null,\n            modalIsOpen: false\n        };\n\n        this.onSortChange = this.onSortChange.bind(this);\n        this.openModal=this.openModal.bind(this);\n        this.closeModal=this.closeModal.bind(this);\n    }\n\n    onSortChange(sortName, sortOrder) {\n        this.setState({\n            sortName,\n            sortOrder\n        });\n    }\n    openModal(modalData, modalType) {\n        let component=this;\n        return function(){\n            component.setState({modalIsOpen: true, modalData, modalType});\n        }\n    }\n\n    closeModal() {\n        this.setState({modalIsOpen: false, modalData: null, modalType:null});\n    }\n    render() {\n        let {payments} = this.props;\n        let {modalData, modalType}=this.state;\n        const options = {\n            sortName: this.state.sortName,\n            sortOrder: this.state.sortOrder,\n            onSortChange: this.onSortChange,\n            noDataText: I18n.t(getTranslation(\"table.empty\"))\n        };\n        /*\n        let balance=0;\n        let getBalance=(l)=>{\n            balance+=((l.type===\"outgoing\"?-1:1)*Number(l.amount));\n            return balance;\n        };\n        list = list.map((l, index) => Object.assign({}, l, {\n            index: (index + 1),\n            balance: getBalance(l)\n        }));*/\n\n        let {openModal}=this;\n        const renderIncome = function (cell, row) {\n            return cell ? (\n                <span onClick={openModal(row, \"income\")} style={{cursor:\"pointer\"}}>\n                    <Localize value={cell} options={{\n                        style: 'currency',\n                        currency: 'USD',\n                        minimumFractionDigits: 2,\n                        maximumFractionDigits: 2\n                    }}/> USD\n                </span>\n            ) : \"-\"\n        };\n\n        const renderExpense = function (cell, row) {\n            return cell ? (\n                <span onClick={openModal(row, \"expense\")} style={{cursor:\"pointer\"}}>\n                    <Localize value={cell} options={{\n                        style: 'currency',\n                        currency: 'USD',\n                        minimumFractionDigits: 2,\n                        maximumFractionDigits: 2\n                    }}/> USD\n                </span>\n            ) : \"-\"\n        };\n        return (\n            <div className=\"statement-table\">\n                <div className=\"ibol-table\">\n                    <BootstrapTable data={payments} options={options}>\n                        <TableHeaderColumn isKey\n                                           dataField='index'\n                                           dataAlign='center'\n                                           width=\"60px\">\n                            <Translate value={getTranslation(\"table.headers.index\")}/>\n                        </TableHeaderColumn>\n\n                        <TableHeaderColumn dataField='dates'\n                                           dataFormat={renderDate}\n                                           dataAlign='center'\n                                           width=\"180px\">\n                            <Translate value={getTranslation(\"table.headers.dates\")}/>\n                        </TableHeaderColumn>\n\n                        <TableHeaderColumn dataField='owner'\n                                           dataAlign='center'\n                                           dataFormat={renderOwner}\n                                           width=\"200px\">\n                            <Translate value={getTranslation(\"table.headers.owner\")}/>\n                        </TableHeaderColumn>\n\n                        <TableHeaderColumn dataField='manager'\n                                           dataAlign='center'\n                                           dataFormat={renderManager}\n                                           width=\"200px\">\n                            <Translate value={getTranslation(\"table.headers.manager\")}/>\n                        </TableHeaderColumn>\n\n                        <TableHeaderColumn dataField='brands'\n                                           dataAlign='center'\n                                           dataFormat={renderBrands}\n                                           width=\"200px\">\n                            <Translate value={getTranslation(\"table.headers.brands\")}/>\n                        </TableHeaderColumn>\n\n                        <TableHeaderColumn dataField='campaign'\n                                           dataAlign='center'\n                                           dataFormat={renderCampaignName}\n                                           width=\"200px\">\n                            <Translate value={getTranslation(\"table.headers.campaign\")}/>\n                        </TableHeaderColumn>\n\n                        <TableHeaderColumn dataField='income'\n                                           dataFormat={renderIncome}\n                                           dataAlign='center'\n                                           width=\"200px\">\n                            <Translate value={getTranslation(\"table.headers.income\")}/>\n                        </TableHeaderColumn>\n\n                        <TableHeaderColumn dataField='expense'\n                                           dataFormat={renderExpense}\n                                           dataAlign='center'\n                                           width=\"200px\">\n                            <Translate value={getTranslation(\"table.headers.expense\")}/>\n                        </TableHeaderColumn>\n\n                        <TableHeaderColumn dataField='balance'\n                                           dataFormat={renderBalance}\n                                           dataAlign='center'\n                                           width=\"200px\">\n                            <Translate value={getTranslation(\"table.headers.balance\")}/>\n                        </TableHeaderColumn>\n\n                    </BootstrapTable>\n                </div>\n\n                <Modal\n                    isOpen={this.state.modalIsOpen}\n                    onRequestClose={this.closeModal}\n                    className=\"app-modal\"\n                    contentLabel=\"Campaign's Payments\"\n                >\n                    <button className=\"close\" onClick={this.closeModal}>\n                        <i className=\"icon wb-close-mini\" aria-hidden=\"true\" />\n                    </button>\n                    <CampaignTable data={modalData}\n                                   type={modalType}/>\n                </Modal>\n            </div>\n        )\n    }\n}\n\nexport default Table;"]},"sourceType":"script","hash":"55a4f669f8418d4cf4a337b705ab6d411211b95d"}
