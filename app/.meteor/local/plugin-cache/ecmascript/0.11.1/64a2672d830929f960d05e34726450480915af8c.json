{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$4","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$5","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$6","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$7","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$9","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/teamattack/ui/components/edit/filter/list.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"imports/modules/teamattack/ui/components/edit/filter/list.jsx","filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/teamattack/ui/components/edit/filter/list.jsx","passPerPreset":false,"envName":"development","cwd":"/home/blackstoneteam/repos/viralizing-web/app","root":"/home/blackstoneteam/repos/viralizing-web/app","generatorOpts":{"filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/teamattack/ui/components/edit/filter/list.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/modules/teamattack/ui/components/edit/filter/list.jsx"}},"code":"let React;\nmodule.watch(require(\"react\"), {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet Translate, I18n;\nmodule.watch(require(\"react-redux-i18n\"), {\n  Translate(v) {\n    Translate = v;\n  },\n\n  I18n(v) {\n    I18n = v;\n  }\n\n}, 1);\nlet ListNoResults;\nmodule.watch(require(\"./no-results\"), {\n  default(v) {\n    ListNoResults = v;\n  }\n\n}, 2);\nlet AccountItem;\nmodule.watch(require(\"./account-item/container\"), {\n  default(v) {\n    AccountItem = v;\n  }\n\n}, 3);\n\nclass FilterList extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      value: []\n    };\n    this.toggleAccount = this.toggleAccount.bind(this);\n  }\n\n  componentWillMount() {\n    this.setState({\n      selected: this.props.value\n    });\n  }\n\n  toggleAccount(account) {\n    let component = this;\n    return function () {\n      let newState = component.state;\n      let indexOfAccount = newState.value.indexOf(account);\n\n      if (indexOfAccount === -1) {\n        newState.value.push(account);\n      } else {\n        newState.value.splice(indexOfAccount, 1);\n      }\n\n      component.setState(newState);\n      component.props.updateMembers(newState.value);\n    };\n  }\n\n  filterAccounts(data, search) {\n    if (!search) return data;\n    return data.filter(o => {\n      let {\n        name,\n        lastName,\n        country\n      } = o.information;\n      let regEx = new RegExp(search.toLowerCase());\n      return name.toLowerCase().match(regEx) || lastName.toLowerCase().match(regEx) || o.network.toLowerCase().match(regEx) || country.toLowerCase().match(regEx);\n    });\n  }\n\n  render() {\n    let {\n      data,\n      value,\n      view,\n      search,\n      updateFilter,\n      updateValue,\n      filters\n    } = this.props;\n\n    if (data.length === 0) {\n      return React.createElement(ListNoResults, null);\n    }\n\n    let getTranslation = key => {\n      return \"TeamAttack.edit.search.results.results.controls.\" + key;\n    };\n\n    data = this.filterAccounts(data, search);\n    return React.createElement(\"div\", {\n      className: \"influencer-list col-md-9\"\n    }, React.createElement(\"div\", {\n      className: \"row controls\"\n    }, React.createElement(\"div\", {\n      className: \"col-md-3 col-md-offset-3\"\n    }, React.createElement(\"ul\", {\n      className: \"pull-right\"\n    }, React.createElement(\"li\", {\n      onClick: () => updateValue(\"view\")(\"table\")\n    }, React.createElement(\"i\", {\n      className: \"fa fa-bars\",\n      \"aria-hidden\": \"true\"\n    })), React.createElement(\"li\", {\n      onClick: () => updateValue(\"view\")(\"list\")\n    }, React.createElement(\"i\", {\n      className: \"fa fa-table\",\n      \"aria-hidden\": \"true\"\n    })))), React.createElement(\"div\", {\n      className: \"col-md-3\"\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      value: search,\n      onChange: updateValue(\"search\"),\n      className: \"form-control\",\n      placeholder: I18n.t(getTranslation(\"search\"))\n    })), React.createElement(\"div\", {\n      className: \"col-md-3\"\n    }, React.createElement(\"select\", {\n      className: \"form-control\",\n      onChange: updateFilter(\"results_order\")\n    }, React.createElement(\"option\", {\n      value: \"higherPrice\"\n    }, I18n.t(getTranslation(\"filters.higherPrice\"))), React.createElement(\"option\", {\n      value: \"lowestPrice\"\n    }, I18n.t(getTranslation(\"filters.lowestPrice\"))), React.createElement(\"option\", {\n      value: \"higherEngagement\"\n    }, I18n.t(getTranslation(\"filters.higherEngagement\"))), React.createElement(\"option\", {\n      value: \"lowerEngagement\"\n    }, I18n.t(getTranslation(\"filters.lowerEngagement\")))))), view === \"list\" && React.createElement(\"div\", {\n      className: \"row\"\n    }, data.map((account, i) => React.createElement(AccountItem, {\n      account: account,\n      view: view,\n      toggleAccount: this.toggleAccount,\n      value: value,\n      key: i,\n      filters: filters\n    }))), view === \"table\" && React.createElement(\"table\", {\n      className: \"table list-table\",\n      style: {\n        width: 2000\n      }\n    }, React.createElement(\"thead\", null, React.createElement(\"tr\", null, React.createElement(\"th\", {\n      colSpan: 17,\n      className: \"tl\"\n    }, \"Perfil\"), React.createElement(\"th\", {\n      colSpan: 6,\n      className: \"tl\"\n    }, \"Audiencia\")), React.createElement(\"tr\", null, React.createElement(\"th\", null, \"Red Social\"), React.createElement(\"th\", {\n      width: 200\n    }, \"Influencer\"), React.createElement(\"th\", null, \"Pa\\xEDs\"), React.createElement(\"th\", null, \"Ciudad\"), React.createElement(\"th\", null, \"Idiomas\"), React.createElement(\"th\", null, \"Edad\"), React.createElement(\"th\", null, \"Genero\"), React.createElement(\"th\", null, \"Preferencia Sexual\"), React.createElement(\"th\", null, \"Estado Civil\"), React.createElement(\"th\", null, \"Likes\"), React.createElement(\"th\", null, \"???\"), React.createElement(\"th\", null, \"Views\"), React.createElement(\"th\", null, \"???\"), React.createElement(\"th\", null, \"Tipos de Acci\\xF3n\"), React.createElement(\"th\", null, \"Categorias\"), React.createElement(\"th\", null, \"Especialidades\"), React.createElement(\"th\", null, \"Costo\"), React.createElement(\"th\", null, \"Paises\"), React.createElement(\"th\", null, \"Ciudades\"), React.createElement(\"th\", null, \"Genero\"), React.createElement(\"th\", null, \"Idiomas\"), React.createElement(\"th\", null, \"Edad\"), React.createElement(\"th\", null, \"SES/NSE\"))), React.createElement(\"tbody\", null, data.map((account, i) => React.createElement(AccountItem, {\n      account: account,\n      view: view,\n      filters: filters,\n      toggleAccount: this.toggleAccount,\n      value: value,\n      key: i\n    })))));\n  }\n\n}\n\nmodule.exportDefault(FilterList);","map":{"version":3,"sources":["imports/modules/teamattack/ui/components/edit/filter/list.jsx"],"names":["React","module","watch","require","default","v","Translate","I18n","ListNoResults","AccountItem","FilterList","Component","constructor","state","value","toggleAccount","bind","componentWillMount","setState","selected","props","account","component","newState","indexOfAccount","indexOf","push","splice","updateMembers","filterAccounts","data","search","filter","o","name","lastName","country","information","regEx","RegExp","toLowerCase","match","network","render","view","updateFilter","updateValue","filters","length","getTranslation","key","t","map","i","width","exportDefault"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Translate, I18n} from \"react-redux-i18n\";\nimport ListNoResults from \"./no-results\";\nimport AccountItem from \"./account-item/container\";\n\n\nclass FilterList extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            value: []\n        };\n\n        this.toggleAccount = this.toggleAccount.bind(this);\n    }\n\n    componentWillMount() {\n        this.setState({selected: this.props.value});\n    }\n\n    toggleAccount(account) {\n        let component = this;\n        return function () {\n            let newState = component.state;\n            let indexOfAccount = newState.value.indexOf(account);\n            if (indexOfAccount === -1) {\n                newState.value.push(account);\n            } else {\n                newState.value.splice(indexOfAccount, 1);\n            }\n\n            component.setState(newState);\n            component.props.updateMembers(newState.value);\n        }\n    }\n\n    filterAccounts(data, search){\n        if(!search) return data;\n        return data.filter((o)=>{\n            let {name,lastName, country}=o.information;\n\n            let regEx=new RegExp(search.toLowerCase());\n            return name.toLowerCase().match(regEx) || lastName.toLowerCase().match(regEx) || o.network.toLowerCase().match(regEx) || country.toLowerCase().match(regEx);\n        });\n    }\n\n    render() {\n        let {data, value, view, search, updateFilter, updateValue, filters}= this.props;\n\n        if (data.length === 0) {\n            return <ListNoResults/>;\n        }\n        let getTranslation = (key) => {\n            return \"TeamAttack.edit.search.results.results.controls.\" + key;\n        };\n        data=this.filterAccounts(data,search);\n        return (\n            <div className=\"influencer-list col-md-9\">\n                <div className=\"row controls\">\n                    <div className=\"col-md-3 col-md-offset-3\">\n                        <ul className=\"pull-right\">\n                            <li onClick={()=>updateValue(\"view\")(\"table\")}>\n                                <i className=\"fa fa-bars\" aria-hidden=\"true\"/>\n                            </li>\n                            <li onClick={()=>updateValue(\"view\")(\"list\")}>\n                                <i className=\"fa fa-table\" aria-hidden=\"true\"/>\n                            </li>\n                        </ul>\n                    </div>\n                    <div className=\"col-md-3\">\n                        <input type=\"text\"\n                               value={search}\n                               onChange={updateValue(\"search\")}\n                               className=\"form-control\"\n                               placeholder={I18n.t(getTranslation(\"search\"))}/>\n                    </div>\n                    <div className=\"col-md-3\">\n                        <select className=\"form-control\" onChange={updateFilter(\"results_order\")}>\n                            <option value=\"higherPrice\">{I18n.t(getTranslation(\"filters.higherPrice\"))}</option>\n                            <option value=\"lowestPrice\">{I18n.t(getTranslation(\"filters.lowestPrice\"))}</option>\n                            <option value=\"higherEngagement\">{I18n.t(getTranslation(\"filters.higherEngagement\"))}</option>\n                            <option value=\"lowerEngagement\">{I18n.t(getTranslation(\"filters.lowerEngagement\"))}</option>\n                        </select>\n                    </div>\n                </div>\n                {view===\"list\" && (\n                    <div className=\"row\">\n                        {data.map((account, i) => (\n                            <AccountItem account={account} view={view} toggleAccount={this.toggleAccount} value={value} key={i} filters={filters}/>\n                        ))}\n                    </div>\n                )}\n                {view===\"table\" && (\n                    <table className=\"table list-table\" style={{width:2000}}>\n                        <thead>\n                        <tr>\n                            <th colSpan={17} className=\"tl\">Perfil</th>\n                            <th colSpan={6} className=\"tl\">Audiencia</th>\n                        </tr>\n                        <tr>\n                            <th>Red Social</th>\n                            <th width={200}>Influencer</th>\n                            <th>País</th>\n                            <th>Ciudad</th>\n                            <th>Idiomas</th>\n                            <th>Edad</th>\n                            <th>Genero</th>\n                            <th>Preferencia Sexual</th>\n                            <th>Estado Civil</th>\n                            <th>Likes</th>\n                            <th>???</th>\n                            <th>Views</th>\n                            <th>???</th>\n                            <th>Tipos de Acción</th>\n                            <th>Categorias</th>\n                            <th>Especialidades</th>\n                            <th>Costo</th>\n                            <th>Paises</th>\n                            <th>Ciudades</th>\n                            <th>Genero</th>\n                            <th>Idiomas</th>\n                            <th>Edad</th>\n                            <th>SES/NSE</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {data.map((account, i) => (\n                            <AccountItem account={account}\n                                         view={view}\n                                         filters={filters}\n                                         toggleAccount={this.toggleAccount}\n                                         value={value} key={i}/>\n                        ))}\n                        </tbody>\n                    </table>\n                )}\n\n            </div>\n        )\n    }\n}\n\nexport default FilterList;"]},"sourceType":"script","hash":"64a2672d830929f960d05e34726450480915af8c"}
