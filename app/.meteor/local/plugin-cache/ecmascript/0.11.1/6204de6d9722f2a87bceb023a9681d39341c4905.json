{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/core/ui/components/forms/input-file-upload.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"imports/modules/core/ui/components/forms/input-file-upload.jsx","filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/core/ui/components/forms/input-file-upload.jsx","passPerPreset":false,"envName":"development","cwd":"/home/blackstoneteam/repos/viralizing-web/app","root":"/home/blackstoneteam/repos/viralizing-web/app","generatorOpts":{"filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/core/ui/components/forms/input-file-upload.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/modules/core/ui/components/forms/input-file-upload.jsx"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar React;\nmodule.watch(require(\"react\"), {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 0);\nvar Dropzone;\nmodule.watch(require(\"react-dropzone\"), {\n  \"default\": function (v) {\n    Dropzone = v;\n  }\n}, 1);\nvar notie;\nmodule.watch(require(\"notie\"), {\n  \"default\": function (v) {\n    notie = v;\n  }\n}, 2);\n\nvar InputFileUpload =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inheritsLoose2.default)(InputFileUpload, _React$Component);\n\n  function InputFileUpload() {\n    var _this;\n\n    _this = _React$Component.call(this) || this;\n    _this.state = {\n      files: []\n    };\n    _this.onDrop = _this.onDrop.bind((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)));\n    return _this;\n  }\n\n  var _proto = InputFileUpload.prototype;\n\n  _proto.onDrop = function () {\n    function onDrop(acceptedFiles) {\n      var files = [];\n      var component = this;\n      acceptedFiles.forEach(function (file) {\n        var uploader = new Slingshot.Upload(component.props.uploader);\n        uploader.send(file, function (error, downloadUrl) {\n          if (error) {\n            // Log service detailed response\n            notie.alert(3, \"Error uploading image.\", 3);\n            console.error('Error uploading', error);\n          } else {\n            component.props.input.onChange(downloadUrl);\n\n            if (component.props.callback) {\n              component.props.callback(downloadUrl);\n            }\n          }\n        });\n        uploader.progressVal = 0;\n        Tracker.autorun(function () {\n          var progress = uploader.progress();\n\n          if (progress) {\n            var uploaderPosition = component.state.files.indexOf(uploader);\n\n            if (uploaderPosition !== -1) {\n              var newFiles = (0, _toConsumableArray2.default)(component.state.files);\n              newFiles[uploaderPosition].progressVal = progress * 100;\n              component.setState({\n                files: newFiles\n              });\n            }\n          }\n        });\n        files.push(uploader);\n      });\n      this.setState({\n        files: files\n      });\n    }\n\n    return onDrop;\n  }();\n\n  _proto.render = function () {\n    function render() {\n      var _this$props$settings = this.props.settings,\n          multiple = _this$props$settings.multiple,\n          maxSize = _this$props$settings.maxSize,\n          className = _this$props$settings.className,\n          activeClassName = _this$props$settings.activeClassName,\n          accept = _this$props$settings.accept;\n      return React.createElement(\"div\", null, React.createElement(Dropzone, {\n        onDrop: this.onDrop,\n        multiple: multiple || false,\n        maxSize: maxSize || 15 * 1024 * 1024,\n        className: className,\n        activeClassName: activeClassName,\n        accept: accept || \"image/png, image/jpeg, image/gif\"\n      }, this.props.content || \"Drop zone\", this.state.files.length > 0 ? React.createElement(\"div\", {\n        className: \"upload-progress\"\n      }, this.state.files.map(function (file, i) {\n        return React.createElement(\"div\", {\n          className: \"progress-bar \" + (file.progressVal === 100 ? \"done\" : \"\"),\n          key: i\n        }, React.createElement(\"div\", {\n          className: \"bar\",\n          style: {\n            width: file.progressVal + \"%\"\n          }\n        }));\n      })) : null));\n    }\n\n    return render;\n  }();\n\n  return InputFileUpload;\n}(React.Component);\n\nmodule.exportDefault(InputFileUpload);","map":{"version":3,"sources":["imports/modules/core/ui/components/forms/input-file-upload.jsx"],"names":["React","module","watch","require","v","Dropzone","notie","InputFileUpload","state","files","onDrop","bind","acceptedFiles","component","forEach","file","uploader","Slingshot","Upload","props","send","error","downloadUrl","alert","console","input","onChange","callback","progressVal","Tracker","autorun","progress","uploaderPosition","indexOf","newFiles","setState","push","render","settings","multiple","maxSize","className","activeClassName","accept","content","length","map","i","width","Component","exportDefault"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Dropzone from\"react-dropzone\";\nimport notie from \"notie\";\n\nclass InputFileUpload extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            files: []\n        };\n\n        this.onDrop = this.onDrop.bind(this);\n    }\n    onDrop(acceptedFiles) {\n        let files = [];\n        let component = this;\n        acceptedFiles.forEach(function (file) {\n            let uploader = new Slingshot.Upload(component.props.uploader);\n\n            uploader.send(file, function (error, downloadUrl) {\n                if (error) {\n                    // Log service detailed response\n                    notie.alert(3,\"Error uploading image.\",3);\n                    console.error('Error uploading', error);\n                }\n                else {\n                    component.props.input.onChange(downloadUrl);\n                    if(component.props.callback){\n                        component.props.callback(downloadUrl);\n                    }\n                }\n            });\n\n            uploader.progressVal = 0;\n\n            Tracker.autorun(function () {\n                let progress = uploader.progress();\n                if (progress) {\n                    let uploaderPosition = component.state.files.indexOf(uploader);\n                    if (uploaderPosition !== -1) {\n                        let newFiles = [...component.state.files];\n                        newFiles[uploaderPosition].progressVal = progress*100;\n                        component.setState({\n                            files: newFiles\n                        });\n                    }\n                }\n            });\n\n            files.push(uploader);\n\n        });\n\n        this.setState({\n            files: files\n        });\n    }\n    render(){\n        let { multiple, maxSize, className, activeClassName, accept } = this.props.settings;\n        return(\n           <div>\n               <Dropzone onDrop={this.onDrop}\n                         multiple={multiple||false}\n                         maxSize={maxSize||15 * 1024 * 1024}\n                         className={className}\n                         activeClassName={activeClassName}\n                         accept={accept||\"image/png, image/jpeg, image/gif\"}>\n                   {this.props.content||\"Drop zone\"}\n                   {this.state.files.length > 0 ? <div className=\"upload-progress\">\n                           {this.state.files.map((file, i) => (\n                               <div className={\"progress-bar \"+((file.progressVal===100)?\"done\":\"\")} key={i}>\n                                   <div className=\"bar\" style={{width:file.progressVal+\"%\"}}/>\n                               </div>\n                           ))}\n                       </div> : null}\n               </Dropzone>\n\n           </div>\n        )\n    }\n}\n\nexport default InputFileUpload;"]},"sourceType":"script","hash":"6204de6d9722f2a87bceb023a9681d39341c4905"}
