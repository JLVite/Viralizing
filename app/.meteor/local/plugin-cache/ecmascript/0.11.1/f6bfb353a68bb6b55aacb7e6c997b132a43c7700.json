{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$4","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$5","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$6","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$7","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$9","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/campaigns/ui/containers/view.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"imports/modules/campaigns/ui/containers/view.jsx","filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/campaigns/ui/containers/view.jsx","passPerPreset":false,"envName":"development","cwd":"/home/blackstoneteam/repos/viralizing-web/app","root":"/home/blackstoneteam/repos/viralizing-web/app","generatorOpts":{"filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/campaigns/ui/containers/view.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/modules/campaigns/ui/containers/view.jsx"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/builtin/interopRequireDefault\");\n\nvar _taggedTemplateLiteral2 = _interopRequireDefault(require(\"@babel/runtime/helpers/builtin/taggedTemplateLiteral\"));\n\nfunction _templateObject() {\n  const data = (0, _taggedTemplateLiteral2.default)([\"\\n    query ($_id: String!){\\n        campaign(_id:$_id){\\n            _id,\\n            owner {\\n                _id,\\n                profile{\\n                    name,\\n                    lastName,\\n                    avatar\\n                }\\n            },\\n            manager {\\n                _id,\\n                profile{\\n                    name,\\n                    lastName,\\n                    avatar\\n                }\\n            },\\n            information {\\n                brands{\\n                    _id,\\n                    network,\\n                    information{\\n                        name,\\n                        lastName,\\n                        avatar\\n                    }\\n                }\\n                profile\\n                cover\\n                name\\n                conquer\\n                dateStart\\n                dateEnd\\n                description\\n                url\\n                objectives {\\n                    increaseFollowers,\\n                    increaseViews,\\n                    increaseShares,\\n                    increaseEngagement,\\n                    increaseLikes,\\n                    increaseTrafficHours,\\n                    reachNewMarkets,\\n                    increaseSpeaking,\\n                    increasePlays,\\n                    increaseWebsiteTraffic,\\n                    positionTarget,\\n                    keepTarget,\\n                    presence,\\n                    positionNewMarkets,\\n                },\\n            },\\n            messages {\\n                _id\\n                message\\n                hashtags\\n                media\\n            },\\n            gallery {\\n                images{\\n                    name,\\n                    content\\n                },\\n                videos{\\n                    name,\\n                    content\\n                }\\n            }\\n        }\\n        invitesCampaign(campaignID: $_id){\\n            _id,\\n            type,\\n            status,\\n            deadline,\\n            budget,\\n            useHashtag,\\n            invitesAvailable,\\n            networks{\\n                facebook,\\n                twitter,\\n                instagram\\n            }\\n            options{\\n                message,\\n                media,\\n                date,\\n                quantity\\n            },\\n            influencers {\\n                _id\\n                network\\n                information{\\n                    name,\\n                    lastName,\\n                    avatar\\n                }\\n            },\\n            teamAttack,\\n            teamAttackMembers{\\n                _id\\n                network\\n                information{\\n                    name,\\n                    lastName,\\n                    avatar\\n                }\\n                pricing{\\n                    post\\n                    share\\n                    partnership\\n                    ambassador,\\n                    profilePicture,\\n                    coverPhoto,\\n                    noPostHour,\\n                    noPostDay,\\n                }\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nlet React;\nmodule.watch(require(\"react\"), {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet graphql;\nmodule.watch(require(\"react-apollo\"), {\n  graphql(v) {\n    graphql = v;\n  }\n\n}, 1);\nlet connect;\nmodule.watch(require(\"react-redux\"), {\n  connect(v) {\n    connect = v;\n  }\n\n}, 2);\nlet Loading;\nmodule.watch(require(\"../../../core/ui/components/loading\"), {\n  default(v) {\n    Loading = v;\n  }\n\n}, 3);\nlet ViewCampaign;\nmodule.watch(require(\"../layouts/view\"), {\n  default(v) {\n    ViewCampaign = v;\n  }\n\n}, 4);\nlet createContainer;\nmodule.watch(require(\"meteor/react-meteor-data\"), {\n  createContainer(v) {\n    createContainer = v;\n  }\n\n}, 5);\nlet gql;\nmodule.watch(require(\"graphql-tag\"), {\n  default(v) {\n    gql = v;\n  }\n\n}, 6);\n\nlet getTranslation = key => {\n  return \"Campaigns.edit.messages.\" + key;\n};\n\nclass ViewContainer extends React.Component {\n  constructor() {\n    super();\n  }\n\n  render() {\n    let {\n      invitesCampaign,\n      refetch,\n      history,\n      campaign\n    } = this.props;\n    return React.createElement(\"div\", null, this.props.loading ? React.createElement(Loading, null) : React.createElement(ViewCampaign, {\n      campaign: campaign,\n      invitesCampaign: invitesCampaign,\n      refetch: refetch,\n      history: history\n    }));\n  }\n\n}\n\nconst QUERY = gql(_templateObject());\nconst withData = graphql(QUERY, {\n  props: (_ref) => {\n    let {\n      data: {\n        error,\n        loading,\n        campaign,\n        invitesCampaign,\n        refetch\n      }\n    } = _ref;\n    //console.log(\"CAMPAIGN_ERROR\",error,campaign);\n    if (loading) return {\n      loading: true\n    };\n    if (error) return {\n      hasErrors: true\n    };\n    return {\n      loading,\n      campaign,\n      invitesCampaign,\n      refetch\n    };\n  },\n  options: ownProps => ({\n    variables: {\n      _id: ownProps.params.campaignID\n    }\n  })\n});\nconst ViewContainerWithData = withData(ViewContainer);\nmodule.exportDefault(connect(state => {\n  return {\n    form: state.form[\"campaign-edit\"]\n  };\n})(ViewContainerWithData));","map":{"version":3,"sources":["imports/modules/campaigns/ui/containers/view.jsx"],"names":["React","module","watch","require","default","v","graphql","connect","Loading","ViewCampaign","createContainer","gql","getTranslation","key","ViewContainer","Component","constructor","render","invitesCampaign","refetch","history","campaign","props","loading","QUERY","withData","data","error","hasErrors","options","ownProps","variables","_id","params","campaignID","ViewContainerWithData","exportDefault","state","form"],"mappings":";;;;;;;;;;;;;;AAAA,IAAIA,KAAJ;AAAUC,OAAOC,KAAP,CAAaC,QAAQ,OAAR,CAAb,EAA8B;AAACC,UAAQC,CAAR,EAAU;AAACL,YAAMK,CAAN;AAAQ;;AAApB,CAA9B,EAAoD,CAApD;AAAuD,IAAIC,OAAJ;AAAYL,OAAOC,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACG,UAAQD,CAAR,EAAU;AAACC,cAAQD,CAAR;AAAU;;AAAtB,CAArC,EAA6D,CAA7D;AAAgE,IAAIE,OAAJ;AAAYN,OAAOC,KAAP,CAAaC,QAAQ,aAAR,CAAb,EAAoC;AAACI,UAAQF,CAAR,EAAU;AAACE,cAAQF,CAAR;AAAU;;AAAtB,CAApC,EAA4D,CAA5D;AAA+D,IAAIG,OAAJ;AAAYP,OAAOC,KAAP,CAAaC,QAAQ,qCAAR,CAAb,EAA4D;AAACC,UAAQC,CAAR,EAAU;AAACG,cAAQH,CAAR;AAAU;;AAAtB,CAA5D,EAAoF,CAApF;AAAuF,IAAII,YAAJ;AAAiBR,OAAOC,KAAP,CAAaC,QAAQ,iBAAR,CAAb,EAAwC;AAACC,UAAQC,CAAR,EAAU;AAACI,mBAAaJ,CAAb;AAAe;;AAA3B,CAAxC,EAAqE,CAArE;AAAwE,IAAIK,eAAJ;AAAoBT,OAAOC,KAAP,CAAaC,QAAQ,0BAAR,CAAb,EAAiD;AAACO,kBAAgBL,CAAhB,EAAkB;AAACK,sBAAgBL,CAAhB;AAAkB;;AAAtC,CAAjD,EAAyF,CAAzF;AAA4F,IAAIM,GAAJ;AAAQV,OAAOC,KAAP,CAAaC,QAAQ,aAAR,CAAb,EAAoC;AAACC,UAAQC,CAAR,EAAU;AAACM,UAAIN,CAAJ;AAAM;;AAAlB,CAApC,EAAwD,CAAxD;;AAQ5gB,IAAIO,iBAAgBC,GAAD,IAAO;AACtB,SAAO,6BAA2BA,GAAlC;AACH,CAFD;;AAIA,MAAMC,aAAN,SAA4Bd,MAAMe,SAAlC,CAA4C;AACxCC,gBAAc;AACV;AAEH;;AACDC,WAAS;AACL,QAAI;AAACC,qBAAD;AAAkBC,aAAlB;AAA2BC,aAA3B;AAAoCC;AAApC,QAA8C,KAAKC,KAAvD;AACA,WACI,iCACK,KAAKA,KAAL,CAAWC,OAAX,GAAqB,oBAAC,OAAD,OAArB,GACG,oBAAC,YAAD;AAAc,gBAAUF,QAAxB;AACc,uBAAiBH,eAD/B;AAEc,eAASC,OAFvB;AAGc,eAASC;AAHvB,MAFR,CADJ;AASH;;AAhBuC;;AAmB5C,MAAMI,QAAQb,GAAR,mBAAN;AA4HA,MAAMc,WAAWnB,QAAQkB,KAAR,EAAe;AAC5BF,SAAO,UAAkE;AAAA,QAAjE;AAACI,YAAM;AAACC,aAAD;AAAQJ,eAAR;AAAiBF,gBAAjB;AAA2BH,uBAA3B;AAA4CC;AAA5C;AAAP,KAAiE;AACrE;AACA,QAAII,OAAJ,EAAa,OAAO;AAACA,eAAS;AAAV,KAAP;AACb,QAAII,KAAJ,EAAW,OAAO;AAACC,iBAAW;AAAZ,KAAP;AACX,WAAO;AACHL,aADG;AAEHF,cAFG;AAGHH,qBAHG;AAIHC;AAJG,KAAP;AAMH,GAX2B;AAY5BU,WAAUC,QAAD,KACL;AACIC,eAAW;AACPC,WAAKF,SAASG,MAAT,CAAgBC;AADd;AADf,GADK;AAZmB,CAAf,CAAjB;AAqBA,MAAMC,wBAAwBV,SAASX,aAAT,CAA9B;AAhLAb,OAAOmC,aAAP,CAkLe7B,QAAQ8B,SAAS;AAC5B,SAAO;AACHC,UAAMD,MAAMC,IAAN,CAAW,eAAX;AADH,GAAP;AAGH,CAJc,EAIZH,qBAJY,CAlLf","sourcesContent":["import React from \"react\";\nimport {graphql} from \"react-apollo\";\nimport {connect} from \"react-redux\";\nimport Loading from \"../../../core/ui/components/loading\";\nimport ViewCampaign from \"../layouts/view\";\nimport {createContainer} from \"meteor/react-meteor-data\";\nimport gql from \"graphql-tag\";\n\nlet getTranslation=(key)=>{\n    return \"Campaigns.edit.messages.\"+key;\n};\n\nclass ViewContainer extends React.Component {\n    constructor() {\n        super();\n\n    }\n    render() {\n        let {invitesCampaign, refetch, history, campaign}=this.props;\n        return (\n            <div>\n                {this.props.loading ? <Loading/> :\n                    <ViewCampaign campaign={campaign}\n                                  invitesCampaign={invitesCampaign}\n                                  refetch={refetch}\n                                  history={history} />}\n            </div>\n        )\n    }\n}\n\nconst QUERY = gql`\n    query ($_id: String!){\n        campaign(_id:$_id){\n            _id,\n            owner {\n                _id,\n                profile{\n                    name,\n                    lastName,\n                    avatar\n                }\n            },\n            manager {\n                _id,\n                profile{\n                    name,\n                    lastName,\n                    avatar\n                }\n            },\n            information {\n                brands{\n                    _id,\n                    network,\n                    information{\n                        name,\n                        lastName,\n                        avatar\n                    }\n                }\n                profile\n                cover\n                name\n                conquer\n                dateStart\n                dateEnd\n                description\n                url\n                objectives {\n                    increaseFollowers,\n                    increaseViews,\n                    increaseShares,\n                    increaseEngagement,\n                    increaseLikes,\n                    increaseTrafficHours,\n                    reachNewMarkets,\n                    increaseSpeaking,\n                    increasePlays,\n                    increaseWebsiteTraffic,\n                    positionTarget,\n                    keepTarget,\n                    presence,\n                    positionNewMarkets,\n                },\n            },\n            messages {\n                _id\n                message\n                hashtags\n                media\n            },\n            gallery {\n                images{\n                    name,\n                    content\n                },\n                videos{\n                    name,\n                    content\n                }\n            }\n        }\n        invitesCampaign(campaignID: $_id){\n            _id,\n            type,\n            status,\n            deadline,\n            budget,\n            useHashtag,\n            invitesAvailable,\n            networks{\n                facebook,\n                twitter,\n                instagram\n            }\n            options{\n                message,\n                media,\n                date,\n                quantity\n            },\n            influencers {\n                _id\n                network\n                information{\n                    name,\n                    lastName,\n                    avatar\n                }\n            },\n            teamAttack,\n            teamAttackMembers{\n                _id\n                network\n                information{\n                    name,\n                    lastName,\n                    avatar\n                }\n                pricing{\n                    post\n                    share\n                    partnership\n                    ambassador,\n                    profilePicture,\n                    coverPhoto,\n                    noPostHour,\n                    noPostDay,\n                }\n            }\n        }\n    }\n`;\n\nconst withData = graphql(QUERY, {\n    props: ({data: {error, loading, campaign, invitesCampaign, refetch}}) => {\n        //console.log(\"CAMPAIGN_ERROR\",error,campaign);\n        if (loading) return {loading: true};\n        if (error) return {hasErrors: true};\n        return {\n            loading,\n            campaign,\n            invitesCampaign,\n            refetch,\n        };\n    },\n    options: (ownProps) => (\n        {\n            variables: {\n                _id: ownProps.params.campaignID\n            }\n        }\n    ),\n});\n\nconst ViewContainerWithData = withData(ViewContainer);\n\nexport default connect(state => {\n    return {\n        form: state.form[\"campaign-edit\"]\n    }\n})(ViewContainerWithData)"]},"sourceType":"script","hash":"f6bfb353a68bb6b55aacb7e6c997b132a43c7700"}
