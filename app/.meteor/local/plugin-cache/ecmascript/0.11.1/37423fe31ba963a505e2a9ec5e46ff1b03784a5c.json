{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/campaigns/ui/components/summary/conquer.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"imports/modules/campaigns/ui/components/summary/conquer.jsx","filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/campaigns/ui/components/summary/conquer.jsx","passPerPreset":false,"envName":"development","cwd":"/home/blackstoneteam/repos/viralizing-web/app","root":"/home/blackstoneteam/repos/viralizing-web/app","generatorOpts":{"filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/campaigns/ui/components/summary/conquer.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/modules/campaigns/ui/components/summary/conquer.jsx"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar React;\nmodule.watch(require(\"react\"), {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 0);\nvar $;\nmodule.watch(require(\"jquery\"), {\n  \"default\": function (v) {\n    $ = v;\n  }\n}, 1);\nvar countries = [{\n  \"code\": \"BD\",\n  \"name\": \"Bangladesh\"\n}, {\n  \"code\": \"BE\",\n  \"name\": \"Belgium\"\n}, {\n  \"code\": \"BF\",\n  \"name\": \"Burkina Faso\"\n}, {\n  \"code\": \"BG\",\n  \"name\": \"Bulgaria\"\n}, {\n  \"code\": \"BA\",\n  \"name\": \"Bosnia and Herz.\"\n}, {\n  \"code\": \"BN\",\n  \"name\": \"Brunei\"\n}, {\n  \"code\": \"BO\",\n  \"name\": \"Bolivia\"\n}, {\n  \"code\": \"JP\",\n  \"name\": \"Japan\"\n}, {\n  \"code\": \"BI\",\n  \"name\": \"Burundi\"\n}, {\n  \"code\": \"BJ\",\n  \"name\": \"Benin\"\n}, {\n  \"code\": \"BT\",\n  \"name\": \"Bhutan\"\n}, {\n  \"code\": \"JM\",\n  \"name\": \"Jamaica\"\n}, {\n  \"code\": \"BW\",\n  \"name\": \"Botswana\"\n}, {\n  \"code\": \"BR\",\n  \"name\": \"Brazil\"\n}, {\n  \"code\": \"BS\",\n  \"name\": \"Bahamas\"\n}, {\n  \"code\": \"BY\",\n  \"name\": \"Belarus\"\n}, {\n  \"code\": \"BZ\",\n  \"name\": \"Belize\"\n}, {\n  \"code\": \"RU\",\n  \"name\": \"Russia\"\n}, {\n  \"code\": \"RW\",\n  \"name\": \"Rwanda\"\n}, {\n  \"code\": \"RS\",\n  \"name\": \"Serbia\"\n}, {\n  \"code\": \"TL\",\n  \"name\": \"Timor-Leste\"\n}, {\n  \"code\": \"TM\",\n  \"name\": \"Turkmenistan\"\n}, {\n  \"code\": \"TJ\",\n  \"name\": \"Tajikistan\"\n}, {\n  \"code\": \"RO\",\n  \"name\": \"Romania\"\n}, {\n  \"code\": \"GW\",\n  \"name\": \"Guinea-Bissau\"\n}, {\n  \"code\": \"GT\",\n  \"name\": \"Guatemala\"\n}, {\n  \"code\": \"GR\",\n  \"name\": \"Greece\"\n}, {\n  \"code\": \"GQ\",\n  \"name\": \"Eq. Guinea\"\n}, {\n  \"code\": \"GY\",\n  \"name\": \"Guyana\"\n}, {\n  \"code\": \"GE\",\n  \"name\": \"Georgia\"\n}, {\n  \"code\": \"GB\",\n  \"name\": \"United Kingdom\"\n}, {\n  \"code\": \"GA\",\n  \"name\": \"Gabon\"\n}, {\n  \"code\": \"GN\",\n  \"name\": \"Guinea\"\n}, {\n  \"code\": \"GM\",\n  \"name\": \"Gambia\"\n}, {\n  \"code\": \"GL\",\n  \"name\": \"Greenland\"\n}, {\n  \"code\": \"GH\",\n  \"name\": \"Ghana\"\n}, {\n  \"code\": \"OM\",\n  \"name\": \"Oman\"\n}, {\n  \"code\": \"TN\",\n  \"name\": \"Tunisia\"\n}, {\n  \"code\": \"JO\",\n  \"name\": \"Jordan\"\n}, {\n  \"code\": \"HR\",\n  \"name\": \"Croatia\"\n}, {\n  \"code\": \"HT\",\n  \"name\": \"Haiti\"\n}, {\n  \"code\": \"HU\",\n  \"name\": \"Hungary\"\n}, {\n  \"code\": \"HN\",\n  \"name\": \"Honduras\"\n}, {\n  \"code\": \"PR\",\n  \"name\": \"Puerto Rico\"\n}, {\n  \"code\": \"PS\",\n  \"name\": \"Palestine\"\n}, {\n  \"code\": \"PT\",\n  \"name\": \"Portugal\"\n}, {\n  \"code\": \"PY\",\n  \"name\": \"Paraguay\"\n}, {\n  \"code\": \"PA\",\n  \"name\": \"Panama\"\n}, {\n  \"code\": \"PG\",\n  \"name\": \"Papua New Guinea\"\n}, {\n  \"code\": \"PE\",\n  \"name\": \"Peru\"\n}, {\n  \"code\": \"PK\",\n  \"name\": \"Pakistan\"\n}, {\n  \"code\": \"PH\",\n  \"name\": \"Philippines\"\n}, {\n  \"code\": \"PL\",\n  \"name\": \"Poland\"\n}, {\n  \"code\": \"ZM\",\n  \"name\": \"Zambia\"\n}, {\n  \"code\": \"EH\",\n  \"name\": \"W. Sahara\"\n}, {\n  \"code\": \"EE\",\n  \"name\": \"Estonia\"\n}, {\n  \"code\": \"EG\",\n  \"name\": \"Egypt\"\n}, {\n  \"code\": \"ZA\",\n  \"name\": \"South Africa\"\n}, {\n  \"code\": \"EC\",\n  \"name\": \"Ecuador\"\n}, {\n  \"code\": \"IT\",\n  \"name\": \"Italy\"\n}, {\n  \"code\": \"VN\",\n  \"name\": \"Vietnam\"\n}, {\n  \"code\": \"SB\",\n  \"name\": \"Solomon Is.\"\n}, {\n  \"code\": \"ET\",\n  \"name\": \"Ethiopia\"\n}, {\n  \"code\": \"SO\",\n  \"name\": \"Somalia\"\n}, {\n  \"code\": \"ZW\",\n  \"name\": \"Zimbabwe\"\n}, {\n  \"code\": \"ES\",\n  \"name\": \"Spain\"\n}, {\n  \"code\": \"ER\",\n  \"name\": \"Eritrea\"\n}, {\n  \"code\": \"ME\",\n  \"name\": \"Montenegro\"\n}, {\n  \"code\": \"MD\",\n  \"name\": \"Moldova\"\n}, {\n  \"code\": \"MG\",\n  \"name\": \"Madagascar\"\n}, {\n  \"code\": \"MA\",\n  \"name\": \"Morocco\"\n}, {\n  \"code\": \"UZ\",\n  \"name\": \"Uzbekistan\"\n}, {\n  \"code\": \"MM\",\n  \"name\": \"Myanmar\"\n}, {\n  \"code\": \"ML\",\n  \"name\": \"Mali\"\n}, {\n  \"code\": \"MN\",\n  \"name\": \"Mongolia\"\n}, {\n  \"code\": \"MK\",\n  \"name\": \"Macedonia\"\n}, {\n  \"code\": \"MW\",\n  \"name\": \"Malawi\"\n}, {\n  \"code\": \"MR\",\n  \"name\": \"Mauritania\"\n}, {\n  \"code\": \"UG\",\n  \"name\": \"Uganda\"\n}, {\n  \"code\": \"MY\",\n  \"name\": \"Malaysia\"\n}, {\n  \"code\": \"MX\",\n  \"name\": \"Mexico\"\n}, {\n  \"code\": \"IL\",\n  \"name\": \"Israel\"\n}, {\n  \"code\": \"FR\",\n  \"name\": \"France\"\n}, {\n  \"code\": \"XS\",\n  \"name\": \"Somaliland\"\n}, {\n  \"code\": \"FI\",\n  \"name\": \"Finland\"\n}, {\n  \"code\": \"FJ\",\n  \"name\": \"Fiji\"\n}, {\n  \"code\": \"FK\",\n  \"name\": \"Falkland Is.\"\n}, {\n  \"code\": \"NI\",\n  \"name\": \"Nicaragua\"\n}, {\n  \"code\": \"NL\",\n  \"name\": \"Netherlands\"\n}, {\n  \"code\": \"NO\",\n  \"name\": \"Norway\"\n}, {\n  \"code\": \"NA\",\n  \"name\": \"Namibia\"\n}, {\n  \"code\": \"VU\",\n  \"name\": \"Vanuatu\"\n}, {\n  \"code\": \"NC\",\n  \"name\": \"New Caledonia\"\n}, {\n  \"code\": \"NE\",\n  \"name\": \"Niger\"\n}, {\n  \"code\": \"NG\",\n  \"name\": \"Nigeria\"\n}, {\n  \"code\": \"NZ\",\n  \"name\": \"New Zealand\"\n}, {\n  \"code\": \"NP\",\n  \"name\": \"Nepal\"\n}, {\n  \"code\": \"XK\",\n  \"name\": \"Kosovo\"\n}, {\n  \"code\": \"CI\",\n  \"name\": \"Côte d'Ivoire\"\n}, {\n  \"code\": \"CH\",\n  \"name\": \"Switzerland\"\n}, {\n  \"code\": \"CO\",\n  \"name\": \"Colombia\"\n}, {\n  \"code\": \"CN\",\n  \"name\": \"China\"\n}, {\n  \"code\": \"CM\",\n  \"name\": \"Cameroon\"\n}, {\n  \"code\": \"CL\",\n  \"name\": \"Chile\"\n}, {\n  \"code\": \"XC\",\n  \"name\": \"N. Cyprus\"\n}, {\n  \"code\": \"CA\",\n  \"name\": \"Canada\"\n}, {\n  \"code\": \"CG\",\n  \"name\": \"Congo\"\n}, {\n  \"code\": \"CF\",\n  \"name\": \"Central African Rep.\"\n}, {\n  \"code\": \"CD\",\n  \"name\": \"Dem. Rep. Congo\"\n}, {\n  \"code\": \"CZ\",\n  \"name\": \"Czech Rep.\"\n}, {\n  \"code\": \"CY\",\n  \"name\": \"Cyprus\"\n}, {\n  \"code\": \"CR\",\n  \"name\": \"Costa Rica\"\n}, {\n  \"code\": \"CU\",\n  \"name\": \"Cuba\"\n}, {\n  \"code\": \"SZ\",\n  \"name\": \"Swaziland\"\n}, {\n  \"code\": \"SY\",\n  \"name\": \"Syria\"\n}, {\n  \"code\": \"KG\",\n  \"name\": \"Kyrgyzstan\"\n}, {\n  \"code\": \"KE\",\n  \"name\": \"Kenya\"\n}, {\n  \"code\": \"SS\",\n  \"name\": \"S. Sudan\"\n}, {\n  \"code\": \"SR\",\n  \"name\": \"Suriname\"\n}, {\n  \"code\": \"KH\",\n  \"name\": \"Cambodia\"\n}, {\n  \"code\": \"SV\",\n  \"name\": \"El Salvador\"\n}, {\n  \"code\": \"SK\",\n  \"name\": \"Slovakia\"\n}, {\n  \"code\": \"KR\",\n  \"name\": \"Korea\"\n}, {\n  \"code\": \"SI\",\n  \"name\": \"Slovenia\"\n}, {\n  \"code\": \"KP\",\n  \"name\": \"Dem. Rep. Korea\"\n}, {\n  \"code\": \"KW\",\n  \"name\": \"Kuwait\"\n}, {\n  \"code\": \"SN\",\n  \"name\": \"Senegal\"\n}, {\n  \"code\": \"SL\",\n  \"name\": \"Sierra Leone\"\n}, {\n  \"code\": \"KZ\",\n  \"name\": \"Kazakhstan\"\n}, {\n  \"code\": \"SA\",\n  \"name\": \"Saudi Arabia\"\n}, {\n  \"code\": \"SE\",\n  \"name\": \"Sweden\"\n}, {\n  \"code\": \"SD\",\n  \"name\": \"Sudan\"\n}, {\n  \"code\": \"DO\",\n  \"name\": \"Dominican Rep.\"\n}, {\n  \"code\": \"DJ\",\n  \"name\": \"Djibouti\"\n}, {\n  \"code\": \"DK\",\n  \"name\": \"Denmark\"\n}, {\n  \"code\": \"DE\",\n  \"name\": \"Germany\"\n}, {\n  \"code\": \"YE\",\n  \"name\": \"Yemen\"\n}, {\n  \"code\": \"DZ\",\n  \"name\": \"Algeria\"\n}, {\n  \"code\": \"US\",\n  \"name\": \"United States\"\n}, {\n  \"code\": \"UY\",\n  \"name\": \"Uruguay\"\n}, {\n  \"code\": \"LB\",\n  \"name\": \"Lebanon\"\n}, {\n  \"code\": \"LA\",\n  \"name\": \"Lao PDR\"\n}, {\n  \"code\": \"TW\",\n  \"name\": \"Taiwan\"\n}, {\n  \"code\": \"TT\",\n  \"name\": \"Trinidad and Tobago\"\n}, {\n  \"code\": \"TR\",\n  \"name\": \"Turkey\"\n}, {\n  \"code\": \"LK\",\n  \"name\": \"Sri Lanka\"\n}, {\n  \"code\": \"LV\",\n  \"name\": \"Latvia\"\n}, {\n  \"code\": \"LT\",\n  \"name\": \"Lithuania\"\n}, {\n  \"code\": \"LU\",\n  \"name\": \"Luxembourg\"\n}, {\n  \"code\": \"LR\",\n  \"name\": \"Liberia\"\n}, {\n  \"code\": \"LS\",\n  \"name\": \"Lesotho\"\n}, {\n  \"code\": \"TH\",\n  \"name\": \"Thailand\"\n}, {\n  \"code\": \"TF\",\n  \"name\": \"Fr. S. Antarctic Lands\"\n}, {\n  \"code\": \"TG\",\n  \"name\": \"Togo\"\n}, {\n  \"code\": \"TD\",\n  \"name\": \"Chad\"\n}, {\n  \"code\": \"LY\",\n  \"name\": \"Libya\"\n}, {\n  \"code\": \"AE\",\n  \"name\": \"United Arab Emirates\"\n}, {\n  \"code\": \"VE\",\n  \"name\": \"Venezuela\"\n}, {\n  \"code\": \"AF\",\n  \"name\": \"Afghanistan\"\n}, {\n  \"code\": \"IQ\",\n  \"name\": \"Iraq\"\n}, {\n  \"code\": \"IS\",\n  \"name\": \"Iceland\"\n}, {\n  \"code\": \"IR\",\n  \"name\": \"Iran\"\n}, {\n  \"code\": \"AM\",\n  \"name\": \"Armenia\"\n}, {\n  \"code\": \"AL\",\n  \"name\": \"Albania\"\n}, {\n  \"code\": \"AO\",\n  \"name\": \"Angola\"\n}, {\n  \"code\": \"AR\",\n  \"name\": \"Argentina\"\n}, {\n  \"code\": \"AU\",\n  \"name\": \"Australia\"\n}, {\n  \"code\": \"AT\",\n  \"name\": \"Austria\"\n}, {\n  \"code\": \"IN\",\n  \"name\": \"India\"\n}, {\n  \"code\": \"TZ\",\n  \"name\": \"Tanzania\"\n}, {\n  \"code\": \"AZ\",\n  \"name\": \"Azerbaijan\"\n}, {\n  \"code\": \"IE\",\n  \"name\": \"Ireland\"\n}, {\n  \"code\": \"ID\",\n  \"name\": \"Indonesia\"\n}, {\n  \"code\": \"UA\",\n  \"name\": \"Ukraine\"\n}, {\n  \"code\": \"QA\",\n  \"name\": \"Qatar\"\n}, {\n  \"code\": \"MZ\",\n  \"name\": \"Mozambique\"\n}];\n\nvar TargetConquer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inheritsLoose2.default)(TargetConquer, _React$Component);\n\n  function TargetConquer() {\n    var _this;\n\n    _this = _React$Component.call(this) || this;\n    _this.state = {\n      mounted: false\n    };\n    _this.renderMap = _this.renderMap.bind((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)));\n    return _this;\n  }\n\n  var _proto = TargetConquer.prototype;\n\n  _proto.renderMap = function () {\n    function renderMap() {\n      var component = this;\n      var readOnly = this.props.readOnly;\n      var codes = [];\n\n      if (component.props.input.value && Array.isArray(component.props.input.value) && typeof component.props.input.value[0] === \"string\") {\n        codes = component.props.input.value.map(function (code) {\n          return countries.filter(function (c) {\n            return c.name === code;\n          })[0].code;\n        });\n      }\n\n      setTimeout(function () {\n        var domMap = $(\"#world-map-campaign-summary\");\n        var map = domMap.vectorMap({\n          map: 'world_mill',\n          regionsSelectable: !readOnly,\n          selectedRegions: codes,\n          regionStyle: {\n            initial: {\n              fill: '#ccc'\n            },\n            selected: {\n              fill: '#c28c58'\n            }\n          },\n          onRegionClick: function (e, code, d, f) {\n            //console.log(\"REGION CLICK\",code);\n            //console.log(\"MAP_DATA\", map, mapObject);\n            if (!!readOnly) return;\n            setTimeout(function () {\n              var regions = mapObject.getSelectedRegions();\n              var value = regions.map(function (r) {\n                return countries.filter(function (c) {\n                  return c.code === r;\n                })[0].name;\n              }); //console.log(\"MAP VALUES\",value);\n\n              component.props.input.onChange(value);\n              setTimeout(function () {\n                return $(\".jvectormap-tip\").remove();\n              }, 100);\n            }, 100); //component.props.close();\n\n            var mapObject = domMap.vectorMap('get', 'mapObject');\n          }\n        });\n      }, 1000);\n    }\n\n    return renderMap;\n  }();\n\n  _proto.componentDidMount = function () {\n    function componentDidMount() {\n      this.renderMap();\n    }\n\n    return componentDidMount;\n  }();\n\n  _proto.render = function () {\n    function render() {\n      return React.createElement(\"div\", null, React.createElement(\"h4\", null, this.props.title), React.createElement(\"div\", {\n        id: \"world-map-campaign-summary\",\n        className: \"vectorMap\",\n        style: {\n          width: \" 100%\",\n          height: \" 400px\"\n        }\n      }));\n    }\n\n    return render;\n  }();\n\n  return TargetConquer;\n}(React.Component);\n\nmodule.exportDefault(TargetConquer);","map":{"version":3,"sources":["imports/modules/campaigns/ui/components/summary/conquer.jsx"],"names":["React","module","watch","require","v","$","countries","TargetConquer","state","mounted","renderMap","bind","component","readOnly","props","codes","input","value","Array","isArray","map","code","filter","c","name","setTimeout","domMap","vectorMap","regionsSelectable","selectedRegions","regionStyle","initial","fill","selected","onRegionClick","e","d","f","regions","mapObject","getSelectedRegions","r","onChange","remove","componentDidMount","render","title","width","height","Component","exportDefault"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport $ from \"jquery\";\n\nlet countries=[{\"code\":\"BD\",\"name\":\"Bangladesh\"},{\"code\":\"BE\",\"name\":\"Belgium\"},{\"code\":\"BF\",\"name\":\"Burkina Faso\"},{\"code\":\"BG\",\"name\":\"Bulgaria\"},{\"code\":\"BA\",\"name\":\"Bosnia and Herz.\"},{\"code\":\"BN\",\"name\":\"Brunei\"},{\"code\":\"BO\",\"name\":\"Bolivia\"},{\"code\":\"JP\",\"name\":\"Japan\"},{\"code\":\"BI\",\"name\":\"Burundi\"},{\"code\":\"BJ\",\"name\":\"Benin\"},{\"code\":\"BT\",\"name\":\"Bhutan\"},{\"code\":\"JM\",\"name\":\"Jamaica\"},{\"code\":\"BW\",\"name\":\"Botswana\"},{\"code\":\"BR\",\"name\":\"Brazil\"},{\"code\":\"BS\",\"name\":\"Bahamas\"},{\"code\":\"BY\",\"name\":\"Belarus\"},{\"code\":\"BZ\",\"name\":\"Belize\"},{\"code\":\"RU\",\"name\":\"Russia\"},{\"code\":\"RW\",\"name\":\"Rwanda\"},{\"code\":\"RS\",\"name\":\"Serbia\"},{\"code\":\"TL\",\"name\":\"Timor-Leste\"},{\"code\":\"TM\",\"name\":\"Turkmenistan\"},{\"code\":\"TJ\",\"name\":\"Tajikistan\"},{\"code\":\"RO\",\"name\":\"Romania\"},{\"code\":\"GW\",\"name\":\"Guinea-Bissau\"},{\"code\":\"GT\",\"name\":\"Guatemala\"},{\"code\":\"GR\",\"name\":\"Greece\"},{\"code\":\"GQ\",\"name\":\"Eq. Guinea\"},{\"code\":\"GY\",\"name\":\"Guyana\"},{\"code\":\"GE\",\"name\":\"Georgia\"},{\"code\":\"GB\",\"name\":\"United Kingdom\"},{\"code\":\"GA\",\"name\":\"Gabon\"},{\"code\":\"GN\",\"name\":\"Guinea\"},{\"code\":\"GM\",\"name\":\"Gambia\"},{\"code\":\"GL\",\"name\":\"Greenland\"},{\"code\":\"GH\",\"name\":\"Ghana\"},{\"code\":\"OM\",\"name\":\"Oman\"},{\"code\":\"TN\",\"name\":\"Tunisia\"},{\"code\":\"JO\",\"name\":\"Jordan\"},{\"code\":\"HR\",\"name\":\"Croatia\"},{\"code\":\"HT\",\"name\":\"Haiti\"},{\"code\":\"HU\",\"name\":\"Hungary\"},{\"code\":\"HN\",\"name\":\"Honduras\"},{\"code\":\"PR\",\"name\":\"Puerto Rico\"},{\"code\":\"PS\",\"name\":\"Palestine\"},{\"code\":\"PT\",\"name\":\"Portugal\"},{\"code\":\"PY\",\"name\":\"Paraguay\"},{\"code\":\"PA\",\"name\":\"Panama\"},{\"code\":\"PG\",\"name\":\"Papua New Guinea\"},{\"code\":\"PE\",\"name\":\"Peru\"},{\"code\":\"PK\",\"name\":\"Pakistan\"},{\"code\":\"PH\",\"name\":\"Philippines\"},{\"code\":\"PL\",\"name\":\"Poland\"},{\"code\":\"ZM\",\"name\":\"Zambia\"},{\"code\":\"EH\",\"name\":\"W. Sahara\"},{\"code\":\"EE\",\"name\":\"Estonia\"},{\"code\":\"EG\",\"name\":\"Egypt\"},{\"code\":\"ZA\",\"name\":\"South Africa\"},{\"code\":\"EC\",\"name\":\"Ecuador\"},{\"code\":\"IT\",\"name\":\"Italy\"},{\"code\":\"VN\",\"name\":\"Vietnam\"},{\"code\":\"SB\",\"name\":\"Solomon Is.\"},{\"code\":\"ET\",\"name\":\"Ethiopia\"},{\"code\":\"SO\",\"name\":\"Somalia\"},{\"code\":\"ZW\",\"name\":\"Zimbabwe\"},{\"code\":\"ES\",\"name\":\"Spain\"},{\"code\":\"ER\",\"name\":\"Eritrea\"},{\"code\":\"ME\",\"name\":\"Montenegro\"},{\"code\":\"MD\",\"name\":\"Moldova\"},{\"code\":\"MG\",\"name\":\"Madagascar\"},{\"code\":\"MA\",\"name\":\"Morocco\"},{\"code\":\"UZ\",\"name\":\"Uzbekistan\"},{\"code\":\"MM\",\"name\":\"Myanmar\"},{\"code\":\"ML\",\"name\":\"Mali\"},{\"code\":\"MN\",\"name\":\"Mongolia\"},{\"code\":\"MK\",\"name\":\"Macedonia\"},{\"code\":\"MW\",\"name\":\"Malawi\"},{\"code\":\"MR\",\"name\":\"Mauritania\"},{\"code\":\"UG\",\"name\":\"Uganda\"},{\"code\":\"MY\",\"name\":\"Malaysia\"},{\"code\":\"MX\",\"name\":\"Mexico\"},{\"code\":\"IL\",\"name\":\"Israel\"},{\"code\":\"FR\",\"name\":\"France\"},{\"code\":\"XS\",\"name\":\"Somaliland\"},{\"code\":\"FI\",\"name\":\"Finland\"},{\"code\":\"FJ\",\"name\":\"Fiji\"},{\"code\":\"FK\",\"name\":\"Falkland Is.\"},{\"code\":\"NI\",\"name\":\"Nicaragua\"},{\"code\":\"NL\",\"name\":\"Netherlands\"},{\"code\":\"NO\",\"name\":\"Norway\"},{\"code\":\"NA\",\"name\":\"Namibia\"},{\"code\":\"VU\",\"name\":\"Vanuatu\"},{\"code\":\"NC\",\"name\":\"New Caledonia\"},{\"code\":\"NE\",\"name\":\"Niger\"},{\"code\":\"NG\",\"name\":\"Nigeria\"},{\"code\":\"NZ\",\"name\":\"New Zealand\"},{\"code\":\"NP\",\"name\":\"Nepal\"},{\"code\":\"XK\",\"name\":\"Kosovo\"},{\"code\":\"CI\",\"name\":\"Côte d'Ivoire\"},{\"code\":\"CH\",\"name\":\"Switzerland\"},{\"code\":\"CO\",\"name\":\"Colombia\"},{\"code\":\"CN\",\"name\":\"China\"},{\"code\":\"CM\",\"name\":\"Cameroon\"},{\"code\":\"CL\",\"name\":\"Chile\"},{\"code\":\"XC\",\"name\":\"N. Cyprus\"},{\"code\":\"CA\",\"name\":\"Canada\"},{\"code\":\"CG\",\"name\":\"Congo\"},{\"code\":\"CF\",\"name\":\"Central African Rep.\"},{\"code\":\"CD\",\"name\":\"Dem. Rep. Congo\"},{\"code\":\"CZ\",\"name\":\"Czech Rep.\"},{\"code\":\"CY\",\"name\":\"Cyprus\"},{\"code\":\"CR\",\"name\":\"Costa Rica\"},{\"code\":\"CU\",\"name\":\"Cuba\"},{\"code\":\"SZ\",\"name\":\"Swaziland\"},{\"code\":\"SY\",\"name\":\"Syria\"},{\"code\":\"KG\",\"name\":\"Kyrgyzstan\"},{\"code\":\"KE\",\"name\":\"Kenya\"},{\"code\":\"SS\",\"name\":\"S. Sudan\"},{\"code\":\"SR\",\"name\":\"Suriname\"},{\"code\":\"KH\",\"name\":\"Cambodia\"},{\"code\":\"SV\",\"name\":\"El Salvador\"},{\"code\":\"SK\",\"name\":\"Slovakia\"},{\"code\":\"KR\",\"name\":\"Korea\"},{\"code\":\"SI\",\"name\":\"Slovenia\"},{\"code\":\"KP\",\"name\":\"Dem. Rep. Korea\"},{\"code\":\"KW\",\"name\":\"Kuwait\"},{\"code\":\"SN\",\"name\":\"Senegal\"},{\"code\":\"SL\",\"name\":\"Sierra Leone\"},{\"code\":\"KZ\",\"name\":\"Kazakhstan\"},{\"code\":\"SA\",\"name\":\"Saudi Arabia\"},{\"code\":\"SE\",\"name\":\"Sweden\"},{\"code\":\"SD\",\"name\":\"Sudan\"},{\"code\":\"DO\",\"name\":\"Dominican Rep.\"},{\"code\":\"DJ\",\"name\":\"Djibouti\"},{\"code\":\"DK\",\"name\":\"Denmark\"},{\"code\":\"DE\",\"name\":\"Germany\"},{\"code\":\"YE\",\"name\":\"Yemen\"},{\"code\":\"DZ\",\"name\":\"Algeria\"},{\"code\":\"US\",\"name\":\"United States\"},{\"code\":\"UY\",\"name\":\"Uruguay\"},{\"code\":\"LB\",\"name\":\"Lebanon\"},{\"code\":\"LA\",\"name\":\"Lao PDR\"},{\"code\":\"TW\",\"name\":\"Taiwan\"},{\"code\":\"TT\",\"name\":\"Trinidad and Tobago\"},{\"code\":\"TR\",\"name\":\"Turkey\"},{\"code\":\"LK\",\"name\":\"Sri Lanka\"},{\"code\":\"LV\",\"name\":\"Latvia\"},{\"code\":\"LT\",\"name\":\"Lithuania\"},{\"code\":\"LU\",\"name\":\"Luxembourg\"},{\"code\":\"LR\",\"name\":\"Liberia\"},{\"code\":\"LS\",\"name\":\"Lesotho\"},{\"code\":\"TH\",\"name\":\"Thailand\"},{\"code\":\"TF\",\"name\":\"Fr. S. Antarctic Lands\"},{\"code\":\"TG\",\"name\":\"Togo\"},{\"code\":\"TD\",\"name\":\"Chad\"},{\"code\":\"LY\",\"name\":\"Libya\"},{\"code\":\"AE\",\"name\":\"United Arab Emirates\"},{\"code\":\"VE\",\"name\":\"Venezuela\"},{\"code\":\"AF\",\"name\":\"Afghanistan\"},{\"code\":\"IQ\",\"name\":\"Iraq\"},{\"code\":\"IS\",\"name\":\"Iceland\"},{\"code\":\"IR\",\"name\":\"Iran\"},{\"code\":\"AM\",\"name\":\"Armenia\"},{\"code\":\"AL\",\"name\":\"Albania\"},{\"code\":\"AO\",\"name\":\"Angola\"},{\"code\":\"AR\",\"name\":\"Argentina\"},{\"code\":\"AU\",\"name\":\"Australia\"},{\"code\":\"AT\",\"name\":\"Austria\"},{\"code\":\"IN\",\"name\":\"India\"},{\"code\":\"TZ\",\"name\":\"Tanzania\"},{\"code\":\"AZ\",\"name\":\"Azerbaijan\"},{\"code\":\"IE\",\"name\":\"Ireland\"},{\"code\":\"ID\",\"name\":\"Indonesia\"},{\"code\":\"UA\",\"name\":\"Ukraine\"},{\"code\":\"QA\",\"name\":\"Qatar\"},{\"code\":\"MZ\",\"name\":\"Mozambique\"}];\n\nclass TargetConquer extends React.Component {\n    constructor(){\n        super();\n\n        this.state={\n            mounted: false\n        };\n\n        this.renderMap=this.renderMap.bind(this);\n    }\n    renderMap(){\n        let component=this;\n        let {readOnly}=this.props;\n        let codes=[];\n        if(component.props.input.value && Array.isArray(component.props.input.value) && typeof component.props.input.value[0]===\"string\"){\n            codes=component.props.input.value.map((code)=>{\n                return countries.filter((c)=>c.name===code)[0].code\n            })\n        }\n        setTimeout(function(){\n            let domMap=$(\"#world-map-campaign-summary\");\n            let map=domMap.vectorMap({\n                map: 'world_mill',\n                regionsSelectable:!readOnly,\n                selectedRegions:codes,\n                regionStyle: {\n                    initial: {\n                        fill: '#ccc'\n                    },\n                    selected: {\n                        fill: '#c28c58'\n                    }\n                },\n                onRegionClick: function(e,code,d,f){\n                    //console.log(\"REGION CLICK\",code);\n                    //console.log(\"MAP_DATA\", map, mapObject);\n                    if(!!readOnly) return;\n                    setTimeout(function(){\n                        let regions=mapObject.getSelectedRegions();\n                        let value=regions.map((r)=>{\n                            return countries.filter((c)=>c.code===r)[0].name;\n                        });\n                        //console.log(\"MAP VALUES\",value);\n                        component.props.input.onChange(value);\n                        setTimeout(()=>$(\".jvectormap-tip\").remove(),100);\n                    },100);\n\n                    //component.props.close();\n                    let mapObject = domMap.vectorMap('get', 'mapObject');\n                }\n            });\n        },1000);\n\n\n    }\n    componentDidMount(){\n        this.renderMap();\n    }\n    render(){\n\n        return(\n            <div>\n                <h4>{this.props.title}</h4>\n                <div id=\"world-map-campaign-summary\" className=\"vectorMap\" style={{width:\" 100%\", height:\" 400px\"}}/>\n            </div>\n        )\n    }\n}\n\nexport default TargetConquer;"]},"sourceType":"script","hash":"37423fe31ba963a505e2a9ec5e46ff1b03784a5c"}
