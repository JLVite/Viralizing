{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$4","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$5","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$6","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$7","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$9","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/campaigns/ui/containers/edit.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"imports/modules/campaigns/ui/containers/edit.jsx","filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/campaigns/ui/containers/edit.jsx","passPerPreset":false,"envName":"development","cwd":"/home/blackstoneteam/repos/viralizing-web/app","root":"/home/blackstoneteam/repos/viralizing-web/app","generatorOpts":{"filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/campaigns/ui/containers/edit.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/modules/campaigns/ui/containers/edit.jsx"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/builtin/interopRequireDefault\");\n\nvar _taggedTemplateLiteral2 = _interopRequireDefault(require(\"@babel/runtime/helpers/builtin/taggedTemplateLiteral\"));\n\nfunction _templateObject() {\n  const data = (0, _taggedTemplateLiteral2.default)([\"\\n    query ($_id: String!,  $query: String!){\\n        campaign(_id:$_id){\\n            _id,\\n            owner {\\n                _id,\\n                profile{\\n                    name,\\n                    lastName,\\n                    avatar\\n                }\\n            },\\n            manager {\\n                _id,\\n                profile{\\n                    name,\\n                    lastName,\\n                    avatar\\n                }\\n            },\\n            shares {\\n                _id,\\n                profile{\\n                    name,\\n                    lastName,\\n                    avatar\\n                }\\n            },\\n            information {\\n                brands{\\n                    _id,\\n                    network,\\n                    information{\\n                        name,\\n                        lastName,\\n                        avatar\\n                    }\\n                }\\n                profile\\n                cover\\n                name\\n                conquer\\n                dateStart\\n                dateEnd\\n                description\\n                url\\n                objectives {\\n                    increaseFollowers,\\n                    increaseViews,\\n                    increaseShares,\\n                    increaseEngagement,\\n                    increaseLikes,\\n                    increaseTrafficHours,\\n                    reachNewMarkets,\\n                    increaseSpeaking,\\n                    increasePlays,\\n                    increaseWebsiteTraffic,\\n                    positionTarget,\\n                    keepTarget,\\n                    presence,\\n                    positionNewMarkets,\\n                },\\n            },\\n            messages {\\n                _id\\n                message\\n                hashtags\\n                media\\n            },\\n            gallery {\\n                images{\\n                    name,\\n                    content\\n                },\\n                videos{\\n                    name,\\n                    content\\n                }\\n            }\\n        }\\n        accountsOwnSearch(query:$query){\\n            _id,\\n            network,\\n            information{\\n                name,\\n                lastName,\\n                avatar,\\n                birthDate,\\n                country,\\n                gender\\n            }\\n        }\\n        invitesCampaign(campaignID: $_id){\\n            _id,\\n            type,\\n            status,\\n            deadline,\\n            budget,\\n            useHashtag,\\n            invitesAvailable,\\n            networks{\\n                facebook,\\n                twitter,\\n                instagram\\n            }\\n            options{\\n                message,\\n                media,\\n                date,\\n                quantity\\n            },\\n            influencers {\\n                _id\\n                network\\n                information{\\n                    name,\\n                    lastName,\\n                    avatar\\n                }\\n            },\\n            teamAttacks{\\n              name,\\n              _id,\\n              members{\\n                 _id\\n                network\\n                information{\\n                    name,\\n                    lastName,\\n                    avatar\\n                }\\n                pricing{\\n                    post\\n                    share\\n                    partnership\\n                    ambassador,\\n                    profilePicture,\\n                    coverPhoto,\\n                    noPostHour,\\n                    noPostDay,\\n                }\\n              }\\n            }\\n        }\\n        accounts{\\n            _id,\\n            network,\\n            information{\\n                name,\\n                lastName,\\n                avatar\\n            },\\n        }\\n        teamAttacksOwn{\\n            _id,\\n            owner {\\n                _id\\n            },\\n            members {\\n                _id,\\n                network,\\n                information{\\n                    name,\\n                    lastName,\\n                    avatar,\\n                    birthDate,\\n                    country,\\n                    gender\\n                }\\n                pricing{\\n                    post\\n                    share\\n                    partnership\\n                    ambassador,\\n                    profilePicture,\\n                    coverPhoto,\\n                    noPostHour,\\n                    noPostDay,\\n                }\\n            },\\n            name,\\n            type\\n        }\\n    }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nlet React;\nmodule.watch(require(\"react\"), {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet graphql;\nmodule.watch(require(\"react-apollo\"), {\n  graphql(v) {\n    graphql = v;\n  }\n\n}, 1);\nlet connect;\nmodule.watch(require(\"react-redux\"), {\n  connect(v) {\n    connect = v;\n  }\n\n}, 2);\nlet Loading;\nmodule.watch(require(\"../../../core/ui/components/loading\"), {\n  default(v) {\n    Loading = v;\n  }\n\n}, 3);\nlet Saving;\nmodule.watch(require(\"../../../core/ui/components/saving\"), {\n  default(v) {\n    Saving = v;\n  }\n\n}, 4);\nlet EditCampaign;\nmodule.watch(require(\"../layouts/edit\"), {\n  default(v) {\n    EditCampaign = v;\n  }\n\n}, 5);\nlet createContainer;\nmodule.watch(require(\"meteor/react-meteor-data\"), {\n  createContainer(v) {\n    createContainer = v;\n  }\n\n}, 6);\nlet gql;\nmodule.watch(require(\"graphql-tag\"), {\n  default(v) {\n    gql = v;\n  }\n\n}, 7);\nlet notie;\nmodule.watch(require(\"notie\"), {\n  default(v) {\n    notie = v;\n  }\n\n}, 8);\nlet I18n;\nmodule.watch(require(\"react-redux-i18n\"), {\n  I18n(v) {\n    I18n = v;\n  }\n\n}, 9);\n\nlet getTranslation = key => {\n  return \"Campaigns.edit.messages.\" + key;\n};\n\nclass EditContainer extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      saving: \"saved\"\n    };\n    this.saveCampaign = this.saveCampaign.bind(this);\n  }\n\n  componentDidMount() {\n    this.savedData = JSON.stringify(this.props.account);\n    let component = this;\n    this.saveInterval = setInterval(function () {\n      if (component.props.form && component.props.form.values) {\n        component.saveCampaign(component.props.form.values, true);\n      }\n    }, 5000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.saveInterval);\n  }\n\n  saveCampaign(data, silent) {\n    if (silent && typeof silent === \"boolean\") {\n      silent = true;\n    } else {\n      silent = false;\n    }\n\n    if (silent && this.savedData === JSON.stringify(data)) {\n      this.setState({\n        saving: \"saved\"\n      });\n      return;\n    }\n\n    this.setState({\n      saving: \"saving\"\n    });\n    this.savedData = JSON.stringify(data);\n    let component = this; //TODO: Validate Data\n\n    Meteor.call(\"campaigns-save\", data, function (err, res) {\n      if (err) {\n        if (err.error === 500) {\n          err.error = \"Failed to create post.\";\n        } //console.log(\"ERROR\",err);\n\n\n        notie.alert(3, err.reason || err.error, 3);\n        return;\n      }\n\n      component.setState({\n        saving: \"saved\"\n      });\n\n      if (!silent) {\n        notie.alert(1, I18n.t(getTranslation(\"saved\")), 3);\n      } //console.log(\"SERVER_SAVE_POSTS_RESPONSE\",res);\n\n    });\n  }\n\n  render() {\n    let {\n      invitesCampaign,\n      teamAttacksOwn,\n      accounts,\n      history,\n      refetch,\n      accountsOwnSearch,\n      campaign\n    } = this.props;\n    return React.createElement(\"div\", null, this.props.loading ? React.createElement(Loading, null) : React.createElement(EditCampaign, {\n      initialValues: campaign,\n      ownAccounts: accountsOwnSearch,\n      refetch: refetch,\n      history: history,\n      invitesCampaign: invitesCampaign,\n      teamAttacksOwn: teamAttacksOwn,\n      accounts: accounts,\n      onSubmit: this.saveCampaign\n    }), React.createElement(Saving, {\n      state: this.state.saving\n    }));\n  }\n\n}\n\nconst QUERY = gql(_templateObject());\nconst withData = graphql(QUERY, {\n  props: (_ref) => {\n    let {\n      data: {\n        error,\n        loading,\n        campaign,\n        accountsOwnSearch,\n        invitesCampaign,\n        teamAttacksOwn,\n        accounts,\n        refetch\n      }\n    } = _ref;\n    //console.log(\"CAMPAIGN_EDIT_CONTAINER\",error,campaign);\n    if (loading) return {\n      loading: true\n    };\n    if (error) return {\n      hasErrors: true\n    };\n    return {\n      loading,\n      campaign,\n      accountsOwnSearch,\n      invitesCampaign,\n      teamAttacksOwn,\n      accounts,\n      refetch\n    };\n  },\n  options: ownProps => ({\n    variables: {\n      _id: ownProps.params.campaignID,\n      query: \"\"\n    }\n  })\n});\nconst EditContainerWithData = withData(EditContainer);\nmodule.exportDefault(connect(state => {\n  return {\n    form: state.form[\"campaign-edit\"]\n  };\n})(EditContainerWithData));","map":{"version":3,"sources":["imports/modules/campaigns/ui/containers/edit.jsx"],"names":["React","module","watch","require","default","v","graphql","connect","Loading","Saving","EditCampaign","createContainer","gql","notie","I18n","getTranslation","key","EditContainer","Component","constructor","state","saving","saveCampaign","bind","componentDidMount","savedData","JSON","stringify","props","account","component","saveInterval","setInterval","form","values","componentWillUnmount","clearInterval","data","silent","setState","Meteor","call","err","res","error","alert","reason","t","render","invitesCampaign","teamAttacksOwn","accounts","history","refetch","accountsOwnSearch","campaign","loading","QUERY","withData","hasErrors","options","ownProps","variables","_id","params","campaignID","query","EditContainerWithData","exportDefault"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {graphql} from \"react-apollo\";\nimport {connect} from \"react-redux\";\nimport Loading from \"../../../core/ui/components/loading\";\nimport Saving from \"../../../core/ui/components/saving\";\nimport EditCampaign from \"../layouts/edit\";\nimport {createContainer} from \"meteor/react-meteor-data\";\nimport gql from \"graphql-tag\";\nimport notie from \"notie\";\nimport {I18n} from \"react-redux-i18n\";\n\nlet getTranslation = (key) => {\n    return \"Campaigns.edit.messages.\" + key;\n};\n\nclass EditContainer extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            saving: \"saved\"\n        };\n\n        this.saveCampaign = this.saveCampaign.bind(this);\n    }\n\n    componentDidMount() {\n        this.savedData = JSON.stringify(this.props.account);\n        let component = this;\n        this.saveInterval = setInterval(function () {\n            if (component.props.form && component.props.form.values) {\n                component.saveCampaign(component.props.form.values, true);\n            }\n        }, 5000);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.saveInterval);\n    }\n\n    saveCampaign(data, silent) {\n        if (silent && typeof(silent) === \"boolean\") {\n            silent = true;\n        } else {\n            silent = false;\n        }\n\n        if (silent && this.savedData === JSON.stringify(data)) {\n            this.setState({saving: \"saved\"});\n            return\n        }\n\n        this.setState({saving: \"saving\"});\n        this.savedData = JSON.stringify(data);\n        let component = this;\n        //TODO: Validate Data\n        Meteor.call(\"campaigns-save\", data, function (err, res) {\n            if (err) {\n                if (err.error === 500) {\n                    err.error = \"Failed to create post.\";\n                }\n                //console.log(\"ERROR\",err);\n                notie.alert(3, err.reason || err.error, 3);\n                return\n            }\n            component.setState({saving: \"saved\"});\n            if (!silent) {\n                notie.alert(1, I18n.t(getTranslation(\"saved\")), 3);\n            }\n            //console.log(\"SERVER_SAVE_POSTS_RESPONSE\",res);\n        });\n    }\n\n    render() {\n        let {invitesCampaign, teamAttacksOwn, accounts, history, refetch, accountsOwnSearch, campaign} = this.props;\n        return (\n            <div>\n                {this.props.loading ? <Loading/> :\n                    <EditCampaign initialValues={campaign}\n                                  ownAccounts={accountsOwnSearch}\n                                  refetch={refetch}\n                                  history={history}\n                                  invitesCampaign={invitesCampaign}\n                                  teamAttacksOwn={teamAttacksOwn}\n                                  accounts={accounts}\n                                  onSubmit={this.saveCampaign}/>}\n                <Saving state={this.state.saving}/>\n            </div>\n        )\n    }\n}\n\nconst QUERY = gql`\n    query ($_id: String!,  $query: String!){\n        campaign(_id:$_id){\n            _id,\n            owner {\n                _id,\n                profile{\n                    name,\n                    lastName,\n                    avatar\n                }\n            },\n            manager {\n                _id,\n                profile{\n                    name,\n                    lastName,\n                    avatar\n                }\n            },\n            shares {\n                _id,\n                profile{\n                    name,\n                    lastName,\n                    avatar\n                }\n            },\n            information {\n                brands{\n                    _id,\n                    network,\n                    information{\n                        name,\n                        lastName,\n                        avatar\n                    }\n                }\n                profile\n                cover\n                name\n                conquer\n                dateStart\n                dateEnd\n                description\n                url\n                objectives {\n                    increaseFollowers,\n                    increaseViews,\n                    increaseShares,\n                    increaseEngagement,\n                    increaseLikes,\n                    increaseTrafficHours,\n                    reachNewMarkets,\n                    increaseSpeaking,\n                    increasePlays,\n                    increaseWebsiteTraffic,\n                    positionTarget,\n                    keepTarget,\n                    presence,\n                    positionNewMarkets,\n                },\n            },\n            messages {\n                _id\n                message\n                hashtags\n                media\n            },\n            gallery {\n                images{\n                    name,\n                    content\n                },\n                videos{\n                    name,\n                    content\n                }\n            }\n        }\n        accountsOwnSearch(query:$query){\n            _id,\n            network,\n            information{\n                name,\n                lastName,\n                avatar,\n                birthDate,\n                country,\n                gender\n            }\n        }\n        invitesCampaign(campaignID: $_id){\n            _id,\n            type,\n            status,\n            deadline,\n            budget,\n            useHashtag,\n            invitesAvailable,\n            networks{\n                facebook,\n                twitter,\n                instagram\n            }\n            options{\n                message,\n                media,\n                date,\n                quantity\n            },\n            influencers {\n                _id\n                network\n                information{\n                    name,\n                    lastName,\n                    avatar\n                }\n            },\n            teamAttacks{\n              name,\n              _id,\n              members{\n                 _id\n                network\n                information{\n                    name,\n                    lastName,\n                    avatar\n                }\n                pricing{\n                    post\n                    share\n                    partnership\n                    ambassador,\n                    profilePicture,\n                    coverPhoto,\n                    noPostHour,\n                    noPostDay,\n                }\n              }\n            }\n        }\n        accounts{\n            _id,\n            network,\n            information{\n                name,\n                lastName,\n                avatar\n            },\n        }\n        teamAttacksOwn{\n            _id,\n            owner {\n                _id\n            },\n            members {\n                _id,\n                network,\n                information{\n                    name,\n                    lastName,\n                    avatar,\n                    birthDate,\n                    country,\n                    gender\n                }\n                pricing{\n                    post\n                    share\n                    partnership\n                    ambassador,\n                    profilePicture,\n                    coverPhoto,\n                    noPostHour,\n                    noPostDay,\n                }\n            },\n            name,\n            type\n        }\n    }\n`;\n\nconst withData = graphql(QUERY, {\n    props: ({data: {error, loading, campaign, accountsOwnSearch, invitesCampaign, teamAttacksOwn, accounts, refetch}}) => {\n        //console.log(\"CAMPAIGN_EDIT_CONTAINER\",error,campaign);\n        if (loading) return {loading: true};\n        if (error) return {hasErrors: true};\n        return {\n            loading,\n            campaign,\n            accountsOwnSearch,\n            invitesCampaign,\n            teamAttacksOwn,\n            accounts,\n            refetch,\n        };\n    },\n    options: (ownProps) => (\n        {\n            variables: {\n                _id: ownProps.params.campaignID,\n                query: \"\"\n            }\n        }\n    ),\n});\n\nconst EditContainerWithData = withData(EditContainer);\n\nexport default connect(state => {\n    return {\n        form: state.form[\"campaign-edit\"]\n    }\n})(EditContainerWithData)\n"]},"sourceType":"script","hash":"f75cc0bda788f7d77e355def4f93f7b389f8db2f"}
