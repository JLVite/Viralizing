{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/core/server/users/onLogin.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"imports/modules/core/server/users/onLogin.jsx","filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/core/server/users/onLogin.jsx","passPerPreset":false,"envName":"development","cwd":"/home/blackstoneteam/repos/viralizing-web/app","root":"/home/blackstoneteam/repos/viralizing-web/app","presets":[],"generatorOpts":{"filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/core/server/users/onLogin.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/modules/core/server/users/onLogin.jsx"}},"code":"let Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Accounts;\nmodule.watch(require(\"meteor/accounts-base\"), {\n  Accounts(v) {\n    Accounts = v;\n  }\n\n}, 1);\nlet Schema;\nmodule.watch(require(\"./schema\"), {\n  default(v) {\n    Schema = v;\n  }\n\n}, 2);\nlet md5;\nmodule.watch(require(\"md5\"), {\n  default(v) {\n    md5 = v;\n  }\n\n}, 3);\nAccounts.onLogin(function (loginObj) {\n  let currentUser = loginObj.user;\n  let dbUser = Meteor.users.findOne({\n    _id: currentUser._id\n  });\n  let currentProfile = currentUser.profile;\n  let profile = Object.assign({}, Schema.profile, currentProfile);\n  profile.lastSeen = new Date();\n\n  if (!profile.avatar) {\n    profile.avatar = \"https://www.gravatar.com/avatar/\" + md5(currentUser.emails[0].address);\n  }\n\n  if (loginObj.type === \"resume\") {\n    if (profile.loginCount) {\n      profile.loginCount++;\n    } else {\n      profile.loginCount = 1;\n    }\n  }\n\n  let user = Object.assign({}, Schema, dbUser, {\n    profile\n  });\n  Meteor.users.update(user._id, user);\n  return true;\n});","map":{"version":3,"sources":["imports/modules/core/server/users/onLogin.jsx"],"names":["Meteor","module","watch","require","v","Accounts","Schema","default","md5","onLogin","loginObj","currentUser","user","dbUser","users","findOne","_id","currentProfile","profile","Object","assign","lastSeen","Date","avatar","emails","address","type","loginCount","update"],"mappings":"AAAA,IAAIA,MAAJ;AAAWC,OAAOC,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACH,SAAOI,CAAP,EAAS;AAACJ,aAAOI,CAAP;AAAS;;AAApB,CAAtC,EAA4D,CAA5D;AAA+D,IAAIC,QAAJ;AAAaJ,OAAOC,KAAP,CAAaC,QAAQ,sBAAR,CAAb,EAA6C;AAACE,WAASD,CAAT,EAAW;AAACC,eAASD,CAAT;AAAW;;AAAxB,CAA7C,EAAuE,CAAvE;AAA0E,IAAIE,MAAJ;AAAWL,OAAOC,KAAP,CAAaC,QAAQ,UAAR,CAAb,EAAiC;AAACI,UAAQH,CAAR,EAAU;AAACE,aAAOF,CAAP;AAAS;;AAArB,CAAjC,EAAwD,CAAxD;AAA2D,IAAII,GAAJ;AAAQP,OAAOC,KAAP,CAAaC,QAAQ,KAAR,CAAb,EAA4B;AAACI,UAAQH,CAAR,EAAU;AAACI,UAAIJ,CAAJ;AAAM;;AAAlB,CAA5B,EAAgD,CAAhD;AAM/OC,SAASI,OAAT,CAAiB,UAAUC,QAAV,EAAoB;AAEjC,MAAIC,cAAcD,SAASE,IAA3B;AACA,MAAIC,SAAOb,OAAOc,KAAP,CAAaC,OAAb,CAAqB;AAACC,SAAIL,YAAYK;AAAjB,GAArB,CAAX;AACA,MAAIC,iBAAiBN,YAAYO,OAAjC;AAGA,MAAIA,UAAUC,OAAOC,MAAP,CAAc,EAAd,EAAkBd,OAAOY,OAAzB,EAAkCD,cAAlC,CAAd;AACAC,UAAQG,QAAR,GAAmB,IAAIC,IAAJ,EAAnB;;AAEA,MAAI,CAACJ,QAAQK,MAAb,EAAqB;AACjBL,YAAQK,MAAR,GAAiB,qCAAqCf,IAAIG,YAAYa,MAAZ,CAAmB,CAAnB,EAAsBC,OAA1B,CAAtD;AACH;;AAED,MAAGf,SAASgB,IAAT,KAAgB,QAAnB,EAA4B;AACxB,QAAIR,QAAQS,UAAZ,EAAwB;AACpBT,cAAQS,UAAR;AACH,KAFD,MAEO;AACHT,cAAQS,UAAR,GAAqB,CAArB;AACH;AACJ;;AAED,MAAIf,OAAOO,OAAOC,MAAP,CAAc,EAAd,EAAkBd,MAAlB,EAA0BO,MAA1B,EAAkC;AAACK;AAAD,GAAlC,CAAX;AAEAlB,SAAOc,KAAP,CAAac,MAAb,CAAoBhB,KAAKI,GAAzB,EAA8BJ,IAA9B;AAEA,SAAO,IAAP;AACH,CA3BD","sourcesContent":["import {Meteor} from \"meteor/meteor\";\nimport {Accounts} from \"meteor/accounts-base\";\nimport Schema from \"./schema\";\nimport md5 from \"md5\";\n\n\nAccounts.onLogin(function (loginObj) {\n\n    let currentUser = loginObj.user;\n    let dbUser=Meteor.users.findOne({_id:currentUser._id});\n    let currentProfile = currentUser.profile;\n\n\n    let profile = Object.assign({}, Schema.profile, currentProfile);\n    profile.lastSeen = new Date();\n\n    if (!profile.avatar) {\n        profile.avatar = \"https://www.gravatar.com/avatar/\" + md5(currentUser.emails[0].address);\n    }\n\n    if(loginObj.type===\"resume\"){\n        if (profile.loginCount) {\n            profile.loginCount++;\n        } else {\n            profile.loginCount = 1;\n        }\n    }\n\n    let user = Object.assign({}, Schema, dbUser, {profile});\n\n    Meteor.users.update(user._id, user);\n\n    return true\n});"]},"sourceType":"script","hash":"ade7d5c6c6a53da13c8b81bb99d3643bc1f708b1"}
