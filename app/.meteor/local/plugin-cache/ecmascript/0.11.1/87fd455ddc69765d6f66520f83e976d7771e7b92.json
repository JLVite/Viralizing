{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/teamattack/ui/containers/edit.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"imports/modules/teamattack/ui/containers/edit.jsx","filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/teamattack/ui/containers/edit.jsx","passPerPreset":false,"envName":"development","cwd":"/home/blackstoneteam/repos/viralizing-web/app","root":"/home/blackstoneteam/repos/viralizing-web/app","presets":[],"generatorOpts":{"filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/teamattack/ui/containers/edit.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/modules/teamattack/ui/containers/edit.jsx"}},"code":"let React;\nmodule.watch(require(\"react\"), {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet graphql;\nmodule.watch(require(\"react-apollo\"), {\n  graphql(v) {\n    graphql = v;\n  }\n\n}, 1);\nlet connect;\nmodule.watch(require(\"react-redux\"), {\n  connect(v) {\n    connect = v;\n  }\n\n}, 2);\nlet Loading;\nmodule.watch(require(\"../../../core/ui/components/loading\"), {\n  default(v) {\n    Loading = v;\n  }\n\n}, 3);\nlet Saving;\nmodule.watch(require(\"../../../core/ui/components/saving\"), {\n  default(v) {\n    Saving = v;\n  }\n\n}, 4);\nlet EditTeamAttack;\nmodule.watch(require(\"../layouts/edit\"), {\n  default(v) {\n    EditTeamAttack = v;\n  }\n\n}, 5);\nlet createContainer;\nmodule.watch(require(\"meteor/react-meteor-data\"), {\n  createContainer(v) {\n    createContainer = v;\n  }\n\n}, 6);\nlet gql;\nmodule.watch(require(\"graphql-tag\"), {\n  default(v) {\n    gql = v;\n  }\n\n}, 7);\nlet notie;\nmodule.watch(require(\"notie\"), {\n  default(v) {\n    notie = v;\n  }\n\n}, 8);\nlet I18n;\nmodule.watch(require(\"react-redux-i18n\"), {\n  I18n(v) {\n    I18n = v;\n  }\n\n}, 9);\n\nlet getTranslation = key => {\n  return \"Campaigns.edit.messages.\" + key;\n};\n\nclass EditContainer extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      saving: \"saved\"\n    };\n    this.saveCampaign = this.saveCampaign.bind(this);\n  }\n\n  componentDidMount() {\n    this.savedData = JSON.stringify(this.props.teamAttack);\n    let component = this;\n    this.saveInterval = setInterval(function () {\n      if (component.props.form && component.props.form.values) {\n        component.saveCampaign(component.props.form.values, true);\n      }\n    }, 5000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.saveInterval);\n  }\n\n  saveCampaign(data, silent) {\n    if (silent && typeof silent === \"boolean\") {\n      silent = true;\n    } else {\n      silent = false;\n    }\n\n    if (silent && this.savedData === JSON.stringify(data)) {\n      this.setState({\n        saving: \"saved\"\n      });\n      return;\n    }\n\n    this.setState({\n      saving: \"saving\"\n    });\n    this.savedData = JSON.stringify(data);\n    let component = this;\n    Meteor.call(\"teamAttack-save\", data, function (err, res) {\n      if (err) {\n        if (err.error === 500) {\n          err.error = \"Failed to create post.\";\n        }\n\n        console.log(\"ERROR\", err);\n        notie.alert(3, err.reason || err.error, 3);\n        return;\n      }\n\n      component.setState({\n        saving: \"saved\"\n      });\n\n      if (!silent) {\n        notie.alert(1, I18n.t(getTranslation(\"saved\")), 3);\n      } //console.log(\"SERVER_SAVE_POSTS_RESPONSE\",res);\n\n    });\n  }\n\n  render() {\n    let {\n      teamAttack,\n      teamAttacksOwn,\n      loading,\n      history,\n      refetch\n    } = this.props;\n    teamAttacksOwn = teamAttacksOwn || [];\n    let teamAttacks = teamAttacksOwn.filter(t => t.id !== teamAttack._id);\n    return React.createElement(\"div\", null, loading ? React.createElement(Loading, null) : React.createElement(EditTeamAttack, {\n      initialValues: teamAttack,\n      refetch: refetch,\n      history: history,\n      teamAttacks: teamAttacks,\n      onSubmit: this.saveCampaign\n    }), React.createElement(Saving, {\n      state: this.state.saving\n    }));\n  }\n\n}\n\nconst QUERY = gql`\n    query ($_id: String!){\n        teamAttack(_id:$_id){\n            _id,\n            name,\n            type,\n            owner {\n                _id\n            },\n            members {\n                _id\n                suspended\n                type\n                active\n                delete\n                network\n                groups\n                campaignsCount\n            }\n        }\n        teamAttacksOwn{\n            _id,\n            owner {\n                _id\n            },\n            members {\n                _id,\n                network,\n                information{\n                    name,\n                    lastName,\n                    avatar,\n                    birthDate,\n                    country,\n                    gender\n                }\n            },\n            name,\n            type\n        }\n    }\n`;\nconst withData = graphql(QUERY, {\n  props: ({\n    data: {\n      error,\n      loading,\n      teamAttack,\n      teamAttacksOwn,\n      refetch\n    }\n  }) => {\n    //console.log(\"TA_ERROR\",error);\n    if (loading) return {\n      loading: true\n    };\n    if (error) return {\n      hasErrors: true\n    };\n    return {\n      loading,\n      teamAttack,\n      teamAttacksOwn,\n      refetch\n    };\n  },\n  options: ownProps => ({\n    variables: {\n      _id: ownProps.params.teamAttackID,\n      query: \"\"\n    }\n  })\n});\nconst EditContainerWithData = withData(EditContainer);\nmodule.exportDefault(connect(state => {\n  return {\n    form: state.form[\"teamAttack-edit\"]\n  };\n})(EditContainerWithData));","map":{"version":3,"sources":["imports/modules/teamattack/ui/containers/edit.jsx"],"names":["React","module","watch","require","default","v","graphql","connect","Loading","Saving","EditTeamAttack","createContainer","gql","notie","I18n","getTranslation","key","EditContainer","Component","constructor","state","saving","saveCampaign","bind","componentDidMount","savedData","JSON","stringify","props","teamAttack","component","saveInterval","setInterval","form","values","componentWillUnmount","clearInterval","data","silent","setState","Meteor","call","err","res","error","console","log","alert","reason","t","render","teamAttacksOwn","loading","history","refetch","teamAttacks","filter","id","_id","QUERY","withData","hasErrors","options","ownProps","variables","params","teamAttackID","query","EditContainerWithData","exportDefault"],"mappings":"AAAA,IAAIA,KAAJ;AAAUC,OAAOC,KAAP,CAAaC,QAAQ,OAAR,CAAb,EAA8B;AAACC,UAAQC,CAAR,EAAU;AAACL,YAAMK,CAAN;AAAQ;;AAApB,CAA9B,EAAoD,CAApD;AAAuD,IAAIC,OAAJ;AAAYL,OAAOC,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACG,UAAQD,CAAR,EAAU;AAACC,cAAQD,CAAR;AAAU;;AAAtB,CAArC,EAA6D,CAA7D;AAAgE,IAAIE,OAAJ;AAAYN,OAAOC,KAAP,CAAaC,QAAQ,aAAR,CAAb,EAAoC;AAACI,UAAQF,CAAR,EAAU;AAACE,cAAQF,CAAR;AAAU;;AAAtB,CAApC,EAA4D,CAA5D;AAA+D,IAAIG,OAAJ;AAAYP,OAAOC,KAAP,CAAaC,QAAQ,qCAAR,CAAb,EAA4D;AAACC,UAAQC,CAAR,EAAU;AAACG,cAAQH,CAAR;AAAU;;AAAtB,CAA5D,EAAoF,CAApF;AAAuF,IAAII,MAAJ;AAAWR,OAAOC,KAAP,CAAaC,QAAQ,oCAAR,CAAb,EAA2D;AAACC,UAAQC,CAAR,EAAU;AAACI,aAAOJ,CAAP;AAAS;;AAArB,CAA3D,EAAkF,CAAlF;AAAqF,IAAIK,cAAJ;AAAmBT,OAAOC,KAAP,CAAaC,QAAQ,iBAAR,CAAb,EAAwC;AAACC,UAAQC,CAAR,EAAU;AAACK,qBAAeL,CAAf;AAAiB;;AAA7B,CAAxC,EAAuE,CAAvE;AAA0E,IAAIM,eAAJ;AAAoBV,OAAOC,KAAP,CAAaC,QAAQ,0BAAR,CAAb,EAAiD;AAACQ,kBAAgBN,CAAhB,EAAkB;AAACM,sBAAgBN,CAAhB;AAAkB;;AAAtC,CAAjD,EAAyF,CAAzF;AAA4F,IAAIO,GAAJ;AAAQX,OAAOC,KAAP,CAAaC,QAAQ,aAAR,CAAb,EAAoC;AAACC,UAAQC,CAAR,EAAU;AAACO,UAAIP,CAAJ;AAAM;;AAAlB,CAApC,EAAwD,CAAxD;AAA2D,IAAIQ,KAAJ;AAAUZ,OAAOC,KAAP,CAAaC,QAAQ,OAAR,CAAb,EAA8B;AAACC,UAAQC,CAAR,EAAU;AAACQ,YAAMR,CAAN;AAAQ;;AAApB,CAA9B,EAAoD,CAApD;AAAuD,IAAIS,IAAJ;AAASb,OAAOC,KAAP,CAAaC,QAAQ,kBAAR,CAAb,EAAyC;AAACW,OAAKT,CAAL,EAAO;AAACS,WAAKT,CAAL;AAAO;;AAAhB,CAAzC,EAA2D,CAA3D;;AAWrvB,IAAIU,iBAAgBC,GAAD,IAAO;AACtB,SAAO,6BAA2BA,GAAlC;AACH,CAFD;;AAIA,MAAMC,aAAN,SAA4BjB,MAAMkB,SAAlC,CAA4C;AACxCC,gBAAc;AACV;AAEA,SAAKC,KAAL,GAAa;AACTC,cAAQ;AADC,KAAb;AAIA,SAAKC,YAAL,GAAkB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAAlB;AACH;;AACDC,sBAAoB;AAChB,SAAKC,SAAL,GAAiBC,KAAKC,SAAL,CAAe,KAAKC,KAAL,CAAWC,UAA1B,CAAjB;AACA,QAAIC,YAAY,IAAhB;AACA,SAAKC,YAAL,GAAkBC,YAAY,YAAY;AACtC,UAAIF,UAAUF,KAAV,CAAgBK,IAAhB,IAAwBH,UAAUF,KAAV,CAAgBK,IAAhB,CAAqBC,MAAjD,EAAyD;AACrDJ,kBAAUR,YAAV,CAAuBQ,UAAUF,KAAV,CAAgBK,IAAhB,CAAqBC,MAA5C,EAAoD,IAApD;AACH;AACJ,KAJiB,EAIf,IAJe,CAAlB;AAKH;;AACDC,yBAAsB;AAClBC,kBAAc,KAAKL,YAAnB;AACH;;AACDT,eAAae,IAAb,EAAmBC,MAAnB,EAA0B;AACtB,QAAGA,UAAU,OAAOA,MAAP,KAAmB,SAAhC,EAA2C;AACvCA,eAAS,IAAT;AACH,KAFD,MAEO;AACHA,eAAS,KAAT;AACH;;AAED,QAAIA,UAAU,KAAKb,SAAL,KAAmBC,KAAKC,SAAL,CAAeU,IAAf,CAAjC,EAAuD;AACnD,WAAKE,QAAL,CAAc;AAAClB,gBAAQ;AAAT,OAAd;AACA;AACH;;AAED,SAAKkB,QAAL,CAAc;AAAClB,cAAQ;AAAT,KAAd;AACA,SAAKI,SAAL,GAAiBC,KAAKC,SAAL,CAAeU,IAAf,CAAjB;AACA,QAAIP,YAAU,IAAd;AAEAU,WAAOC,IAAP,CAAY,iBAAZ,EAA8BJ,IAA9B,EAAmC,UAASK,GAAT,EAAaC,GAAb,EAAiB;AAChD,UAAGD,GAAH,EAAO;AACH,YAAGA,IAAIE,KAAJ,KAAY,GAAf,EAAmB;AACfF,cAAIE,KAAJ,GAAY,wBAAZ;AACH;;AACDC,gBAAQC,GAAR,CAAY,OAAZ,EAAoBJ,GAApB;AACA7B,cAAMkC,KAAN,CAAY,CAAZ,EAAcL,IAAIM,MAAJ,IAAYN,IAAIE,KAA9B,EAAoC,CAApC;AACA;AACH;;AACDd,gBAAUS,QAAV,CAAmB;AAAClB,gBAAQ;AAAT,OAAnB;;AACA,UAAI,CAACiB,MAAL,EAAa;AACTzB,cAAMkC,KAAN,CAAY,CAAZ,EAAcjC,KAAKmC,CAAL,CAAOlC,eAAe,OAAf,CAAP,CAAd,EAA8C,CAA9C;AACH,OAZ+C,CAahD;;AACH,KAdD;AAeH;;AACDmC,WAAS;AACL,QAAI;AAACrB,gBAAD;AAAYsB,oBAAZ;AAA4BC,aAA5B;AAAqCC,aAArC;AAA8CC;AAA9C,QAAuD,KAAK1B,KAAhE;AACAuB,qBAAeA,kBAAgB,EAA/B;AACA,QAAII,cAAYJ,eAAeK,MAAf,CAAsBP,KAAGA,EAAEQ,EAAF,KAAO5B,WAAW6B,GAA3C,CAAhB;AACA,WACI,iCACKN,UAAU,oBAAC,OAAD,OAAV,GACG,oBAAC,cAAD;AAAgB,qBAAevB,UAA/B;AACgB,eAASyB,OADzB;AAEgB,eAASD,OAFzB;AAGgB,mBAAaE,WAH7B;AAIgB,gBAAU,KAAKjC;AAJ/B,MAFR,EAOI,oBAAC,MAAD;AAAQ,aAAO,KAAKF,KAAL,CAAWC;AAA1B,MAPJ,CADJ;AAWH;;AArEuC;;AAwE5C,MAAMsC,QAAQ/C,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAlB;AA2CA,MAAMgD,WAAWtD,QAAQqD,KAAR,EAAe;AAC5B/B,SAAO,CAAC;AAACS,UAAM;AAACO,WAAD;AAAQQ,aAAR;AAAiBvB,gBAAjB;AAA6BsB,oBAA7B;AAA6CG;AAA7C;AAAP,GAAD,KAAmE;AACtE;AACA,QAAIF,OAAJ,EAAa,OAAO;AAACA,eAAS;AAAV,KAAP;AACb,QAAIR,KAAJ,EAAW,OAAO;AAACiB,iBAAW;AAAZ,KAAP;AACX,WAAO;AACHT,aADG;AAEHvB,gBAFG;AAGHsB,oBAHG;AAIHG;AAJG,KAAP;AAMH,GAX2B;AAY5BQ,WAAUC,QAAD,KACL;AACIC,eAAW;AACPN,WAAKK,SAASE,MAAT,CAAgBC,YADd;AAEPC,aAAM;AAFC;AADf,GADK;AAZmB,CAAf,CAAjB;AAsBA,MAAMC,wBAAwBR,SAAS3C,aAAT,CAA9B;AAxJAhB,OAAOoE,aAAP,CA0Je9D,QAAQa,SAAS;AAC5B,SAAO;AACHa,UAAMb,MAAMa,IAAN,CAAW,iBAAX;AADH,GAAP;AAGH,CAJc,EAIZmC,qBAJY,CA1Jf","sourcesContent":["import React from \"react\";\nimport {graphql} from \"react-apollo\";\nimport {connect} from \"react-redux\";\nimport Loading from \"../../../core/ui/components/loading\";\nimport Saving from \"../../../core/ui/components/saving\";\nimport EditTeamAttack from \"../layouts/edit\";\nimport {createContainer} from \"meteor/react-meteor-data\";\nimport gql from \"graphql-tag\";\nimport notie from \"notie\";\nimport { I18n } from \"react-redux-i18n\";\n\nlet getTranslation=(key)=>{\n    return \"Campaigns.edit.messages.\"+key;\n};\n\nclass EditContainer extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            saving: \"saved\"\n        };\n\n        this.saveCampaign=this.saveCampaign.bind(this);\n    }\n    componentDidMount() {\n        this.savedData = JSON.stringify(this.props.teamAttack);\n        let component = this;\n        this.saveInterval=setInterval(function () {\n            if (component.props.form && component.props.form.values) {\n                component.saveCampaign(component.props.form.values, true);\n            }\n        }, 5000);\n    }\n    componentWillUnmount(){\n        clearInterval(this.saveInterval);\n    }\n    saveCampaign(data, silent){\n        if(silent && typeof(silent) === \"boolean\") {\n            silent = true;\n        } else {\n            silent = false;\n        }\n\n        if (silent && this.savedData === JSON.stringify(data)) {\n            this.setState({saving: \"saved\"});\n            return\n        }\n\n        this.setState({saving: \"saving\"});\n        this.savedData = JSON.stringify(data);\n        let component=this;\n\n        Meteor.call(\"teamAttack-save\",data,function(err,res){\n            if(err){\n                if(err.error===500){\n                    err.error = \"Failed to create post.\";\n                }\n                console.log(\"ERROR\",err);\n                notie.alert(3,err.reason||err.error,3);\n                return\n            }\n            component.setState({saving: \"saved\"});\n            if (!silent) {\n                notie.alert(1,I18n.t(getTranslation(\"saved\")),3);\n            }\n            //console.log(\"SERVER_SAVE_POSTS_RESPONSE\",res);\n        });\n    }\n    render() {\n        let {teamAttack,teamAttacksOwn, loading, history, refetch}=this.props;\n        teamAttacksOwn=teamAttacksOwn||[];\n        let teamAttacks=teamAttacksOwn.filter(t=>t.id!==teamAttack._id);\n        return (\n            <div>\n                {loading ? <Loading/> :\n                    <EditTeamAttack initialValues={teamAttack}\n                                    refetch={refetch}\n                                    history={history}\n                                    teamAttacks={teamAttacks}\n                                    onSubmit={this.saveCampaign}/>}\n                <Saving state={this.state.saving}/>\n            </div>\n        )\n    }\n}\n\nconst QUERY = gql`\n    query ($_id: String!){\n        teamAttack(_id:$_id){\n            _id,\n            name,\n            type,\n            owner {\n                _id\n            },\n            members {\n                _id\n                suspended\n                type\n                active\n                delete\n                network\n                groups\n                campaignsCount\n            }\n        }\n        teamAttacksOwn{\n            _id,\n            owner {\n                _id\n            },\n            members {\n                _id,\n                network,\n                information{\n                    name,\n                    lastName,\n                    avatar,\n                    birthDate,\n                    country,\n                    gender\n                }\n            },\n            name,\n            type\n        }\n    }\n`;\n\nconst withData = graphql(QUERY, {\n    props: ({data: {error, loading, teamAttack, teamAttacksOwn, refetch}}) => {\n        //console.log(\"TA_ERROR\",error);\n        if (loading) return {loading: true};\n        if (error) return {hasErrors: true};\n        return {\n            loading,\n            teamAttack,\n            teamAttacksOwn,\n            refetch,\n        };\n    },\n    options: (ownProps) => (\n        {\n            variables: {\n                _id: ownProps.params.teamAttackID,\n                query:\"\"\n            }\n        }\n    ),\n});\n\nconst EditContainerWithData = withData(EditContainer);\n\nexport default connect(state => {\n    return {\n        form: state.form[\"teamAttack-edit\"]\n    }\n})(EditContainerWithData)"]},"sourceType":"script","hash":"87fd455ddc69765d6f66520f83e976d7771e7b92"}
