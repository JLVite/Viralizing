{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/core/ui/components/auth-form.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"imports/modules/core/ui/components/auth-form.jsx","filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/core/ui/components/auth-form.jsx","passPerPreset":false,"envName":"development","cwd":"/home/blackstoneteam/repos/viralizing-web/app","root":"/home/blackstoneteam/repos/viralizing-web/app","presets":[],"generatorOpts":{"filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/core/ui/components/auth-form.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/modules/core/ui/components/auth-form.jsx"}},"code":"let React;\nmodule.watch(require(\"react\"), {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet Link;\nmodule.watch(require(\"react-router\"), {\n  Link(v) {\n    Link = v;\n  }\n\n}, 1);\nlet CookieName;\nmodule.watch(require(\"../../settings\"), {\n  CookieName(v) {\n    CookieName = v;\n  }\n\n}, 2);\nlet Button;\nmodule.watch(require(\"react-router-bootstrap\"), {\n  Button(v) {\n    Button = v;\n  }\n\n}, 3);\nlet IconFacebook, IconTwitter, IconGoogle;\nmodule.watch(require(\"../components/social-icons\"), {\n  IconFacebook(v) {\n    IconFacebook = v;\n  },\n\n  IconTwitter(v) {\n    IconTwitter = v;\n  },\n\n  IconGoogle(v) {\n    IconGoogle = v;\n  }\n\n}, 4);\nlet notie;\nmodule.watch(require(\"notie\"), {\n  default(v) {\n    notie = v;\n  }\n\n}, 5);\nlet AppSettings;\nmodule.watch(require(\"../../../../settings\"), {\n  default(v) {\n    AppSettings = v;\n  }\n\n}, 6);\nlet Translate, I18n;\nmodule.watch(require(\"react-redux-i18n\"), {\n  Translate(v) {\n    Translate = v;\n  },\n\n  I18n(v) {\n    I18n = v;\n  }\n\n}, 7);\nlet SocialShare;\nmodule.watch(require(\"../../../core/ui/components/social-share\"), {\n  SocialShare(v) {\n    SocialShare = v;\n  }\n\n}, 8);\nlet AppLogo;\nmodule.watch(require(\"../../../core/ui/components/logo\"), {\n  default(v) {\n    AppLogo = v;\n  }\n\n}, 9);\nlet IntMenu;\nmodule.watch(require(\"../components/nav-bar/int-menu\"), {\n  default(v) {\n    IntMenu = v;\n  }\n\n}, 10);\n\nlet getTranslation = key => {\n  return \"Core.auth.\" + key;\n};\n\nclass AuthForm extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      email: null,\n      password: null,\n      rememberMe: false\n    };\n    this.getButtonText = this.getButtonText.bind(this);\n    this.getSocialLogin = this.getSocialLogin.bind(this);\n    this.accountsRegister = this.accountsRegister.bind(this);\n    this.accountsLogin = this.accountsLogin.bind(this);\n    this.accountsRestore = this.accountsRestore.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.loginWith = this.loginWith.bind(this);\n    this.updateValue = this.updateValue.bind(this);\n  }\n\n  updateValue(key) {\n    let component = this;\n    return function (e) {\n      let val = e.target.value;\n      let newState = Object.assign({}, component.state);\n      if (typeof val === 'string') val = val.trim();\n      newState[key] = val;\n      component.setState(newState);\n    };\n  }\n\n  getButtonText(action) {\n    let value = \"\";\n\n    switch (action) {\n      case \"login\":\n        value = React.createElement(Translate, {\n          value: getTranslation(action + \".button\")\n        });\n        break;\n\n      case \"restore\":\n        value = React.createElement(Translate, {\n          value: getTranslation(action + \".button\")\n        });\n        break;\n\n      case \"register\":\n        value = React.createElement(Translate, {\n          value: getTranslation(action + \".button\")\n        });\n        break;\n\n      case \"recover\":\n        value = React.createElement(Translate, {\n          value: getTranslation(action + \".button\")\n        });\n        break;\n\n      default:\n        value = React.createElement(Translate, {\n          value: getTranslation(\"login.button\")\n        });\n    }\n\n    return value;\n  }\n\n  loginWith(service) {\n    return function () {\n      //console.log(\"Login with,\",service);\n      switch (service) {\n        case \"facebook\":\n          Meteor.loginWithFacebook({\n            requestPermissions: ['public_profile', 'email']\n          }, function (err, res) {\n            //console.log(service+\" Login\",arguments);\n            if (err && err.reason && err.reason === \"Email already exists.\") {\n              notie.alert(3, \"Account already exists with Email credentials\", 5);\n              return;\n            }\n\n            console.debug(\"Social Login Res:\", res);\n          });\n          break;\n\n        case \"twitter\":\n          Meteor.loginWithTwitter({}, function (err, res) {\n            //console.log(service+\" Login\",arguments);\n            if (err && err.reason && err.reason === \"Email already exists.\") {\n              notie.alert(3, \"Account already exists with Email credentials\", 5);\n              return;\n            }\n\n            console.debug(\"Social Login Res:\", res);\n          });\n          break;\n\n        case \"google\":\n          Meteor.loginWithGoogle({}, function (err, res) {\n            // console.log(service+\" Login\",arguments);\n            if (err && err.reason && err.reason === \"Email already exists.\") {\n              notie.alert(3, \"Account already exists with Email credentials\", 5);\n              return;\n            }\n\n            console.debug(\"Social Login Res:\", res);\n          });\n          break;\n\n        case \"instagram\":\n          Meteor.loginWithInstagram({}, function (err, res) {\n            //console.log(service+\" Login\",arguments);\n            if (err && err.reason && err.reason === \"Email already exists.\") {\n              notie.alert(3, \"Account already exists with Email credentials\", 5);\n              return;\n            }\n\n            console.debug(\"Social Login Res:\", res);\n          });\n          break;\n\n        default:\n          console.error(\"Login with \" + service + \" is not available\");\n      }\n    };\n  }\n\n  getSocialLogin(action) {\n    if (action === \"login\") {\n      //console.log(\"GET_SOCIAL_LOGIN\", this.loginWith);\n      return React.createElement(\"div\", {\n        className: \"social-login\"\n      }, React.createElement(SocialShare, {\n        loginWith: this.loginWith,\n        message: React.createElement(Translate, {\n          value: getTranslation(\"labels.or\")\n        })\n      }));\n    }\n\n    return \"\";\n  }\n\n  accountsRegister(email, password) {\n    //console.log(\"register\");\n    let self = this;\n    Meteor.call('users_create_account', email, password, \"Plan\", \"Source\", function (err, res) {\n      if (err && err.reason) {\n        notie.alert(3, err.reason, 3);\n        return;\n      }\n\n      self.accountsLogin(email, password);\n    });\n  }\n\n  accountsLogin(email, password) {\n    //console.log(\"ACCOUNTS_LOGIN\", email, password);\n    Meteor.loginWithPassword(email, password, function (err, res) {\n      if (err && err.reason) {\n        notie.alert(3, I18n.t(getTranslation(\"errors.login\")), 3);\n        return;\n      }\n    });\n  }\n\n  accountsRestore(password) {\n    if (window.localStorage.getItem(CookieName + \"_USER_DATA\")) {\n      let data = JSON.parse(window.localStorage.getItem(CookieName + \"_USER_DATA\")); //console.log(\"ACCOUNT_RESTORE\", data.email, password);\n\n      this.accountsLogin(data.email, password);\n    }\n  }\n\n  handleSubmit(e) {\n    const action = this.props.action;\n    e.preventDefault();\n    let form = this.state;\n\n    if (action !== \"restore\") {\n      if (form.rememberMe) {\n        window.localStorage.setItem(CookieName + \"_USER_DATA\", JSON.stringify({\n          active: true,\n          email: form.email\n        }));\n      } else {\n        window.localStorage.removeItem(CookieName + \"_USER_DATA\");\n      }\n    } //console.log(\"FORM_SUBMIT_DATA\", form);\n\n\n    switch (action) {\n      case \"login\":\n        this.accountsLogin(form.email, form.password);\n        break;\n\n      case \"register\":\n        this.accountsRegister(form.email, form.password);\n        break;\n\n      case \"recover\":\n        this.accountsRecover(form.email);\n        break;\n\n      case \"restore\":\n        this.accountsRestore(form.password);\n        break;\n\n      default:\n        throw new Error(\"Wrong Auth State\");\n    }\n\n    return false;\n  }\n\n  render() {\n    const {\n      action\n    } = this.props;\n    let user = {\n      avatar: null,\n      name: null\n    };\n\n    if (window.localStorage.getItem(CookieName + \"_USER_DATA\")) {\n      user = JSON.parse(window.localStorage.getItem(CookieName + \"_USER_DATA\"));\n    }\n\n    const emailInput = React.createElement(\"div\", {\n      className: \"form-group\"\n    }, React.createElement(\"label\", {\n      className: \"sr-only\",\n      htmlFor: \"inputEmail\"\n    }, I18n.t(getTranslation(\"labels.email\"))), React.createElement(\"input\", {\n      type: \"email\",\n      className: \"form-control\",\n      id: \"inputEmail\",\n      placeholder: I18n.t(getTranslation(\"labels.email\")),\n      onChange: this.updateValue('email'),\n      name: \"Email\"\n    }));\n    let passwordInput = React.createElement(\"div\", {\n      className: \"form-group\"\n    }, React.createElement(\"label\", {\n      className: \"sr-only\",\n      htmlFor: \"inputPassword\"\n    }, I18n.t(getTranslation(\"labels.password\"))), React.createElement(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      id: \"inputPassword\",\n      placeholder: I18n.t(getTranslation(\"labels.password\")),\n      onChange: this.updateValue('password'),\n      name: \"Password\"\n    }));\n    let greetingMessage = React.createElement(Translate, {\n      value: getTranslation(action + \".greeting\")\n    });\n    let extra;\n\n    switch (action) {\n      case \"login\":\n        extra = React.createElement(Link, {\n          to: \"/auth/register\"\n        }, React.createElement(Translate, {\n          value: getTranslation(\"register.button\")\n        }));\n        break;\n\n      case \"restore\":\n        extra = React.createElement(Link, {\n          to: \"/auth/login\"\n        }, React.createElement(Translate, {\n          value: getTranslation(\"restore.footer2\")\n        }));\n        break;\n\n      case \"register\":\n        extra = React.createElement(Link, {\n          to: \"/auth/login\"\n        }, React.createElement(Translate, {\n          value: getTranslation(\"login.button\")\n        }));\n        break;\n\n      case \"recover\":\n        extra = React.createElement(Link, {\n          to: \"/auth/login\"\n        }, React.createElement(Translate, {\n          value: getTranslation(\"login.button\")\n        }));\n        break;\n\n      default:\n    }\n\n    let footerMessage = React.createElement(\"div\", null, React.createElement(Translate, {\n      value: getTranslation(action + \".footer\")\n    }), extra);\n    let headerImage = React.createElement(AppLogo, {\n      alt: true\n    });\n\n    if (action === \"restore\") {\n      headerImage = React.createElement(\"img\", {\n        src: user.avatar,\n        alt: user.name | \"...\",\n        className: \"avatar\"\n      });\n      passwordInput = React.createElement(\"div\", {\n        className: \"input-group\"\n      }, React.createElement(\"input\", {\n        type: \"password\",\n        className: \"form-control\",\n        id: \"inputPassword\",\n        placeholder: I18n.t(getTranslation(\"labels.password\")),\n        onChange: this.updateValue('password'),\n        name: \"password\"\n      }), React.createElement(\"span\", {\n        className: \"input-group-btn\"\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\"\n      }, React.createElement(\"i\", {\n        className: \"icon wb-unlock\",\n        \"aria-hidden\": \"true\"\n      }), React.createElement(\"span\", {\n        className: \"sr-only\"\n      }, \"unLock\"))));\n    }\n\n    const loginHelpers = React.createElement(\"div\", {\n      className: \"form-group clearfix\"\n    }, React.createElement(\"div\", {\n      className: \"checkbox-custom checkbox-inline checkbox-primary pull-left\"\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"inputCheckbox\",\n      name: \"remember\",\n      onChange: this.updateValue('rememberMe')\n    }), React.createElement(\"label\", {\n      htmlFor: \"inputCheckbox\"\n    }, React.createElement(Translate, {\n      value: getTranslation(\"login.remember\")\n    }))), React.createElement(Link, {\n      className: \"pull-right\",\n      to: \"/auth/recover\"\n    }, React.createElement(Translate, {\n      value: getTranslation(\"recover.link\")\n    })));\n    return React.createElement(\"div\", {\n      className: \"page-content vertical-align-middle page-login\"\n    }, React.createElement(\"div\", {\n      className: \"brand\"\n    }, headerImage), React.createElement(\"p\", null, greetingMessage), React.createElement(\"form\", {\n      className: \"auth-form\",\n      onSubmit: this.handleSubmit\n    }, action !== \"restore\" ? emailInput : \"\", action !== \"recover\" ? passwordInput : \"\", action === \"login\" ? loginHelpers : \"\", action !== \"restore\" ? React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary btn-block\"\n    }, this.getButtonText(action)) : \"\", this.getSocialLogin(action), React.createElement(\"div\", {\n      className: \"footer\"\n    }, footerMessage), React.createElement(\"div\", {\n      className: \"language\"\n    }, React.createElement(IntMenu, null), React.createElement(Translate, {\n      value: getTranslation(\"labels.language\")\n    }))));\n  }\n\n}\n\nmodule.exportDefault(AuthForm);","map":{"version":3,"sources":["imports/modules/core/ui/components/auth-form.jsx"],"names":["React","module","watch","require","default","v","Link","CookieName","Button","IconFacebook","IconTwitter","IconGoogle","notie","AppSettings","Translate","I18n","SocialShare","AppLogo","IntMenu","getTranslation","key","AuthForm","Component","constructor","state","email","password","rememberMe","getButtonText","bind","getSocialLogin","accountsRegister","accountsLogin","accountsRestore","handleSubmit","loginWith","updateValue","component","e","val","target","value","newState","Object","assign","trim","setState","action","service","Meteor","loginWithFacebook","requestPermissions","err","res","reason","alert","console","debug","loginWithTwitter","loginWithGoogle","loginWithInstagram","error","self","call","loginWithPassword","t","window","localStorage","getItem","data","JSON","parse","props","preventDefault","form","setItem","stringify","active","removeItem","accountsRecover","Error","render","user","avatar","name","emailInput","passwordInput","greetingMessage","extra","footerMessage","headerImage","loginHelpers","exportDefault"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Link} from \"react-router\";\nimport {CookieName} from \"../../settings\";\nimport {Button} from \"react-router-bootstrap\";\nimport {IconFacebook, IconTwitter, IconGoogle} from \"../components/social-icons\";\nimport notie from \"notie\";\nimport AppSettings from \"../../../../settings\";\nimport {Translate, I18n} from \"react-redux-i18n\";\nimport {SocialShare} from \"../../../core/ui/components/social-share\";\nimport AppLogo from \"../../../core/ui/components/logo\";\nimport IntMenu from \"../components/nav-bar/int-menu\";\n\nlet getTranslation = (key) => {\n    return \"Core.auth.\" + key;\n};\n\nclass AuthForm extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            email: null,\n            password: null,\n\t        rememberMe: false\n        };\n\n        this.getButtonText = this.getButtonText.bind(this);\n        this.getSocialLogin = this.getSocialLogin.bind(this);\n        this.accountsRegister = this.accountsRegister.bind(this);\n        this.accountsLogin = this.accountsLogin.bind(this);\n        this.accountsRestore = this.accountsRestore.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.loginWith=this.loginWith.bind(this);\n        this.updateValue = this.updateValue.bind(this);\n    }\n\n\tupdateValue(key){\n        let component=this;\n        return function(e){\n            let val = e.target.value;\n            let newState = Object.assign({}, component.state);\n            if(typeof (val) === 'string') val = val.trim();\n            newState[key] = val;\n            component.setState(newState);\n        };\n    }\n\n    getButtonText(action) {\n        let value = \"\";\n        switch (action) {\n            case \"login\":\n                value = <Translate value={getTranslation(action + \".button\")}/>;\n                break;\n            case \"restore\":\n                value = <Translate value={getTranslation(action + \".button\")}/>;\n                break;\n            case \"register\":\n                value = <Translate value={getTranslation(action + \".button\")}/>;\n                break;\n            case \"recover\":\n                value = <Translate value={getTranslation(action + \".button\")}/>;\n                break;\n            default:\n                value = <Translate value={getTranslation(\"login.button\")}/>\n        }\n\n        return value;\n    }\n\n    loginWith(service){\n        return function(){\n            //console.log(\"Login with,\",service);\n            switch(service) {\n                case \"facebook\":\n                    Meteor.loginWithFacebook({\n                        requestPermissions: ['public_profile', 'email']\n                    },function(err,res){\n                        //console.log(service+\" Login\",arguments);\n                        if(err && err.reason && err.reason===\"Email already exists.\"){\n                            notie.alert(3,\"Account already exists with Email credentials\",5);\n                            return;\n                        }\n\n                        console.debug(\"Social Login Res:\",res);\n                    });\n                    break;\n                case \"twitter\":\n                    Meteor.loginWithTwitter({},function(err,res){\n                        //console.log(service+\" Login\",arguments);\n                        if(err && err.reason && err.reason===\"Email already exists.\"){\n                            notie.alert(3,\"Account already exists with Email credentials\",5);\n                            return;\n                        }\n\n                        console.debug(\"Social Login Res:\",res);\n                    });\n                    break;\n                case \"google\":\n                    Meteor.loginWithGoogle({},function(err,res){\n                       // console.log(service+\" Login\",arguments);\n                        if(err && err.reason && err.reason===\"Email already exists.\"){\n                            notie.alert(3,\"Account already exists with Email credentials\",5);\n                            return;\n                        }\n\n                        console.debug(\"Social Login Res:\",res);\n                    });\n                    break;\n                case \"instagram\":\n                    Meteor.loginWithInstagram({},function(err,res){\n                        //console.log(service+\" Login\",arguments);\n                        if(err && err.reason && err.reason===\"Email already exists.\"){\n                            notie.alert(3,\"Account already exists with Email credentials\",5);\n                            return;\n                        }\n\n                        console.debug(\"Social Login Res:\",res);\n                    });\n                    break;\n\n                default:\n                    console.error(\"Login with \"+service+\" is not available\");\n            }\n        }\n    }\n\n    getSocialLogin(action) {\n        if (action === \"login\") {\n            //console.log(\"GET_SOCIAL_LOGIN\", this.loginWith);\n            return (\n                <div className=\"social-login\">\n                    <SocialShare loginWith={this.loginWith} message={<Translate value={getTranslation(\"labels.or\")}/>}/>\n                </div>\n            )\n        }\n        return \"\"\n    }\n\n    accountsRegister(email, password) {\n        //console.log(\"register\");\n        let self = this;\n        Meteor.call('users_create_account', email, password, \"Plan\", \"Source\", function (err, res) {\n            if (err && err.reason) {\n                notie.alert(3, err.reason, 3);\n                return\n            }\n            self.accountsLogin(email, password);\n        })\n\n    }\n\n    accountsLogin(email, password) {\n        //console.log(\"ACCOUNTS_LOGIN\", email, password);\n\n        Meteor.loginWithPassword(email, password, function (err, res) {\n\n            if (err && err.reason) {\n                notie.alert(3, I18n.t(getTranslation(\"errors.login\")), 3);\n\n                return;\n            }\n\n        });\n    }\n\n    accountsRestore(password) {\n        if (window.localStorage.getItem(CookieName + \"_USER_DATA\")) {\n            let data = JSON.parse(window.localStorage.getItem(CookieName + \"_USER_DATA\"));\n            //console.log(\"ACCOUNT_RESTORE\", data.email, password);\n            this.accountsLogin(data.email, password);\n        }\n    }\n\n    handleSubmit(e) {\n        const action = this.props.action;\n        e.preventDefault();\n        let form = this.state;\n\n        if (action !== \"restore\") {\n            if (form.rememberMe) {\n                window.localStorage.setItem(CookieName + \"_USER_DATA\", JSON.stringify({\n                    active: true,\n                    email: form.email\n                }));\n            } else {\n                window.localStorage.removeItem(CookieName + \"_USER_DATA\");\n            }\n        }\n\n        //console.log(\"FORM_SUBMIT_DATA\", form);\n\n\n        switch (action) {\n            case \"login\":\n                this.accountsLogin(form.email, form.password);\n                break;\n            case \"register\":\n                this.accountsRegister(form.email, form.password);\n                break;\n            case \"recover\":\n                this.accountsRecover(form.email);\n                break;\n            case \"restore\":\n                this.accountsRestore(form.password);\n                break;\n            default:\n                throw new Error(\"Wrong Auth State\");\n        }\n        return false\n    }\n\n    render() {\n        const {action} = this.props;\n        let user = {\n            avatar: null,\n            name: null\n        };\n\n        if (window.localStorage.getItem(CookieName + \"_USER_DATA\")) {\n            user = JSON.parse(window.localStorage.getItem(CookieName + \"_USER_DATA\"));\n        }\n\n        const emailInput = (\n            <div className=\"form-group\">\n                <label className=\"sr-only\" htmlFor=\"inputEmail\">{I18n.t(getTranslation(\"labels.email\"))}</label>\n                <input type=\"email\" className=\"form-control\" id=\"inputEmail\"\n                       placeholder={I18n.t(getTranslation(\"labels.email\"))}\n                       onChange = {this.updateValue('email')}\n                       name=\"Email\"/>\n            </div>\n        );\n\n        let passwordInput = (\n            <div className=\"form-group\">\n                <label className=\"sr-only\" htmlFor=\"inputPassword\">{I18n.t(getTranslation(\"labels.password\"))}</label>\n                <input type=\"password\" className=\"form-control\" id=\"inputPassword\"\n                       placeholder={I18n.t(getTranslation(\"labels.password\"))}\n                       onChange = {this.updateValue('password')}\n                       name=\"Password\"/>\n            </div>\n        );\n\n        let greetingMessage = <Translate value={getTranslation(action + \".greeting\")}/>;\n        let extra;\n        switch (action) {\n            case \"login\":\n                extra = <Link to=\"/auth/register\"><Translate value={getTranslation(\"register.button\")}/></Link>;\n                break;\n            case \"restore\":\n                extra = <Link to=\"/auth/login\"><Translate value={getTranslation(\"restore.footer2\")}/></Link>;\n                break;\n            case \"register\":\n                extra = <Link to=\"/auth/login\"><Translate value={getTranslation(\"login.button\")}/></Link>;\n                break;\n            case \"recover\":\n                extra = <Link to=\"/auth/login\"><Translate value={getTranslation(\"login.button\")}/></Link>;\n                break;\n            default:\n\n        }\n\n        let footerMessage = (\n            <div>\n                <Translate value={getTranslation(action + \".footer\")}/>\n                {extra}\n            </div>\n        );\n        let headerImage = <AppLogo alt={true}/>;\n\n\n        if (action === \"restore\") {\n            headerImage = <img src={user.avatar} alt={user.name | \"...\"} className=\"avatar\"/>;\n            passwordInput = (\n                <div className=\"input-group\">\n                    <input type=\"password\" className=\"form-control\" id=\"inputPassword\"\n                           placeholder={I18n.t(getTranslation(\"labels.password\"))}\n                           onChange = {this.updateValue('password')}\n                           name=\"password\"/>\n                    <span className=\"input-group-btn\">\n                        <button type=\"submit\" className=\"btn btn-primary\">\n                            <i className=\"icon wb-unlock\" aria-hidden=\"true\"/>\n                            <span className=\"sr-only\">unLock</span>\n                        </button>\n                      </span>\n                </div>\n            );\n        }\n\n        const loginHelpers = (\n            <div className=\"form-group clearfix\">\n                <div className=\"checkbox-custom checkbox-inline checkbox-primary pull-left\">\n                    <input type=\"checkbox\" id=\"inputCheckbox\" name=\"remember\"\n                           onChange = {this.updateValue('rememberMe')}/>\n                    <label htmlFor=\"inputCheckbox\"><Translate value={getTranslation(\"login.remember\")}/></label>\n                </div>\n                <Link className=\"pull-right\" to=\"/auth/recover\"><Translate\n                    value={getTranslation(\"recover.link\")}/></Link>\n            </div>\n        );\n\n        return (\n            <div className=\"page-content vertical-align-middle page-login\">\n                <div className=\"brand\">\n                    {headerImage}\n                </div>\n                <p>{greetingMessage}</p>\n                <form className=\"auth-form\" onSubmit={this.handleSubmit}>\n                    {action !== \"restore\" ? emailInput : \"\"}\n\n                    {action !== \"recover\" ? passwordInput : \"\"}\n\n                    {action === \"login\" ? loginHelpers : \"\"}\n\n                    {action !== \"restore\" ? <button type=\"submit\"\n                                                    className=\"btn btn-primary btn-block\">{this.getButtonText(action)}</button> : \"\"}\n\n                    {this.getSocialLogin(action)}\n\n                    <div className=\"footer\">\n                        {footerMessage}\n                    </div>\n                    {/*<AccountsUIWrapper/>*/}\n                    <div className=\"language\">\n                        <IntMenu/>\n                        <Translate value={getTranslation(\"labels.language\")}/>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default AuthForm ;\n"]},"sourceType":"script","hash":"c6a2449a7b2d94fa7a733bf3b531e33b83defe5c"}
