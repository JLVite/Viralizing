{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/agenda/server/methods.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"imports/modules/agenda/server/methods.jsx","filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/agenda/server/methods.jsx","passPerPreset":false,"envName":"development","cwd":"/home/blackstoneteam/repos/viralizing-web/app","root":"/home/blackstoneteam/repos/viralizing-web/app","presets":[],"generatorOpts":{"filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/agenda/server/methods.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/modules/agenda/server/methods.jsx"}},"code":"let Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet check;\nmodule.watch(require(\"meteor/check\"), {\n  check(v) {\n    check = v;\n  }\n\n}, 1);\nlet UrlShorter;\nmodule.watch(require(\"node-url-shorter\"), {\n  default(v) {\n    UrlShorter = v;\n  }\n\n}, 2);\nlet HTTP;\nmodule.watch(require(\"meteor/http\"), {\n  HTTP(v) {\n    HTTP = v;\n  }\n\n}, 3);\nlet PostSchema;\nmodule.watch(require(\"../../../server/schemas/posts/schema\"), {\n  default(v) {\n    PostSchema = v;\n  }\n\n}, 4);\nMeteor.methods({\n  \"posts-scheduler\": function (data, userID) {\n    userID = userID || Meteor.userId();\n    let urlRegEx = new RegExp(\"(https?:\\/\\/(?:www\\.|(?!www))[^\\s\\.]+\\.[^\\s]{2,}|www\\.[^\\s]+\\.[^\\s]{2,})\");\n\n    if (!data.message || typeof data.message !== \"string\") {\n      throw new Meteor.Error(400, \"Message must be set.\");\n    }\n\n    if (!data.accounts || data.accounts.length === 0) {\n      throw new Meteor.Error(400, \"Accounts must me selected\");\n    }\n\n    if (!data.date || typeof data.date.getMonth !== \"function\") {\n      throw new Meteor.Error(400, \"Date is not valid.\");\n    }\n\n    if (data.deadline && typeof data.date.getMonth !== \"function\") {\n      throw new Meteor.Error(400, \"Deadline is not valid.\");\n    }\n\n    if (data.location && !Array.isArray(data.location) && data.location.length !== 2 && typeof data.location[0] !== \"number\" && typeof data.location[1] !== \"number\") {\n      throw new Meteor.Error(400, \"Location is not valid.\");\n    }\n\n    if (data.media && typeof data.media === \"string\" && !data.media.match(urlRegEx)) {\n      throw new Meteor.Error(400, \"Media is not valid.\");\n    }\n\n    if (data.campaign && typeof data.campaign !== \"string\") {\n      throw new Meteor.Error(400, \"Campaign is not valid.\");\n    }\n\n    if (data.invite && typeof data.invite !== \"string\") {\n      throw new Meteor.Error(400, \"Campaign is not valid.\");\n    }\n\n    if (data.isPaid && typeof data.isPaid !== \"boolean\") {\n      throw new Meteor.Error(400, \"isPaid is not valid.\");\n    }\n\n    if (data.status && typeof data.status !== \"string\") {\n      throw new Meteor.Error(400, \"Campaign is not valid.\");\n    }\n\n    if (data.hashtags && data.hashtags.length !== 0 && data.hashtags.every(e => typeof e !== \"string\")) {\n      throw new Meteor.Error(400, \"Hashtags are not valid.\");\n    }\n\n    if (data.hashtags) {\n      data.hashtags.forEach(function (hashtag) {\n        data.message += \" \" + hashtag;\n      });\n    }\n\n    let postIDs = [];\n    data.accounts.forEach(function (account) {\n      let newPost = Object.assign({}, PostSchema);\n      newPost.owner = userID;\n      newPost.type = \"post\";\n      newPost.date = data.date;\n      newPost.deadline = data.deadline || null;\n      newPost.campaign = data.campaign || null;\n      newPost.invite = data.invite || null;\n      newPost.status = data.status || \"scheduled\";\n      newPost.isPaid = data.isPaid || false;\n      newPost.account = {\n        _id: account._id,\n        name: account.information.name,\n        lastName: account.information.lastName,\n        avatar: account.information.avatar,\n        network: account.network\n      };\n      newPost.data.message = data.message;\n      newPost.data.media = data.media;\n      newPost.data.location = data.location;\n      postIDs.push(Posts.insert(newPost));\n    });\n    return postIDs;\n  },\n  \"posts-fake-create\": function () {\n    console.log(\"POSTS_FAKE-CALLED\");\n    let accounts = [{\n      \"_id\": \"6eGeKTxGbNuLfjbtk\",\n      \"network\": \"twitter\",\n      \"information\": {\n        \"avatar\": \"https://pbs.twimg.com/profile_images/826115681946988544/TgOgp2gP_normal.jpg\",\n        \"lastName\": \"Incorp\",\n        \"name\": \"Ibol_Inc\"\n      },\n      \"connection\": {\n        \"id\": \"825526971505446912\",\n        \"screenName\": \"Ibol_Inc\",\n        \"accessToken\": \"825526971505446912-BKiaP4KjYkYFfMCmYDc2AkLZjpcLkV0\",\n        \"accessTokenSecret\": \"UZXTVYOiaIgh50kaDxNFRSx9wbAzWF67ndT9UFvcWurto\",\n        \"profile_image_url\": \"http://pbs.twimg.com/profile_images/826115681946988544/TgOgp2gP_normal.jpg\",\n        \"profile_image_url_https\": \"https://pbs.twimg.com/profile_images/826115681946988544/TgOgp2gP_normal.jpg\",\n        \"lang\": \"en\"\n      }\n    }, {\n      \"_id\": \"JTpPdmWj8HHSHE49u\",\n      \"network\": \"facebook\",\n      \"information\": {\n        \"avatar\": \"https://graph.facebook.com/133170043861498/picture?type=large\",\n        \"lastName\": \"Incorp\",\n        \"name\": \"Ibol\"\n      },\n      \"connection\": {\n        \"accessToken\": \"EAAQ8cdw98pUBAAxD8QsSqdMPJWdZAkpHTHwJTZAVIABQCfMjoCgE51GdSbUGUZAzCDJyWDHaACFUIooFW7c77qLKREuRodIy7TB6KRrFfZBHV5Y8i1TAyGq8CB2uvTOz8kGFwgZBiuPkaQKdhhOYwg1CQrZBwxR1oRKarZCyWtvHgZDZD\",\n        \"expiresAt\": 1492367978241,\n        \"id\": \"133170043861498\",\n        \"name\": \"Ibol Incorp\",\n        \"first_name\": \"Ibol\",\n        \"last_name\": \"Incorp\",\n        \"link\": \"https://www.facebook.com/app_scoped_user_id/133170043861498/\",\n        \"gender\": \"male\",\n        \"locale\": \"en_US\",\n        \"age_range\": {\n          \"min\": 21\n        }\n      }\n    }, {\n      \"_id\": \"pBnZgT5E3x7Cekj8a\",\n      \"network\": \"instagram\",\n      \"information\": {\n        \"avatar\": \"https://scontent.cdninstagram.com/t51.2885-19/s150x150/16230362_1842733642635953_3112165154159067136_n.jpg\",\n        \"lastName\": \"\",\n        \"name\": \"Ibol\"\n      },\n      \"connection\": {\n        \"bio\": \"\",\n        \"username\": \"ibol_viralizing\",\n        \"id\": \"4533566292\",\n        \"full_name\": \"Ibol\",\n        \"website\": \"\",\n        \"profile_picture\": \"https://scontent.cdninstagram.com/t51.2885-19/s150x150/16230362_1842733642635953_3112165154159067136_n.jpg\",\n        \"accessToken\": \"4533566292.aef68f0.6e138f18196345c596dd6e80d6ab59aa\"\n      }\n    }];\n    let i;\n    let lastDate = new Date();\n    let posts = [];\n\n    for (i = 0; i < 100; i++) {\n      console.log(\"POST_\" + i + \"_INITIATED\", lastDate);\n      let accountPosition = Math.floor(Math.random() * 3);\n      let account = accounts[accountPosition];\n      let newPost = Object.assign({}, PostSchema);\n      let minutesOffset = Math.floor(Math.random() * 3) + 1;\n      newPost.owner = Meteor.userId();\n      newPost.type = \"post\";\n      newPost.date = moment(lastDate).add(minutesOffset, \"minutes\").toDate();\n      newPost.status = \"scheduled\";\n      newPost.isPaid = false;\n      newPost.account = {\n        _id: account._id,\n        name: account.information.name,\n        lastName: account.information.lastName,\n        avatar: account.information.avatar,\n        network: account.network\n      };\n      newPost.data.message = \"This is a test message #viralizing\";\n      newPost.data.media = \"https://scontent.fmex7-1.fna.fbcdn.net/v/t31.0-8/16252222_130164834162019_8387112973073187684_o.jpg?oh=7921c404001814ff46dd3ff43601f63b&oe=59306168\";\n      lastDate = moment(newPost.date).toDate();\n      posts.push(Posts.insert(newPost));\n      console.log(\"POST_\" + i + \"_CREATED\");\n    }\n\n    console.log(\"FOR_LOOP_FINISHED\", posts.length);\n    return posts;\n  },\n  \"post-get-short-url\": function (url) {\n    check(url, String);\n    return HTTP.call(\"POST\", \"https://www.googleapis.com/urlshortener/v1/url?key=AIzaSyBcythzarlyApVyP89lJ8W4QagEYVhru2E\", {\n      data: {\n        longUrl: url\n      }\n    }).data.id;\n  }\n});","map":{"version":3,"sources":["imports/modules/agenda/server/methods.jsx"],"names":["Meteor","module","watch","require","v","check","UrlShorter","default","HTTP","PostSchema","methods","data","userID","userId","urlRegEx","RegExp","message","Error","accounts","length","date","getMonth","deadline","location","Array","isArray","media","match","campaign","invite","isPaid","status","hashtags","every","e","forEach","hashtag","postIDs","account","newPost","Object","assign","owner","type","_id","name","information","lastName","avatar","network","push","Posts","insert","console","log","i","lastDate","Date","posts","accountPosition","Math","floor","random","minutesOffset","moment","add","toDate","url","String","call","longUrl","id"],"mappings":"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","sourcesContent":["import {Meteor} from \"meteor/meteor\";\nimport {check} from \"meteor/check\";\nimport UrlShorter from \"node-url-shorter\";\nimport {HTTP} from \"meteor/http\";\nimport PostSchema from \"../../../server/schemas/posts/schema\";\n\nMeteor.methods({\n    \"posts-scheduler\": function (data, userID) {\n        userID = userID || Meteor.userId();\n        let urlRegEx = new RegExp(\"(https?:\\/\\/(?:www\\.|(?!www))[^\\s\\.]+\\.[^\\s]{2,}|www\\.[^\\s]+\\.[^\\s]{2,})\");\n        if (!data.message || typeof(data.message) !== \"string\") {\n            throw new Meteor.Error(400, \"Message must be set.\");\n        }\n        if (!data.accounts || data.accounts.length === 0) {\n            throw new Meteor.Error(400, \"Accounts must me selected\");\n        }\n        if (!data.date || typeof data.date.getMonth !== \"function\") {\n            throw new Meteor.Error(400, \"Date is not valid.\");\n        }\n        if (data.deadline && typeof data.date.getMonth !== \"function\") {\n            throw new Meteor.Error(400, \"Deadline is not valid.\");\n        }\n        if (data.location && !Array.isArray(data.location) && data.location.length !== 2 && typeof(data.location[0]) !== \"number\" && typeof(data.location[1]) !== \"number\") {\n            throw new Meteor.Error(400, \"Location is not valid.\");\n        }\n        if (data.media && typeof(data.media) === \"string\" && !data.media.match(urlRegEx)) {\n            throw new Meteor.Error(400, \"Media is not valid.\");\n        }\n        if (data.campaign && typeof(data.campaign) !== \"string\") {\n            throw new Meteor.Error(400, \"Campaign is not valid.\");\n        }\n        if (data.invite && typeof(data.invite) !== \"string\") {\n            throw new Meteor.Error(400, \"Campaign is not valid.\");\n        }\n        if (data.isPaid && typeof(data.isPaid) !== \"boolean\") {\n            throw new Meteor.Error(400, \"isPaid is not valid.\");\n        }\n        if (data.status && typeof(data.status) !== \"string\") {\n            throw new Meteor.Error(400, \"Campaign is not valid.\");\n        }\n        if (data.hashtags && data.hashtags.length !== 0 && data.hashtags.every((e) => typeof(e) !== \"string\")) {\n            throw new Meteor.Error(400, \"Hashtags are not valid.\");\n        }\n\n        if (data.hashtags) {\n            data.hashtags.forEach(function (hashtag) {\n                data.message += \" \" + hashtag;\n            });\n        }\n\n        let postIDs = [];\n        data.accounts.forEach(function (account) {\n            let newPost = Object.assign({}, PostSchema);\n            newPost.owner = userID;\n            newPost.type = \"post\";\n            newPost.date = data.date;\n            newPost.deadline = data.deadline || null;\n            newPost.campaign = data.campaign || null;\n            newPost.invite = data.invite || null;\n            newPost.status = data.status || \"scheduled\";\n            newPost.isPaid = data.isPaid || false;\n            newPost.account = {\n                _id: account._id,\n                name: account.information.name,\n                lastName: account.information.lastName,\n                avatar: account.information.avatar,\n                network: account.network\n            };\n            newPost.data.message = data.message;\n            newPost.data.media = data.media;\n            newPost.data.location = data.location;\n\n            postIDs.push(Posts.insert(newPost));\n        });\n\n        return postIDs;\n    },\n    \"posts-fake-create\": function () {\n        console.log(\"POSTS_FAKE-CALLED\");\n        let accounts = [\n            {\n                \"_id\": \"6eGeKTxGbNuLfjbtk\",\n                \"network\": \"twitter\",\n                \"information\": {\n                    \"avatar\": \"https://pbs.twimg.com/profile_images/826115681946988544/TgOgp2gP_normal.jpg\",\n                    \"lastName\": \"Incorp\",\n                    \"name\": \"Ibol_Inc\"\n                },\n                \"connection\": {\n                    \"id\": \"825526971505446912\",\n                    \"screenName\": \"Ibol_Inc\",\n                    \"accessToken\": \"825526971505446912-BKiaP4KjYkYFfMCmYDc2AkLZjpcLkV0\",\n                    \"accessTokenSecret\": \"UZXTVYOiaIgh50kaDxNFRSx9wbAzWF67ndT9UFvcWurto\",\n                    \"profile_image_url\": \"http://pbs.twimg.com/profile_images/826115681946988544/TgOgp2gP_normal.jpg\",\n                    \"profile_image_url_https\": \"https://pbs.twimg.com/profile_images/826115681946988544/TgOgp2gP_normal.jpg\",\n                    \"lang\": \"en\"\n                }\n            }, {\n                \"_id\": \"JTpPdmWj8HHSHE49u\",\n                \"network\": \"facebook\",\n                \"information\": {\n                    \"avatar\": \"https://graph.facebook.com/133170043861498/picture?type=large\",\n                    \"lastName\": \"Incorp\",\n                    \"name\": \"Ibol\"\n                },\n                \"connection\": {\n                    \"accessToken\": \"EAAQ8cdw98pUBAAxD8QsSqdMPJWdZAkpHTHwJTZAVIABQCfMjoCgE51GdSbUGUZAzCDJyWDHaACFUIooFW7c77qLKREuRodIy7TB6KRrFfZBHV5Y8i1TAyGq8CB2uvTOz8kGFwgZBiuPkaQKdhhOYwg1CQrZBwxR1oRKarZCyWtvHgZDZD\",\n                    \"expiresAt\": 1492367978241,\n                    \"id\": \"133170043861498\",\n                    \"name\": \"Ibol Incorp\",\n                    \"first_name\": \"Ibol\",\n                    \"last_name\": \"Incorp\",\n                    \"link\": \"https://www.facebook.com/app_scoped_user_id/133170043861498/\",\n                    \"gender\": \"male\",\n                    \"locale\": \"en_US\",\n                    \"age_range\": {\"min\": 21}\n                }\n            }, {\n                \"_id\": \"pBnZgT5E3x7Cekj8a\",\n                \"network\": \"instagram\",\n                \"information\": {\n                    \"avatar\": \"https://scontent.cdninstagram.com/t51.2885-19/s150x150/16230362_1842733642635953_3112165154159067136_n.jpg\",\n                    \"lastName\": \"\",\n                    \"name\": \"Ibol\"\n                },\n                \"connection\": {\n                    \"bio\": \"\",\n                    \"username\": \"ibol_viralizing\",\n                    \"id\": \"4533566292\",\n                    \"full_name\": \"Ibol\",\n                    \"website\": \"\",\n                    \"profile_picture\": \"https://scontent.cdninstagram.com/t51.2885-19/s150x150/16230362_1842733642635953_3112165154159067136_n.jpg\",\n                    \"accessToken\": \"4533566292.aef68f0.6e138f18196345c596dd6e80d6ab59aa\"\n                }\n            }];\n        let i;\n        let lastDate = new Date();\n        let posts = [];\n\n        for (i = 0; i < 100; i++) {\n            console.log(\"POST_\" + i + \"_INITIATED\", lastDate);\n            let accountPosition = Math.floor(Math.random() * 3);\n            let account = accounts[accountPosition];\n            let newPost = Object.assign({}, PostSchema);\n            let minutesOffset = Math.floor(Math.random() * 3) + 1;\n\n            newPost.owner = Meteor.userId();\n            newPost.type = \"post\";\n            newPost.date = moment(lastDate).add(minutesOffset, \"minutes\").toDate();\n            newPost.status = \"scheduled\";\n            newPost.isPaid = false;\n            newPost.account = {\n                _id: account._id,\n                name: account.information.name,\n                lastName: account.information.lastName,\n                avatar: account.information.avatar,\n                network: account.network\n            };\n            newPost.data.message = \"This is a test message #viralizing\";\n            newPost.data.media = \"https://scontent.fmex7-1.fna.fbcdn.net/v/t31.0-8/16252222_130164834162019_8387112973073187684_o.jpg?oh=7921c404001814ff46dd3ff43601f63b&oe=59306168\";\n\n            lastDate = moment(newPost.date).toDate();\n\n            posts.push(Posts.insert(newPost));\n            console.log(\"POST_\" + i + \"_CREATED\");\n        }\n\n        console.log(\"FOR_LOOP_FINISHED\", posts.length);\n\n        return posts;\n    },\n    \"post-get-short-url\": function(url) {\n        check(url, String);\n        return HTTP.call(\"POST\", \"https://www.googleapis.com/urlshortener/v1/url?key=AIzaSyBcythzarlyApVyP89lJ8W4QagEYVhru2E\", {\n            data: {\n                longUrl: url\n            }\n        }).data.id;\n    }\n});\n"]},"sourceType":"script","hash":"dbfff3c50cea32b94788f89dc7457a2b438f3ff1"}
