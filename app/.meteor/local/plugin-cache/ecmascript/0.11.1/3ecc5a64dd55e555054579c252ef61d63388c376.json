{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/blackstoneteam/repos/viralizing-web/app/imports/server/schemas/posts/resolvers/posts.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"imports/server/schemas/posts/resolvers/posts.jsx","filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/server/schemas/posts/resolvers/posts.jsx","passPerPreset":false,"envName":"development","cwd":"/home/blackstoneteam/repos/viralizing-web/app","root":"/home/blackstoneteam/repos/viralizing-web/app","presets":[],"generatorOpts":{"filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/server/schemas/posts/resolvers/posts.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/server/schemas/posts/resolvers/posts.jsx"}},"code":"let Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nmodule.exportDefault({\n  Query: {\n    postsOwn(root, args, context) {\n      const userID = context.userId || \"zfbP3aTqiP8yAg8NQ\";\n      return Posts.find({\n        owner: userID\n      }).fetch();\n    },\n\n    postsInvite(root, args, context) {\n      const userID = context.userId || \"zfbP3aTqiP8yAg8NQ\";\n      let query = {\n        campaign: args.campaignID,\n        invite: args.inviteID\n      };\n      let result = Posts.find(query).fetch();\n      console.log(\"POSTS_INVITE\", query, result.length);\n      return result;\n    }\n\n  },\n  Post: {\n    owner: post => {\n      let user = Meteor.users.findOne({\n        _id: post.owner\n      }, {\n        fields: {\n          services: 0\n        }\n      });\n      return user;\n    }\n  },\n  PostAccount: {\n    fullProfile: account => {\n      let user = SocialAccounts.findOne({\n        _id: account._id\n      }, {\n        fields: {\n          services: 0\n        }\n      });\n      return user;\n    }\n  }\n});","map":{"version":3,"sources":["imports/server/schemas/posts/resolvers/posts.jsx"],"names":["Meteor","module","watch","require","v","exportDefault","Query","postsOwn","root","args","context","userID","userId","Posts","find","owner","fetch","postsInvite","query","campaign","campaignID","invite","inviteID","result","console","log","length","Post","post","user","users","findOne","_id","fields","services","PostAccount","fullProfile","account","SocialAccounts"],"mappings":"AAAA,IAAIA,MAAJ;AAAWC,OAAOC,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACH,SAAOI,CAAP,EAAS;AAACJ,aAAOI,CAAP;AAAS;;AAApB,CAAtC,EAA4D,CAA5D;AAAXH,OAAOI,aAAP,CAEe;AACXC,SAAO;AACHC,aAASC,IAAT,EAAeC,IAAf,EAAqBC,OAArB,EAA8B;AAC1B,YAAMC,SAASD,QAAQE,MAAR,IAAkB,mBAAjC;AACA,aAAOC,MAAMC,IAAN,CAAW;AAACC,eAAOJ;AAAR,OAAX,EAA4BK,KAA5B,EAAP;AACH,KAJE;;AAKHC,gBAAYT,IAAZ,EAAkBC,IAAlB,EAAwBC,OAAxB,EAAiC;AAC7B,YAAMC,SAASD,QAAQE,MAAR,IAAkB,mBAAjC;AACA,UAAIM,QAAQ;AACRC,kBAAUV,KAAKW,UADP;AAERC,gBAAQZ,KAAKa;AAFL,OAAZ;AAIA,UAAIC,SAAOV,MAAMC,IAAN,CAAWI,KAAX,EAAkBF,KAAlB,EAAX;AACAQ,cAAQC,GAAR,CAAY,cAAZ,EAA2BP,KAA3B,EAAkCK,OAAOG,MAAzC;AACA,aAAOH,MAAP;AACH;;AAdE,GADI;AAiBXI,QAAM;AACFZ,WAAQa,IAAD,IAAU;AACb,UAAIC,OAAO7B,OAAO8B,KAAP,CAAaC,OAAb,CAAqB;AAACC,aAAKJ,KAAKb;AAAX,OAArB,EAAwC;AAACkB,gBAAQ;AAACC,oBAAU;AAAX;AAAT,OAAxC,CAAX;AACA,aAAOL,IAAP;AACH;AAJC,GAjBK;AAuBXM,eAAa;AACTC,iBAAcC,OAAD,IAAa;AACtB,UAAIR,OAAOS,eAAeP,OAAf,CAAuB;AAACC,aAAKK,QAAQL;AAAd,OAAvB,EAA2C;AAACC,gBAAQ;AAACC,oBAAU;AAAX;AAAT,OAA3C,CAAX;AACA,aAAOL,IAAP;AACH;AAJQ;AAvBF,CAFf","sourcesContent":["import {Meteor} from 'meteor/meteor';\n\nexport default {\n    Query: {\n        postsOwn(root, args, context) {\n            const userID = context.userId || \"zfbP3aTqiP8yAg8NQ\";\n            return Posts.find({owner: userID}).fetch();\n        },\n        postsInvite(root, args, context) {\n            const userID = context.userId || \"zfbP3aTqiP8yAg8NQ\";\n            let query = {\n                campaign: args.campaignID,\n                invite: args.inviteID\n            };\n            let result=Posts.find(query).fetch();\n            console.log(\"POSTS_INVITE\",query, result.length);\n            return result;\n        }\n    },\n    Post: {\n        owner: (post) => {\n            let user = Meteor.users.findOne({_id: post.owner}, {fields: {services: 0}});\n            return user\n        }\n    },\n    PostAccount: {\n        fullProfile: (account) => {\n            let user = SocialAccounts.findOne({_id: account._id}, {fields: {services: 0}});\n            return user\n        }\n    }\n};"]},"sourceType":"script","hash":"3ecc5a64dd55e555054579c252ef61d63388c376"}
