{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/advertising/ui/containers/facebook/ad/list.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"imports/modules/advertising/ui/containers/facebook/ad/list.jsx","filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/advertising/ui/containers/facebook/ad/list.jsx","passPerPreset":false,"envName":"development","cwd":"/home/blackstoneteam/repos/viralizing-web/app","root":"/home/blackstoneteam/repos/viralizing-web/app","presets":[],"generatorOpts":{"filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/advertising/ui/containers/facebook/ad/list.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/modules/advertising/ui/containers/facebook/ad/list.jsx"}},"code":"let React;\nmodule.watch(require(\"react\"), {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet graphql;\nmodule.watch(require(\"react-apollo\"), {\n  graphql(v) {\n    graphql = v;\n  }\n\n}, 1);\nlet Loading;\nmodule.watch(require(\"../../../../../core/ui/components/loading\"), {\n  default(v) {\n    Loading = v;\n  }\n\n}, 2);\nlet AdList;\nmodule.watch(require(\"../../../components/facebook/ad/list\"), {\n  default(v) {\n    AdList = v;\n  }\n\n}, 3);\nlet gql;\nmodule.watch(require(\"graphql-tag\"), {\n  default(v) {\n    gql = v;\n  }\n\n}, 4);\n\nclass AdSetsListContainer extends React.Component {\n  render() {\n    let {\n      facebookAdsCampaignsAdSetAds,\n      active,\n      refetch,\n      history,\n      setAd,\n      adAccountID,\n      accountID,\n      adSetID,\n      campaignID\n    } = this.props;\n    return React.createElement(\"div\", null, this.props.loading ? React.createElement(Loading, null) : React.createElement(AdList, {\n      setAd: setAd,\n      active: active,\n      adAccountID: adAccountID,\n      accountID: accountID,\n      campaignID: campaignID,\n      adSetID: adSetID,\n      ads: facebookAdsCampaignsAdSetAds,\n      refetch: refetch,\n      history: history\n    }));\n  }\n\n}\n\nconst QUERY = gql`\n    query($socialAccountID: String, $adAccountID: String, $campaignID: String, $adSetID: String){\n        facebookAdsCampaignsAdSetAds(socialAccountID:$socialAccountID, adAccountID: $adAccountID, campaignID:$campaignID, adSetID:$adSetID){\n            _id,\n            name,\n            status{\n                configured,\n                effective,\n                status\n            },\n        }\n    }\n`;\nconst withData = graphql(QUERY, {\n  props: ({\n    data: {\n      error,\n      loading,\n      facebookAdsCampaignsAdSetAds,\n      refetch\n    }\n  }) => {\n    console.log(\"Campaign_ERROR\", error, facebookAdsCampaignsAdSetAds);\n    if (loading) return {\n      loading: true\n    };\n    if (error) return {\n      hasErrors: true\n    };\n    return {\n      loading,\n      facebookAdsCampaignsAdSetAds,\n      refetch\n    };\n  },\n  options: ownProps => ({\n    variables: {\n      socialAccountID: ownProps.accountID,\n      adAccountID: ownProps.adAccountID,\n      campaignID: ownProps.campaignID,\n      adSetID: ownProps.adSetID\n    }\n  })\n});\nmodule.exportDefault(withData(AdSetsListContainer));","map":{"version":3,"sources":["imports/modules/advertising/ui/containers/facebook/ad/list.jsx"],"names":["React","module","watch","require","default","v","graphql","Loading","AdList","gql","AdSetsListContainer","Component","render","facebookAdsCampaignsAdSetAds","active","refetch","history","setAd","adAccountID","accountID","adSetID","campaignID","props","loading","QUERY","withData","data","error","console","log","hasErrors","options","ownProps","variables","socialAccountID","exportDefault"],"mappings":"AAAA,IAAIA,KAAJ;AAAUC,OAAOC,KAAP,CAAaC,QAAQ,OAAR,CAAb,EAA8B;AAACC,UAAQC,CAAR,EAAU;AAACL,YAAMK,CAAN;AAAQ;;AAApB,CAA9B,EAAoD,CAApD;AAAuD,IAAIC,OAAJ;AAAYL,OAAOC,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACG,UAAQD,CAAR,EAAU;AAACC,cAAQD,CAAR;AAAU;;AAAtB,CAArC,EAA6D,CAA7D;AAAgE,IAAIE,OAAJ;AAAYN,OAAOC,KAAP,CAAaC,QAAQ,2CAAR,CAAb,EAAkE;AAACC,UAAQC,CAAR,EAAU;AAACE,cAAQF,CAAR;AAAU;;AAAtB,CAAlE,EAA0F,CAA1F;AAA6F,IAAIG,MAAJ;AAAWP,OAAOC,KAAP,CAAaC,QAAQ,sCAAR,CAAb,EAA6D;AAACC,UAAQC,CAAR,EAAU;AAACG,aAAOH,CAAP;AAAS;;AAArB,CAA7D,EAAoF,CAApF;AAAuF,IAAII,GAAJ;AAAQR,OAAOC,KAAP,CAAaC,QAAQ,aAAR,CAAb,EAAoC;AAACC,UAAQC,CAAR,EAAU;AAACI,UAAIJ,CAAJ;AAAM;;AAAlB,CAApC,EAAwD,CAAxD;;AAOhW,MAAMK,mBAAN,SAAkCV,MAAMW,SAAxC,CAAiD;AAC7CC,WAAQ;AACJ,QAAI;AAACC,kCAAD;AAA+BC,YAA/B;AAAuCC,aAAvC;AAAgDC,aAAhD;AAAyDC,WAAzD;AAAgEC,iBAAhE;AAA6EC,eAA7E;AAAwFC,aAAxF;AAAiGC;AAAjG,QAA6G,KAAKC,KAAtH;AACA,WACI,iCACK,KAAKA,KAAL,CAAWC,OAAX,GAAqB,oBAAC,OAAD,OAArB,GACG,oBAAC,MAAD;AAAQ,aAAON,KAAf;AACQ,cAAQH,MADhB;AAEQ,mBAAaI,WAFrB;AAGQ,iBAAWC,SAHnB;AAIQ,kBAAYE,UAJpB;AAKQ,eAASD,OALjB;AAMQ,WAAKP,4BANb;AAOQ,eAASE,OAPjB;AAQQ,eAASC;AARjB,MAFR,CADJ;AAcH;;AAjB4C;;AAoBjD,MAAMQ,QAAQf,GAAI;;;;;;;;;;;;CAAlB;AAcA,MAAMgB,WAAWnB,QAAQkB,KAAR,EAAe;AAC5BF,SAAO,CAAC;AAACI,UAAM;AAACC,WAAD;AAAQJ,aAAR;AAAiBV,kCAAjB;AAA+CE;AAA/C;AAAP,GAAD,KAAqE;AACxEa,YAAQC,GAAR,CAAY,gBAAZ,EAA6BF,KAA7B,EAAmCd,4BAAnC;AACA,QAAIU,OAAJ,EAAa,OAAO;AAACA,eAAS;AAAV,KAAP;AACb,QAAII,KAAJ,EAAW,OAAO;AAACG,iBAAW;AAAZ,KAAP;AACX,WAAO;AACHP,aADG;AAEHV,kCAFG;AAGHE;AAHG,KAAP;AAKH,GAV2B;AAW5BgB,WAAUC,QAAD,KACL;AACIC,eAAW;AACPC,uBAAgBF,SAASb,SADlB;AAEPD,mBAAac,SAASd,WAFf;AAGPG,kBAAYW,SAASX,UAHd;AAIPD,eAASY,SAASZ;AAJX;AADf,GADK;AAXmB,CAAf,CAAjB;AAzCAnB,OAAOkC,aAAP,CAgEeV,SAASf,mBAAT,CAhEf","sourcesContent":["import React from \"react\";\nimport {graphql} from \"react-apollo\";\nimport Loading from \"../../../../../core/ui/components/loading\";\nimport AdList from \"../../../components/facebook/ad/list\";\nimport gql from \"graphql-tag\";\n\n\nclass AdSetsListContainer extends React.Component{\n    render(){\n        let {facebookAdsCampaignsAdSetAds, active, refetch, history, setAd, adAccountID, accountID, adSetID, campaignID}=this.props;\n        return(\n            <div>\n                {this.props.loading ? <Loading/> :\n                    <AdList setAd={setAd}\n                            active={active}\n                            adAccountID={adAccountID}\n                            accountID={accountID}\n                            campaignID={campaignID}\n                            adSetID={adSetID}\n                            ads={facebookAdsCampaignsAdSetAds}\n                            refetch={refetch}\n                            history={history}/>}\n            </div>\n        )\n    }\n}\n\nconst QUERY = gql`\n    query($socialAccountID: String, $adAccountID: String, $campaignID: String, $adSetID: String){\n        facebookAdsCampaignsAdSetAds(socialAccountID:$socialAccountID, adAccountID: $adAccountID, campaignID:$campaignID, adSetID:$adSetID){\n            _id,\n            name,\n            status{\n                configured,\n                effective,\n                status\n            },\n        }\n    }\n`;\n\nconst withData = graphql(QUERY, {\n    props: ({data: {error, loading, facebookAdsCampaignsAdSetAds, refetch}}) => {\n        console.log(\"Campaign_ERROR\",error,facebookAdsCampaignsAdSetAds);\n        if (loading) return {loading: true};\n        if (error) return {hasErrors: true};\n        return {\n            loading,\n            facebookAdsCampaignsAdSetAds,\n            refetch,\n        };\n    },\n    options: (ownProps) => (\n        {\n            variables: {\n                socialAccountID:ownProps.accountID,\n                adAccountID: ownProps.adAccountID,\n                campaignID: ownProps.campaignID,\n                adSetID: ownProps.adSetID\n            }\n        }\n    ),\n});\n\nexport default withData(AdSetsListContainer);\n\n\n"]},"sourceType":"script","hash":"47c77d624fc3bc99a7d048093b294e7fa7364e64"}
