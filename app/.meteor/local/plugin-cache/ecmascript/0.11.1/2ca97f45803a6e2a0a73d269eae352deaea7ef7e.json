{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/blackstoneteam/repos/viralizing-web/app/imports/server/schemas/facebook-ads/resolvers/facebook.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"imports/server/schemas/facebook-ads/resolvers/facebook.jsx","filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/server/schemas/facebook-ads/resolvers/facebook.jsx","passPerPreset":false,"envName":"development","cwd":"/home/blackstoneteam/repos/viralizing-web/app","root":"/home/blackstoneteam/repos/viralizing-web/app","presets":[],"generatorOpts":{"filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/server/schemas/facebook-ads/resolvers/facebook.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/server/schemas/facebook-ads/resolvers/facebook.jsx"}},"code":"let Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nmodule.exportDefault({\n  Query: {\n    facebookAdAccounts(root, args, context) {\n      let accounts = Meteor.call(\"fb-marketing-adAccounts-list\", args.socialAccountID, args.campaignID);\n      return accounts.map(a => {\n        let res = {\n          _id: a.account_id,\n          name: a.name,\n          money: {\n            spent: a.account_id,\n            balance: a.balance,\n            currency: a.currency\n          },\n          endAdvertiser: {\n            _id: a.end_advertiser,\n            name: a.end_advertiser_name\n          },\n          created: a.created_time,\n          business: {}\n        };\n\n        if (a.business && a.business.id) {\n          res.business = {\n            _id: a.business.id,\n            name: a.business.name\n          };\n        }\n\n        return res;\n      });\n    },\n\n    facebookAdsCampaign(root, args, context) {\n      let c = Meteor.call(\"fb-marketing-campaigns-read\", args.socialAccountID, args.campaignID);\n      let res = {\n        _id: c.id,\n        ibolAccount: args.socialAccountID,\n        name: c.name,\n        account: c.account_id,\n        buyingType: c.buying_type,\n        objective: c.objective,\n        status: {\n          configured: c.configured_status,\n          effective: c.effective_status,\n          status: c.status\n        },\n        created: new Date(c.created_time),\n        updated: new Date(c.updated_time),\n        spendCap: c.spend_cap,\n        startDate: new Date(c.start_time),\n        endDate: new Date(c.stop_time),\n        adsets: []\n      };\n\n      if (c.adsets) {\n        res.adSets = c.adsets.data.map(a => ({\n          _id: a.id,\n          ibolAccount: args.socialAccountID\n        }));\n      }\n\n      return res;\n    },\n\n    facebookAdsCampaigns(root, args, context) {\n      console.log(\"facebookAdsCampaigns\", args.socialAccountID, args.adAccountID);\n      let campaigns = Meteor.call(\"fb-marketing-campaigns-list\", args.socialAccountID, args.adAccountID);\n      return campaigns.map(c => {\n        let res = {\n          _id: c.id,\n          ibolAccount: args.socialAccountID,\n          name: c.name,\n          account: c.account_id,\n          buyingType: c.buying_type,\n          objective: c.objective,\n          status: {\n            configured: c.configured_status,\n            effective: c.effective_status,\n            status: c.status\n          },\n          created: new Date(c.created_time),\n          updated: new Date(c.updated_time),\n          spendCap: c.spend_cap,\n          startDate: new Date(c.start_time),\n          endDate: new Date(c.stop_time),\n          adSets: []\n        };\n\n        if (c.adsets && c.adsets.data) {\n          res.adSets = c.adsets.data.map(a => ({\n            _id: a.id,\n            ibolAccount: args.socialAccountID\n          }));\n        }\n\n        return res;\n      });\n    },\n\n    facebookAdsCampaignsAdSets(root, args, context) {\n      let adSets = Meteor.call(\"fb-marketing-adsets-from-campaign\", args.socialAccountID, args.campaignID);\n      console.log('facebookAdsCampaignsAdSets', adSets);\n      return adSets.map(a => {\n        let res = {\n          _id: a.id,\n          ibolAccount: args.socialAccountID,\n          name: a.name,\n          account: a.account_id,\n          campaign: a.campaign._id,\n          created: new Date(a.created_time),\n          updated: new Date(a.updated_time),\n          billingEvent: a.billing_event,\n          goal: a.optimization_goal,\n          startDate: new Date(a.start_time),\n          endDate: new Date(a.end_time),\n          money: {\n            autoBid: a.is_autobid,\n            avgPrizePaceing: a.is_average_price_pacing,\n            budget: {\n              daily: a.daily_budget,\n              lifetime: a.lifetime_budget,\n              remaining: a.budget_remaining\n            }\n          },\n          recommendations: [],\n          impressions: a.lifetime_imps,\n          status: {\n            configured: a.configured_status,\n            effective: a.effective_status,\n            status: a.status\n          },\n          promotedObject: {\n            type: \"Page\",\n            data: a.promoted_object ? a.promoted_object.page_id : null\n          },\n          targeting: {\n            user_os: a.targeting.user_os,\n            user_device: a.targeting.user_device,\n            facebook_positions: a.targeting.facebook_positions,\n            age_max: a.targeting.age_max,\n            age_min: a.targeting.age_min,\n            geo_locations: {\n              countries: a.targeting.geo_locations.countries,\n              locationTypes: a.targeting.geo_locations.location_types,\n              publisher_platforms: a.targeting.platforms\n            }\n          }\n        };\n\n        if (a.recommendations) {\n          res.recommendations = a.recommendations.map(r => ({\n            field: r.blame_field,\n            code: r.code,\n            confidence: r.confidence,\n            importance: r.importance,\n            message: r.message,\n            title: r.title\n          }));\n        }\n\n        return res;\n      });\n    },\n\n    facebookAdsCampaignsAdSetAds(root, args, context) {\n      let ads = Meteor.call(\"fb-marketing-ads-from-adset\", args.socialAccountID, args.adSetID);\n      return ads.data.map(a => ({\n        _id: a.id,\n        name: a.name,\n        status: {\n          configured: a.configured_status,\n          effective: a.effective_status,\n          status: a.status\n        },\n        adSet: a.adset_id,\n        creative: []\n      }));\n    },\n\n    facebookAdsCampaignsAdSetAd(root, args, context) {\n      let res = Meteor.call(\"fb-marketing-ads-read\", args.socialAccountID, args.adID);\n      let reviewFeedback = null;\n\n      if (res.ad_review_feedback) {\n        let messages = [];\n        Object.keys(res.ad_review_feedback.global).forEach(key => {\n          messages.push(res.ad_review_feedback.global[key]);\n        });\n        reviewFeedback = messages.join(\", \");\n      }\n\n      return {\n        _id: res.id,\n        ibolAccount: args.socialAccountID,\n        name: res.name,\n        status: {\n          configured: res.configured_status,\n          effective: res.effective_status,\n          status: res.status\n        },\n        adSet: res.adset.id,\n        campaign: res.campaign.id,\n        created: res.created_time,\n        updated: res.updated_time,\n        creative: res.adcreatives.data.map(creative => creative.id),\n        reviewFeedback\n      };\n    },\n\n    facebookAdsCampaignsAudienceEstimate: (root, args, context) => {\n      let audience = Meteor.call(\"fb-marketing-campaigns-audience\", args.socialAccountID, args.adID, args.data);\n      console.log('facebookAdsCampaignsAudienceEstimate', audience);\n      return audience.data;\n    },\n    facebookAdsCampaignsDeliveryEstimate: (root, args, context) => {\n      let delivery_es = Meteor.call(\"fb-marketing-campaigns-delivery-estimate\", args.socialAccountID, args.adID, args.data);\n      console.log('facebookAdsCampaignsDeliveryEstimate', delivery_es);\n      return delivery_es.data[0];\n    }\n  },\n  FacebookCampaign: {\n    account: campaign => {\n      console.log(\"FACEBOOK_CAMPAIGN_ACCOUNT\", campaign.ibolAccount, campaign.account);\n      let a = Meteor.call(\"fb-marketing-adAccounts-read\", campaign.ibolAccount, campaign.account);\n      return {\n        _id: a.id,\n        status: a.account_status,\n        money: {\n          spent: a.amount_spent,\n          balance: a.balance,\n          currency: a.currency\n        },\n        endAdvertiser: {\n          _id: a.end_advertiser,\n          name: a.end_advertiser_name\n        },\n        business: {\n          _id: a.business.id,\n          name: a.business.name\n        },\n        created: new Date(a.created_time)\n      };\n    },\n    adSets: campaign => {\n      let adSets = Meteor.call(\"fb-marketing-adsets-from-campaign\", campaign.ibolAccount, campaign._id);\n      return adSets.map(a => ({\n        _id: a.id,\n        ibolAccount: campaign.ibolAccount,\n        name: a.name,\n        account: a.account_id,\n        campaign: a.campaign._id,\n        created: new Date(a.created_time),\n        updated: new Date(a.updated_time),\n        billingEvent: a.billing_event,\n        goal: a.optimization_goal,\n        startDate: new Date(a.start_time),\n        endDate: new Date(a.end_time),\n        money: {\n          autoBid: a.is_autobid,\n          avgPrizePaceing: a.is_average_price_pacing,\n          budget: {\n            daily: a.daily_budget,\n            lifetime: a.lifetime_budget,\n            remaining: a.budget_remaining\n          }\n        },\n        recommendations: a.recommendations.map(r => ({\n          field: r.blame_field,\n          code: r.code,\n          confidence: r.confidence,\n          importance: r.importance,\n          message: r.message,\n          title: r.title\n        })),\n        impressions: a.lifetime_imps,\n        status: {\n          configured: a.configured_status,\n          effective: a.effective_status,\n          status: a.status\n        },\n        promotedObject: {\n          type: \"Page\",\n          data: a.promoted_object.page_id\n        },\n        target: {\n          age: {\n            max: a.targeting.age_max,\n            min: a.targeting.age_min\n          },\n          geoLocations: {\n            countries: a.targeting.geo_locations.countries,\n            locationTypes: a.targeting.geo_locations.location_types\n          },\n          platforms: a.targeting.platforms\n        }\n      }));\n    }\n  },\n  FacebookAdSet: {\n    ads: adSet => {\n      let ads = Meteor.call(\"fb-marketing-ads-from-adset\", adSet.ibolAccount, adSet._id);\n      return ads.data.map(a => ({\n        _id: a.id,\n        name: a.name,\n        status: a.status,\n        adSet: a.adset_id,\n        creative: []\n      }));\n    }\n  },\n  FacebookAd: {\n    creative: ad => {\n      let creatives = Meteor.call(\"fb-marketing-adCreative-from-ad\", ad.ibolAccount, ad._id);\n      return creatives.data.map(a => ({\n        _id: a.id,\n        body: a.body,\n        image: a.image_url,\n        link: a.link_url,\n        ctaType: a.call_to_action_type,\n        title: a.title\n      }));\n    }\n  }\n});","map":{"version":3,"sources":["imports/server/schemas/facebook-ads/resolvers/facebook.jsx"],"names":["Meteor","module","watch","require","v","exportDefault","Query","facebookAdAccounts","root","args","context","accounts","call","socialAccountID","campaignID","map","a","res","_id","account_id","name","money","spent","balance","currency","endAdvertiser","end_advertiser","end_advertiser_name","created","created_time","business","id","facebookAdsCampaign","c","ibolAccount","account","buyingType","buying_type","objective","status","configured","configured_status","effective","effective_status","Date","updated","updated_time","spendCap","spend_cap","startDate","start_time","endDate","stop_time","adsets","adSets","data","facebookAdsCampaigns","console","log","adAccountID","campaigns","facebookAdsCampaignsAdSets","campaign","billingEvent","billing_event","goal","optimization_goal","end_time","autoBid","is_autobid","avgPrizePaceing","is_average_price_pacing","budget","daily","daily_budget","lifetime","lifetime_budget","remaining","budget_remaining","recommendations","impressions","lifetime_imps","promotedObject","type","promoted_object","page_id","targeting","user_os","user_device","facebook_positions","age_max","age_min","geo_locations","countries","locationTypes","location_types","publisher_platforms","platforms","r","field","blame_field","code","confidence","importance","message","title","facebookAdsCampaignsAdSetAds","ads","adSetID","adSet","adset_id","creative","facebookAdsCampaignsAdSetAd","adID","reviewFeedback","ad_review_feedback","messages","Object","keys","global","forEach","key","push","join","adset","adcreatives","facebookAdsCampaignsAudienceEstimate","audience","facebookAdsCampaignsDeliveryEstimate","delivery_es","FacebookCampaign","account_status","amount_spent","target","age","max","min","geoLocations","FacebookAdSet","FacebookAd","ad","creatives","body","image","image_url","link","link_url","ctaType","call_to_action_type"],"mappings":"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","sourcesContent":["    import {Meteor} from 'meteor/meteor';\n\nexport default {\n    Query: {\n        facebookAdAccounts(root, args, context) {\n            let accounts = Meteor.call(\"fb-marketing-adAccounts-list\", args.socialAccountID, args.campaignID);\n            return accounts.map(a=>{\n                let res={\n                    _id: a.account_id,\n                    name: a.name,\n                    money: {\n                        spent: a.account_id,\n                        balance: a.balance,\n                        currency: a.currency\n                    },\n                    endAdvertiser: {\n                        _id: a.end_advertiser,\n                        name: a.end_advertiser_name\n                    },\n                    created: a.created_time,\n                    business: {}\n                };\n                if(a.business && a.business.id){\n                    res.business={\n                        _id: a.business.id,\n                        name: a.business.name\n                    }\n                }\n                return res;\n            });\n        },\n        facebookAdsCampaign(root, args, context) {\n            let c = Meteor.call(\"fb-marketing-campaigns-read\", args.socialAccountID, args.campaignID);\n\n            let res = {\n                _id: c.id,\n                ibolAccount: args.socialAccountID,\n                name: c.name,\n                account: c.account_id,\n                buyingType: c.buying_type,\n                objective: c.objective,\n                status: {\n                    configured: c.configured_status,\n                    effective: c.effective_status,\n                    status: c.status\n                },\n                created: new Date(c.created_time),\n                updated: new Date(c.updated_time),\n                spendCap: c.spend_cap,\n                startDate: new Date(c.start_time),\n                endDate: new Date(c.stop_time),\n                adsets:[]\n            };\n\n            if(c.adsets){\n                res.adSets= c.adsets.data.map(a => ({\n                    _id: a.id,\n                    ibolAccount: args.socialAccountID\n                }))\n            }\n\n            return res;\n        },\n        facebookAdsCampaigns(root, args, context) {\n            console.log(\"facebookAdsCampaigns\", args.socialAccountID, args.adAccountID);\n            let campaigns = Meteor.call(\"fb-marketing-campaigns-list\", args.socialAccountID, args.adAccountID);\n\n\n            return campaigns.map(c=>{\n                let res={\n                    _id: c.id,\n                    ibolAccount: args.socialAccountID,\n                    name: c.name,\n                    account: c.account_id,\n                    buyingType: c.buying_type,\n                    objective: c.objective,\n                    status: {\n                        configured: c.configured_status,\n                        effective: c.effective_status,\n                        status: c.status\n                    },\n                    created: new Date(c.created_time),\n                    updated: new Date(c.updated_time),\n                    spendCap: c.spend_cap,\n                    startDate: new Date(c.start_time),\n                    endDate: new Date(c.stop_time),\n                    adSets: []\n                };\n                if(c.adsets && c.adsets.data){\n                    res.adSets=c.adsets.data.map(a => ({\n                        _id: a.id,\n                        ibolAccount: args.socialAccountID\n                    }))\n                }\n                return res;\n            });\n        },      \n        facebookAdsCampaignsAdSets(root, args, context) {\n            let adSets = Meteor.call(\"fb-marketing-adsets-from-campaign\", args.socialAccountID, args.campaignID);\n            console.log('facebookAdsCampaignsAdSets', adSets)\n            return adSets.map(a => {\n                let res={\n                    _id: a.id,\n                    ibolAccount: args.socialAccountID,\n                    name: a.name,\n                    account: a.account_id,\n                    campaign: a.campaign._id,\n                    created: new Date(a.created_time),\n                    updated: new Date(a.updated_time),\n                    billingEvent: a.billing_event,\n                    goal: a.optimization_goal,\n                    startDate: new Date(a.start_time),\n                    endDate: new Date(a.end_time),\n                    money: {\n                        autoBid: a.is_autobid,\n                        avgPrizePaceing: a.is_average_price_pacing,\n                        budget: {\n                            daily: a.daily_budget,\n                            lifetime: a.lifetime_budget,\n                            remaining: a.budget_remaining\n                        }\n                    },\n                    recommendations: [],\n                    impressions: a.lifetime_imps,\n                    status: {\n                        configured: a.configured_status,\n                        effective: a.effective_status,\n                        status: a.status\n                    },\n                    promotedObject: {\n                        type: \"Page\",\n                        data: a.promoted_object?a.promoted_object.page_id: null\n                    },\n                    targeting: {\n                        user_os: a.targeting.user_os,\n                        user_device: a.targeting.user_device,\n                        facebook_positions: a.targeting.facebook_positions,\n                        age_max: a.targeting.age_max,\n                        age_min: a.targeting.age_min,\n                        geo_locations: {\n                            countries: a.targeting.geo_locations.countries,\n                            locationTypes: a.targeting.geo_locations.location_types,\n                            publisher_platforms: a.targeting.platforms\n                        },\n                    }\n                };\n                if(a.recommendations){\n                    res.recommendations=a.recommendations.map(r => ({\n                        field: r.blame_field,\n                        code: r.code,\n                        confidence: r.confidence,\n                        importance: r.importance,\n                        message: r.message,\n                        title: r.title\n                    }));\n                }\n                return res;\n            });\n        },\n        facebookAdsCampaignsAdSetAds(root, args, context) {\n            let ads = Meteor.call(\"fb-marketing-ads-from-adset\", args.socialAccountID, args.adSetID);\n\n            return ads.data.map(a => ({\n                _id: a.id,\n                name: a.name,\n                status: {\n                    configured: a.configured_status,\n                    effective: a.effective_status,\n                    status: a.status\n                },\n                adSet: a.adset_id,\n                creative: []\n            }))\n        },\n        facebookAdsCampaignsAdSetAd(root, args, context) {\n            let res = Meteor.call(\"fb-marketing-ads-read\", args.socialAccountID, args.adID);\n            let reviewFeedback=null;\n            if(res.ad_review_feedback){\n                let messages=[];\n                Object.keys(res.ad_review_feedback.global).forEach(key=>{\n                    messages.push(res.ad_review_feedback.global[key]);\n                });\n                reviewFeedback=messages.join(\", \");\n            }\n\n            return {\n                _id: res.id,\n                ibolAccount: args.socialAccountID,\n                name: res.name,\n                status: {\n                    configured: res.configured_status,\n                    effective: res.effective_status,\n                    status: res.status\n                },\n                adSet: res.adset.id,\n                campaign: res.campaign.id,\n                created: res.created_time,\n                updated: res.updated_time,\n                creative:res.adcreatives.data.map(creative=>creative.id),\n                reviewFeedback\n            };\n        },\n        facebookAdsCampaignsAudienceEstimate: (root, args, context) => {\n            let audience = Meteor.call(\"fb-marketing-campaigns-audience\", args.socialAccountID, args.adID, args.data);\n            console.log('facebookAdsCampaignsAudienceEstimate', audience)\n            return audience.data;\n        },\n        facebookAdsCampaignsDeliveryEstimate: (root, args, context) => {\n            let delivery_es = Meteor.call(\"fb-marketing-campaigns-delivery-estimate\", args.socialAccountID, args.adID, args.data);\n            console.log('facebookAdsCampaignsDeliveryEstimate', delivery_es)\n            return delivery_es.data[0];\n        },\n    },\n    FacebookCampaign: {\n        account: (campaign) => {\n            console.log(\"FACEBOOK_CAMPAIGN_ACCOUNT\", campaign.ibolAccount, campaign.account);\n            let a = Meteor.call(\"fb-marketing-adAccounts-read\", campaign.ibolAccount, campaign.account);\n            return {\n                _id: a.id,\n                status: a.account_status,\n                money: {\n                    spent: a.amount_spent,\n                    balance: a.balance,\n                    currency: a.currency\n                },\n                endAdvertiser: {\n                    _id: a.end_advertiser,\n                    name: a.end_advertiser_name\n                },\n                business: {\n                    _id: a.business.id,\n                    name: a.business.name\n                },\n                created: new Date(a.created_time)\n            }\n        },\n        adSets: (campaign) => {\n            let adSets = Meteor.call(\"fb-marketing-adsets-from-campaign\", campaign.ibolAccount, campaign._id);\n\n            return adSets.map(a => ({\n                _id: a.id,\n                ibolAccount: campaign.ibolAccount,\n                name: a.name,\n                account: a.account_id,\n                campaign: a.campaign._id,\n                created: new Date(a.created_time),\n                updated: new Date(a.updated_time),\n                billingEvent: a.billing_event,\n                goal: a.optimization_goal,\n                startDate: new Date(a.start_time),\n                endDate: new Date(a.end_time),\n                money: {\n                    autoBid: a.is_autobid,\n                    avgPrizePaceing: a.is_average_price_pacing,\n                    budget: {\n                        daily: a.daily_budget,\n                        lifetime: a.lifetime_budget,\n                        remaining: a.budget_remaining\n                    }\n                },\n                recommendations: a.recommendations.map(r => ({\n                    field: r.blame_field,\n                    code: r.code,\n                    confidence: r.confidence,\n                    importance: r.importance,\n                    message: r.message,\n                    title: r.title\n                })),\n                impressions: a.lifetime_imps,\n                status: {\n                    configured: a.configured_status,\n                    effective: a.effective_status,\n                    status: a.status\n                },\n                promotedObject: {\n                    type: \"Page\",\n                    data: a.promoted_object.page_id\n                },\n                target: {\n                    age: {\n                        max: a.targeting.age_max,\n                        min: a.targeting.age_min\n                    },\n                    geoLocations: {\n                        countries: a.targeting.geo_locations.countries,\n                        locationTypes: a.targeting.geo_locations.location_types\n                    },\n                    platforms: a.targeting.platforms\n                }\n            }))\n        }\n    },\n    FacebookAdSet: {\n        ads: (adSet) => {\n            let ads = Meteor.call(\"fb-marketing-ads-from-adset\", adSet.ibolAccount, adSet._id);\n            return ads.data.map(a => ({\n                _id: a.id,\n                name: a.name,\n                status: a.status,\n                adSet: a.adset_id,\n                creative: []\n            }))\n        }\n    },\n    FacebookAd: {\n        creative: (ad) => {\n            let creatives = Meteor.call(\"fb-marketing-adCreative-from-ad\", ad.ibolAccount, ad._id);\n            return creatives.data.map(a => ({\n                _id: a.id,\n                body: a.body,\n                image: a.image_url,\n                link: a.link_url,\n                ctaType: a.call_to_action_type,\n                title: a.title\n            }))\n        }\n    }\n};\n\n"]},"sourceType":"script","hash":"2ca97f45803a6e2a0a73d269eae352deaea7ef7e"}
