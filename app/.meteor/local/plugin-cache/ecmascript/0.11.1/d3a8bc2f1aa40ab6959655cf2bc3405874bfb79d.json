{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/search/ui/components/trends/places.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"imports/modules/search/ui/components/trends/places.jsx","filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/search/ui/components/trends/places.jsx","passPerPreset":false,"envName":"development","cwd":"/home/blackstoneteam/repos/viralizing-web/app","root":"/home/blackstoneteam/repos/viralizing-web/app","presets":[],"generatorOpts":{"filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/search/ui/components/trends/places.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/modules/search/ui/components/trends/places.jsx"}},"code":"let React;\nmodule.watch(require(\"react\"), {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet Translate, I18n;\nmodule.watch(require(\"react-redux-i18n\"), {\n  Translate(v) {\n    Translate = v;\n  },\n\n  I18n(v) {\n    I18n = v;\n  }\n\n}, 1);\n\nclass TrendingPlaces extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      selectedCountries: []\n    };\n    this.updateCountry = this.updateCountry.bind(this);\n    this.updateCity = this.updateCity.bind(this);\n  }\n\n  updateCountry(e) {\n    let {\n      input: {\n        onChange\n      }\n    } = this.props;\n    let options = e.target.options;\n    let selectedCountries = [];\n\n    for (let i = 0, l = options.length; i < l; i++) {\n      if (options[i].selected) {\n        selectedCountries.push(options[i].value);\n      }\n    }\n\n    this.setState({\n      selectedCountries\n    }, function () {\n      if (selectedCountries.length === 1 && selectedCountries[0] === \"1\") {\n        console.log(\"WORLDWIDE_SELECTED\");\n        onChange(selectedCountries[0]);\n      }\n    });\n  }\n\n  updateCity(e) {\n    let {\n      input: {\n        onChange\n      }\n    } = this.props;\n    let options = e.target.options;\n    let selectedCities = [];\n\n    for (let i = 0, l = options.length; i < l; i++) {\n      if (options[i].selected) {\n        selectedCities.push(options[i].value);\n      }\n    }\n\n    let val = selectedCities[0];\n    if (val) onChange(val);\n  }\n\n  render() {\n    let getTranslation = key => {\n      return \"Search.tabs.trending.\" + key;\n    };\n\n    let {\n      places\n    } = this.props;\n    let {\n      selectedCountries\n    } = this.state;\n    window.places = places;\n    selectedCountries = places.filter(place => selectedCountries.indexOf(place.woeid) !== -1);\n    let cities = places.filter(place => selectedCountries.map(c => c.country).indexOf(place.country) !== -1);\n    return React.createElement(\"div\", {\n      className: \"places\"\n    }, React.createElement(\"div\", {\n      className: \"panel\"\n    }, React.createElement(\"div\", {\n      className: \"panel-heading\"\n    }, React.createElement(\"h3\", {\n      className: \"panel-title\"\n    }, React.createElement(Translate, {\n      value: getTranslation(\"controls.countries\")\n    }))), React.createElement(\"div\", {\n      className: \"panel-body container-fluid\"\n    }, React.createElement(\"select\", {\n      multiple: true,\n      defaultValue: [\"1\"],\n      className: \"form-control\",\n      onChange: this.updateCountry\n    }, places.filter(p => p.type === \"Supername\").map(location => React.createElement(\"option\", {\n      key: location.woeid,\n      value: location.woeid\n    }, location.name)), places.filter(p => p.type === \"Country\").map(location => React.createElement(\"option\", {\n      key: location.woeid,\n      value: location.woeid\n    }, location.name))))), React.createElement(\"div\", {\n      className: \"panel\"\n    }, React.createElement(\"div\", {\n      className: \"panel-heading\"\n    }, React.createElement(\"h3\", {\n      className: \"panel-title\"\n    }, React.createElement(Translate, {\n      value: getTranslation(\"controls.cities\")\n    }))), React.createElement(\"div\", {\n      className: \"panel-body container-fluid\"\n    }, React.createElement(\"select\", {\n      multiple: true,\n      className: \"form-control\",\n      onChange: this.updateCity\n    }, cities.filter(p => p.type === \"Country\").map(country => React.createElement(\"optgroup\", {\n      key: country.woeid,\n      label: country.name\n    }, React.createElement(\"option\", {\n      value: country.woeid\n    }, I18n.t(getTranslation(\"controls.all\"))), cities.filter(p => p.country === country.country && p.type !== \"Country\").map(location => React.createElement(\"option\", {\n      key: location.woeid,\n      value: location.woeid\n    }, location.name))))))));\n  }\n\n}\n\nmodule.exportDefault(TrendingPlaces);","map":{"version":3,"sources":["imports/modules/search/ui/components/trends/places.jsx"],"names":["React","module","watch","require","default","v","Translate","I18n","TrendingPlaces","Component","constructor","state","selectedCountries","updateCountry","bind","updateCity","e","input","onChange","props","options","target","i","l","length","selected","push","value","setState","console","log","selectedCities","val","render","getTranslation","key","places","window","filter","place","indexOf","woeid","cities","map","c","country","p","type","location","name","t","exportDefault"],"mappings":"AAAA,IAAIA,KAAJ;AAAUC,OAAOC,KAAP,CAAaC,QAAQ,OAAR,CAAb,EAA8B;AAACC,UAAQC,CAAR,EAAU;AAACL,YAAMK,CAAN;AAAQ;;AAApB,CAA9B,EAAoD,CAApD;AAAuD,IAAIC,SAAJ,EAAcC,IAAd;AAAmBN,OAAOC,KAAP,CAAaC,QAAQ,kBAAR,CAAb,EAAyC;AAACG,YAAUD,CAAV,EAAY;AAACC,gBAAUD,CAAV;AAAY,GAA1B;;AAA2BE,OAAKF,CAAL,EAAO;AAACE,WAAKF,CAAL;AAAO;;AAA1C,CAAzC,EAAqF,CAArF;;AAGpF,MAAMG,cAAN,SAA6BR,MAAMS,SAAnC,CAA6C;AACzCC,gBAAa;AACT;AACA,SAAKC,KAAL,GAAW;AACPC,yBAAkB;AADX,KAAX;AAGA,SAAKC,aAAL,GAAmB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAAnB;AACA,SAAKC,UAAL,GAAgB,KAAKA,UAAL,CAAgBD,IAAhB,CAAqB,IAArB,CAAhB;AACH;;AACDD,gBAAcG,CAAd,EAAgB;AACZ,QAAI;AAACC,aAAO;AAACC;AAAD;AAAR,QAAoB,KAAKC,KAA7B;AACA,QAAIC,UAAUJ,EAAEK,MAAF,CAASD,OAAvB;AACA,QAAIR,oBAAoB,EAAxB;;AACA,SAAK,IAAIU,IAAI,CAAR,EAAWC,IAAIH,QAAQI,MAA5B,EAAoCF,IAAIC,CAAxC,EAA2CD,GAA3C,EAAgD;AAC5C,UAAIF,QAAQE,CAAR,EAAWG,QAAf,EAAyB;AACrBb,0BAAkBc,IAAlB,CAAuBN,QAAQE,CAAR,EAAWK,KAAlC;AACH;AACJ;;AACD,SAAKC,QAAL,CAAc;AAAChB;AAAD,KAAd,EAAmC,YAAU;AACzC,UAAGA,kBAAkBY,MAAlB,KAA2B,CAA3B,IAAgCZ,kBAAkB,CAAlB,MAAuB,GAA1D,EAA8D;AAC1DiB,gBAAQC,GAAR,CAAY,oBAAZ;AACAZ,iBAASN,kBAAkB,CAAlB,CAAT;AACH;AACJ,KALD;AAMH;;AACDG,aAAWC,CAAX,EAAa;AACT,QAAI;AAACC,aAAO;AAACC;AAAD;AAAR,QAAoB,KAAKC,KAA7B;AACA,QAAIC,UAAUJ,EAAEK,MAAF,CAASD,OAAvB;AACA,QAAIW,iBAAiB,EAArB;;AACA,SAAK,IAAIT,IAAI,CAAR,EAAWC,IAAIH,QAAQI,MAA5B,EAAoCF,IAAIC,CAAxC,EAA2CD,GAA3C,EAAgD;AAC5C,UAAIF,QAAQE,CAAR,EAAWG,QAAf,EAAyB;AACrBM,uBAAeL,IAAf,CAAoBN,QAAQE,CAAR,EAAWK,KAA/B;AACH;AACJ;;AACD,QAAIK,MAAID,eAAe,CAAf,CAAR;AACA,QAAGC,GAAH,EAAQd,SAASc,GAAT;AACX;;AAEDC,WAAQ;AACJ,QAAIC,iBAAgBC,GAAD,IAAO;AACtB,aAAO,0BAAwBA,GAA/B;AACH,KAFD;;AAGA,QAAI;AAACC;AAAD,QAAS,KAAKjB,KAAlB;AACA,QAAI;AAACP;AAAD,QAAoB,KAAKD,KAA7B;AACA0B,WAAOD,MAAP,GAAcA,MAAd;AACAxB,wBAAkBwB,OAAOE,MAAP,CAAcC,SAAO3B,kBAAkB4B,OAAlB,CAA0BD,MAAME,KAAhC,MAAyC,CAAC,CAA/D,CAAlB;AACA,QAAIC,SAAON,OAAOE,MAAP,CAAcC,SAAO3B,kBAAkB+B,GAAlB,CAAsBC,KAAGA,EAAEC,OAA3B,EAAoCL,OAApC,CAA4CD,MAAMM,OAAlD,MAA6D,CAAC,CAAnF,CAAX;AACA,WACI;AAAK,iBAAU;AAAf,OACI;AAAK,iBAAU;AAAf,OACI;AAAK,iBAAU;AAAf,OACI;AAAI,iBAAU;AAAd,OACI,oBAAC,SAAD;AAAW,aAAOX,eAAe,oBAAf;AAAlB,MADJ,CADJ,CADJ,EAMI;AAAK,iBAAU;AAAf,OACI;AAAQ,oBAAR;AAAiB,oBAAc,CAAC,GAAD,CAA/B;AACQ,iBAAU,cADlB;AAEQ,gBAAU,KAAKrB;AAFvB,OAGKuB,OAAOE,MAAP,CAAcQ,KAAGA,EAAEC,IAAF,KAAS,WAA1B,EAAuCJ,GAAvC,CAA2CK,YACxC;AAAQ,WAAKA,SAASP,KAAtB;AAA6B,aAAOO,SAASP;AAA7C,OAAqDO,SAASC,IAA9D,CADH,CAHL,EAMKb,OAAOE,MAAP,CAAcQ,KAAGA,EAAEC,IAAF,KAAS,SAA1B,EAAqCJ,GAArC,CAAyCK,YACtC;AAAQ,WAAKA,SAASP,KAAtB;AAA6B,aAAOO,SAASP;AAA7C,OAAqDO,SAASC,IAA9D,CADH,CANL,CADJ,CANJ,CADJ,EAoBI;AAAK,iBAAU;AAAf,OACI;AAAK,iBAAU;AAAf,OACI;AAAI,iBAAU;AAAd,OACI,oBAAC,SAAD;AAAW,aAAOf,eAAe,iBAAf;AAAlB,MADJ,CADJ,CADJ,EAMI;AAAK,iBAAU;AAAf,OACI;AAAQ,oBAAR;AAAiB,iBAAU,cAA3B;AAA0C,gBAAU,KAAKnB;AAAzD,OACK2B,OAAOJ,MAAP,CAAcQ,KAAGA,EAAEC,IAAF,KAAS,SAA1B,EAAqCJ,GAArC,CAAyCE,WACtC;AAAU,WAAKA,QAAQJ,KAAvB;AAA8B,aAAOI,QAAQI;AAA7C,OACI;AAAQ,aAAOJ,QAAQJ;AAAvB,OAA+BlC,KAAK2C,CAAL,CAAOhB,eAAe,cAAf,CAAP,CAA/B,CADJ,EAEKQ,OAAOJ,MAAP,CAAcQ,KAAGA,EAAED,OAAF,KAAYA,QAAQA,OAApB,IAA+BC,EAAEC,IAAF,KAAS,SAAzD,EAAoEJ,GAApE,CAAwEK,YACrE;AAAQ,WAAKA,SAASP,KAAtB;AAA6B,aAAOO,SAASP;AAA7C,OAAqDO,SAASC,IAA9D,CADH,CAFL,CADH,CADL,CADJ,CANJ,CApBJ,CADJ;AA0CH;;AAzFwC;;AAH7ChD,OAAOkD,aAAP,CA+Fe3C,cA/Ff","sourcesContent":["import React from \"react\"\nimport { Translate, I18n } from \"react-redux-i18n\";\n\nclass TrendingPlaces extends React.Component {\n    constructor(){\n        super();\n        this.state={\n            selectedCountries:[]\n        };\n        this.updateCountry=this.updateCountry.bind(this);\n        this.updateCity=this.updateCity.bind(this);\n    }\n    updateCountry(e){\n        let {input: {onChange}}=this.props;\n        let options = e.target.options;\n        let selectedCountries = [];\n        for (let i = 0, l = options.length; i < l; i++) {\n            if (options[i].selected) {\n                selectedCountries.push(options[i].value);\n            }\n        }\n        this.setState({selectedCountries}, function(){\n            if(selectedCountries.length===1 && selectedCountries[0]===\"1\"){\n                console.log(\"WORLDWIDE_SELECTED\")\n                onChange(selectedCountries[0]);\n            }\n        });\n    }\n    updateCity(e){\n        let {input: {onChange}}=this.props;\n        let options = e.target.options;\n        let selectedCities = [];\n        for (let i = 0, l = options.length; i < l; i++) {\n            if (options[i].selected) {\n                selectedCities.push(options[i].value);\n            }\n        }\n        let val=selectedCities[0];\n        if(val) onChange(val);\n    }\n\n    render(){\n        let getTranslation=(key)=>{\n            return \"Search.tabs.trending.\"+key;\n        };\n        let {places}=this.props;\n        let {selectedCountries}=this.state;\n        window.places=places;\n        selectedCountries=places.filter(place=>selectedCountries.indexOf(place.woeid)!==-1);\n        let cities=places.filter(place=>selectedCountries.map(c=>c.country).indexOf(place.country)!==-1);\n        return(\n            <div className=\"places\">\n                <div className=\"panel\">\n                    <div className=\"panel-heading\">\n                        <h3 className=\"panel-title\">\n                            <Translate value={getTranslation(\"controls.countries\")}/>\n                        </h3>\n                    </div>\n                    <div className=\"panel-body container-fluid\">\n                        <select multiple defaultValue={[\"1\"]}\n                                className=\"form-control\"\n                                onChange={this.updateCountry}>\n                            {places.filter(p=>p.type===\"Supername\").map(location=>(\n                                <option key={location.woeid} value={location.woeid}>{location.name}</option>\n                            ))}\n                            {places.filter(p=>p.type===\"Country\").map(location=>(\n                                <option key={location.woeid} value={location.woeid}>{location.name}</option>\n                            ))}\n                        </select>\n                    </div>\n                </div>\n                <div className=\"panel\">\n                    <div className=\"panel-heading\">\n                        <h3 className=\"panel-title\">\n                            <Translate value={getTranslation(\"controls.cities\")}/>\n                        </h3>\n                    </div>\n                    <div className=\"panel-body container-fluid\">\n                        <select multiple className=\"form-control\" onChange={this.updateCity}>\n                            {cities.filter(p=>p.type===\"Country\").map(country=>(\n                                <optgroup key={country.woeid} label={country.name}>\n                                    <option value={country.woeid}>{I18n.t(getTranslation(\"controls.all\"))}</option>\n                                    {cities.filter(p=>p.country===country.country && p.type!==\"Country\").map(location=>(\n                                        <option key={location.woeid} value={location.woeid}>{location.name}</option>\n                                    ))}\n                                </optgroup>\n                            ))}\n                        </select>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default TrendingPlaces;\n\n"]},"sourceType":"script","hash":"d3a8bc2f1aa40ab6959655cf2bc3405874bfb79d"}
