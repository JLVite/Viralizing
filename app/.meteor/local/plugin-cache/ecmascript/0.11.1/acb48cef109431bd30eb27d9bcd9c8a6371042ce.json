{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/accounts/ui/containers/view.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"imports/modules/accounts/ui/containers/view.jsx","filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/accounts/ui/containers/view.jsx","passPerPreset":false,"envName":"development","cwd":"/home/blackstoneteam/repos/viralizing-web/app","root":"/home/blackstoneteam/repos/viralizing-web/app","presets":[],"generatorOpts":{"filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/accounts/ui/containers/view.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/modules/accounts/ui/containers/view.jsx"}},"code":"let React;\nmodule.watch(require(\"react\"), {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet graphql;\nmodule.watch(require(\"react-apollo\"), {\n  graphql(v) {\n    graphql = v;\n  }\n\n}, 1);\nlet connect;\nmodule.watch(require(\"react-redux\"), {\n  connect(v) {\n    connect = v;\n  }\n\n}, 2);\nlet Loading;\nmodule.watch(require(\"../../../core/ui/components/loading\"), {\n  default(v) {\n    Loading = v;\n  }\n\n}, 3);\nlet ViewAccount;\nmodule.watch(require(\"../layouts/view\"), {\n  default(v) {\n    ViewAccount = v;\n  }\n\n}, 4);\nlet createContainer;\nmodule.watch(require(\"meteor/react-meteor-data\"), {\n  createContainer(v) {\n    createContainer = v;\n  }\n\n}, 5);\nlet gql;\nmodule.watch(require(\"graphql-tag\"), {\n  default(v) {\n    gql = v;\n  }\n\n}, 6);\n\nclass ViewContainer extends React.Component {\n  render() {\n    return React.createElement(\"div\", null, this.props.loading ? React.createElement(Loading, null) : React.createElement(ViewAccount, {\n      account: this.props.account\n    }));\n  }\n\n}\n\nconst QUERY = gql`\n    query ($_id: String!){\n        account(_id:$_id){\n            _id,\n            active,\n            suspended,\n            delete,\n            network,\n            manager {\n                _id\n                profile {\n                    name\n                    lastName\n                    avatar\n                }\n                emails {\n                    address\n                }\n            },\n            owner {\n                _id\n                profile {\n                    name\n                    lastName\n                    avatar\n                }\n                emails {\n                    address\n                }\n            },\n            shares {\n                _id\n                profile {\n                    name\n                    lastName\n                    avatar\n                }\n                emails {\n                    address\n                }\n            },\n            settings{\n                type {\n                    brand\n                    influencer\n                }\n            },\n            information {\n                name\n                lastName\n                avatar\n                gender\n                birthDate\n                country\n                city\n                maritalStatus\n                forbiddenSubjects\n                sexualOrientation\n                likes\n                language\n                description\n                categories\n                specialties\n                urls\n            },\n            audience {\n                targets {\n                    name,\n                    age,\n                    gender,\n                    nrssg,\n                    countries,\n                    cities,\n                    languages,\n                    description\n                },\n                conquer,\n                objectives {\n                    increaseFollowers,\n                    increaseViews,\n                    increaseShares,\n                    increaseEngagement,\n                    increaseLikes,\n                    increaseTrafficHours,\n                    reachNewMarkets,\n                    increaseSpeaking,\n                    increasePlays,\n                    increaseWebsiteTraffic,\n                    positionTarget,\n                    keepTarget,\n                    presence,\n                    positionNewMarkets,\n                }\n            }\n            pricing {\n                post\n                share\n                partnership\n                ambassador,\n                profilePicture,\n                coverPhoto,\n                noPostHour,\n                noPostDay,\n            },\n            statistics {\n                retweets\n                retweetsPerPost\n                favorites\n                favoritesPerPost\n                comments\n                commentsPerPost\n                likes\n                likesPerPost\n                shares\n                sharesPerPost\n                engagement\n                followers\n                following\n                profileLikes\n                posts\n                postsPerDay\n            },\n            gallery {\n                images{\n                    name,\n                    content\n                },\n                videos{\n                    name,\n                    content\n                }\n            },\n            groups\n        }\n    }\n`;\nconst withData = graphql(QUERY, {\n  props: ({\n    data: {\n      error,\n      loading,\n      account,\n      refetch\n    }\n  }) => {\n    if (loading) return {\n      loading: true\n    };\n    if (error) return {\n      hasErrors: true\n    };\n    return {\n      loading,\n      account,\n      refetch\n    };\n  },\n  options: ownProps => ({\n    variables: {\n      _id: ownProps.params.accountID\n    }\n  })\n});\nmodule.exportDefault(withData(ViewContainer));","map":{"version":3,"sources":["imports/modules/accounts/ui/containers/view.jsx"],"names":["React","module","watch","require","default","v","graphql","connect","Loading","ViewAccount","createContainer","gql","ViewContainer","Component","render","props","loading","account","QUERY","withData","data","error","refetch","hasErrors","options","ownProps","variables","_id","params","accountID","exportDefault"],"mappings":"AAAA,IAAIA,KAAJ;AAAUC,OAAOC,KAAP,CAAaC,QAAQ,OAAR,CAAb,EAA8B;AAACC,UAAQC,CAAR,EAAU;AAACL,YAAMK,CAAN;AAAQ;;AAApB,CAA9B,EAAoD,CAApD;AAAuD,IAAIC,OAAJ;AAAYL,OAAOC,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACG,UAAQD,CAAR,EAAU;AAACC,cAAQD,CAAR;AAAU;;AAAtB,CAArC,EAA6D,CAA7D;AAAgE,IAAIE,OAAJ;AAAYN,OAAOC,KAAP,CAAaC,QAAQ,aAAR,CAAb,EAAoC;AAACI,UAAQF,CAAR,EAAU;AAACE,cAAQF,CAAR;AAAU;;AAAtB,CAApC,EAA4D,CAA5D;AAA+D,IAAIG,OAAJ;AAAYP,OAAOC,KAAP,CAAaC,QAAQ,qCAAR,CAAb,EAA4D;AAACC,UAAQC,CAAR,EAAU;AAACG,cAAQH,CAAR;AAAU;;AAAtB,CAA5D,EAAoF,CAApF;AAAuF,IAAII,WAAJ;AAAgBR,OAAOC,KAAP,CAAaC,QAAQ,iBAAR,CAAb,EAAwC;AAACC,UAAQC,CAAR,EAAU;AAACI,kBAAYJ,CAAZ;AAAc;;AAA1B,CAAxC,EAAoE,CAApE;AAAuE,IAAIK,eAAJ;AAAoBT,OAAOC,KAAP,CAAaC,QAAQ,0BAAR,CAAb,EAAiD;AAACO,kBAAgBL,CAAhB,EAAkB;AAACK,sBAAgBL,CAAhB;AAAkB;;AAAtC,CAAjD,EAAyF,CAAzF;AAA4F,IAAIM,GAAJ;AAAQV,OAAOC,KAAP,CAAaC,QAAQ,aAAR,CAAb,EAAoC;AAACC,UAAQC,CAAR,EAAU;AAACM,UAAIN,CAAJ;AAAM;;AAAlB,CAApC,EAAwD,CAAxD;;AAQ1gB,MAAMO,aAAN,SAA4BZ,MAAMa,SAAlC,CAA4C;AACxCC,WAAS;AACL,WACI,iCACK,KAAKC,KAAL,CAAWC,OAAX,GAAqB,oBAAC,OAAD,OAArB,GACG,oBAAC,WAAD;AAAa,eAAS,KAAKD,KAAL,CAAWE;AAAjC,MAFR,CADJ;AAMH;;AARuC;;AAW5C,MAAMC,QAAQP,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAlB;AAyIA,MAAMQ,WAAWb,QAAQY,KAAR,EAAe;AAC5BH,SAAO,CAAC;AAACK,UAAM;AAACC,WAAD;AAAQL,aAAR;AAAiBC,aAAjB;AAA0BK;AAA1B;AAAP,GAAD,KAAgD;AACnD,QAAIN,OAAJ,EAAa,OAAO;AAACA,eAAS;AAAV,KAAP;AACb,QAAIK,KAAJ,EAAW,OAAO;AAACE,iBAAW;AAAZ,KAAP;AACX,WAAO;AACHP,aADG;AAEHC,aAFG;AAGHK;AAHG,KAAP;AAKH,GAT2B;AAU5BE,WAAUC,QAAD,KACL;AACIC,eAAW;AACPC,WAAKF,SAASG,MAAT,CAAgBC;AADd;AADf,GADK;AAVmB,CAAf,CAAjB;AA5JA5B,OAAO6B,aAAP,CA+KeX,SAASP,aAAT,CA/Kf","sourcesContent":["import React from \"react\";\nimport {graphql} from \"react-apollo\";\nimport {connect} from 'react-redux';\nimport Loading from \"../../../core/ui/components/loading\";\nimport ViewAccount from \"../layouts/view\";\nimport {createContainer} from \"meteor/react-meteor-data\";\nimport gql from \"graphql-tag\";\n\nclass ViewContainer extends React.Component {\n    render() {\n        return (\n            <div>\n                {this.props.loading ? <Loading/> :\n                    <ViewAccount account={this.props.account} />}\n            </div>\n        )\n    }\n}\n\nconst QUERY = gql`\n    query ($_id: String!){\n        account(_id:$_id){\n            _id,\n            active,\n            suspended,\n            delete,\n            network,\n            manager {\n                _id\n                profile {\n                    name\n                    lastName\n                    avatar\n                }\n                emails {\n                    address\n                }\n            },\n            owner {\n                _id\n                profile {\n                    name\n                    lastName\n                    avatar\n                }\n                emails {\n                    address\n                }\n            },\n            shares {\n                _id\n                profile {\n                    name\n                    lastName\n                    avatar\n                }\n                emails {\n                    address\n                }\n            },\n            settings{\n                type {\n                    brand\n                    influencer\n                }\n            },\n            information {\n                name\n                lastName\n                avatar\n                gender\n                birthDate\n                country\n                city\n                maritalStatus\n                forbiddenSubjects\n                sexualOrientation\n                likes\n                language\n                description\n                categories\n                specialties\n                urls\n            },\n            audience {\n                targets {\n                    name,\n                    age,\n                    gender,\n                    nrssg,\n                    countries,\n                    cities,\n                    languages,\n                    description\n                },\n                conquer,\n                objectives {\n                    increaseFollowers,\n                    increaseViews,\n                    increaseShares,\n                    increaseEngagement,\n                    increaseLikes,\n                    increaseTrafficHours,\n                    reachNewMarkets,\n                    increaseSpeaking,\n                    increasePlays,\n                    increaseWebsiteTraffic,\n                    positionTarget,\n                    keepTarget,\n                    presence,\n                    positionNewMarkets,\n                }\n            }\n            pricing {\n                post\n                share\n                partnership\n                ambassador,\n                profilePicture,\n                coverPhoto,\n                noPostHour,\n                noPostDay,\n            },\n            statistics {\n                retweets\n                retweetsPerPost\n                favorites\n                favoritesPerPost\n                comments\n                commentsPerPost\n                likes\n                likesPerPost\n                shares\n                sharesPerPost\n                engagement\n                followers\n                following\n                profileLikes\n                posts\n                postsPerDay\n            },\n            gallery {\n                images{\n                    name,\n                    content\n                },\n                videos{\n                    name,\n                    content\n                }\n            },\n            groups\n        }\n    }\n`;\n\nconst withData = graphql(QUERY, {\n    props: ({data: {error, loading, account, refetch}}) => {\n        if (loading) return {loading: true};\n        if (error) return {hasErrors: true};\n        return {\n            loading,\n            account,\n            refetch,\n        };\n    },\n    options: (ownProps) => (\n        {\n            variables: {\n                _id: ownProps.params.accountID\n            }\n        }\n    ),\n});\n\nexport default withData(ViewContainer);"]},"sourceType":"script","hash":"acb48cef109431bd30eb27d9bcd9c8a6371042ce"}
