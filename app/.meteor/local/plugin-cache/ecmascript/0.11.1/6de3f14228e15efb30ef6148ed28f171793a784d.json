{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/stripe/server/subscriptions/subscriptions.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"imports/modules/stripe/server/subscriptions/subscriptions.jsx","filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/stripe/server/subscriptions/subscriptions.jsx","passPerPreset":false,"envName":"development","cwd":"/home/blackstoneteam/repos/viralizing-web/app","root":"/home/blackstoneteam/repos/viralizing-web/app","presets":[],"generatorOpts":{"filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/stripe/server/subscriptions/subscriptions.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/modules/stripe/server/subscriptions/subscriptions.jsx"}},"code":"let StripeConnection;\nmodule.watch(require(\"../connection\"), {\n  default(v) {\n    StripeConnection = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet check;\nmodule.watch(require(\"meteor/check\"), {\n  check(v) {\n    check = v;\n  }\n\n}, 2);\nlet Match;\nmodule.watch(require(\"meteor/check\"), {\n  Match(v) {\n    Match = v;\n  }\n\n}, 3);\nMeteor.methods({\n  \"stripe_subscriptions_create\": function (user, data) {\n    if (!user) {\n      throw new Meteor.Error(500, \"[Stripe Customers] - No Application User Provided\");\n    }\n\n    if (!data) {\n      throw new Meteor.Error(500, \"[Stripe Subscriptions] - No Stripe Subscription Data Provided\");\n    }\n\n    check(user, Object);\n\n    if (!user.stripe) {\n      user = Meteor.users.findOne({\n        _id: user._id\n      });\n    }\n\n    if (!user.stripe.id) {\n      throw new Meteor.Error(500, \"[Stripe Cards] - User (\" + user._id + \") does not have a Stripe ID & no source defined.\");\n    }\n\n    data.customer = user.stripe.id;\n    check(data, {\n      customer: Match.Where(function (customer) {\n        check(customer, String);\n\n        if (!data.items && !data.plan || data.items && data.plan) {\n          throw new Meteor.Error(500, \"[Stripe Subscriptions] - Either Items or Plan must be provided\");\n        }\n\n        if (data.items && data.items.length === 0) {\n          throw new Meteor.Error(500, \"[Stripe Subscriptions] - Items must have at least 1 plan\");\n        }\n\n        return true;\n      }),\n      application_fee_percent: Match.Maybe(String),\n      coupon: Match.Maybe(String),\n      items: Match.Maybe([Match.ObjectIncluding({\n        plan: String,\n        quantity: Match.Maybe(Number)\n      })]),\n      metadata: Match.Maybe(Object),\n      plan: Match.Maybe(String),\n      prorate: Match.Maybe(String),\n      quantity: Match.Maybe(Number),\n      source: Match.Maybe(String),\n      tax_percent: Match.Maybe(Number),\n      trial_end: Match.Maybe(Number),\n      trial_period_days: Match.Maybe(Number)\n    });\n    let client = StripeConnection();\n    let method = Meteor.wrapAsync(client.subscriptions.create, client.subscriptions);\n    return method(data);\n  },\n  \"stripe_subscriptions_update\": function (subscriptionID, data) {\n    if (!subscriptionID) {\n      throw new Meteor.Error(500, \"[Stripe Subscriptions] - No Stripe Subscription ID Provided\");\n    }\n\n    if (!data) {\n      throw new Meteor.Error(500, \"[Stripe Subscriptions] - No Stripe Subscription Data Provided\");\n    }\n\n    check(subscriptionID, String);\n    check(data, {\n      application_fee_percent: Match.Maybe(String),\n      coupon: Match.Maybe(String),\n      items: Match.Maybe([Match.ObjectIncluding({\n        plan: String,\n        quantity: Match.Maybe(Number)\n      })]),\n      metadata: Match.Maybe(Object),\n      plan: Match.Maybe(String),\n      prorate: Match.Maybe(String),\n      proration_date: Match.Maybe(String),\n      quantity: Match.Maybe(Number),\n      source: Match.Maybe(String),\n      tax_percent: Match.Maybe(Number),\n      trial_end: Match.Maybe(Number)\n    });\n    let client = StripeConnection();\n    let method = Meteor.wrapAsync(client.subscriptions.update, client.subscriptions);\n    return method(subscriptionID, data);\n  },\n  \"stripe_subscriptions_get\": function (subscriptionID) {\n    if (!subscriptionID) {\n      throw new Meteor.Error(500, \"[Stripe Subscriptions] - No Stripe Subscription ID Provided\");\n    }\n\n    check(subscriptionID, String);\n    let client = StripeConnection();\n    let method = Meteor.wrapAsync(client.subscriptions.retrieve, client.subscriptions);\n    return method(subscriptionID);\n  },\n  \"stripe_subscriptions_delete\": function (subscriptionID) {\n    if (!subscriptionID) {\n      throw new Meteor.Error(500, \"[Stripe Subscriptions] - No Subscription ID Provided\");\n    }\n\n    check(subscriptionID, String);\n    let client = StripeConnection();\n    let method = Meteor.wrapAsync(client.subscriptions.del, client.subscriptions);\n    return method(subscriptionID);\n  },\n  \"stripe_subscriptions_list\": function (query) {\n    check(query, {\n      created: Match.Maybe(Match.ObjectIncluding({\n        gt: Match.Maybe(String),\n        gte: Match.Maybe(String),\n        lt: Match.Maybe(String),\n        lte: Match.Maybe(String)\n      })),\n      ending_before: Match.Maybe(String),\n      limit: Match.Maybe(Number),\n      starting_after: Match.Maybe(String)\n    });\n    let client = StripeConnection();\n    let method = Meteor.wrapAsync(client.subscriptions.list, client.subscriptions);\n    return method(query);\n  }\n});","map":{"version":3,"sources":["imports/modules/stripe/server/subscriptions/subscriptions.jsx"],"names":["StripeConnection","module","watch","require","default","v","Meteor","check","Match","methods","user","data","Error","Object","stripe","users","findOne","_id","id","customer","Where","String","items","plan","length","application_fee_percent","Maybe","coupon","ObjectIncluding","quantity","Number","metadata","prorate","source","tax_percent","trial_end","trial_period_days","client","method","wrapAsync","subscriptions","create","subscriptionID","proration_date","update","retrieve","del","query","created","gt","gte","lt","lte","ending_before","limit","starting_after","list"],"mappings":"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","sourcesContent":["import StripeConnection from \"../connection\";\nimport {Meteor} from \"meteor/meteor\";\nimport {check} from \"meteor/check\";\nimport {Match} from \"meteor/check\";\n\nMeteor.methods({\n    \"stripe_subscriptions_create\": function (user, data) {\n        if (!user) {\n            throw new Meteor.Error(500, \"[Stripe Customers] - No Application User Provided\");\n        }\n        if (!data) {\n            throw new Meteor.Error(500, \"[Stripe Subscriptions] - No Stripe Subscription Data Provided\");\n        }\n        check(user, Object);\n\n        if (!user.stripe) {\n            user = Meteor.users.findOne({_id: user._id});\n        }\n\n        if (!user.stripe.id) {\n            throw new Meteor.Error(500, \"[Stripe Cards] - User (\" + user._id + \") does not have a Stripe ID & no source defined.\");\n        }\n\n        data.customer = user.stripe.id;\n\n        check(data, {\n            customer: Match.Where(function (customer) {\n                check(customer, String);\n                if ((!data.items && !data.plan) || (data.items && data.plan)) {\n                    throw new Meteor.Error(500, \"[Stripe Subscriptions] - Either Items or Plan must be provided\");\n                }\n                if (data.items && data.items.length === 0) {\n                    throw new Meteor.Error(500, \"[Stripe Subscriptions] - Items must have at least 1 plan\");\n                }\n                return true;\n            }),\n            application_fee_percent: Match.Maybe(String),\n            coupon: Match.Maybe(String),\n            items: Match.Maybe([Match.ObjectIncluding({\n                plan: String,\n                quantity: Match.Maybe(Number)\n            })]),\n            metadata: Match.Maybe(Object),\n            plan: Match.Maybe(String),\n            prorate: Match.Maybe(String),\n            quantity: Match.Maybe(Number),\n            source: Match.Maybe(String),\n            tax_percent: Match.Maybe(Number),\n            trial_end: Match.Maybe(Number),\n            trial_period_days: Match.Maybe(Number)\n        });\n\n        let client = StripeConnection();\n        let method = Meteor.wrapAsync(client.subscriptions.create, client.subscriptions);\n\n        return method(data);\n    },\n    \"stripe_subscriptions_update\": function (subscriptionID, data) {\n        if (!subscriptionID) {\n            throw new Meteor.Error(500, \"[Stripe Subscriptions] - No Stripe Subscription ID Provided\");\n        }\n        if (!data) {\n            throw new Meteor.Error(500, \"[Stripe Subscriptions] - No Stripe Subscription Data Provided\");\n        }\n\n        check(subscriptionID, String);\n        check(data, {\n            application_fee_percent: Match.Maybe(String),\n            coupon: Match.Maybe(String),\n            items: Match.Maybe([Match.ObjectIncluding({\n                plan: String,\n                quantity: Match.Maybe(Number)\n            })]),\n            metadata: Match.Maybe(Object),\n            plan: Match.Maybe(String),\n            prorate: Match.Maybe(String),\n            proration_date: Match.Maybe(String),\n            quantity: Match.Maybe(Number),\n            source: Match.Maybe(String),\n            tax_percent: Match.Maybe(Number),\n            trial_end: Match.Maybe(Number)\n        });\n\n        let client = StripeConnection();\n        let method = Meteor.wrapAsync(client.subscriptions.update, client.subscriptions);\n\n        return method(subscriptionID, data);\n    },\n    \"stripe_subscriptions_get\": function (subscriptionID) {\n        if (!subscriptionID) {\n            throw new Meteor.Error(500, \"[Stripe Subscriptions] - No Stripe Subscription ID Provided\");\n        }\n\n        check(subscriptionID, String);\n\n        let client = StripeConnection();\n        let method = Meteor.wrapAsync(client.subscriptions.retrieve, client.subscriptions);\n\n        return method(subscriptionID);\n    },\n    \"stripe_subscriptions_delete\": function (subscriptionID) {\n        if (!subscriptionID) {\n            throw new Meteor.Error(500, \"[Stripe Subscriptions] - No Subscription ID Provided\");\n        }\n\n        check(subscriptionID, String);\n\n        let client = StripeConnection();\n        let method = Meteor.wrapAsync(client.subscriptions.del, client.subscriptions);\n\n        return method(subscriptionID);\n    },\n    \"stripe_subscriptions_list\": function (query) {\n        check(query, {\n            created: Match.Maybe(Match.ObjectIncluding({\n                gt: Match.Maybe(String),\n                gte: Match.Maybe(String),\n                lt: Match.Maybe(String),\n                lte: Match.Maybe(String)\n            })),\n            ending_before: Match.Maybe(String),\n            limit: Match.Maybe(Number),\n            starting_after: Match.Maybe(String)\n        });\n\n        let client = StripeConnection();\n        let method = Meteor.wrapAsync(client.subscriptions.list, client.subscriptions);\n        return method(query);\n    }\n});"]},"sourceType":"script","hash":"6de3f14228e15efb30ef6148ed28f171793a784d"}
