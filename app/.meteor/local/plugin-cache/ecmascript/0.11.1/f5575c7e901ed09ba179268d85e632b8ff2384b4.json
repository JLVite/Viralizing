{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$4","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$5","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$6","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$7","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$9","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/campaigns/ui/components/invite/view.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"imports/modules/campaigns/ui/components/invite/view.jsx","filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/campaigns/ui/components/invite/view.jsx","passPerPreset":false,"envName":"development","cwd":"/home/blackstoneteam/repos/viralizing-web/app","root":"/home/blackstoneteam/repos/viralizing-web/app","generatorOpts":{"filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/campaigns/ui/components/invite/view.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/modules/campaigns/ui/components/invite/view.jsx"}},"code":"let React;\nmodule.watch(require(\"react\"), {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet withRouter;\nmodule.watch(require(\"react-router\"), {\n  withRouter(v) {\n    withRouter = v;\n  }\n\n}, 1);\nlet swal;\nmodule.watch(require(\"sweetalert2\"), {\n  default(v) {\n    swal = v;\n  }\n\n}, 2);\nlet Modal;\nmodule.watch(require(\"react-modal\"), {\n  default(v) {\n    Modal = v;\n  }\n\n}, 3);\nlet Translate, I18n;\nmodule.watch(require(\"react-redux-i18n\"), {\n  Translate(v) {\n    Translate = v;\n  },\n\n  I18n(v) {\n    I18n = v;\n  }\n\n}, 4);\nlet Tooltip, OverlayTrigger;\nmodule.watch(require(\"react-bootstrap\"), {\n  Tooltip(v) {\n    Tooltip = v;\n  },\n\n  OverlayTrigger(v) {\n    OverlayTrigger = v;\n  }\n\n}, 5);\nlet SocialAvatar;\nmodule.watch(require(\"../../../../core/ui/components/social-avatar\"), {\n  default(v) {\n    SocialAvatar = v;\n  }\n\n}, 6);\nlet notie;\nmodule.watch(require(\"notie\"), {\n  default(v) {\n    notie = v;\n  }\n\n}, 7);\nlet PropTypes;\nmodule.watch(require(\"prop-types\"), {\n  default(v) {\n    PropTypes = v;\n  }\n\n}, 8);\n\nlet getTranslation = key => {\n  return \"Accounts.invite.\" + key;\n};\n\nclass AccountInviteView extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      modalIsOpen: true\n    };\n    this.openModal = this.openModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.updateInvite = this.updateInvite.bind(this);\n  }\n\n  openModal() {\n    this.setState({\n      modalIsOpen: true\n    });\n  }\n\n  closeModal() {\n    this.setState({\n      modalIsOpen: false\n    });\n  }\n\n  updateInvite(action) {\n    let {\n      invite\n    } = this.props;\n    let component = this;\n    return function () {\n      Meteor.call(\"account-invite-update-status\", invite, action, function (err, res) {\n        if (err) {\n          return;\n        }\n\n        if (action === \"accept\") {\n          //console.log(\"ACCEPT\", invite);\n          //component.props.router.push(\"/accounts\");\n          component.props.router.push(\"/accounts/edit/\" + invite.account._id);\n        } else {\n          component.props.router.push(\"/accounts\");\n        }\n      });\n    };\n  }\n\n  componentWillMount() {\n    let {\n      invite\n    } = this.props;\n\n    if (invite) {\n      if (invite.status === \"rejected\") {\n        this.props.router.push(\"/accounts\");\n      }\n\n      if (invite.email !== Meteor.user().emails[0].address) {\n        let component = this;\n        this.setState({\n          modalIsOpen: false\n        });\n        swal(I18n.t(getTranslation(\"error.title\")), I18n.t(getTranslation(\"error.description\")), \"error\").then(function () {\n          component.props.router.push(\"/accounts\");\n        });\n      }\n    } else {\n      this.props.router.push(\"/accounts\");\n    }\n  }\n\n  render() {\n    let {\n      invite\n    } = this.props;\n\n    if (!invite) {\n      return React.createElement(\"div\", null);\n    }\n\n    return React.createElement(\"div\", null, React.createElement(Modal, {\n      isOpen: this.state.modalIsOpen,\n      onRequestClose: this.closeModal,\n      className: \"app-modal\",\n      contentLabel: \"Example Modal\"\n    }, React.createElement(\"button\", {\n      className: \"close\",\n      onClick: this.closeModal\n    }, React.createElement(\"i\", {\n      className: \"icon wb-close-mini\",\n      \"aria-hidden\": \"true\"\n    })), React.createElement(\"div\", {\n      className: \"account-invite-view\"\n    }, React.createElement(\"h1\", null, React.createElement(\"span\", {\n      className: \"owner\"\n    }, (invite.owner.profile.name || \"\") + \" \" + (invite.owner.profile.lastName || \"\") === \" \" ? invite.owner.emails[0].address : (invite.owner.profile.name || \"\") + \" \" + (invite.owner.profile.lastName || \"\")), \"  \", React.createElement(Translate, {\n      value: getTranslation(\"title\")\n    })), React.createElement(\"div\", {\n      className: \"form-avatar\"\n    }, React.createElement(SocialAvatar, {\n      avatar: invite.account.information.avatar,\n      network: invite.account.network,\n      size: \"75\",\n      name: (invite.account.information.name || \"\") + \" \" + (invite.account.information.lastName || \"\")\n    }), React.createElement(\"div\", {\n      className: \"title\"\n    }, (invite.account.information.name || \"\") + \" \" + (invite.account.information.lastName || \"\"))), React.createElement(\"div\", {\n      className: \"controls\"\n    }, React.createElement(\"a\", {\n      className: \"btn btn-danger\",\n      onClick: this.updateInvite(\"reject\")\n    }, React.createElement(Translate, {\n      value: getTranslation(\"decline\")\n    })), React.createElement(\"a\", {\n      className: \"btn btn-primary\",\n      onClick: this.updateInvite(\"accept\")\n    }, React.createElement(Translate, {\n      value: getTranslation(\"accept\")\n    }))))));\n  }\n\n}\n\nlet AccountInviteViewWithRouter = withRouter(AccountInviteView);\nAccountInviteView.propTypes = {\n  router: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired\n};\nmodule.exportDefault(AccountInviteViewWithRouter);","map":{"version":3,"sources":["imports/modules/campaigns/ui/components/invite/view.jsx"],"names":["React","module","watch","require","default","v","withRouter","swal","Modal","Translate","I18n","Tooltip","OverlayTrigger","SocialAvatar","notie","PropTypes","getTranslation","key","AccountInviteView","Component","constructor","state","modalIsOpen","openModal","bind","closeModal","updateInvite","setState","action","invite","props","component","Meteor","call","err","res","router","push","account","_id","componentWillMount","status","email","user","emails","address","t","then","render","owner","profile","name","lastName","information","avatar","network","AccountInviteViewWithRouter","propTypes","shape","func","isRequired","exportDefault"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {withRouter} from \"react-router\";\nimport swal from \"sweetalert2\";\nimport Modal from \"react-modal\";\nimport {Translate, I18n} from \"react-redux-i18n\";\nimport {Tooltip, OverlayTrigger} from \"react-bootstrap\";\nimport SocialAvatar from \"../../../../core/ui/components/social-avatar\";\nimport notie from \"notie\";\nimport PropTypes from 'prop-types';\n\nlet getTranslation = (key) => {\n    return \"Accounts.invite.\" + key;\n};\n\nclass AccountInviteView extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            modalIsOpen: true\n        };\n\n        this.openModal = this.openModal.bind(this);\n        this.closeModal = this.closeModal.bind(this);\n        this.updateInvite = this.updateInvite.bind(this);\n    }\n\n    openModal() {\n        this.setState({modalIsOpen: true});\n    }\n\n    closeModal() {\n        this.setState({modalIsOpen: false});\n    }\n    updateInvite(action){\n        let {invite}=this.props;\n        let component=this;\n        return function(){\n            Meteor.call(\"account-invite-update-status\", invite, action,function(err,res){\n                if(err){\n                    return\n                }\n                if(action===\"accept\"){\n                    //console.log(\"ACCEPT\", invite);\n                    //component.props.router.push(\"/accounts\");\n                    component.props.router.push(\"/accounts/edit/\"+invite.account._id);\n                }else{\n                    component.props.router.push(\"/accounts\");\n                }\n\n            })\n        }\n    }\n    componentWillMount(){\n        let {invite}=this.props;\n\n        if(invite){\n            if(invite.status===\"rejected\"){\n                this.props.router.push(\"/accounts\");\n            }\n            if(invite.email!==Meteor.user().emails[0].address){\n                let component=this;\n                this.setState({modalIsOpen:false});\n                swal(\n                    I18n.t(getTranslation(\"error.title\")),\n                    I18n.t(getTranslation(\"error.description\")),\n                    \"error\"\n                ).then(function(){\n                    component.props.router.push(\"/accounts\");\n                });\n            }\n        }else{\n            this.props.router.push(\"/accounts\");\n        }\n    }\n    render(){\n        let {invite}=this.props;\n        if(!invite){\n            return <div/>\n        }\n        return (\n            <div>\n                <Modal\n                    isOpen={this.state.modalIsOpen}\n                    onRequestClose={this.closeModal}\n                    className=\"app-modal\"\n                    contentLabel=\"Example Modal\"\n                >\n                    <button className=\"close\" onClick={this.closeModal}>\n                        <i className=\"icon wb-close-mini\" aria-hidden=\"true\" />\n                    </button>\n                    <div className=\"account-invite-view\">\n                        <h1><span className=\"owner\">{((invite.owner.profile.name || \"\") + \" \" + (invite.owner.profile.lastName || \"\"))===\" \"?invite.owner.emails[0].address:(invite.owner.profile.name || \"\") + \" \" + (invite.owner.profile.lastName || \"\")}</span>  <Translate value={getTranslation(\"title\")}></Translate></h1>\n                        <div className=\"form-avatar\">\n                            <SocialAvatar avatar={invite.account.information.avatar}\n                                          network={invite.account.network}\n                                          size=\"75\"\n                                          name={(invite.account.information.name || \"\") + \" \" + (invite.account.information.lastName || \"\")}/>\n                            <div className=\"title\">\n                                {(invite.account.information.name || \"\") + \" \" + (invite.account.information.lastName || \"\")}\n                            </div>\n                        </div>\n                        <div className=\"controls\">\n                            <a className=\"btn btn-danger\" onClick={this.updateInvite(\"reject\")}>\n                                <Translate value={getTranslation(\"decline\")}/>\n                            </a>\n                            <a className=\"btn btn-primary\" onClick={this.updateInvite(\"accept\")}>\n                                <Translate value={getTranslation(\"accept\")}/>\n                            </a>\n                        </div>\n                    </div>\n                </Modal>\n            </div>\n        )\n    }\n}\n\nlet AccountInviteViewWithRouter = withRouter(AccountInviteView);\n\nAccountInviteView.propTypes = {\n    router: PropTypes.shape({\n        push: PropTypes.func.isRequired\n    }).isRequired\n};\nexport default AccountInviteViewWithRouter;"]},"sourceType":"script","hash":"f5575c7e901ed09ba179268d85e632b8ff2384b4"}
