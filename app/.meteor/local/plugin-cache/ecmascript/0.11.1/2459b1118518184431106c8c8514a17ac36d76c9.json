{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$4","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$5","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$6","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$7","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$9","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/accounts/ui/containers/account-calendar.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"imports/modules/accounts/ui/containers/account-calendar.jsx","filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/accounts/ui/containers/account-calendar.jsx","passPerPreset":false,"envName":"development","cwd":"/home/blackstoneteam/repos/viralizing-web/app","root":"/home/blackstoneteam/repos/viralizing-web/app","generatorOpts":{"filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/accounts/ui/containers/account-calendar.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/modules/accounts/ui/containers/account-calendar.jsx"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/builtin/interopRequireDefault\");\n\nvar _taggedTemplateLiteral2 = _interopRequireDefault(require(\"@babel/runtime/helpers/builtin/taggedTemplateLiteral\"));\n\nfunction _templateObject() {\n  const data = (0, _taggedTemplateLiteral2.default)([\"\\nquery($accountID: String, $all: Boolean, $draft: Boolean, $pending: Boolean, $sent: Boolean, $accepted: Boolean,  $rejected: Boolean, $scheduled: Boolean, $published: Boolean, $completed: Boolean, $cancelled: Boolean, $suspended: Boolean){\\n  eventsAccount(accountID:$ accountID, all: $all, draft: $draft, pending: $pending, sent: $sent, accepted: $accepted,  rejected: $rejected, scheduled: $scheduled, published: $published, completed: $completed, cancelled: $cancelled, suspended: $suspended){\\n    _id,\\n    type,\\n    start,\\n    end,\\n    title,\\n    allDay,\\n    preview,\\n    network\\n  }\\n}\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nlet React;\nmodule.watch(require(\"react\"), {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet graphql;\nmodule.watch(require(\"react-apollo\"), {\n  graphql(v) {\n    graphql = v;\n  }\n\n}, 1);\nlet Loading;\nmodule.watch(require(\"../../../core/ui/components/loading\"), {\n  default(v) {\n    Loading = v;\n  }\n\n}, 2);\nlet AccountCalendar;\nmodule.watch(require(\"../components/calendar\"), {\n  default(v) {\n    AccountCalendar = v;\n  }\n\n}, 3);\nlet createContainer;\nmodule.watch(require(\"meteor/react-meteor-data\"), {\n  createContainer(v) {\n    createContainer = v;\n  }\n\n}, 4);\nlet gql;\nmodule.watch(require(\"graphql-tag\"), {\n  default(v) {\n    gql = v;\n  }\n\n}, 5);\nlet notie;\nmodule.watch(require(\"notie\"), {\n  default(v) {\n    notie = v;\n  }\n\n}, 6);\n\nclass AccountCalendarContainer extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      \"all\": true,\n      \"draft\": true,\n      \"pending\": true,\n      \"sent\": true,\n      \"accepted\": true,\n      \"rejected\": true,\n      \"scheduled\": true,\n      \"published\": true,\n      \"completed\": true,\n      \"cancelled\": true,\n      \"suspended\": true\n    };\n    this.filterUpdate = this.filterUpdate.bind(this);\n  }\n\n  filterUpdate(key) {\n    let component = this;\n    return function (e) {\n      let newState = component.state;\n\n      if (key === \"all\" && !newState[key] === true) {\n        if (!newState[key]) {\n          Object.keys(newState).forEach(oKey => {\n            newState[oKey] = true;\n          });\n        }\n      } else {\n        newState[key] = !newState[key];\n      }\n\n      component.setState(newState);\n      component.props.refetch(newState);\n    };\n  }\n\n  render() {\n    let {\n      account,\n      refetch,\n      eventsAccount,\n      controls,\n      readOnly\n    } = this.props;\n    return React.createElement(\"div\", null, this.props.loading ? React.createElement(Loading, null) : React.createElement(AccountCalendar, {\n      events: eventsAccount,\n      readOnly: readOnly,\n      refetch: refetch,\n      account: account,\n      filters: this.state,\n      update: this.filterUpdate,\n      controls: controls\n    }));\n  }\n\n}\n\nconst QUERY = gql(_templateObject());\nconst withData = graphql(QUERY, {\n  props: (_ref) => {\n    let {\n      data: {\n        error,\n        loading,\n        eventsAccount,\n        refetch\n      }\n    } = _ref;\n    if (loading) return {\n      loading: true\n    };\n    if (error) return {\n      hasErrors: true\n    };\n    return {\n      loading,\n      eventsAccount,\n      refetch\n    };\n  },\n  options: ownProps => ({\n    pollInterval: 150000,\n    variables: {\n      \"accountID\": ownProps.account ? ownProps.account._id : \"\",\n      \"all\": true,\n      \"draft\": true,\n      \"pending\": true,\n      \"sent\": true,\n      \"accepted\": true,\n      \"rejected\": true,\n      \"scheduled\": true,\n      \"published\": true,\n      \"completed\": true,\n      \"cancelled\": true,\n      \"suspended\": true\n    }\n  })\n});\nconst AccountCalendarContainerWithData = withData(AccountCalendarContainer);\nmodule.exportDefault(AccountCalendarContainerWithData);","map":{"version":3,"sources":["imports/modules/accounts/ui/containers/account-calendar.jsx"],"names":["React","module","watch","require","default","v","graphql","Loading","AccountCalendar","createContainer","gql","notie","AccountCalendarContainer","Component","constructor","state","filterUpdate","bind","key","component","e","newState","Object","keys","forEach","oKey","setState","props","refetch","render","account","eventsAccount","controls","readOnly","loading","QUERY","withData","data","error","hasErrors","options","ownProps","pollInterval","variables","_id","AccountCalendarContainerWithData","exportDefault"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {graphql} from \"react-apollo\";\nimport Loading from \"../../../core/ui/components/loading\";\nimport AccountCalendar from \"../components/calendar\";\nimport {createContainer} from \"meteor/react-meteor-data\";\nimport gql from \"graphql-tag\";\nimport notie from \"notie\";\n\nclass AccountCalendarContainer extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            \"all\": true,\n            \"draft\": true,\n            \"pending\": true,\n            \"sent\": true,\n            \"accepted\": true,\n            \"rejected\": true,\n            \"scheduled\": true,\n            \"published\": true,\n            \"completed\": true,\n            \"cancelled\": true,\n            \"suspended\": true\n        };\n\n        this.filterUpdate = this.filterUpdate.bind(this);\n    }\n\n    filterUpdate(key) {\n        let component = this;\n        return function (e) {\n            let newState = component.state;\n            if (key === \"all\" && !newState[key]===true) {\n                if(!newState[key]){\n                    Object.keys(newState).forEach((oKey) => {\n                        newState[oKey]=true;\n                    });\n                }\n            } else {\n                newState[key] = !newState[key];\n            }\n\n            component.setState(newState);\n            component.props.refetch(newState);\n        }\n    }\n\n    render() {\n        let {account,refetch,eventsAccount, controls, readOnly} =this.props;\n        return (\n            <div>\n                {this.props.loading ? <Loading/> :\n                    <AccountCalendar events={eventsAccount}\n                                     readOnly={readOnly}\n                                     refetch={refetch}\n                                     account={account}\n                                     filters={this.state}\n                                     update={this.filterUpdate}\n                                     controls={controls}/>}\n            </div>\n        )\n    }\n}\n\nconst QUERY = gql`\nquery($accountID: String, $all: Boolean, $draft: Boolean, $pending: Boolean, $sent: Boolean, $accepted: Boolean,  $rejected: Boolean, $scheduled: Boolean, $published: Boolean, $completed: Boolean, $cancelled: Boolean, $suspended: Boolean){\n  eventsAccount(accountID:$ accountID, all: $all, draft: $draft, pending: $pending, sent: $sent, accepted: $accepted,  rejected: $rejected, scheduled: $scheduled, published: $published, completed: $completed, cancelled: $cancelled, suspended: $suspended){\n    _id,\n    type,\n    start,\n    end,\n    title,\n    allDay,\n    preview,\n    network\n  }\n}\n`;\n\nconst withData = graphql(QUERY, {\n    props: ({data: {error, loading, eventsAccount, refetch}}) => {\n        if (loading) return {loading: true};\n        if (error) return {hasErrors: true};\n        return {\n            loading,\n            eventsAccount,\n            refetch,\n        };\n    },\n    options: (ownProps) => (\n        {\n            pollInterval: 150000,\n            variables: {\n                \"accountID\": ownProps.account?ownProps.account._id:\"\",\n                \"all\": true,\n                \"draft\": true,\n                \"pending\": true,\n                \"sent\": true,\n                \"accepted\": true,\n                \"rejected\": true,\n                \"scheduled\": true,\n                \"published\": true,\n                \"completed\": true,\n                \"cancelled\": true,\n                \"suspended\": true\n            }\n        }\n    ),\n});\n\nconst AccountCalendarContainerWithData = withData(AccountCalendarContainer);\n\n\nexport default AccountCalendarContainerWithData;"]},"sourceType":"script","hash":"2459b1118518184431106c8c8514a17ac36d76c9"}
