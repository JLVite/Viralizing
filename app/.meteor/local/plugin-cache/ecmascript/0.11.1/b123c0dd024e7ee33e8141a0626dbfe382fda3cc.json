{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$4","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$5","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$6","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$7","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$9","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/accounts/ui/components/new-account.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"imports/modules/accounts/ui/components/new-account.jsx","filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/accounts/ui/components/new-account.jsx","passPerPreset":false,"envName":"development","cwd":"/home/blackstoneteam/repos/viralizing-web/app","root":"/home/blackstoneteam/repos/viralizing-web/app","generatorOpts":{"filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/accounts/ui/components/new-account.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/modules/accounts/ui/components/new-account.jsx"}},"code":"let React;\nmodule.watch(require(\"react\"), {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet notie;\nmodule.watch(require(\"notie\"), {\n  default(v) {\n    notie = v;\n  }\n\n}, 1);\nlet DropdownButton, MenuItem;\nmodule.watch(require(\"react-bootstrap\"), {\n  DropdownButton(v) {\n    DropdownButton = v;\n  },\n\n  MenuItem(v) {\n    MenuItem = v;\n  }\n\n}, 2);\nlet AccountPagesModal;\nmodule.watch(require(\"./account-pages/modal\"), {\n  default(v) {\n    AccountPagesModal = v;\n  }\n\n}, 3);\nlet Translate, I18n;\nmodule.watch(require(\"react-redux-i18n\"), {\n  Translate(v) {\n    Translate = v;\n  },\n\n  I18n(v) {\n    I18n = v;\n  }\n\n}, 4);\n\nclass NewAccount extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      pagesView: false\n    };\n    this.connectNetwork = this.connectNetwork.bind(this);\n    this.openPagesView = this.openPagesView.bind(this);\n  }\n\n  openPagesView() {\n    this.setState({\n      pagesView: true\n    });\n  }\n\n  connectNetwork(network) {\n    let component = this;\n    return function () {\n      let options = {};\n\n      switch (network) {\n        case \"facebook\":\n          options.requestPermissions = [\"user_posts\", \"user_friends\", \"manage_pages\", \"publish_pages\", \"pages_show_list\", \"ads_management\", \"business_management\"];\n          break;\n\n        case \"twitter\":\n          options = {};\n          break;\n\n        case \"google\":\n          options.requestPermissions = [\"https://www.googleapis.com/auth/adsense\", \"https://www.googleapis.com/auth/plus.me\", \"https://www.googleapis.com/auth/plus.stream.write\", \"https://www.googleapis.com/auth/adexchange.buyer\", \"https://www.googleapis.com/auth/adsense\", \"https://www.googleapis.com/auth/adwords\"];\n          options.requestOfflineToken = true; // options.forceApprovalPrompt= true;\n\n          break;\n\n        case \"instagram\":\n          options.requestPermissions = [\"public_content\"];\n          break;\n\n        default:\n          options = {};\n      }\n\n      Meteor.connectWith(network, options, function (err, res) {\n        //console.log('CONNECT_WITH_CALLBACK', arguments);\n        if (err) {\n          if (err.error === 500) {\n            err.error = \"Failed to connect account.\";\n          }\n\n          notie.alert(3, err.error, 3);\n          return;\n        } //console.log(\"CONNECTION_SUCCESFUL\", res);\n\n\n        component.props.refetch().then(function () {\n          component.props.close();\n          component.props.history.push(\"/accounts/edit/\" + res);\n        });\n      });\n    };\n  }\n\n  render() {\n    if (this.state.pagesView) {\n      return React.createElement(AccountPagesModal, {\n        accounts: this.props.accounts,\n        close: this.props.close,\n        history: this.props.history\n      });\n    }\n\n    let FBListItem = React.createElement(\"li\", {\n      onClick: this.connectNetwork(\"facebook\")\n    }, React.createElement(\"i\", {\n      className: \"social-icon facebook\"\n    }));\n    let FBDropdown = React.createElement(DropdownButton, {\n      bsStyle: \"default\",\n      title: React.createElement(\"i\", {\n        className: \"social-icon facebook\"\n      }),\n      id: \"dropdown-basic-\".concat(123)\n    }, React.createElement(MenuItem, {\n      eventKey: \"1\",\n      onClick: this.openPagesView\n    }, \"Connect Fan Page\"), React.createElement(MenuItem, {\n      eventKey: \"2\",\n      onClick: this.connectNetwork(\"facebook\")\n    }, \"Connect New Account\"));\n    let {\n      accounts\n    } = this.props;\n    let hasFB = accounts.filter(a => a.network === \"facebook\").length === 0 ? false : true;\n\n    let getTranslation = key => {\n      return \"Accounts.connect.\" + key;\n    };\n\n    return React.createElement(\"div\", null, React.createElement(\"h2\", null, React.createElement(Translate, {\n      value: getTranslation(\"question\")\n    })), React.createElement(\"ul\", {\n      className: \"profile-list\"\n    }, hasFB ? FBDropdown : FBListItem, React.createElement(\"li\", {\n      onClick: this.connectNetwork(\"twitter\")\n    }, React.createElement(\"i\", {\n      className: \"social-icon twitter\"\n    })), React.createElement(\"li\", {\n      onClick: this.connectNetwork(\"instagram\")\n    }, React.createElement(\"i\", {\n      className: \"social-icon instagram\"\n    })), React.createElement(\"li\", {\n      onClick: this.connectNetwork(\"google\")\n    }, React.createElement(\"i\", {\n      className: \"social-icon google\"\n    }))), hasFB ? React.createElement(Translate, {\n      value: getTranslation(\"message\")\n    }) : '');\n  }\n\n}\n\nmodule.exportDefault(NewAccount);","map":{"version":3,"sources":["imports/modules/accounts/ui/components/new-account.jsx"],"names":["React","module","watch","require","default","v","notie","DropdownButton","MenuItem","AccountPagesModal","Translate","I18n","NewAccount","Component","constructor","state","pagesView","connectNetwork","bind","openPagesView","setState","network","component","options","requestPermissions","requestOfflineToken","Meteor","connectWith","err","res","error","alert","props","refetch","then","close","history","push","render","accounts","FBListItem","FBDropdown","hasFB","filter","a","length","getTranslation","key","exportDefault"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport notie from 'notie';\nimport { DropdownButton, MenuItem } from \"react-bootstrap\";\nimport AccountPagesModal from \"./account-pages/modal\";\nimport {Translate, I18n} from \"react-redux-i18n\";\n\nclass NewAccount extends React.Component {\n    constructor() {\n        super();\n\n        this.state={\n            pagesView:false\n        };\n\n        this.connectNetwork = this.connectNetwork.bind(this);\n        this.openPagesView=this.openPagesView.bind(this);\n    }\n\n    openPagesView(){\n        this.setState({\n            pagesView:true,\n        })\n    }\n\n    connectNetwork(network) {\n        let component = this;\n        return function () {\n            let options = {};\n            switch (network) {\n                case \"facebook\":\n                    options.requestPermissions = [\"user_posts\", \"user_friends\", \"manage_pages\", \"publish_pages\", \"pages_show_list\", \"ads_management\", \"business_management\"];\n                    break;\n                case \"twitter\":\n                    options = {};\n                    break;\n                case \"google\":\n                    options.requestPermissions = [\n                        \"https://www.googleapis.com/auth/adsense\",\n                        \"https://www.googleapis.com/auth/plus.me\",\n                        \"https://www.googleapis.com/auth/plus.stream.write\",\n                        \"https://www.googleapis.com/auth/adexchange.buyer\",\n                        \"https://www.googleapis.com/auth/adsense\",\n                        \"https://www.googleapis.com/auth/adwords\"\n                    ];\n                    options.requestOfflineToken= true;\n                   // options.forceApprovalPrompt= true;\n                    break;\n                case \"instagram\":\n                    options.requestPermissions = [\"public_content\"];\n                    break;\n                default:\n                    options = {};\n            }\n            Meteor.connectWith(network, options, function (err, res) {\n                //console.log('CONNECT_WITH_CALLBACK', arguments);\n                if (err) {\n                    if (err.error === 500) {\n                        err.error = \"Failed to connect account.\";\n                    }\n                    notie.alert(3, err.error, 3);\n                    return\n                }\n                //console.log(\"CONNECTION_SUCCESFUL\", res);\n                component.props.refetch().then(function () {\n                    component.props.close();\n                    component.props.history.push(\"/accounts/edit/\" + res);\n                });\n            });\n        }\n    }\n\n    render() {\n        if(this.state.pagesView){\n            return <AccountPagesModal accounts={this.props.accounts} close={this.props.close} history={this.props.history}/>\n        }\n        let FBListItem=<li onClick={this.connectNetwork(\"facebook\")}><i className=\"social-icon facebook\"/></li>;\n        let FBDropdown=(\n            <DropdownButton bsStyle=\"default\" title={<i className=\"social-icon facebook\"/>} id={`dropdown-basic-${123}`}>\n                <MenuItem eventKey=\"1\" onClick={this.openPagesView}>Connect Fan Page</MenuItem>\n                <MenuItem eventKey=\"2\" onClick={this.connectNetwork(\"facebook\")}>Connect New Account</MenuItem>\n            </DropdownButton>\n        );\n        let {accounts}=this.props;\n        let hasFB = accounts.filter((a) => a.network === \"facebook\").length === 0 ? false : true;\n        let getTranslation=(key)=>{\n                return \"Accounts.connect.\"+key;\n            };\n        return (\n            <div>\n                <h2><Translate value={getTranslation(\"question\")}/></h2>\n                <ul className=\"profile-list\">\n                    {hasFB?FBDropdown:FBListItem}\n                    <li onClick={this.connectNetwork(\"twitter\")}><i className=\"social-icon twitter\"/></li>\n                    <li onClick={this.connectNetwork(\"instagram\")}><i className=\"social-icon instagram\"/></li>\n                    <li onClick={this.connectNetwork(\"google\")}><i className=\"social-icon google\"/></li>\n                </ul>\n\t            {hasFB?<Translate value={getTranslation(\"message\")}/>:''}\n            </div>\n        )\n    }\n}\n\n\nexport default NewAccount;\n"]},"sourceType":"script","hash":"b123c0dd024e7ee33e8141a0626dbfe382fda3cc"}
