{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/campaigns/ui/containers/campaign-invites.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"imports/modules/campaigns/ui/containers/campaign-invites.jsx","filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/campaigns/ui/containers/campaign-invites.jsx","passPerPreset":false,"envName":"development","cwd":"/home/blackstoneteam/repos/viralizing-web/app","root":"/home/blackstoneteam/repos/viralizing-web/app","presets":[],"generatorOpts":{"filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/campaigns/ui/containers/campaign-invites.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/modules/campaigns/ui/containers/campaign-invites.jsx"}},"code":"let React;\nmodule.watch(require(\"react\"), {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet graphql;\nmodule.watch(require(\"react-apollo\"), {\n  graphql(v) {\n    graphql = v;\n  }\n\n}, 1);\nlet Loading;\nmodule.watch(require(\"../../../core/ui/components/loading\"), {\n  default(v) {\n    Loading = v;\n  }\n\n}, 2);\nlet CampaignInvitesList;\nmodule.watch(require(\"../components/invites\"), {\n  default(v) {\n    CampaignInvitesList = v;\n  }\n\n}, 3);\nlet createContainer;\nmodule.watch(require(\"meteor/react-meteor-data\"), {\n  createContainer(v) {\n    createContainer = v;\n  }\n\n}, 4);\nlet gql;\nmodule.watch(require(\"graphql-tag\"), {\n  default(v) {\n    gql = v;\n  }\n\n}, 5);\n\nclass CampaignInvitesContainer extends React.Component {\n  render() {\n    let {\n      invitesCampaign,\n      teamAttacksOwn,\n      accounts,\n      campaign,\n      refetch\n    } = this.props;\n    return React.createElement(\"div\", null, this.props.loading ? React.createElement(Loading, null) : React.createElement(CampaignInvitesList, {\n      invites: invitesCampaign,\n      accounts: accounts,\n      teamAttacks: teamAttacksOwn,\n      campaign: campaign,\n      refetch: refetch\n    }));\n  }\n\n}\n\nconst QUERY = gql`\nquery($campaignID: String!){\ninvitesCampaign(campaignID: $campaignID){\n        _id,\n        type,\n        status,\n        deadline,\n        budget,\n        useHashtag,\n        invitesAvailable,\n        networks{\n            facebook,\n            twitter,\n            instagram\n        }\n        options{\n            message,\n            media,\n            date,\n            quantity\n        },\n        influencers {\n            _id\n            network\n            information{\n                name,\n                lastName,\n                avatar\n            }\n        },\n        teamAttacks{\n          name,\n          _id,\n          members{\n             _id\n            network\n            information{\n                name,\n                lastName,\n                avatar\n            }\n            pricing{\n                post\n                share\n                partnership\n                ambassador,\n                profilePicture,\n                coverPhoto,\n                noPostHour,\n                noPostDay,\n            }\n          }\n        },\n    }\n    accounts{\n        _id,\n        network,\n        information{\n            name,\n            lastName,\n            avatar\n        },\n    }\n    teamAttacksOwn{\n        _id,\n        owner {\n            _id\n        },\n        members {\n            _id,\n            network,\n            information{\n                name,\n                lastName,\n                avatar,\n                birthDate,\n                country,\n                gender\n            }\n            pricing{\n                post\n                share\n                partnership\n                ambassador,\n                profilePicture,\n                coverPhoto,\n                noPostHour,\n                noPostDay,\n            }\n        },\n        name,\n        type\n    }\n}\n`;\nconst withData = graphql(QUERY, {\n  props: ({\n    data: {\n      error,\n      loading,\n      invitesCampaign,\n      teamAttacksOwn,\n      accounts,\n      refetch\n    }\n  }) => {\n    if (loading) return {\n      loading: true\n    };\n    if (error) return {\n      hasErrors: true\n    };\n    return {\n      loading,\n      invitesCampaign,\n      accounts,\n      teamAttacksOwn,\n      refetch\n    };\n  },\n  options: ownProps => ({\n    pollInterval: 150000,\n    variables: {\n      \"campaignID\": ownProps.campaign._id\n    }\n  })\n});\nconst CampaignInvitesContainerWithData = withData(CampaignInvitesContainer);\nmodule.exportDefault(CampaignInvitesContainerWithData);","map":{"version":3,"sources":["imports/modules/campaigns/ui/containers/campaign-invites.jsx"],"names":["React","module","watch","require","default","v","graphql","Loading","CampaignInvitesList","createContainer","gql","CampaignInvitesContainer","Component","render","invitesCampaign","teamAttacksOwn","accounts","campaign","refetch","props","loading","QUERY","withData","data","error","hasErrors","options","ownProps","pollInterval","variables","_id","CampaignInvitesContainerWithData","exportDefault"],"mappings":"AAAA,IAAIA,KAAJ;AAAUC,OAAOC,KAAP,CAAaC,QAAQ,OAAR,CAAb,EAA8B;AAACC,UAAQC,CAAR,EAAU;AAACL,YAAMK,CAAN;AAAQ;;AAApB,CAA9B,EAAoD,CAApD;AAAuD,IAAIC,OAAJ;AAAYL,OAAOC,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACG,UAAQD,CAAR,EAAU;AAACC,cAAQD,CAAR;AAAU;;AAAtB,CAArC,EAA6D,CAA7D;AAAgE,IAAIE,OAAJ;AAAYN,OAAOC,KAAP,CAAaC,QAAQ,qCAAR,CAAb,EAA4D;AAACC,UAAQC,CAAR,EAAU;AAACE,cAAQF,CAAR;AAAU;;AAAtB,CAA5D,EAAoF,CAApF;AAAuF,IAAIG,mBAAJ;AAAwBP,OAAOC,KAAP,CAAaC,QAAQ,uBAAR,CAAb,EAA8C;AAACC,UAAQC,CAAR,EAAU;AAACG,0BAAoBH,CAApB;AAAsB;;AAAlC,CAA9C,EAAkF,CAAlF;AAAqF,IAAII,eAAJ;AAAoBR,OAAOC,KAAP,CAAaC,QAAQ,0BAAR,CAAb,EAAiD;AAACM,kBAAgBJ,CAAhB,EAAkB;AAACI,sBAAgBJ,CAAhB;AAAkB;;AAAtC,CAAjD,EAAyF,CAAzF;AAA4F,IAAIK,GAAJ;AAAQT,OAAOC,KAAP,CAAaC,QAAQ,aAAR,CAAb,EAAoC;AAACC,UAAQC,CAAR,EAAU;AAACK,UAAIL,CAAJ;AAAM;;AAAlB,CAApC,EAAwD,CAAxD;;AAQrd,MAAMM,wBAAN,SAAuCX,MAAMY,SAA7C,CAAuD;AACnDC,WAAS;AACL,QAAG;AAACC,qBAAD;AAAiBC,oBAAjB;AAAgCC,cAAhC;AAAyCC,cAAzC;AAAkDC;AAAlD,QAA2D,KAAKC,KAAnE;AACA,WACI,iCACK,KAAKA,KAAL,CAAWC,OAAX,GAAqB,oBAAC,OAAD,OAArB,GACG,oBAAC,mBAAD;AAAqB,eAASN,eAA9B;AACqB,gBAAUE,QAD/B;AAEqB,mBAAaD,cAFlC;AAGqB,gBAAUE,QAH/B;AAIqB,eAASC;AAJ9B,MAFR,CADJ;AAUH;;AAbkD;;AAgBvD,MAAMG,QAAQX,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAlB;AAgGA,MAAMY,WAAWhB,QAAQe,KAAR,EAAe;AAC5BF,SAAO,CAAC;AAACI,UAAM;AAACC,WAAD;AAAQJ,aAAR;AAAiBN,qBAAjB;AAAkCC,oBAAlC;AAAkDC,cAAlD;AAA4DE;AAA5D;AAAP,GAAD,KAAkF;AACrF,QAAIE,OAAJ,EAAa,OAAO;AAACA,eAAS;AAAV,KAAP;AACb,QAAII,KAAJ,EAAW,OAAO;AAACC,iBAAW;AAAZ,KAAP;AACX,WAAO;AACHL,aADG;AAEHN,qBAFG;AAGHE,cAHG;AAIHD,oBAJG;AAKHG;AALG,KAAP;AAOH,GAX2B;AAY5BQ,WAAUC,QAAD,KAAe;AAChBC,kBAAc,MADE;AAEhBC,eAAW;AACP,oBAAcF,SAASV,QAAT,CAAkBa;AADzB;AAFK,GAAf;AAZmB,CAAf,CAAjB;AAqBA,MAAMC,mCAAmCT,SAASX,wBAAT,CAAzC;AA7IAV,OAAO+B,aAAP,CAgJeD,gCAhJf","sourcesContent":["import React from \"react\";\nimport {graphql} from \"react-apollo\";\nimport Loading from \"../../../core/ui/components/loading\";\nimport CampaignInvitesList from \"../components/invites\";\nimport {createContainer} from \"meteor/react-meteor-data\";\nimport gql from \"graphql-tag\";\n\n\nclass CampaignInvitesContainer extends React.Component {\n    render() {\n        let{invitesCampaign,teamAttacksOwn,accounts,campaign,refetch}=this.props;\n        return (\n            <div>\n                {this.props.loading ? <Loading/> :\n                    <CampaignInvitesList invites={invitesCampaign}\n                                         accounts={accounts}\n                                         teamAttacks={teamAttacksOwn}\n                                         campaign={campaign}\n                                         refetch={refetch}/>}\n            </div>\n        )\n    }\n}\n\nconst QUERY = gql`\nquery($campaignID: String!){\ninvitesCampaign(campaignID: $campaignID){\n        _id,\n        type,\n        status,\n        deadline,\n        budget,\n        useHashtag,\n        invitesAvailable,\n        networks{\n            facebook,\n            twitter,\n            instagram\n        }\n        options{\n            message,\n            media,\n            date,\n            quantity\n        },\n        influencers {\n            _id\n            network\n            information{\n                name,\n                lastName,\n                avatar\n            }\n        },\n        teamAttacks{\n          name,\n          _id,\n          members{\n             _id\n            network\n            information{\n                name,\n                lastName,\n                avatar\n            }\n            pricing{\n                post\n                share\n                partnership\n                ambassador,\n                profilePicture,\n                coverPhoto,\n                noPostHour,\n                noPostDay,\n            }\n          }\n        },\n    }\n    accounts{\n        _id,\n        network,\n        information{\n            name,\n            lastName,\n            avatar\n        },\n    }\n    teamAttacksOwn{\n        _id,\n        owner {\n            _id\n        },\n        members {\n            _id,\n            network,\n            information{\n                name,\n                lastName,\n                avatar,\n                birthDate,\n                country,\n                gender\n            }\n            pricing{\n                post\n                share\n                partnership\n                ambassador,\n                profilePicture,\n                coverPhoto,\n                noPostHour,\n                noPostDay,\n            }\n        },\n        name,\n        type\n    }\n}\n`;\n\nconst withData = graphql(QUERY, {\n    props: ({data: {error, loading, invitesCampaign, teamAttacksOwn, accounts, refetch}}) => {\n        if (loading) return {loading: true};\n        if (error) return {hasErrors: true};\n        return {\n            loading,\n            invitesCampaign,\n            accounts,\n            teamAttacksOwn,\n            refetch,\n        };\n    },\n    options: (ownProps) => ({\n            pollInterval: 150000,\n            variables: {\n                \"campaignID\": ownProps.campaign._id\n            }\n        }\n    ),\n});\n\nconst CampaignInvitesContainerWithData = withData(CampaignInvitesContainer);\n\n\nexport default CampaignInvitesContainerWithData;\n"]},"sourceType":"script","hash":"093418457f140c907fde8911d2e07ea579eddd12"}
