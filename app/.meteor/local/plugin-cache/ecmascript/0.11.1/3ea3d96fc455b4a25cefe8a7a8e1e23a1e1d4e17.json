{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/campaigns/ui/containers/campaign-user-invite.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"imports/modules/campaigns/ui/containers/campaign-user-invite.jsx","filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/campaigns/ui/containers/campaign-user-invite.jsx","passPerPreset":false,"envName":"development","cwd":"/home/blackstoneteam/repos/viralizing-web/app","root":"/home/blackstoneteam/repos/viralizing-web/app","presets":[],"generatorOpts":{"filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/campaigns/ui/containers/campaign-user-invite.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/modules/campaigns/ui/containers/campaign-user-invite.jsx"}},"code":"let React;\nmodule.watch(require(\"react\"), {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet graphql;\nmodule.watch(require(\"react-apollo\"), {\n  graphql(v) {\n    graphql = v;\n  }\n\n}, 1);\nlet Field;\nmodule.watch(require(\"redux-form\"), {\n  Field(v) {\n    Field = v;\n  }\n\n}, 2);\nlet Loading;\nmodule.watch(require(\"../../../core/ui/components/loading\"), {\n  default(v) {\n    Loading = v;\n  }\n\n}, 3);\nlet InviteStatus;\nmodule.watch(require(\"../components/invite/status\"), {\n  default(v) {\n    InviteStatus = v;\n  }\n\n}, 4);\nlet AccountShares;\nmodule.watch(require(\"../components/invite/share\"), {\n  default(v) {\n    AccountShares = v;\n  }\n\n}, 5);\nlet createContainer;\nmodule.watch(require(\"meteor/react-meteor-data\"), {\n  createContainer(v) {\n    createContainer = v;\n  }\n\n}, 6);\nlet gql;\nmodule.watch(require(\"graphql-tag\"), {\n  default(v) {\n    gql = v;\n  }\n\n}, 7);\nlet notie;\nmodule.watch(require(\"notie\"), {\n  default(v) {\n    notie = v;\n  }\n\n}, 8);\n\nclass AccountInviteContainer extends React.Component {\n  render() {\n    let {\n      manager,\n      userId,\n      campaign\n    } = this.props;\n    let managerInvite = null;\n    let shareInvites = [];\n\n    if (this.props.campaignInvites) {\n      managerInvite = this.props.campaignInvites.filter(i => i.type === \"manager\")[0];\n      shareInvites = this.props.campaignInvites.filter(i => i.type === \"share\");\n    }\n\n    let isManager = false;\n    let isOwner = false;\n    let userID = Meteor.userId();\n\n    if (campaign) {\n      if (campaign.owner._id === userID) {\n        isOwner = true;\n      }\n\n      if (campaign.manager._id === userID) {\n        isManager = true;\n      }\n    }\n\n    return React.createElement(\"div\", null, this.props.loading ? React.createElement(Loading, null) : React.createElement(\"div\", null, React.createElement(InviteStatus, {\n      invite: managerInvite,\n      refetch: this.props.refetch,\n      manager: manager,\n      userId: userId,\n      isOwner: isOwner,\n      isManager: isManager,\n      campaign: campaign\n    }), React.createElement(Field, {\n      component: AccountShares,\n      name: \"shares\",\n      invites: shareInvites,\n      refetch: this.props.refetch,\n      manager: manager,\n      userId: userId,\n      isOwner: isOwner,\n      isManager: isManager,\n      campaign: campaign\n    })));\n  }\n\n}\n\nconst QUERY = gql`\n    query($campaignID:String!){\n        campaignInvites(campaignID:$campaignID){\n            _id,\n            email,\n            sent,\n            status,\n            type,\n            owner {\n                _id,\n                profile{\n                    avatar,\n                    name,\n                    lastName\n                },\n                emails {\n                    address\n                }\n            },\n        }\n    }\n`;\nconst withData = graphql(QUERY, {\n  props: ({\n    data: {\n      error,\n      loading,\n      accountInvites,\n      refetch\n    }\n  }) => {\n    if (loading) return {\n      loading: true\n    };\n    if (error) return {\n      hasErrors: true\n    };\n    return {\n      loading,\n      accountInvites,\n      refetch\n    };\n  },\n  options: ownProps => ({\n    pollInterval: 150000,\n    variables: {\n      \"campaignID\": ownProps.campaign._id\n    }\n  })\n});\nconst AccountInviteContainerWithData = withData(AccountInviteContainer);\nmodule.exportDefault(AccountInviteContainerWithData);","map":{"version":3,"sources":["imports/modules/campaigns/ui/containers/campaign-user-invite.jsx"],"names":["React","module","watch","require","default","v","graphql","Field","Loading","InviteStatus","AccountShares","createContainer","gql","notie","AccountInviteContainer","Component","render","manager","userId","campaign","props","managerInvite","shareInvites","campaignInvites","filter","i","type","isManager","isOwner","userID","Meteor","owner","_id","loading","refetch","QUERY","withData","data","error","accountInvites","hasErrors","options","ownProps","pollInterval","variables","AccountInviteContainerWithData","exportDefault"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {graphql} from \"react-apollo\";\nimport { Field } from \"redux-form\";\nimport Loading from \"../../../core/ui/components/loading\";\nimport InviteStatus from \"../components/invite/status\";\nimport AccountShares from \"../components/invite/share\"\nimport {createContainer} from \"meteor/react-meteor-data\";\nimport gql from \"graphql-tag\";\n\nimport notie from \"notie\";\n\nclass AccountInviteContainer extends React.Component {\n    render() {\n        let {manager, userId, campaign}=this.props;\n        let managerInvite=null;\n        let shareInvites=[];\n        if(this.props.campaignInvites){\n            managerInvite=this.props.campaignInvites.filter((i)=>i.type===\"manager\")[0];\n            shareInvites=this.props.campaignInvites.filter((i)=>i.type===\"share\");\n        }\n        let isManager=false;\n        let isOwner=false;\n        let userID=Meteor.userId();\n        if(campaign){\n            if(campaign.owner._id===userID){\n                isOwner=true;\n            }\n            if(campaign.manager._id===userID){\n                isManager=true;\n            }\n        }\n\n        return (\n            <div>\n                {this.props.loading ? <Loading/> :\n                    <div>\n                        <InviteStatus invite={managerInvite}\n                                      refetch={this.props.refetch}\n                                      manager={manager}\n                                      userId={userId}\n                                      isOwner={isOwner}\n                                      isManager={isManager}\n                                      campaign={campaign}/>\n                        <Field component={AccountShares}\n                               name=\"shares\"\n                               invites={shareInvites}\n                               refetch={this.props.refetch}\n                               manager={manager}\n                               userId={userId}\n                               isOwner={isOwner}\n                               isManager={isManager}\n                               campaign={campaign}/>\n                    </div>}\n            </div>\n        )\n    }\n}\n\nconst QUERY = gql`\n    query($campaignID:String!){\n        campaignInvites(campaignID:$campaignID){\n            _id,\n            email,\n            sent,\n            status,\n            type,\n            owner {\n                _id,\n                profile{\n                    avatar,\n                    name,\n                    lastName\n                },\n                emails {\n                    address\n                }\n            },\n        }\n    }\n`;\n\nconst withData = graphql(QUERY, {\n    props: ({data: {error, loading, accountInvites, refetch}}) => {\n        if (loading) return {loading: true};\n        if (error) return {hasErrors: true};\n        return {\n            loading,\n            accountInvites,\n            refetch,\n        };\n    },\n    options: (ownProps) => (\n        {\n            pollInterval: 150000,\n            variables: {\n                \"campaignID\": ownProps.campaign._id\n            }\n        }\n    ),\n});\n\nconst AccountInviteContainerWithData = withData(AccountInviteContainer);\n\n\nexport default AccountInviteContainerWithData;"]},"sourceType":"script","hash":"3ea3d96fc455b4a25cefe8a7a8e1e23a1e1d4e17"}
