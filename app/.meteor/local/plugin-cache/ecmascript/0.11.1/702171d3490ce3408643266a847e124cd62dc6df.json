{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/twitter/server/cover-profile-photo.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"imports/modules/twitter/server/cover-profile-photo.jsx","filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/twitter/server/cover-profile-photo.jsx","passPerPreset":false,"envName":"development","cwd":"/home/blackstoneteam/repos/viralizing-web/app","root":"/home/blackstoneteam/repos/viralizing-web/app","presets":[],"generatorOpts":{"filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/twitter/server/cover-profile-photo.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/modules/twitter/server/cover-profile-photo.jsx"}},"code":"let TwitterConnection;\nmodule.watch(require(\"./connection\"), {\n  default(v) {\n    TwitterConnection = v;\n  }\n\n}, 0);\nlet encode, decode;\nmodule.watch(require(\"node-base64-image\"), {\n  encode(v) {\n    encode = v;\n  },\n\n  decode(v) {\n    decode = v;\n  }\n\n}, 1);\nMeteor.methods({\n  \"twitter-update-profile-photo\": function (connection, coverURL, callback) {\n    if (typeof connection === 'string') {\n      let account = SocialAccounts.findOne({\n        _id: connection\n      });\n      connection = account.connection;\n    }\n\n    console.log(connection);\n    let client = TwitterConnection(connection.accessToken, connection.accessTokenSecret);\n\n    if (client) {\n      return encode(coverURL, {\n        string: true\n      }, function (err, image) {\n        if (err) {\n          console.log('Error: ' + err);\n        } //console.log('image: ',res)\n\n\n        return client.post('account/update_profile_image', {\n          image\n        }, function (error, tweet, response) {\n          if (error) {\n            console.log('Error: ', error);\n          }\n\n          console.log(tweet);\n\n          if (callback) {\n            callback();\n          }\n        });\n      });\n    }\n  },\n  \"twitter-update-cover-photo\": function (connection, coverURL, callback) {\n    if (typeof connection === 'string') {\n      let account = SocialAccounts.findOne({\n        _id: connection\n      });\n      connection = account.connection;\n    }\n\n    console.log(connection);\n    let client = TwitterConnection(connection.accessToken, connection.accessTokenSecret);\n\n    if (client) {\n      return encode(coverURL, {\n        string: true\n      }, function (err, banner) {\n        if (err) {\n          console.log('Error: ' + err);\n        } //console.log('image: ',res)\n\n\n        return client.post('account/update_profile_banner', {\n          banner\n        }, function (error, tweet, response) {\n          if (error) {\n            console.log('Error: ', error);\n          }\n\n          if (callback) {\n            callback();\n          }\n        });\n      });\n    }\n  }\n});","map":{"version":3,"sources":["imports/modules/twitter/server/cover-profile-photo.jsx"],"names":["TwitterConnection","module","watch","require","default","v","encode","decode","Meteor","methods","connection","coverURL","callback","account","SocialAccounts","findOne","_id","console","log","client","accessToken","accessTokenSecret","string","err","image","post","error","tweet","response","banner"],"mappings":"AAAA,IAAIA,iBAAJ;AAAsBC,OAAOC,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACC,UAAQC,CAAR,EAAU;AAACL,wBAAkBK,CAAlB;AAAoB;;AAAhC,CAArC,EAAuE,CAAvE;AAA0E,IAAIC,MAAJ,EAAWC,MAAX;AAAkBN,OAAOC,KAAP,CAAaC,QAAQ,mBAAR,CAAb,EAA0C;AAACG,SAAOD,CAAP,EAAS;AAACC,aAAOD,CAAP;AAAS,GAApB;;AAAqBE,SAAOF,CAAP,EAAS;AAACE,aAAOF,CAAP;AAAS;;AAAxC,CAA1C,EAAoF,CAApF;AAIlHG,OAAOC,OAAP,CAAe;AACd,kCAAgC,UAAUC,UAAV,EAAsBC,QAAtB,EAAgCC,QAAhC,EAA0C;AACzE,QAAI,OAAOF,UAAP,KAAuB,QAA3B,EAAqC;AACpC,UAAIG,UAAUC,eAAeC,OAAf,CAAuB;AAACC,aAAKN;AAAN,OAAvB,CAAd;AACAA,mBAAaG,QAAQH,UAArB;AACA;;AACDO,YAAQC,GAAR,CAAYR,UAAZ;AACA,QAAIS,SAASnB,kBAAkBU,WAAWU,WAA7B,EAA0CV,WAAWW,iBAArD,CAAb;;AAEA,QAAIF,MAAJ,EAAY;AACX,aAAOb,OAAOK,QAAP,EAAiB;AAACW,gBAAQ;AAAT,OAAjB,EAAiC,UAAUC,GAAV,EAAeC,KAAf,EAAsB;AAC7D,YAAID,GAAJ,EAAS;AACRN,kBAAQC,GAAR,CAAY,YAAYK,GAAxB;AACA,SAH4D,CAI7D;;;AACA,eAAOJ,OAAOM,IAAP,CAAY,8BAAZ,EAA4C;AAACD;AAAD,SAA5C,EAAqD,UAAUE,KAAV,EAAiBC,KAAjB,EAAwBC,QAAxB,EAAkC;AAC7F,cAAIF,KAAJ,EAAW;AACVT,oBAAQC,GAAR,CAAY,SAAZ,EAAuBQ,KAAvB;AACA;;AACDT,kBAAQC,GAAR,CAAYS,KAAZ;;AACA,cAAIf,QAAJ,EAAc;AACbA;AACA;AACD,SARM,CAAP;AASA,OAdM,CAAP;AAeA;AACD,GA1Ba;AA4Bd,gCAA8B,UAAUF,UAAV,EAAsBC,QAAtB,EAAgCC,QAAhC,EAA0C;AACvE,QAAI,OAAOF,UAAP,KAAuB,QAA3B,EAAqC;AACpC,UAAIG,UAAUC,eAAeC,OAAf,CAAuB;AAACC,aAAKN;AAAN,OAAvB,CAAd;AACAA,mBAAaG,QAAQH,UAArB;AACA;;AACDO,YAAQC,GAAR,CAAYR,UAAZ;AACA,QAAIS,SAASnB,kBAAkBU,WAAWU,WAA7B,EAA0CV,WAAWW,iBAArD,CAAb;;AAEA,QAAIF,MAAJ,EAAY;AACX,aAAOb,OAAOK,QAAP,EAAiB;AAACW,gBAAQ;AAAT,OAAjB,EAAiC,UAAUC,GAAV,EAAeM,MAAf,EAAuB;AAC9D,YAAIN,GAAJ,EAAS;AACRN,kBAAQC,GAAR,CAAY,YAAYK,GAAxB;AACA,SAH6D,CAI9D;;;AACA,eAAOJ,OAAOM,IAAP,CAAY,+BAAZ,EAA6C;AAACI;AAAD,SAA7C,EAAuD,UAAUH,KAAV,EAAiBC,KAAjB,EAAwBC,QAAxB,EAAkC;AAC/F,cAAIF,KAAJ,EAAW;AACVT,oBAAQC,GAAR,CAAY,SAAZ,EAAuBQ,KAAvB;AACA;;AACD,cAAId,QAAJ,EAAc;AACbA;AACA;AACD,SAPM,CAAP;AAQA,OAbM,CAAP;AAcA;AACD;AApDa,CAAf","sourcesContent":["import TwitterConnection from \"./connection\";\nimport {encode, decode} from 'node-base64-image';\n\n\nMeteor.methods({\n\t\"twitter-update-profile-photo\": function (connection, coverURL, callback) {\n\t\tif (typeof(connection) === 'string') {\n\t\t\tlet account = SocialAccounts.findOne({_id: connection})\n\t\t\tconnection = account.connection\n\t\t}\n\t\tconsole.log(connection)\n\t\tlet client = TwitterConnection(connection.accessToken, connection.accessTokenSecret)\n\n\t\tif (client) {\n\t\t\treturn encode(coverURL, {string: true}, function (err, image) {\n\t\t\t\tif (err) {\n\t\t\t\t\tconsole.log('Error: ' + err)\n\t\t\t\t}\n\t\t\t\t//console.log('image: ',res)\n\t\t\t\treturn client.post('account/update_profile_image', {image}, function (error, tweet, response) {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\tconsole.log('Error: ', error)\n\t\t\t\t\t}\n\t\t\t\t\tconsole.log(tweet)\n\t\t\t\t\tif (callback) {\n\t\t\t\t\t\tcallback()\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t},\n\n\t\"twitter-update-cover-photo\": function (connection, coverURL, callback) {\n\t\tif (typeof(connection) === 'string') {\n\t\t\tlet account = SocialAccounts.findOne({_id: connection})\n\t\t\tconnection = account.connection\n\t\t}\n\t\tconsole.log(connection)\n\t\tlet client = TwitterConnection(connection.accessToken, connection.accessTokenSecret)\n\n\t\tif (client) {\n\t\t\treturn encode(coverURL, {string: true}, function (err, banner) {\n\t\t\t\tif (err) {\n\t\t\t\t\tconsole.log('Error: ' + err)\n\t\t\t\t}\n\t\t\t\t//console.log('image: ',res)\n\t\t\t\treturn client.post('account/update_profile_banner', {banner}, function (error, tweet, response) {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\tconsole.log('Error: ', error)\n\t\t\t\t\t}\n\t\t\t\t\tif (callback) {\n\t\t\t\t\t\tcallback()\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t},\n});\n"]},"sourceType":"script","hash":"702171d3490ce3408643266a847e124cd62dc6df"}
