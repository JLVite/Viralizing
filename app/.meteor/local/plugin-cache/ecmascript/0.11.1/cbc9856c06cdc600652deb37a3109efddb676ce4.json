{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/core/ui/components/forms/input-gallery.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"imports/modules/core/ui/components/forms/input-gallery.jsx","filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/core/ui/components/forms/input-gallery.jsx","passPerPreset":false,"envName":"development","cwd":"/home/blackstoneteam/repos/viralizing-web/app","root":"/home/blackstoneteam/repos/viralizing-web/app","presets":[],"generatorOpts":{"filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/core/ui/components/forms/input-gallery.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/modules/core/ui/components/forms/input-gallery.jsx"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/builtin/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/builtin/objectSpread\"));\n\nlet React;\nmodule.watch(require(\"react\"), {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet Lightbox;\nmodule.watch(require(\"react-images\"), {\n  default(v) {\n    Lightbox = v;\n  }\n\n}, 1);\nlet I18n, Translate;\nmodule.watch(require(\"react-redux-i18n\"), {\n  I18n(v) {\n    I18n = v;\n  },\n\n  Translate(v) {\n    Translate = v;\n  }\n\n}, 2);\nlet ListEmpty;\nmodule.watch(require(\"../list-empty\"), {\n  default(v) {\n    ListEmpty = v;\n  }\n\n}, 3);\nlet swal;\nmodule.watch(require(\"sweetalert2\"), {\n  default(v) {\n    swal = v;\n  }\n\n}, 4);\nlet InputFileUpload;\nmodule.watch(require(\"./input-file-upload\"), {\n  default(v) {\n    InputFileUpload = v;\n  }\n\n}, 5);\nlet Button, ButtonGroup, DropdownButton, MenuItem, OverlayTrigger, Tooltip;\nmodule.watch(require(\"react-bootstrap\"), {\n  Button(v) {\n    Button = v;\n  },\n\n  ButtonGroup(v) {\n    ButtonGroup = v;\n  },\n\n  DropdownButton(v) {\n    DropdownButton = v;\n  },\n\n  MenuItem(v) {\n    MenuItem = v;\n  },\n\n  OverlayTrigger(v) {\n    OverlayTrigger = v;\n  },\n\n  Tooltip(v) {\n    Tooltip = v;\n  }\n\n}, 6);\n\nconst crateTooltip = message => {\n  return React.createElement(Tooltip, {\n    id: Number(new Date()) * Math.random() * 1000\n  }, message);\n};\n\nclass InputGallery extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      lightboxIsOpen: false,\n      currentImage: 0,\n      currentAlbum: 0\n    };\n    this.closeLightbox = this.closeLightbox.bind(this);\n    this.gotoNext = this.gotoNext.bind(this);\n    this.gotoPrevious = this.gotoPrevious.bind(this);\n    this.gotoImage = this.gotoImage.bind(this);\n    this.handleClickImage = this.handleClickImage.bind(this);\n    this.openLightbox = this.openLightbox.bind(this);\n    this.addImage = this.addImage.bind(this);\n    this.deleteImage = this.deleteImage.bind(this);\n    this.addAlbum = this.addAlbum.bind(this);\n    this.deleteAlbum = this.deleteAlbum.bind(this);\n    this.updateCurrentAlbum = this.updateCurrentAlbum.bind(this);\n  }\n\n  openLightbox(index, event) {\n    event.preventDefault();\n    this.setState({\n      currentImage: index,\n      lightboxIsOpen: true\n    });\n  }\n\n  closeLightbox() {\n    this.setState({\n      currentImage: 0,\n      lightboxIsOpen: false\n    });\n  }\n\n  gotoPrevious() {\n    this.setState({\n      currentImage: this.state.currentImage - 1\n    });\n  }\n\n  gotoNext() {\n    this.setState({\n      currentImage: this.state.currentImage + 1\n    });\n  }\n\n  gotoImage(index) {\n    this.setState({\n      currentImage: index\n    });\n  }\n\n  handleClickImage() {\n    if (this.state.currentImage === this.props.images.length - 1) return;\n    this.gotoNext();\n  }\n\n  renderGallery() {\n    const {\n      getTranslation,\n      readOnly,\n      input: {\n        value\n      }\n    } = this.props;\n    const albums = value;\n    const {\n      currentAlbum\n    } = this.state;\n    const album = albums[currentAlbum];\n    if (!album || album.content.length === 0) return React.createElement(ListEmpty, {\n      message: React.createElement(Translate, {\n        value: getTranslation(\"empty.message\")\n      }),\n      button: false,\n      callback: this.openModal\n    });\n    const gallery = album.content.map((image, i) => {\n      return React.createElement(\"li\", {\n        key: i\n      }, React.createElement(\"div\", {\n        className: \"widget widget-shadow\"\n      }, React.createElement(\"figure\", {\n        className: \"widget-header overlay-hover overlay\"\n      }, React.createElement(\"div\", {\n        className: \"overlay-figure overlay-scale\",\n        style: {\n          background: \"url(\" + image + \")\",\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center\",\n          minHeight: \"320px\"\n        },\n        alt: \"...\"\n      }), React.createElement(\"figcaption\", {\n        className: \"overlay-panel overlay-background overlay-fade overlay-icon\"\n      }, React.createElement(\"a\", {\n        className: \"icon wb-search\",\n        href: image,\n        onClick: e => this.openLightbox(i, e)\n      }), !readOnly && React.createElement(\"a\", {\n        className: \"icon wb-trash\",\n        href: image,\n        onClick: e => this.deleteImage(i, e)\n      })))));\n    });\n    return React.createElement(\"ul\", {\n      className: \"blocks blocks-100 blocks-xlg-3 blocks-md-2 blocks-sm-3 margin-top-20\"\n    }, gallery);\n  }\n\n  deleteImage(index, event) {\n    event.preventDefault();\n    const {\n      getTranslation,\n      input: {\n        value,\n        onChange\n      }\n    } = this.props;\n    const albums = [...value];\n    const {\n      currentAlbum\n    } = this.state;\n    swal({\n      title: I18n.t(getTranslation(\"delete.title\")),\n      text: I18n.t(getTranslation(\"delete.title\")),\n      type: 'warning',\n      showCancelButton: true,\n      cancelButtonText: I18n.t(getTranslation(\"delete.cancel\")),\n      confirmButtonText: I18n.t(getTranslation(\"delete.confirm\"))\n    }).then(function () {\n      albums[currentAlbum] = (0, _objectSpread2.default)({}, albums[currentAlbum]);\n      albums[currentAlbum].content = albums[currentAlbum].content.filter((a, i) => i !== index);\n      onChange(albums);\n    });\n  }\n\n  addImage(image) {\n    const {\n      input: {\n        value,\n        onChange\n      }\n    } = this.props;\n    const {\n      currentAlbum\n    } = this.state;\n    const albums = [...value];\n    albums[currentAlbum] = (0, _objectSpread2.default)({}, albums[currentAlbum]);\n    albums[currentAlbum].content = [...albums[currentAlbum].content, image];\n    onChange(albums);\n  }\n\n  addAlbum() {\n    const {\n      getTranslation,\n      input: {\n        value,\n        onChange\n      }\n    } = this.props;\n    const albums = [...value];\n    swal({\n      title: I18n.t(getTranslation(\"newAlbum.title\")),\n      input: 'text',\n      showCancelButton: true,\n      confirmButtonText: I18n.t(getTranslation(\"newAlbum.confirm\")),\n      cancelButtonText: I18n.t(getTranslation(\"newAlbum.cancel\"))\n    }).then(function (name) {\n      let newAlbum = {\n        name,\n        content: []\n      };\n      onChange([...albums, newAlbum]);\n    });\n  }\n\n  deleteAlbum() {\n    event.preventDefault();\n    const {\n      getTranslation,\n      input: {\n        value,\n        onChange\n      }\n    } = this.props;\n    const albums = [...value];\n    const {\n      currentAlbum\n    } = this.state;\n    let component = this;\n    swal({\n      title: I18n.t(getTranslation(\"delete.title\")),\n      text: I18n.t(getTranslation(\"delete.title\")),\n      type: 'warning',\n      showCancelButton: true,\n      cancelButtonText: I18n.t(getTranslation(\"delete.cancel\")),\n      confirmButtonText: I18n.t(getTranslation(\"delete.confirm\"))\n    }).then(function () {\n      albums.splice(currentAlbum, 1);\n      component.setState({\n        currentAlbum: component.state.currentAlbum - 1\n      }, function () {\n        onChange(albums);\n      });\n      onChange(albums);\n    });\n  }\n\n  updateCurrentAlbum(currentAlbum) {\n    let component = this;\n    return function () {\n      component.setState({\n        currentAlbum\n      });\n    };\n  }\n\n  render() {\n    const {\n      getTranslation,\n      readOnly,\n      input: {\n        value\n      }\n    } = this.props;\n    const albums = value;\n    const {\n      lightboxIsOpen,\n      currentImage,\n      currentAlbum\n    } = this.state;\n    const album = albums[currentAlbum];\n    return React.createElement(\"div\", null, React.createElement(\"div\", {\n      className: \"row\"\n    }, React.createElement(\"div\", {\n      className: \"col-md-4\"\n    }, React.createElement(\"h4\", null, React.createElement(Translate, {\n      value: getTranslation(\"title\")\n    }))), !readOnly && React.createElement(\"div\", {\n      className: \"col-md-8\"\n    }, React.createElement(ButtonGroup, {\n      bsClass: \"pull-right\"\n    }, React.createElement(OverlayTrigger, {\n      placement: \"top\",\n      overlay: crateTooltip(React.createElement(Translate, {\n        value: getTranslation(\"list.newImage\")\n      }))\n    }, React.createElement(Button, {\n      bsStyle: \"primary\"\n    }, React.createElement(InputFileUpload, {\n      content: React.createElement(\"i\", {\n        className: \"fa fa-cloud-upload\",\n        \"aria-hidden\": \"true\"\n      }),\n      uploader: this.props.uploader,\n      input: {\n        onChange: this.addImage\n      },\n      settings: {\n        multiple: false,\n        maxSize: 3 * 1024 * 1024,\n        className: \"button-drop-zone pull-right\",\n        activeClassName: \"button-drop-zone-active\",\n        accept: \"image/png, image/jpeg, image/gif\"\n      }\n    }))), React.createElement(OverlayTrigger, {\n      placement: \"top\",\n      overlay: crateTooltip(React.createElement(Translate, {\n        value: getTranslation(\"delete.albumHelper\")\n      }))\n    }, React.createElement(Button, {\n      bsStyle: \"primary\",\n      onClick: this.deleteAlbum\n    }, React.createElement(\"i\", {\n      className: \"fa fa-trash-o\",\n      \"aria-hidden\": \"true\"\n    }))), albums[currentAlbum] ? React.createElement(DropdownButton, {\n      bsStyle: \"primary\",\n      title: albums[currentAlbum] ? albums[currentAlbum].name : React.createElement(Translate, {\n        value: getTranslation(\"list.newAlbum\")\n      }),\n      id: \"bg-nested-dropdown\"\n    }, albums.map((a, i) => React.createElement(MenuItem, {\n      key: i,\n      eventKey: i,\n      className: \"dropdown-item\",\n      onClick: this.updateCurrentAlbum(i)\n    }, a.name)), React.createElement(MenuItem, {\n      eventKey: \"new\",\n      className: \"dropdown-item\",\n      onClick: this.addAlbum\n    }, React.createElement(\"i\", {\n      className: \"fa fa-plus-circle\",\n      style: {\n        marginRight: 5\n      },\n      \"aria-hidden\": \"true\"\n    }), React.createElement(Translate, {\n      value: getTranslation(\"list.newAlbum\")\n    }))) : React.createElement(Button, {\n      bsStyle: \"primary\",\n      onClick: this.addAlbum\n    }, React.createElement(\"i\", {\n      className: \"fa fa-plus-circle\",\n      style: {\n        marginRight: 5\n      },\n      \"aria-hidden\": \"true\"\n    }), React.createElement(Translate, {\n      value: getTranslation(\"list.newAlbum\")\n    }))))), React.createElement(\"div\", {\n      className: \"spacer-20\"\n    }), React.createElement(\"div\", {\n      className: \"panel\"\n    }, React.createElement(\"div\", {\n      className: \"panel-body container-fluid\"\n    }, this.renderGallery())), album && React.createElement(Lightbox, {\n      currentImage: currentImage,\n      images: album.content.map(i => ({\n        src: i\n      })),\n      isOpen: lightboxIsOpen,\n      onClickImage: this.handleClickImage,\n      onClickNext: this.gotoNext,\n      onClickPrev: this.gotoPrevious,\n      onClickThumbnail: this.gotoImage,\n      onClose: this.closeLightbox\n    }));\n  }\n\n}\n\nmodule.exportDefault(InputGallery);","map":{"version":3,"sources":["imports/modules/core/ui/components/forms/input-gallery.jsx"],"names":["React","module","watch","require","default","v","Lightbox","I18n","Translate","ListEmpty","swal","InputFileUpload","Button","ButtonGroup","DropdownButton","MenuItem","OverlayTrigger","Tooltip","crateTooltip","message","Number","Date","Math","random","InputGallery","Component","constructor","state","lightboxIsOpen","currentImage","currentAlbum","closeLightbox","bind","gotoNext","gotoPrevious","gotoImage","handleClickImage","openLightbox","addImage","deleteImage","addAlbum","deleteAlbum","updateCurrentAlbum","index","event","preventDefault","setState","props","images","length","renderGallery","getTranslation","readOnly","input","value","albums","album","content","openModal","gallery","map","image","i","background","backgroundSize","backgroundPosition","minHeight","e","onChange","title","t","text","type","showCancelButton","cancelButtonText","confirmButtonText","then","filter","a","name","newAlbum","component","splice","render","uploader","multiple","maxSize","className","activeClassName","accept","marginRight","src","exportDefault"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Lightbox from \"react-images\";\nimport {I18n, Translate} from \"react-redux-i18n\";\nimport ListEmpty from \"../list-empty\";\nimport swal from 'sweetalert2';\nimport InputFileUpload from \"./input-file-upload\";\nimport {Button, ButtonGroup, DropdownButton, MenuItem, OverlayTrigger, Tooltip} from \"react-bootstrap\";\n\nconst crateTooltip = (message) => {\n    return <Tooltip id={(Number(new Date()) * Math.random() * 1000)}>{message}</Tooltip>\n};\n\nclass InputGallery extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            lightboxIsOpen: false,\n            currentImage: 0,\n            currentAlbum: 0\n        };\n\n        this.closeLightbox = this.closeLightbox.bind(this);\n        this.gotoNext = this.gotoNext.bind(this);\n        this.gotoPrevious = this.gotoPrevious.bind(this);\n        this.gotoImage = this.gotoImage.bind(this);\n        this.handleClickImage = this.handleClickImage.bind(this);\n        this.openLightbox = this.openLightbox.bind(this);\n        this.addImage = this.addImage.bind(this);\n        this.deleteImage = this.deleteImage.bind(this);\n        this.addAlbum = this.addAlbum.bind(this);\n        this.deleteAlbum=this.deleteAlbum.bind(this);\n        this.updateCurrentAlbum = this.updateCurrentAlbum.bind(this);\n    }\n\n    openLightbox(index, event) {\n        event.preventDefault();\n        this.setState({\n            currentImage: index,\n            lightboxIsOpen: true,\n        });\n    }\n\n    closeLightbox() {\n        this.setState({\n            currentImage: 0,\n            lightboxIsOpen: false,\n        });\n    }\n\n    gotoPrevious() {\n        this.setState({\n            currentImage: this.state.currentImage - 1,\n        });\n    }\n\n    gotoNext() {\n        this.setState({\n            currentImage: this.state.currentImage + 1,\n        });\n    }\n\n    gotoImage(index) {\n        this.setState({\n            currentImage: index,\n        });\n    }\n\n    handleClickImage() {\n        if (this.state.currentImage === this.props.images.length - 1) return;\n\n        this.gotoNext();\n    }\n\n    renderGallery() {\n        const {getTranslation, readOnly, input: {value}} = this.props;\n        const albums = value;\n        const {currentAlbum} = this.state;\n        const album = albums[currentAlbum];\n\n        if (!album || album.content.length === 0) return (\n            <ListEmpty message={<Translate value={getTranslation(\"empty.message\")}/>} button={false}\n                       callback={this.openModal}/>\n        );\n\n        const gallery = album.content.map((image, i) => {\n            return (\n                <li key={i}>\n                    <div className=\"widget widget-shadow\">\n                        <figure className=\"widget-header overlay-hover overlay\">\n                            <div className=\"overlay-figure overlay-scale\"\n                                 style={{\n                                     background: \"url(\" + image + \")\",\n                                     backgroundSize: \"cover\",\n                                     backgroundPosition: \"center\",\n                                     minHeight: \"320px\"\n                                 }}\n                                 alt=\"...\"/>\n                            <figcaption className=\"overlay-panel overlay-background overlay-fade overlay-icon\">\n                                <a className=\"icon wb-search\" href={image} onClick={(e) => this.openLightbox(i, e)}/>\n                                {!readOnly &&\n                                <a className=\"icon wb-trash\" href={image} onClick={(e) => this.deleteImage(i, e)}/>}\n                            </figcaption>\n                        </figure>\n                    </div>\n                </li>\n            );\n        });\n\n        return (\n            <ul className=\"blocks blocks-100 blocks-xlg-3 blocks-md-2 blocks-sm-3 margin-top-20\">\n                {gallery}\n            </ul>\n        );\n    }\n\n    deleteImage(index, event) {\n        event.preventDefault();\n        const {getTranslation, input: {value, onChange}} = this.props;\n        const albums = [...value];\n        const {currentAlbum} = this.state;\n        swal({\n            title: I18n.t(getTranslation(\"delete.title\")),\n            text: I18n.t(getTranslation(\"delete.title\")),\n            type: 'warning',\n            showCancelButton: true,\n            cancelButtonText: I18n.t(getTranslation(\"delete.cancel\")),\n            confirmButtonText: I18n.t(getTranslation(\"delete.confirm\"))\n        }).then(function () {\n            albums[currentAlbum] = {...albums[currentAlbum]};\n            albums[currentAlbum].content=albums[currentAlbum].content.filter((a,i)=>i!==index);\n            onChange(albums);\n        });\n    }\n\n    addImage(image) {\n        const {input: {value, onChange}} = this.props;\n        const {currentAlbum} = this.state;\n        const albums = [...value];\n\n        albums[currentAlbum] = {...albums[currentAlbum]};\n        albums[currentAlbum].content = [...albums[currentAlbum].content, image];\n        onChange(albums);\n    }\n\n    addAlbum() {\n        const {getTranslation, input: {value, onChange}} = this.props;\n        const albums = [...value];\n        swal({\n            title: I18n.t(getTranslation(\"newAlbum.title\")),\n            input: 'text',\n            showCancelButton: true,\n            confirmButtonText: I18n.t(getTranslation(\"newAlbum.confirm\")),\n            cancelButtonText: I18n.t(getTranslation(\"newAlbum.cancel\")),\n        }).then(function (name) {\n            let newAlbum = {\n                name,\n                content: []\n            };\n            onChange([...albums, newAlbum]);\n        });\n\n    }\n\n    deleteAlbum() {\n        event.preventDefault();\n        const {getTranslation, input: {value, onChange}} = this.props;\n        const albums = [...value];\n        const {currentAlbum} = this.state;\n        let component=this;\n        swal({\n            title: I18n.t(getTranslation(\"delete.title\")),\n            text: I18n.t(getTranslation(\"delete.title\")),\n            type: 'warning',\n            showCancelButton: true,\n            cancelButtonText: I18n.t(getTranslation(\"delete.cancel\")),\n            confirmButtonText: I18n.t(getTranslation(\"delete.confirm\"))\n        }).then(function () {\n            albums.splice(currentAlbum,1);\n            component.setState({currentAlbum:(component.state.currentAlbum-1)},function(){\n                onChange(albums);\n            });\n            onChange(albums);\n        });\n    }\n\n    updateCurrentAlbum(currentAlbum) {\n        let component = this;\n        return function () {\n            component.setState({currentAlbum});\n        }\n    }\n\n    render() {\n        const {getTranslation, readOnly, input: {value}} = this.props;\n        const albums = value;\n        const {lightboxIsOpen, currentImage, currentAlbum} = this.state;\n        const album = albums[currentAlbum];\n        return (\n            <div>\n                <div className=\"row\">\n                    <div className=\"col-md-4\">\n                        <h4><Translate value={getTranslation(\"title\")}/></h4>\n                    </div>\n                    {!readOnly && (\n                        <div className=\"col-md-8\">\n                            <ButtonGroup bsClass=\"pull-right\">\n                                <OverlayTrigger placement=\"top\" overlay={crateTooltip(<Translate value={getTranslation(\"list.newImage\")}/>)}>\n                                    <Button bsStyle=\"primary\">\n                                        <InputFileUpload content={<i className=\"fa fa-cloud-upload\" aria-hidden=\"true\"/>}\n                                                         uploader={this.props.uploader}\n                                                         input={{onChange: this.addImage}}\n                                                         settings={{\n                                                             multiple: false,\n                                                             maxSize: 3 * 1024 * 1024,\n                                                             className: \"button-drop-zone pull-right\",\n                                                             activeClassName: \"button-drop-zone-active\",\n                                                             accept: \"image/png, image/jpeg, image/gif\"\n                                                         }}/>\n                                    </Button>\n                                </OverlayTrigger>\n\n                                <OverlayTrigger placement=\"top\" overlay={crateTooltip(<Translate\n                                    value={getTranslation(\"delete.albumHelper\")}/>)}>\n                                    <Button bsStyle=\"primary\" onClick={this.deleteAlbum}>\n                                        <i className=\"fa fa-trash-o\" aria-hidden=\"true\"/>\n                                    </Button>\n                                </OverlayTrigger>\n                                {albums[currentAlbum]?(\n                                    <DropdownButton bsStyle=\"primary\" title={albums[currentAlbum]?albums[currentAlbum].name:<Translate value={getTranslation(\"list.newAlbum\")}/>}\n                                                    id=\"bg-nested-dropdown\">\n                                        {albums.map((a, i) => (\n                                            <MenuItem key={i}\n                                                      eventKey={i}\n                                                      className=\"dropdown-item\"\n                                                      onClick={this.updateCurrentAlbum(i)}>{a.name}</MenuItem>\n                                        ))}\n                                        <MenuItem eventKey={\"new\"} className=\"dropdown-item\" onClick={this.addAlbum}>\n                                            <i className=\"fa fa-plus-circle\"\n                                               style={{marginRight:5}}\n                                               aria-hidden=\"true\"/>\n                                            <Translate\n                                                value={getTranslation(\"list.newAlbum\")}/>\n                                        </MenuItem>\n\n                                    </DropdownButton>\n                                ):(\n                                    <Button bsStyle=\"primary\" onClick={this.addAlbum}>\n                                        <i className=\"fa fa-plus-circle\"\n                                           style={{marginRight:5}}\n                                           aria-hidden=\"true\"/>\n                                        <Translate\n                                            value={getTranslation(\"list.newAlbum\")}/>\n                                    </Button>\n                                )}\n\n                            </ButtonGroup>\n                        </div>\n                    )}\n                </div>\n                <div className=\"spacer-20\"/>\n                <div className=\"panel\">\n                    <div className=\"panel-body container-fluid\">\n                        {this.renderGallery()}\n                    </div>\n                </div>\n\n                {album && (\n                    <Lightbox\n                        currentImage={currentImage}\n                        images={album.content.map(i => ({src: i}))}\n                        isOpen={lightboxIsOpen}\n                        onClickImage={this.handleClickImage}\n                        onClickNext={this.gotoNext}\n                        onClickPrev={this.gotoPrevious}\n                        onClickThumbnail={this.gotoImage}\n                        onClose={this.closeLightbox}\n                    />\n                )}\n            </div>\n        )\n    }\n}\n\nexport default InputGallery;"]},"sourceType":"script","hash":"cbc9856c06cdc600652deb37a3109efddb676ce4"}
