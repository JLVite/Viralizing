{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/google/server/adwords/campaign/create.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"imports/modules/google/server/adwords/campaign/create.jsx","filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/google/server/adwords/campaign/create.jsx","passPerPreset":false,"envName":"development","cwd":"/home/blackstoneteam/repos/viralizing-web/app","root":"/home/blackstoneteam/repos/viralizing-web/app","presets":[],"generatorOpts":{"filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/google/server/adwords/campaign/create.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/modules/google/server/adwords/campaign/create.jsx"}},"code":"let AdWordsConnection;\nmodule.watch(require(\"../connection\"), {\n  default(v) {\n    AdWordsConnection = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet Adwords;\nmodule.watch(require(\"node-adwords\"), {\n  default(v) {\n    Adwords = v;\n  }\n\n}, 2);\nlet XML2JS;\nmodule.watch(require(\"xml2js\"), {\n  default(v) {\n    XML2JS = v;\n  }\n\n}, 3);\nMeteor.methods({\n  \"google-adwords-campaign-create\": function (accountID, data) {\n    console.log(\"google-adwords-campaign-create\", accountID);\n    let account = SocialAccounts.findOne({\n      _id: accountID\n    });\n    let connection = account.connection;\n    let AdWords = AdWordsConnection(connection.idToken, connection.accessToken);\n    let campaignService = AdWords.getService('CampaignService', 'v201708');\n    let budgetService = AdWords.getService('BudgetService', 'v201708');\n    let budget = {\n      operator: \"ADD\",\n      operand: {\n        name: \"Test Budget \" + moment(new Date()).format(\"DD/MM/YYYY hh:mm:ss A\"),\n        amount: {\n          microAmount: \"50000000\"\n        }\n      }\n    };\n    let campaign = {\n      operator: \"ADD\",\n      operand: {\n        name: \"Test Campaign \" + moment(new Date()).format(\"DD/MM/YYYY hh:mm:ss A\"),\n        status: \"PAUSED\",\n        startDate: \"20170921\",\n        endDate: \"20371230\",\n        budget: {\n          budgetId: \"\"\n        },\n        settings: {\n          \"xsi:type\": \"GeoTargetTypeSetting\",\n          positiveGeoTargetType: \"DONT_CARE\"\n        },\n        advertisingChannelType: \"SEARCH\",\n        networkSetting: {\n          targetGoogleSearch: true,\n          targetSearchNetwork: true,\n          targetContentNetwork: false\n        },\n        biddingStrategyConfiguration: {\n          biddingScheme: {\n            \"xsi:type\": \"ManualCpcBiddingScheme\",\n            enhancedCpcEnabled: false\n          }\n        }\n      }\n    };\n    /*campaignService.get({serviceSelector}, (error, result) => {\n        console.log(\"ADWORDS_CAMPAIGN\",error, typeof result, result);\n    });*/\n    //let res= await campaignService.get({serviceSelector});\n\n    let budgetClient = Meteor.wrapAsync(budgetService.mutate, budgetService);\n    let campaigClient = Meteor.wrapAsync(campaignService.mutate, campaignService);\n\n    try {\n      let budgetRes = budgetClient({\n        operations: budget\n      });\n      campaign.operand.budget.budgetId = budgetRes.value[0].budgetId;\n      let campaignRes = campaigClient({\n        operations: campaign\n      });\n      console.log(\"SYNC_RES\", campaignRes);\n      return campaignRes;\n    } catch (e) {\n      console.log(\"ERROR\", typeof e.body, e);\n      let parser = Meteor.wrapAsync(XML2JS.parseString, XML2JS);\n      return parser(e.body)[\"soap:Envelope\"][\"soap:Body\"][0][\"soap:Fault\"][0].faultstring[0];\n    }\n  }\n});","map":{"version":3,"sources":["imports/modules/google/server/adwords/campaign/create.jsx"],"names":["AdWordsConnection","module","watch","require","default","v","Meteor","Adwords","XML2JS","methods","accountID","data","console","log","account","SocialAccounts","findOne","_id","connection","AdWords","idToken","accessToken","campaignService","getService","budgetService","budget","operator","operand","name","moment","Date","format","amount","microAmount","campaign","status","startDate","endDate","budgetId","settings","positiveGeoTargetType","advertisingChannelType","networkSetting","targetGoogleSearch","targetSearchNetwork","targetContentNetwork","biddingStrategyConfiguration","biddingScheme","enhancedCpcEnabled","budgetClient","wrapAsync","mutate","campaigClient","budgetRes","operations","value","campaignRes","e","body","parser","parseString","faultstring"],"mappings":"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","sourcesContent":["import AdWordsConnection from \"../connection\";\nimport {Meteor} from \"meteor/meteor\";\nimport Adwords from 'node-adwords';\nimport XML2JS from \"xml2js\";\n\nMeteor.methods({\n    \"google-adwords-campaign-create\": function (accountID, data) {\n        console.log(\"google-adwords-campaign-create\", accountID);\n        let account = SocialAccounts.findOne({_id: accountID});\n        let connection = account.connection;\n        let AdWords = AdWordsConnection(connection.idToken, connection.accessToken);\n        let campaignService = AdWords.getService('CampaignService', 'v201708');\n        let budgetService = AdWords.getService('BudgetService', 'v201708');\n\n        let budget = {\n            operator: \"ADD\",\n            operand: {\n                name: \"Test Budget \"+moment(new Date()).format(\"DD/MM/YYYY hh:mm:ss A\"),\n                amount: {\n                    microAmount: \"50000000\"\n                }\n            }\n        };\n\n        let campaign = {\n            operator: \"ADD\",\n            operand: {\n                name: \"Test Campaign \"+moment(new Date()).format(\"DD/MM/YYYY hh:mm:ss A\"),\n                status: \"PAUSED\",\n                startDate: \"20170921\",\n                endDate: \"20371230\",\n                budget: {\n                    budgetId: \"\"\n                },\n                settings: {\n                    \"xsi:type\": \"GeoTargetTypeSetting\",\n                    positiveGeoTargetType: \"DONT_CARE\"\n                },\n                advertisingChannelType: \"SEARCH\",\n                networkSetting: {\n                    targetGoogleSearch: true,\n                    targetSearchNetwork: true,\n                    targetContentNetwork: false\n                },\n                biddingStrategyConfiguration: {\n                    biddingScheme: {\n                        \"xsi:type\": \"ManualCpcBiddingScheme\",\n                        enhancedCpcEnabled: false\n                    }\n                }\n            }\n        };\n\n\n        /*campaignService.get({serviceSelector}, (error, result) => {\n            console.log(\"ADWORDS_CAMPAIGN\",error, typeof result, result);\n        });*/\n\n        //let res= await campaignService.get({serviceSelector});\n\n        let budgetClient = Meteor.wrapAsync(budgetService.mutate, budgetService);\n        let campaigClient = Meteor.wrapAsync(campaignService.mutate, campaignService);\n\n        try{\n            let budgetRes=budgetClient({operations:budget});\n            campaign.operand.budget.budgetId=budgetRes.value[0].budgetId;\n            let campaignRes=campaigClient({operations: campaign});\n            console.log(\"SYNC_RES\", campaignRes );\n            return campaignRes\n        }catch(e){\n            console.log(\"ERROR\", typeof e.body, e);\n            let parser=Meteor.wrapAsync(XML2JS.parseString, XML2JS);\n            return parser(e.body)[\"soap:Envelope\"][\"soap:Body\"][0][\"soap:Fault\"][0].faultstring[0]\n        }\n    }\n});"]},"sourceType":"script","hash":"9f102d1e21500d9754df994c9332b74077c1ca9e"}
