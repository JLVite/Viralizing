{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/stripe/server/subscriptions/invoice-items.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"imports/modules/stripe/server/subscriptions/invoice-items.jsx","filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/stripe/server/subscriptions/invoice-items.jsx","passPerPreset":false,"envName":"development","cwd":"/home/blackstoneteam/repos/viralizing-web/app","root":"/home/blackstoneteam/repos/viralizing-web/app","presets":[],"generatorOpts":{"filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/stripe/server/subscriptions/invoice-items.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/modules/stripe/server/subscriptions/invoice-items.jsx"}},"code":"let StripeConnection;\nmodule.watch(require(\"../connection\"), {\n  default(v) {\n    StripeConnection = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet check;\nmodule.watch(require(\"meteor/check\"), {\n  check(v) {\n    check = v;\n  }\n\n}, 2);\nlet Match;\nmodule.watch(require(\"meteor/check\"), {\n  Match(v) {\n    Match = v;\n  }\n\n}, 3);\nMeteor.methods({\n  \"stripe_invoice_items_create\": function (user, data) {\n    if (!user) {\n      throw new Meteor.Error(500, \"[Stripe Invoice Items] - No Application User Provided\");\n    }\n\n    if (!data) {\n      throw new Meteor.Error(500, \"[Stripe Invoice Items] - No Stripe Invoice Item Data Provided\");\n    }\n\n    check(user, Object);\n\n    if (!user.stripe) {\n      user = Meteor.users.findOne({\n        _id: user._id\n      });\n    }\n\n    if (!user.stripe.id) {\n      throw new Meteor.Error(500, \"[Stripe Invoice Items] - User (\" + user._id + \") does not have a Stripe ID & no source defined.\");\n    }\n\n    data.customer = user.stripe.id;\n    check(data, {\n      amount: Number,\n      currency: String,\n      customer: String,\n      description: Match.Maybe(String),\n      discountable: Match.Maybe(Boolean),\n      invoice: Match.Maybe(String),\n      metadata: Match.Maybe(Object),\n      subscription: Match.Maybe(String)\n    });\n    let client = StripeConnection();\n    let method = Meteor.wrapAsync(client.invoiceItems.create, client.invoiceItems);\n    return method(data);\n  },\n  \"stripe_invoice_items_update\": function (subscriptionID, data) {\n    if (!subscriptionID) {\n      throw new Meteor.Error(500, \"[Stripe Invoice Items] - No Stripe Invoice Item ID Provided\");\n    }\n\n    if (!data) {\n      throw new Meteor.Error(500, \"[Stripe Invoice Items] - No Stripe Invoice Item Data Provided\");\n    }\n\n    check(subscriptionID, String);\n    check(data, {\n      amount: Number,\n      description: Match.Maybe(String),\n      discountable: Match.Maybe(Boolean),\n      metadata: Match.Maybe(Object)\n    });\n    let client = StripeConnection();\n    let method = Meteor.wrapAsync(client.invoiceItems.update, client.invoiceItems);\n    return method(subscriptionID, data);\n  },\n  \"stripe_invoice_items_get\": function (subscriptionID) {\n    if (!subscriptionID) {\n      throw new Meteor.Error(500, \"[Stripe Invoice Items] - No Stripe Invoice Item ID Provided\");\n    }\n\n    check(subscriptionID, String);\n    let client = StripeConnection();\n    let method = Meteor.wrapAsync(client.invoiceItems.retrieve, client.invoiceItems);\n    return method(subscriptionID);\n  },\n  \"stripe_invoice_items_delete\": function (subscriptionID) {\n    if (!subscriptionID) {\n      throw new Meteor.Error(500, \"[Stripe Invoice Items] - No Invoice Item ID Provided\");\n    }\n\n    check(subscriptionID, String);\n    let client = StripeConnection();\n    let method = Meteor.wrapAsync(client.invoiceItems.del, client.invoiceItems);\n    return method(subscriptionID);\n  },\n  \"stripe_invoice_items_list\": function (query) {\n    check(query, {\n      created: Match.Maybe(Match.ObjectIncluding({\n        gt: Match.Maybe(String),\n        gte: Match.Maybe(String),\n        lt: Match.Maybe(String),\n        lte: Match.Maybe(String)\n      })),\n      customer: Match.Maybe(String),\n      ending_before: Match.Maybe(String),\n      limit: Match.Maybe(Number),\n      starting_after: Match.Maybe(String)\n    });\n    let client = StripeConnection();\n    let method = Meteor.wrapAsync(client.invoiceItems.list, client.invoiceItems);\n    return method(query);\n  }\n});","map":{"version":3,"sources":["imports/modules/stripe/server/subscriptions/invoice-items.jsx"],"names":["StripeConnection","module","watch","require","default","v","Meteor","check","Match","methods","user","data","Error","Object","stripe","users","findOne","_id","id","customer","amount","Number","currency","String","description","Maybe","discountable","Boolean","invoice","metadata","subscription","client","method","wrapAsync","invoiceItems","create","subscriptionID","update","retrieve","del","query","created","ObjectIncluding","gt","gte","lt","lte","ending_before","limit","starting_after","list"],"mappings":"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","sourcesContent":["import StripeConnection from \"../connection\";\nimport {Meteor} from \"meteor/meteor\";\nimport {check} from \"meteor/check\";\nimport {Match} from \"meteor/check\";\n\nMeteor.methods({\n    \"stripe_invoice_items_create\": function (user, data) {\n        if (!user) {\n            throw new Meteor.Error(500, \"[Stripe Invoice Items] - No Application User Provided\");\n        }\n        if (!data) {\n            throw new Meteor.Error(500, \"[Stripe Invoice Items] - No Stripe Invoice Item Data Provided\");\n        }\n        check(user, Object);\n\n        if (!user.stripe) {\n            user = Meteor.users.findOne({_id: user._id});\n        }\n\n        if (!user.stripe.id) {\n            throw new Meteor.Error(500, \"[Stripe Invoice Items] - User (\" + user._id + \") does not have a Stripe ID & no source defined.\");\n        }\n\n        data.customer = user.stripe.id;\n\n        check(data, {\n            amount: Number,\n            currency: String,\n            customer: String,\n            description: Match.Maybe(String),\n            discountable: Match.Maybe(Boolean),\n            invoice: Match.Maybe(String),\n            metadata: Match.Maybe(Object),\n            subscription: Match.Maybe(String)\n        });\n\n        let client = StripeConnection();\n        let method = Meteor.wrapAsync(client.invoiceItems.create, client.invoiceItems);\n\n        return method(data);\n    },\n    \"stripe_invoice_items_update\": function (subscriptionID, data) {\n        if (!subscriptionID) {\n            throw new Meteor.Error(500, \"[Stripe Invoice Items] - No Stripe Invoice Item ID Provided\");\n        }\n        if (!data) {\n            throw new Meteor.Error(500, \"[Stripe Invoice Items] - No Stripe Invoice Item Data Provided\");\n        }\n\n        check(subscriptionID, String);\n        check(data, {\n            amount: Number,\n            description: Match.Maybe(String),\n            discountable: Match.Maybe(Boolean),\n            metadata: Match.Maybe(Object)\n        });\n\n        let client = StripeConnection();\n        let method = Meteor.wrapAsync(client.invoiceItems.update, client.invoiceItems);\n\n        return method(subscriptionID, data);\n    },\n    \"stripe_invoice_items_get\": function (subscriptionID) {\n        if (!subscriptionID) {\n            throw new Meteor.Error(500, \"[Stripe Invoice Items] - No Stripe Invoice Item ID Provided\");\n        }\n\n        check(subscriptionID, String);\n\n        let client = StripeConnection();\n        let method = Meteor.wrapAsync(client.invoiceItems.retrieve, client.invoiceItems);\n\n        return method(subscriptionID);\n    },\n    \"stripe_invoice_items_delete\": function (subscriptionID) {\n        if (!subscriptionID) {\n            throw new Meteor.Error(500, \"[Stripe Invoice Items] - No Invoice Item ID Provided\");\n        }\n\n        check(subscriptionID, String);\n\n        let client = StripeConnection();\n        let method = Meteor.wrapAsync(client.invoiceItems.del, client.invoiceItems);\n\n        return method(subscriptionID);\n    },\n    \"stripe_invoice_items_list\": function (query) {\n        check(query, {\n            created: Match.Maybe(Match.ObjectIncluding({\n                gt: Match.Maybe(String),\n                gte: Match.Maybe(String),\n                lt: Match.Maybe(String),\n                lte: Match.Maybe(String)\n            })),\n            customer: Match.Maybe(String),\n            ending_before: Match.Maybe(String),\n            limit: Match.Maybe(Number),\n            starting_after: Match.Maybe(String)\n        });\n\n        let client = StripeConnection();\n        let method = Meteor.wrapAsync(client.invoiceItems.list, client.invoiceItems);\n        return method(query);\n    }\n});"]},"sourceType":"script","hash":"e992a67f69f4e021e7ae1cdc0579bd16e450fca3"}
