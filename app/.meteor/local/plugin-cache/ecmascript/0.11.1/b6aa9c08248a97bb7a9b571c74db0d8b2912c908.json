{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/campaigns/server/cron-jobs/actions/invites-scheduled.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"imports/modules/campaigns/server/cron-jobs/actions/invites-scheduled.jsx","filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/campaigns/server/cron-jobs/actions/invites-scheduled.jsx","passPerPreset":false,"envName":"development","cwd":"/home/blackstoneteam/repos/viralizing-web/app","root":"/home/blackstoneteam/repos/viralizing-web/app","presets":[],"generatorOpts":{"filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/campaigns/server/cron-jobs/actions/invites-scheduled.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/modules/campaigns/server/cron-jobs/actions/invites-scheduled.jsx"}},"code":"let Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\n//console.log(\"Invites-Scheduled\");\nMeteor.methods({\n  \"invites-scheduled-run\": function () {\n    let invites = Invites.find({\n      status: \"scheduled\"\n    });\n    let schedules = [];\n    invites.forEach(function (invite) {\n      let accounts = SocialAccounts.find({\n        _id: {\n          $in: invite.members\n        }\n      }, {\n        fields: {\n          \"_id\": 1,\n          \"information.name\": 1,\n          \"information.lastName\": 1,\n          \"information.avatar\": 1,\n          \"network\": 1\n        }\n      }).fetch();\n      let data = {\n        message: invite.message.message,\n        accounts,\n        status: \"pending\",\n        campaign: invite.campaign,\n        invite: invite._id,\n        isPaid: true,\n        date: invite.date,\n        deadline: invite.deadline,\n        media: invite.message.media,\n        hashtags: invite.message.hashtags\n      };\n      schedules.push(data);\n      Meteor.call(\"posts-scheduler\", data, invite.owner);\n      Invites.update(invite._id, {\n        $set: {\n          status: \"sent\"\n        }\n      });\n    });\n    return {\n      data: schedules\n    };\n  }\n});","map":{"version":3,"sources":["imports/modules/campaigns/server/cron-jobs/actions/invites-scheduled.jsx"],"names":["Meteor","module","watch","require","v","methods","invites","Invites","find","status","schedules","forEach","invite","accounts","SocialAccounts","_id","$in","members","fields","fetch","data","message","campaign","isPaid","date","deadline","media","hashtags","push","call","owner","update","$set"],"mappings":"AAAA,IAAIA,MAAJ;AAAWC,OAAOC,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACH,SAAOI,CAAP,EAAS;AAACJ,aAAOI,CAAP;AAAS;;AAApB,CAAtC,EAA4D,CAA5D;AACX;AACAJ,OAAOK,OAAP,CAAe;AACX,2BAAyB,YAAY;AACjC,QAAIC,UAAUC,QAAQC,IAAR,CAAa;AAACC,cAAQ;AAAT,KAAb,CAAd;AACA,QAAIC,YAAY,EAAhB;AACAJ,YAAQK,OAAR,CAAgB,UAAUC,MAAV,EAAkB;AAC9B,UAAIC,WAAWC,eAAeN,IAAf,CAAoB;AAC/BO,aAAK;AAACC,eAAKJ,OAAOK;AAAb;AAD0B,OAApB,EAEZ;AACCC,gBAAQ;AACJ,iBAAO,CADH;AAEJ,8BAAoB,CAFhB;AAGJ,kCAAwB,CAHpB;AAIJ,gCAAsB,CAJlB;AAKJ,qBAAW;AALP;AADT,OAFY,EAUZC,KAVY,EAAf;AAWA,UAAIC,OAAO;AACPC,iBAAST,OAAOS,OAAP,CAAeA,OADjB;AAEPR,gBAFO;AAGPJ,gBAAQ,SAHD;AAIPa,kBAAUV,OAAOU,QAJV;AAKPV,gBAAQA,OAAOG,GALR;AAMPQ,gBAAQ,IAND;AAOPC,cAAMZ,OAAOY,IAPN;AAQPC,kBAAUb,OAAOa,QARV;AASPC,eAAOd,OAAOS,OAAP,CAAeK,KATf;AAUPC,kBAAUf,OAAOS,OAAP,CAAeM;AAVlB,OAAX;AAYAjB,gBAAUkB,IAAV,CAAeR,IAAf;AACApB,aAAO6B,IAAP,CAAY,iBAAZ,EAA+BT,IAA/B,EAAqCR,OAAOkB,KAA5C;AACAvB,cAAQwB,MAAR,CAAenB,OAAOG,GAAtB,EAA2B;AAACiB,cAAM;AAACvB,kBAAQ;AAAT;AAAP,OAA3B;AACH,KA3BD;AA4BA,WAAO;AAACW,YAAMV;AAAP,KAAP;AACH;AAjCU,CAAf","sourcesContent":["import {Meteor} from \"meteor/meteor\";\n//console.log(\"Invites-Scheduled\");\nMeteor.methods({\n    \"invites-scheduled-run\": function () {\n        let invites = Invites.find({status: \"scheduled\"});\n        let schedules = [];\n        invites.forEach(function (invite) {\n            let accounts = SocialAccounts.find({\n                _id: {$in: invite.members}\n            }, {\n                fields: {\n                    \"_id\": 1,\n                    \"information.name\": 1,\n                    \"information.lastName\": 1,\n                    \"information.avatar\": 1,\n                    \"network\": 1\n                }\n            }).fetch();\n            let data = {\n                message: invite.message.message,\n                accounts,\n                status: \"pending\",\n                campaign: invite.campaign,\n                invite: invite._id,\n                isPaid: true,\n                date: invite.date,\n                deadline: invite.deadline,\n                media: invite.message.media,\n                hashtags: invite.message.hashtags\n            };\n            schedules.push(data);\n            Meteor.call(\"posts-scheduler\", data, invite.owner);\n            Invites.update(invite._id, {$set: {status: \"sent\"}});\n        });\n        return {data: schedules};\n    }\n});"]},"sourceType":"script","hash":"b6aa9c08248a97bb7a9b571c74db0d8b2912c908"}
