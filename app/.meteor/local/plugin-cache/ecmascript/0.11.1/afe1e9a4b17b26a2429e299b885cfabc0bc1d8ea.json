{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$4","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$5","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$6","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$7","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$9","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/core/ui/components/nav-bar/nav-bar-content.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"imports/modules/core/ui/components/nav-bar/nav-bar-content.jsx","filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/core/ui/components/nav-bar/nav-bar-content.jsx","passPerPreset":false,"envName":"development","cwd":"/home/blackstoneteam/repos/viralizing-web/app","root":"/home/blackstoneteam/repos/viralizing-web/app","generatorOpts":{"filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/core/ui/components/nav-bar/nav-bar-content.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/modules/core/ui/components/nav-bar/nav-bar-content.jsx"}},"code":"let React;\nmodule.watch(require(\"react\"), {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet withRouter;\nmodule.watch(require(\"react-router\"), {\n  withRouter(v) {\n    withRouter = v;\n  }\n\n}, 1);\nlet IntMenu;\nmodule.watch(require(\"./int-menu\"), {\n  default(v) {\n    IntMenu = v;\n  }\n\n}, 2);\nlet AvatarMenuExtended;\nmodule.watch(require(\"./avatar-menu-extended\"), {\n  default(v) {\n    AvatarMenuExtended = v;\n  }\n\n}, 3);\nlet NotificationsMenu;\nmodule.watch(require(\"./notifications-menu\"), {\n  default(v) {\n    NotificationsMenu = v;\n  }\n\n}, 4);\nlet SearchOverlap;\nmodule.watch(require(\"./search-overlap\"), {\n  default(v) {\n    SearchOverlap = v;\n  }\n\n}, 5);\nlet NotificationSystem;\nmodule.watch(require(\"react-notification-system\"), {\n  default(v) {\n    NotificationSystem = v;\n  }\n\n}, 6);\nlet PropTypes;\nmodule.watch(require(\"prop-types\"), {\n  default(v) {\n    PropTypes = v;\n  }\n\n}, 7);\nlet $;\nmodule.watch(require(\"jquery\"), {\n  default(v) {\n    $ = v;\n  }\n\n}, 8);\n\nclass NavBarContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      notifications: []\n    };\n    this.ready = false;\n    this._notificationSystem = null;\n    this._addNotification = this._addNotification.bind(this);\n    this.getNotifications = this.getNotifications.bind(this);\n    this.openNotification = this.openNotification.bind(this);\n    this.toggleFoldedMenu = this.toggleFoldedMenu.bind(this);\n  }\n\n  openNotification(notification) {\n    Herald.collection.update(notification._id, {\n      $set: {\n        read: true\n      }\n    });\n\n    if (notification.url) {\n      let path = notification.url;\n      let match = path.split(window.location.origin);\n\n      if (match) {\n        path = match[1].substring(1, match[1].length);\n      }\n\n      this.props.router.push(path);\n    }\n  }\n\n  _addNotification(event) {\n    event.preventDefault();\n\n    this._notificationSystem.addNotification({\n      level: \"info\",\n      position: \"br\",\n      autoDismiss: 0,\n      children: React.createElement(\"div\", {\n        onClick: () => console.log(\"Clicked\")\n      }, React.createElement(\"div\", {\n        className: \"title\"\n      }, \"Property Taxes\"), React.createElement(\"div\", {\n        className: \"description\"\n      }, \"Invoice 101 is overdue\"), React.createElement(\"div\", {\n        className: \"time\"\n      }, moment().subtract(15, 'minutes').fromNow()))\n    });\n  }\n\n  getNotifications() {\n    let component = this;\n    setTimeout(function () {\n      Tracker.autorun(function () {\n        if (!Meteor.user()) return;\n        let notifications = Herald.getNotifications({\n          medium: 'onsite'\n        }, {\n          sort: {\n            timestamp: -1\n          }\n        }).fetch();\n        let lastNotification = notifications[0];\n\n        if (component.state.lastNotification !== lastNotification) {\n          component.showNotification(lastNotification);\n        }\n\n        component.setState({\n          notifications,\n          lastNotification\n        });\n        component.ready = true;\n      });\n    }, 1000);\n  }\n\n  showNotification(notification) {\n    if (this.ready && notification) {\n      this._notificationSystem.addNotification({\n        level: notification.data.type,\n        position: \"br\",\n        autoDismiss: 6,\n        children: React.createElement(\"div\", {\n          onClick: () => {\n            this.openNotification(notification);\n          }\n        }, React.createElement(\"div\", {\n          className: \"title\"\n        }, notification.data.title), React.createElement(\"div\", {\n          className: \"description\"\n        }, notification.data.description), React.createElement(\"div\", {\n          className: \"time\"\n        }, moment(notification.timestamp).fromNow()))\n      });\n    }\n  }\n\n  componentDidMount() {\n    this._notificationSystem = this.refs.notificationSystem;\n    this.getNotifications();\n  }\n\n  toggleFoldedMenu() {\n    $(\"body\").toggleClass(\"site-menubar-fold\").toggleClass(\"site-menubar-unfold\");\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"navbar-container container-fluid\"\n    }, React.createElement(\"div\", {\n      className: \"collapse navbar-collapse navbar-collapse-toolbar \" + (this.props.NavOpen ? 'in' : '')\n    }, React.createElement(\"ul\", {\n      className: \"nav navbar-toolbar navbar-right navbar-toolbar-right\"\n    }, React.createElement(IntMenu, null), React.createElement(NotificationsMenu, {\n      notifications: this.state.notifications,\n      openNotification: this.openNotification\n    }), React.createElement(AvatarMenuExtended, null))), React.createElement(SearchOverlap, {\n      open: this.props.SearchOpen,\n      toggle: this.props.SearchCollapse\n    }), React.createElement(NotificationSystem, {\n      ref: \"notificationSystem\"\n    }));\n  }\n\n}\n\nNavBarContent.propTypes = {\n  router: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired\n};\nmodule.exportDefault(withRouter(NavBarContent));","map":{"version":3,"sources":["imports/modules/core/ui/components/nav-bar/nav-bar-content.jsx"],"names":["React","module","watch","require","default","v","withRouter","IntMenu","AvatarMenuExtended","NotificationsMenu","SearchOverlap","NotificationSystem","PropTypes","$","NavBarContent","Component","constructor","props","state","notifications","ready","_notificationSystem","_addNotification","bind","getNotifications","openNotification","toggleFoldedMenu","notification","Herald","collection","update","_id","$set","read","url","path","match","split","window","location","origin","substring","length","router","push","event","preventDefault","addNotification","level","position","autoDismiss","children","console","log","moment","subtract","fromNow","component","setTimeout","Tracker","autorun","Meteor","user","medium","sort","timestamp","fetch","lastNotification","showNotification","setState","data","type","title","description","componentDidMount","refs","notificationSystem","toggleClass","render","NavOpen","SearchOpen","SearchCollapse","propTypes","shape","func","isRequired","exportDefault"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {withRouter} from \"react-router\";\nimport IntMenu from \"./int-menu\";\nimport AvatarMenuExtended from \"./avatar-menu-extended\";\nimport NotificationsMenu from \"./notifications-menu\";\nimport SearchOverlap from \"./search-overlap\";\nimport NotificationSystem from \"react-notification-system\";\nimport PropTypes from 'prop-types';\nimport $ from \"jquery\";\n\nclass NavBarContent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            notifications: []\n        };\n        this.ready = false;\n        this._notificationSystem = null;\n        this._addNotification = this._addNotification.bind(this);\n        this.getNotifications = this.getNotifications.bind(this);\n        this.openNotification = this.openNotification.bind(this);\n        this.toggleFoldedMenu=this.toggleFoldedMenu.bind(this);\n    }\n\n    openNotification(notification) {\n        Herald.collection.update(notification._id, {$set: {read: true}});\n        if (notification.url) {\n            let path = notification.url;\n            let match = path.split(window.location.origin);\n            if (match) {\n                path = match[1].substring(1, match[1].length);\n            }\n            this.props.router.push(path);\n        }\n    }\n\n    _addNotification(event) {\n        event.preventDefault();\n        this._notificationSystem.addNotification({\n            level: \"info\",\n            position: \"br\",\n            autoDismiss: 0,\n            children: (\n                <div onClick={() => console.log(\"Clicked\")}>\n                    <div className=\"title\">Property Taxes</div>\n                    <div className=\"description\">Invoice 101 is overdue</div>\n                    <div className=\"time\">\n                        {moment().subtract(15, 'minutes').fromNow()}\n                    </div>\n                </div>\n            )\n        });\n    }\n\n    getNotifications() {\n        let component = this;\n        setTimeout(function () {\n            Tracker.autorun(function () {\n                if (!Meteor.user()) return;\n                let notifications = Herald.getNotifications({medium: 'onsite'}, {sort: {timestamp: -1}}).fetch();\n                let lastNotification = notifications[0];\n                if (component.state.lastNotification !== lastNotification) {\n                    component.showNotification(lastNotification);\n                }\n                component.setState({\n                    notifications,\n                    lastNotification\n                });\n\n\n                component.ready = true;\n            })\n        }, 1000)\n    }\n\n    showNotification(notification) {\n        if (this.ready && notification) {\n            this._notificationSystem.addNotification({\n                level: notification.data.type,\n                position: \"br\",\n                autoDismiss: 6,\n                children: (\n                    <div onClick={() => {\n                        this.openNotification(notification)\n                    }}>\n                        <div className=\"title\">{notification.data.title}</div>\n                        <div className=\"description\">{notification.data.description}</div>\n                        <div className=\"time\">\n                            {moment(notification.timestamp).fromNow()}\n                        </div>\n                    </div>\n                )\n            });\n        }\n    }\n\n    componentDidMount() {\n        this._notificationSystem = this.refs.notificationSystem;\n        this.getNotifications();\n    }\n\n    toggleFoldedMenu(){\n        $(\"body\").toggleClass(\"site-menubar-fold\").toggleClass(\"site-menubar-unfold\");\n    }\n\n    render() {\n        return (\n            <div className=\"navbar-container container-fluid\">\n                <div className={\"collapse navbar-collapse navbar-collapse-toolbar \" + (this.props.NavOpen ? 'in' : '')}>\n                    {/*\n                    <ul className=\"nav navbar-toolbar\">\n\n                        <li className=\"nav-item hidden-float\" id=\"toggleMenubar\" onClick={this.toggleFoldedMenu}>\n                            <a className=\"nav-link\" data-toggle=\"menubar\" href=\"#\" role=\"button\">\n                                <i className=\"icon hamburger hamburger-arrow-left\">\n                                    <span className=\"sr-only\">Toggle menubar</span>\n                                    <span className=\"hamburger-bar\"/>\n                                </i>\n                            </a>\n                        </li>\n                    </ul>\n                    */}\n\n                    <ul className=\"nav navbar-toolbar navbar-right navbar-toolbar-right\">\n                        <IntMenu/>\n                        <NotificationsMenu notifications={this.state.notifications}\n                                           openNotification={this.openNotification}/>\n                        <AvatarMenuExtended/>\n\n                        {/*\n\n                         <MessagesMenu/>\n                         <SidebarMenu/>\n                        */}\n                    </ul>\n                </div>\n\n                <SearchOverlap open={this.props.SearchOpen} toggle={this.props.SearchCollapse}/>\n                <NotificationSystem ref=\"notificationSystem\"/>\n            </div>\n        )\n    }\n}\n\nNavBarContent.propTypes = {\n    router: PropTypes.shape({\n        push: PropTypes.func.isRequired\n    }).isRequired\n};\n\nexport default withRouter(NavBarContent);\n"]},"sourceType":"script","hash":"afe1e9a4b17b26a2429e299b885cfabc0bc1d8ea"}
