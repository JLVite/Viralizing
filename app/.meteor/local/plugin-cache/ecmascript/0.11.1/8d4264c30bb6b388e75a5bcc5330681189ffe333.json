{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/campaigns/ui/components/invites.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"imports/modules/campaigns/ui/components/invites.jsx","filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/campaigns/ui/components/invites.jsx","passPerPreset":false,"envName":"development","cwd":"/home/blackstoneteam/repos/viralizing-web/app","root":"/home/blackstoneteam/repos/viralizing-web/app","generatorOpts":{"filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/campaigns/ui/components/invites.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/modules/campaigns/ui/components/invites.jsx"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar React;\nmodule.watch(require(\"react\"), {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 0);\nvar reduxForm;\nmodule.watch(require(\"redux-form\"), {\n  reduxForm: function (v) {\n    reduxForm = v;\n  }\n}, 1);\nvar connect;\nmodule.watch(require(\"react-redux\"), {\n  connect: function (v) {\n    connect = v;\n  }\n}, 2);\nvar Translate, I18n;\nmodule.watch(require(\"react-redux-i18n\"), {\n  Translate: function (v) {\n    Translate = v;\n  },\n  I18n: function (v) {\n    I18n = v;\n  }\n}, 3);\nvar Saving;\nmodule.watch(require(\"../../../core/ui/components/saving\"), {\n  \"default\": function (v) {\n    Saving = v;\n  }\n}, 4);\nvar CampaignInvitesHeader;\nmodule.watch(require(\"./invites/header\"), {\n  \"default\": function (v) {\n    CampaignInvitesHeader = v;\n  }\n}, 5);\nvar CampaignListView;\nmodule.watch(require(\"./invites/list-view/container\"), {\n  \"default\": function (v) {\n    CampaignListView = v;\n  }\n}, 6);\nvar CampaignTableView;\nmodule.watch(require(\"./invites/table-view/container\"), {\n  \"default\": function (v) {\n    CampaignTableView = v;\n  }\n}, 7);\nvar notie;\nmodule.watch(require(\"notie\"), {\n  \"default\": function (v) {\n    notie = v;\n  }\n}, 8);\nvar ListEmpty;\nmodule.watch(require(\"../../../core/ui/components/list-empty\"), {\n  \"default\": function (v) {\n    ListEmpty = v;\n  }\n}, 9);\n\nvar getTranslation = function (key) {\n  return \"Campaigns.edit.tabs.invites.\" + key;\n};\n\nvar CampaignInvites =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inheritsLoose2.default)(CampaignInvites, _React$Component);\n\n  function CampaignInvites() {\n    var _this;\n\n    _this = _React$Component.call(this) || this;\n    _this.state = {\n      invites: [],\n      actionIndex: 0,\n      currentOption: null,\n      saving: \"saved\",\n      view: \"list\"\n    };\n    _this.deleteInvite = _this.deleteInvite.bind((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)));\n    _this.createInvite = _this.createInvite.bind((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)));\n    _this.updateInvite = _this.updateInvite.bind((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)));\n    _this.goToAction = _this.goToAction.bind((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)));\n    _this.updateInviteValue = _this.updateInviteValue.bind((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)));\n    _this.toggleNetwork = _this.toggleNetwork.bind((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)));\n    _this.addInviteOption = _this.addInviteOption.bind((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)));\n    _this.saveInvites = _this.saveInvites.bind((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)));\n    _this.deleteInviteOption = _this.deleteInviteOption.bind((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)));\n    _this.updateViewType = _this.updateViewType.bind((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)));\n    return _this;\n  }\n\n  var _proto = CampaignInvites.prototype;\n\n  _proto.toggleNetwork = function () {\n    function toggleNetwork(network) {\n      var component = this;\n      return function () {\n        var newState = (0, _objectSpread2.default)({}, component.state);\n        newState.invites = (0, _toConsumableArray2.default)(newState.invites);\n        var newInvite = (0, _objectSpread2.default)({}, newState.invites[newState.actionIndex]);\n        newInvite.networks = (0, _objectSpread2.default)({}, newInvite.networks);\n        newInvite.networks[network] = !newInvite.networks[network];\n        newState.invites.splice(newState.actionIndex, 1, newInvite);\n        component.setState(newState);\n      };\n    }\n\n    return toggleNetwork;\n  }();\n\n  _proto.goToAction = function () {\n    function goToAction(action) {\n      var component = this;\n      return function (e) {\n        var val;\n\n        if (action === \"goTo\") {\n          val = Number(e.target.value);\n        }\n\n        if (action === \"previous\") {\n          if (component.state.actionIndex === 0) return;\n          val = component.state.actionIndex - 1;\n        }\n\n        if (action === \"next\") {\n          if (component.state.actionIndex === component.props.invites.length - 1) return;\n          val = component.state.actionIndex + 1;\n        }\n\n        component.setState({\n          actionIndex: val\n        });\n      };\n    }\n\n    return goToAction;\n  }();\n\n  _proto.updateInviteValue = function () {\n    function updateInviteValue(key) {\n      var component = this;\n      return function (e) {\n        var val = e.target ? e.target.value : e;\n        var newState = (0, _objectSpread2.default)({}, component.state);\n        var newInvite = (0, _objectSpread2.default)({}, newState.invites[newState.actionIndex]);\n        newInvite[key] = val; //console.log(\"NEW_INVITE\",key,val);\n\n        newState.invites = (0, _toConsumableArray2.default)(newState.invites);\n        newState.invites.splice(newState.actionIndex, 1, newInvite); //console.log(\"updateInviteValue\", newState);\n\n        component.setState(newState);\n      };\n    }\n\n    return updateInviteValue;\n  }();\n\n  _proto.addInviteOption = function () {\n    function addInviteOption(option) {\n      var newState = (0, _objectSpread2.default)({}, this.state);\n      var newInvite = (0, _objectSpread2.default)({}, newState.invites[newState.actionIndex]);\n      newInvite.options = (0, _toConsumableArray2.default)(newInvite.options);\n      newInvite.options.push(option);\n      newState.invites.splice(newState.actionIndex, 1, newInvite); //console.log(\"ADD_INVITE_OPTION\", newState);\n\n      this.setState(newState);\n    }\n\n    return addInviteOption;\n  }();\n\n  _proto.deleteInviteOption = function () {\n    function deleteInviteOption(option) {\n      delete option.index;\n      var newState = (0, _objectSpread2.default)({}, this.state);\n      var newInvite = (0, _objectSpread2.default)({}, newState.invites[newState.actionIndex]);\n      newInvite.options = (0, _toConsumableArray2.default)(newInvite.options);\n      option = newInvite.options.filter(function (o) {\n        return o.date === option.date && o.media === option.media && o.message === option.message;\n      })[0];\n      var indexOfOption = newInvite.options.indexOf(option);\n      newInvite.options.splice(indexOfOption, 1);\n      console.log(\"DELETE_OPTION\", newInvite, option);\n      this.setState(newState);\n    }\n\n    return deleteInviteOption;\n  }();\n\n  _proto.createInvite = function () {\n    function createInvite() {\n      var component = this;\n      var campaign = this.props.campaign;\n      var data = {\n        campaign: campaign\n      };\n      Meteor.call(\"invite-create\", data, function (err, res) {\n        if (err) {\n          if (err.error === 500) {\n            err.error = I18n.t(getTranslation(\"messages.error\"));\n          } //console.log(\"ERROR\", err);\n\n\n          notie.alert(3, err.reason || err.error, 3);\n          return;\n        }\n\n        notie.alert(1, I18n.t(getTranslation(\"messages.saved\")), 3);\n        setTimeout(function () {\n          console.log(\"SERVER_CRETE_INVITE_RESPONSE\", res);\n          component.props.refetch({\n            date: new Date()\n          });\n        }, 100);\n      });\n    }\n\n    return createInvite;\n  }();\n\n  _proto.updateInvite = function () {\n    function updateInvite(data) {\n      //console.log(\"CREATE!\");\n      var component = this;\n      Meteor.call(\"invite-update\", data, function (err, res) {\n        if (err) {\n          if (err.error === 500) {\n            err.error = I18n.t(getTranslation(\"messages.error\"));\n          } //console.log(\"ERROR\", err);\n\n\n          notie.alert(3, err.reason || err.error, 3);\n          return;\n        }\n\n        notie.alert(1, I18n.t(getTranslation(\"messages.updated\")), 3); //component.props.refetch();\n\n        component.closeModal(); //console.log(\"SERVER_UPDATE_INVITE_RESPONSE\", res);\n      });\n    }\n\n    return updateInvite;\n  }();\n\n  _proto.deleteInvite = function () {\n    function deleteInvite(element) {\n      var component = this;\n      return function () {\n        swal({\n          title: 'Are you sure?',\n          text: \"You won't be able to revert this!\",\n          type: 'warning',\n          showCancelButton: true,\n          confirmButtonColor: '#3085d6',\n          cancelButtonColor: '#d33',\n          confirmButtonText: 'Yes, delete it!'\n        }).then(function () {\n          var newState = component.state;\n          newState.invites = (0, _toConsumableArray2.default)(newState.invites);\n          var indexOfMatch = null;\n          var match = newState.invites.filter(function (t, i) {\n            if (t._id === element._id) {\n              indexOfMatch = i;\n            }\n\n            return t._id === element._id;\n          })[0];\n\n          if (match) {\n            newState.invites.splice(indexOfMatch, 1);\n            component.setState(newState);\n            component.save();\n          } else {\n            console.error(\"SOMETHING WENT WRONG\");\n          }\n        });\n      };\n    }\n\n    return deleteInvite;\n  }();\n\n  _proto.saveInvites = function () {\n    function saveInvites(silent) {\n      var component = this;\n      var campaign = this.props.campaign;\n      var invites = this.state.invites;\n      this.saving = true;\n\n      if (silent && typeof silent === \"boolean\") {\n        silent = true;\n      } else {\n        silent = false;\n      }\n\n      if (silent && this.savedData === JSON.stringify(invites)) {\n        this.setState({\n          saving: \"saved\"\n        });\n        return;\n      }\n\n      this.setState({\n        saving: \"saving\"\n      });\n      this.savedData = JSON.stringify(invites);\n      Meteor.call(\"invite-save-multiple\", invites, campaign._id, function (err, res) {\n        if (err) {\n          if (err.error === 500) {\n            err.error = I18n.t(getTranslation(\"messages.error\"));\n          } //console.log(\"ERROR\", err);\n\n\n          notie.alert(3, err.reason || err.error, 3);\n          return;\n        }\n\n        component.setState({\n          saving: \"saved\"\n        });\n\n        if (!silent) {\n          notie.alert(1, I18n.t(getTranslation(\"messages.saved\")), 3);\n        }\n        /*\n        component.props.refetch({\n            \"campaignID\": component.props.campaign._id\n        });\n        * */\n        //console.log(\"SERVER_SAVE_INVITE_RESPONSE\", res);\n\n      });\n    }\n\n    return saveInvites;\n  }();\n\n  _proto.componentWillMount = function () {\n    function componentWillMount() {\n      var invites = this.props.invites; //console.log(\"WILL_MOINT\", invites);\n\n      this.setState({\n        invites: (0, _toConsumableArray2.default)(invites)\n      });\n    }\n\n    return componentWillMount;\n  }();\n\n  _proto.componentWillReceiveProps = function () {\n    function componentWillReceiveProps() {\n      var invites = this.props.invites; // this.setState({invites:[...invites]})\n    }\n\n    return componentWillReceiveProps;\n  }();\n\n  _proto.componentDidUpdate = function () {\n    function componentDidUpdate() {\n      var invites = this.props.invites;\n\n      if (this.state.invites.length === 0 || invites.length > this.state.invites.length || this.saving) {\n        //this.setState({invites:[...invites]});\n        this.saving = false;\n      }\n    }\n\n    return componentDidUpdate;\n  }();\n\n  _proto.componentDidMount = function () {\n    function componentDidMount() {\n      this.savedData = JSON.stringify(this.props.invites);\n      var component = this;\n      this.saveInterval = setInterval(function () {\n        if (component.state.invites && component.state.invites.length > 0) {\n          component.saveInvites(true);\n        }\n      }, 5000);\n    }\n\n    return componentDidMount;\n  }();\n\n  _proto.componentWillUnmount = function () {\n    function componentWillUnmount() {\n      clearInterval(this.saveInterval);\n    }\n\n    return componentWillUnmount;\n  }();\n\n  _proto.updateViewType = function () {\n    function updateViewType(view) {\n      var component = this;\n      return function () {\n        component.setState({\n          view: view\n        });\n      };\n    }\n\n    return updateViewType;\n  }();\n\n  _proto.render = function () {\n    function render() {\n      var _this$props = this.props,\n          campaign = _this$props.campaign,\n          accounts = _this$props.accounts,\n          teamAttacks = _this$props.teamAttacks;\n      var _this$state = this.state,\n          invites = _this$state.invites,\n          view = _this$state.view,\n          actionIndex = _this$state.actionIndex;\n      var updateViewType = this.updateViewType,\n          toggleNetwork = this.toggleNetwork,\n          updateInviteValue = this.updateInviteValue,\n          addInviteOption = this.addInviteOption,\n          goToAction = this.goToAction,\n          createInvite = this.createInvite,\n          saveInvites = this.saveInvites,\n          deleteInviteOption = this.deleteInviteOption;\n      var currentInvite = this.state.invites[actionIndex];\n\n      if (invites.length === 0) {\n        return React.createElement(ListEmpty, {\n          message: React.createElement(Translate, {\n            value: getTranslation(\"empty.message\")\n          }),\n          button: React.createElement(Translate, {\n            value: getTranslation(\"empty.button\")\n          }),\n          callback: createInvite\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"content-padding-30 invite-actions\"\n      }, React.createElement(CampaignInvitesHeader, {\n        campaign: campaign,\n        updateViewType: updateViewType\n      }), React.createElement(\"div\", {\n        className: \"spacer-20\"\n      }), view === \"list\" ? React.createElement(CampaignListView, {\n        invites: invites,\n        accounts: accounts,\n        teamAttacks: teamAttacks,\n        currentInvite: currentInvite,\n        actionIndex: actionIndex,\n        toggleNetwork: toggleNetwork,\n        updateInviteValue: updateInviteValue,\n        addInviteOption: addInviteOption,\n        deleteInviteOption: deleteInviteOption,\n        goToAction: goToAction,\n        createInvite: createInvite,\n        saveInvites: saveInvites\n      }) : React.createElement(CampaignTableView, {\n        invites: invites,\n        hasTotal: true,\n        campaign: campaign\n      }), React.createElement(Saving, {\n        state: this.state.saving\n      }));\n    }\n\n    return render;\n  }();\n\n  return CampaignInvites;\n}(React.Component);\n\nCampaignInvites = reduxForm({\n  form: 'invite-action'\n})(CampaignInvites);\nmodule.exportDefault(connect(function (state) {\n  return {\n    campaign: state.form[\"campaign-edit\"].values\n  };\n})(CampaignInvites));","map":{"version":3,"sources":["imports/modules/campaigns/ui/components/invites.jsx"],"names":["React","module","watch","require","v","reduxForm","connect","Translate","I18n","Saving","CampaignInvitesHeader","CampaignListView","CampaignTableView","notie","ListEmpty","getTranslation","key","CampaignInvites","state","invites","actionIndex","currentOption","saving","view","deleteInvite","bind","createInvite","updateInvite","goToAction","updateInviteValue","toggleNetwork","addInviteOption","saveInvites","deleteInviteOption","updateViewType","network","component","newState","newInvite","networks","splice","setState","action","e","val","Number","target","value","props","length","option","options","push","index","filter","o","date","media","message","indexOfOption","indexOf","console","log","campaign","data","Meteor","call","err","res","error","t","alert","reason","setTimeout","refetch","Date","closeModal","element","swal","title","text","type","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","indexOfMatch","match","i","_id","save","silent","savedData","JSON","stringify","componentWillMount","componentWillReceiveProps","componentDidUpdate","componentDidMount","saveInterval","setInterval","componentWillUnmount","clearInterval","render","accounts","teamAttacks","currentInvite","Component","form","exportDefault","values"],"mappings":";;;;;;;;;;AAAA,IAAIA,KAAJ;AAAUC,OAAOC,KAAP,CAAaC,QAAQ,OAAR,CAAb,EAA8B;AAAA,uBAASC,CAAT,EAAW;AAACJ,YAAMI,CAAN;AAAQ;AAApB,CAA9B,EAAoD,CAApD;AAAuD,IAAIC,SAAJ;AAAcJ,OAAOC,KAAP,CAAaC,QAAQ,YAAR,CAAb,EAAmC;AAACE,WAAD,YAAWD,CAAX,EAAa;AAACC,gBAAUD,CAAV;AAAY;AAA1B,CAAnC,EAA+D,CAA/D;AAAkE,IAAIE,OAAJ;AAAYL,OAAOC,KAAP,CAAaC,QAAQ,aAAR,CAAb,EAAoC;AAACG,SAAD,YAASF,CAAT,EAAW;AAACE,cAAQF,CAAR;AAAU;AAAtB,CAApC,EAA4D,CAA5D;AAA+D,IAAIG,SAAJ,EAAcC,IAAd;AAAmBP,OAAOC,KAAP,CAAaC,QAAQ,kBAAR,CAAb,EAAyC;AAACI,WAAD,YAAWH,CAAX,EAAa;AAACG,gBAAUH,CAAV;AAAY,GAA1B;AAA2BI,MAA3B,YAAgCJ,CAAhC,EAAkC;AAACI,WAAKJ,CAAL;AAAO;AAA1C,CAAzC,EAAqF,CAArF;AAAwF,IAAIK,MAAJ;AAAWR,OAAOC,KAAP,CAAaC,QAAQ,oCAAR,CAAb,EAA2D;AAAA,uBAASC,CAAT,EAAW;AAACK,aAAOL,CAAP;AAAS;AAArB,CAA3D,EAAkF,CAAlF;AAAqF,IAAIM,qBAAJ;AAA0BT,OAAOC,KAAP,CAAaC,QAAQ,kBAAR,CAAb,EAAyC;AAAA,uBAASC,CAAT,EAAW;AAACM,4BAAsBN,CAAtB;AAAwB;AAApC,CAAzC,EAA+E,CAA/E;AAAkF,IAAIO,gBAAJ;AAAqBV,OAAOC,KAAP,CAAaC,QAAQ,+BAAR,CAAb,EAAsD;AAAA,uBAASC,CAAT,EAAW;AAACO,uBAAiBP,CAAjB;AAAmB;AAA/B,CAAtD,EAAuF,CAAvF;AAA0F,IAAIQ,iBAAJ;AAAsBX,OAAOC,KAAP,CAAaC,QAAQ,gCAAR,CAAb,EAAuD;AAAA,uBAASC,CAAT,EAAW;AAACQ,wBAAkBR,CAAlB;AAAoB;AAAhC,CAAvD,EAAyF,CAAzF;AAA4F,IAAIS,KAAJ;AAAUZ,OAAOC,KAAP,CAAaC,QAAQ,OAAR,CAAb,EAA8B;AAAA,uBAASC,CAAT,EAAW;AAACS,YAAMT,CAAN;AAAQ;AAApB,CAA9B,EAAoD,CAApD;AAAuD,IAAIU,SAAJ;AAAcb,OAAOC,KAAP,CAAaC,QAAQ,wCAAR,CAAb,EAA+D;AAAA,uBAASC,CAAT,EAAW;AAACU,gBAAUV,CAAV;AAAY;AAAxB,CAA/D,EAAyF,CAAzF;;AAWn0B,IAAIW,iBAAiB,UAACC,GAAD,EAAS;AAC1B,SAAO,iCAAiCA,GAAxC;AACH,CAFD;;IAIMC,e;;;;;AACF,6BAAc;AAAA;;AACV;AAEA,UAAKC,KAAL,GAAa;AACTC,eAAQ,EADC;AAETC,mBAAa,CAFJ;AAGTC,qBAAe,IAHN;AAITC,cAAQ,OAJC;AAKTC,YAAM;AALG,KAAb;AAQA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,mFAApB;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBD,IAAlB,mFAApB;AACA,UAAKE,YAAL,GAAoB,MAAKA,YAAL,CAAkBF,IAAlB,mFAApB;AACA,UAAKG,UAAL,GAAgB,MAAKA,UAAL,CAAgBH,IAAhB,mFAAhB;AACA,UAAKI,iBAAL,GAAuB,MAAKA,iBAAL,CAAuBJ,IAAvB,mFAAvB;AACA,UAAKK,aAAL,GAAmB,MAAKA,aAAL,CAAmBL,IAAnB,mFAAnB;AACA,UAAKM,eAAL,GAAqB,MAAKA,eAAL,CAAqBN,IAArB,mFAArB;AACA,UAAKO,WAAL,GAAiB,MAAKA,WAAL,CAAiBP,IAAjB,mFAAjB;AACA,UAAKQ,kBAAL,GAAwB,MAAKA,kBAAL,CAAwBR,IAAxB,mFAAxB;AACA,UAAKS,cAAL,GAAoB,MAAKA,cAAL,CAAoBT,IAApB,mFAApB;AApBU;AAqBb;;;;SAEDK,a;2BAAcK,O,EAAQ;AAClB,UAAIC,YAAU,IAAd;AACA,aAAO,YAAU;AACb,YAAIC,2CAAaD,UAAUlB,KAAvB,CAAJ;AACAmB,iBAASlB,OAAT,oCAAqBkB,SAASlB,OAA9B;AACA,YAAImB,4CAAcD,SAASlB,OAAT,CAAiBkB,SAASjB,WAA1B,CAAd,CAAJ;AACAkB,kBAAUC,QAAV,mCAAuBD,UAAUC,QAAjC;AACAD,kBAAUC,QAAV,CAAmBJ,OAAnB,IAA4B,CAACG,UAAUC,QAAV,CAAmBJ,OAAnB,CAA7B;AACAE,iBAASlB,OAAT,CAAiBqB,MAAjB,CAAwBH,SAASjB,WAAjC,EAA6C,CAA7C,EAA+CkB,SAA/C;AACAF,kBAAUK,QAAV,CAAmBJ,QAAnB;AACH,OARD;AASH;;;;;SAEDT,U;wBAAWc,M,EAAO;AACd,UAAIN,YAAU,IAAd;AACA,aAAO,UAASO,CAAT,EAAW;AACd,YAAIC,GAAJ;;AACA,YAAGF,WAAS,MAAZ,EAAmB;AACfE,gBAAIC,OAAOF,EAAEG,MAAF,CAASC,KAAhB,CAAJ;AACH;;AACD,YAAGL,WAAS,UAAZ,EAAuB;AACnB,cAAGN,UAAUlB,KAAV,CAAgBE,WAAhB,KAA8B,CAAjC,EAAoC;AACpCwB,gBAAIR,UAAUlB,KAAV,CAAgBE,WAAhB,GAA4B,CAAhC;AACH;;AACD,YAAGsB,WAAS,MAAZ,EAAmB;AACf,cAAGN,UAAUlB,KAAV,CAAgBE,WAAhB,KAA+BgB,UAAUY,KAAV,CAAgB7B,OAAhB,CAAwB8B,MAAxB,GAA+B,CAAjE,EAAqE;AACrEL,gBAAIR,UAAUlB,KAAV,CAAgBE,WAAhB,GAA4B,CAAhC;AACH;;AACDgB,kBAAUK,QAAV,CAAmB;AAACrB,uBAAYwB;AAAb,SAAnB;AACH,OAdD;AAeH;;;;;SAEDf,iB;+BAAkBb,G,EAAI;AAClB,UAAIoB,YAAU,IAAd;AACA,aAAO,UAASO,CAAT,EAAW;AACd,YAAIC,MAAID,EAAEG,MAAF,GAASH,EAAEG,MAAF,CAASC,KAAlB,GAAwBJ,CAAhC;AACA,YAAIN,2CAAaD,UAAUlB,KAAvB,CAAJ;AACA,YAAIoB,4CAAcD,SAASlB,OAAT,CAAiBkB,SAASjB,WAA1B,CAAd,CAAJ;AACAkB,kBAAUtB,GAAV,IAAe4B,GAAf,CAJc,CAKd;;AACAP,iBAASlB,OAAT,oCAAqBkB,SAASlB,OAA9B;AACAkB,iBAASlB,OAAT,CAAiBqB,MAAjB,CAAwBH,SAASjB,WAAjC,EAA6C,CAA7C,EAA+CkB,SAA/C,EAPc,CAQd;;AACAF,kBAAUK,QAAV,CAAmBJ,QAAnB;AACH,OAVD;AAWH;;;;;SAEDN,e;6BAAgBmB,M,EAAO;AACnB,UAAIb,2CAAa,KAAKnB,KAAlB,CAAJ;AACA,UAAIoB,4CAAcD,SAASlB,OAAT,CAAiBkB,SAASjB,WAA1B,CAAd,CAAJ;AACAkB,gBAAUa,OAAV,oCAAsBb,UAAUa,OAAhC;AACAb,gBAAUa,OAAV,CAAkBC,IAAlB,CAAuBF,MAAvB;AACAb,eAASlB,OAAT,CAAiBqB,MAAjB,CAAwBH,SAASjB,WAAjC,EAA6C,CAA7C,EAA+CkB,SAA/C,EALmB,CAMnB;;AACA,WAAKG,QAAL,CAAcJ,QAAd;AACH;;;;;SAEDJ,kB;gCAAmBiB,M,EAAO;AAEtB,aAAOA,OAAOG,KAAd;AACA,UAAIhB,2CAAa,KAAKnB,KAAlB,CAAJ;AACA,UAAIoB,4CAAcD,SAASlB,OAAT,CAAiBkB,SAASjB,WAA1B,CAAd,CAAJ;AACAkB,gBAAUa,OAAV,oCAAsBb,UAAUa,OAAhC;AACAD,eAAOZ,UAAUa,OAAV,CAAkBG,MAAlB,CAAyB;AAAA,eAAGC,EAAEC,IAAF,KAASN,OAAOM,IAAhB,IAAwBD,EAAEE,KAAF,KAAUP,OAAOO,KAAzC,IAAkDF,EAAEG,OAAF,KAAYR,OAAOQ,OAAxE;AAAA,OAAzB,EAA0G,CAA1G,CAAP;AACA,UAAIC,gBAAcrB,UAAUa,OAAV,CAAkBS,OAAlB,CAA0BV,MAA1B,CAAlB;AACAZ,gBAAUa,OAAV,CAAkBX,MAAlB,CAAyBmB,aAAzB,EAAuC,CAAvC;AACAE,cAAQC,GAAR,CAAY,eAAZ,EAA6BxB,SAA7B,EAAwCY,MAAxC;AACA,WAAKT,QAAL,CAAcJ,QAAd;AAEH;;;;;SAEDX,Y;4BAAe;AACX,UAAIU,YAAY,IAAhB;AADW,UAEN2B,QAFM,GAEM,KAAKf,KAFX,CAENe,QAFM;AAGX,UAAIC,OAAK;AAACD;AAAD,OAAT;AACAE,aAAOC,IAAP,CAAY,eAAZ,EAA6BF,IAA7B,EAAmC,UAAUG,GAAV,EAAeC,GAAf,EAAoB;AACnD,YAAID,GAAJ,EAAS;AACL,cAAIA,IAAIE,KAAJ,KAAc,GAAlB,EAAuB;AACnBF,gBAAIE,KAAJ,GAAY7D,KAAK8D,CAAL,CAAOvD,eAAe,gBAAf,CAAP,CAAZ;AACH,WAHI,CAIL;;;AACAF,gBAAM0D,KAAN,CAAY,CAAZ,EAAeJ,IAAIK,MAAJ,IAAcL,IAAIE,KAAjC,EAAwC,CAAxC;AACA;AACH;;AACDxD,cAAM0D,KAAN,CAAY,CAAZ,EAAe/D,KAAK8D,CAAL,CAAOvD,eAAe,gBAAf,CAAP,CAAf,EAAyD,CAAzD;AACA0D,mBAAW,YAAU;AACjBZ,kBAAQC,GAAR,CAAY,8BAAZ,EAA4CM,GAA5C;AACAhC,oBAAUY,KAAV,CAAgB0B,OAAhB,CAAwB;AAAClB,kBAAK,IAAImB,IAAJ;AAAN,WAAxB;AACH,SAHD,EAGE,GAHF;AAKH,OAfD;AAgBH;;;;;SAEDhD,Y;0BAAaqC,I,EAAM;AACf;AACA,UAAI5B,YAAY,IAAhB;AACA6B,aAAOC,IAAP,CAAY,eAAZ,EAA6BF,IAA7B,EAAmC,UAAUG,GAAV,EAAeC,GAAf,EAAoB;AACnD,YAAID,GAAJ,EAAS;AACL,cAAIA,IAAIE,KAAJ,KAAc,GAAlB,EAAuB;AACnBF,gBAAIE,KAAJ,GAAY7D,KAAK8D,CAAL,CAAOvD,eAAe,gBAAf,CAAP,CAAZ;AACH,WAHI,CAIL;;;AACAF,gBAAM0D,KAAN,CAAY,CAAZ,EAAeJ,IAAIK,MAAJ,IAAcL,IAAIE,KAAjC,EAAwC,CAAxC;AACA;AACH;;AACDxD,cAAM0D,KAAN,CAAY,CAAZ,EAAe/D,KAAK8D,CAAL,CAAOvD,eAAe,kBAAf,CAAP,CAAf,EAA2D,CAA3D,EATmD,CAUnD;;AACAqB,kBAAUwC,UAAV,GAXmD,CAYnD;AACH,OAbD;AAcH;;;;;SAEDpD,Y;0BAAaqD,O,EAAS;AAClB,UAAIzC,YAAY,IAAhB;AACA,aAAO,YAAY;AACf0C,aAAK;AACDC,iBAAO,eADN;AAEDC,gBAAM,mCAFL;AAGDC,gBAAM,SAHL;AAIDC,4BAAkB,IAJjB;AAKDC,8BAAoB,SALnB;AAMDC,6BAAmB,MANlB;AAODC,6BAAmB;AAPlB,SAAL,EAQGC,IARH,CAQQ,YAAY;AAChB,cAAIjD,WAAWD,UAAUlB,KAAzB;AACAmB,mBAASlB,OAAT,oCAAqBkB,SAASlB,OAA9B;AACA,cAAIoE,eAAe,IAAnB;AACA,cAAIC,QAAQnD,SAASlB,OAAT,CAAiBmC,MAAjB,CAAwB,UAACgB,CAAD,EAAImB,CAAJ,EAAU;AAC1C,gBAAInB,EAAEoB,GAAF,KAAUb,QAAQa,GAAtB,EAA2B;AACvBH,6BAAeE,CAAf;AACH;;AACD,mBAAOnB,EAAEoB,GAAF,KAAUb,QAAQa,GAAzB;AACH,WALW,EAKT,CALS,CAAZ;;AAMA,cAAIF,KAAJ,EAAW;AACPnD,qBAASlB,OAAT,CAAiBqB,MAAjB,CAAwB+C,YAAxB,EAAsC,CAAtC;AACAnD,sBAAUK,QAAV,CAAmBJ,QAAnB;AACAD,sBAAUuD,IAAV;AACH,WAJD,MAIO;AACH9B,oBAAQQ,KAAR,CAAc,sBAAd;AACH;AACJ,SAzBD;AA0BH,OA3BD;AA4BH;;;;;SAEDrC,W;yBAAY4D,M,EAAO;AACf,UAAIxD,YAAY,IAAhB;AADe,UAEV2B,QAFU,GAEE,KAAKf,KAFP,CAEVe,QAFU;AAGf,UAAI5C,UAAQ,KAAKD,KAAL,CAAWC,OAAvB;AACA,WAAKG,MAAL,GAAY,IAAZ;;AACA,UAAIsE,UAAU,OAAOA,MAAP,KAAmB,SAAjC,EAA4C;AACxCA,iBAAS,IAAT;AACH,OAFD,MAEO;AACHA,iBAAS,KAAT;AACH;;AAED,UAAIA,UAAU,KAAKC,SAAL,KAAmBC,KAAKC,SAAL,CAAe5E,OAAf,CAAjC,EAA0D;AACtD,aAAKsB,QAAL,CAAc;AAACnB,kBAAQ;AAAT,SAAd;AACA;AACH;;AACD,WAAKmB,QAAL,CAAc;AAACnB,gBAAQ;AAAT,OAAd;AACA,WAAKuE,SAAL,GAAiBC,KAAKC,SAAL,CAAe5E,OAAf,CAAjB;AACA8C,aAAOC,IAAP,CAAY,sBAAZ,EAAoC/C,OAApC,EAA6C4C,SAAS2B,GAAtD,EAA2D,UAAUvB,GAAV,EAAeC,GAAf,EAAoB;AAC3E,YAAID,GAAJ,EAAS;AACL,cAAIA,IAAIE,KAAJ,KAAc,GAAlB,EAAuB;AACnBF,gBAAIE,KAAJ,GAAY7D,KAAK8D,CAAL,CAAOvD,eAAe,gBAAf,CAAP,CAAZ;AACH,WAHI,CAIL;;;AACAF,gBAAM0D,KAAN,CAAY,CAAZ,EAAeJ,IAAIK,MAAJ,IAAcL,IAAIE,KAAjC,EAAwC,CAAxC;AACA;AACH;;AACDjC,kBAAUK,QAAV,CAAmB;AAACnB,kBAAQ;AAAT,SAAnB;;AACA,YAAG,CAACsE,MAAJ,EAAW;AACP/E,gBAAM0D,KAAN,CAAY,CAAZ,EAAe/D,KAAK8D,CAAL,CAAOvD,eAAe,gBAAf,CAAP,CAAf,EAAyD,CAAzD;AACH;AAED;;;;;AAMA;;AACH,OArBD;AAsBH;;;;;SAEDiF,kB;kCAAoB;AAAA,UACX7E,OADW,GACF,KAAK6B,KADH,CACX7B,OADW,EAEhB;;AACA,WAAKsB,QAAL,CAAc;AAACtB,kDAAYA,OAAZ;AAAD,OAAd;AACH;;;;;SAED8E,yB;yCAA2B;AAAA,UAClB9E,OADkB,GACT,KAAK6B,KADI,CAClB7B,OADkB,EAExB;AACF;;;;;SAED+E,kB;kCAAoB;AAAA,UACX/E,OADW,GACF,KAAK6B,KADH,CACX7B,OADW;;AAEhB,UAAG,KAAKD,KAAL,CAAWC,OAAX,CAAmB8B,MAAnB,KAA4B,CAA5B,IAAiC9B,QAAQ8B,MAAR,GAAe,KAAK/B,KAAL,CAAWC,OAAX,CAAmB8B,MAAnE,IAA6E,KAAK3B,MAArF,EAA4F;AACxF;AACA,aAAKA,MAAL,GAAY,KAAZ;AACH;AACJ;;;;;SAED6E,iB;iCAAoB;AAChB,WAAKN,SAAL,GAAiBC,KAAKC,SAAL,CAAe,KAAK/C,KAAL,CAAW7B,OAA1B,CAAjB;AACA,UAAIiB,YAAY,IAAhB;AACA,WAAKgE,YAAL,GAAkBC,YAAY,YAAY;AACtC,YAAIjE,UAAUlB,KAAV,CAAgBC,OAAhB,IAA2BiB,UAAUlB,KAAV,CAAgBC,OAAhB,CAAwB8B,MAAxB,GAA+B,CAA9D,EAAiE;AAC7Db,oBAAUJ,WAAV,CAAsB,IAAtB;AACH;AACJ,OAJiB,EAIf,IAJe,CAAlB;AAKH;;;;;SAEDsE,oB;oCAAsB;AAClBC,oBAAc,KAAKH,YAAnB;AACH;;;;;SAEDlE,c;4BAAeX,I,EAAK;AAChB,UAAIa,YAAU,IAAd;AACA,aAAO,YAAU;AACbA,kBAAUK,QAAV,CAAmB;AAAClB;AAAD,SAAnB;AACH,OAFD;AAGH;;;;;SAEDiF,M;sBAAS;AAAA,wBACkC,KAAKxD,KADvC;AAAA,UACAe,QADA,eACAA,QADA;AAAA,UACU0C,QADV,eACUA,QADV;AAAA,UACoBC,WADpB,eACoBA,WADpB;AAAA,wBAE4B,KAAKxF,KAFjC;AAAA,UAEAC,OAFA,eAEAA,OAFA;AAAA,UAESI,IAFT,eAESA,IAFT;AAAA,UAEeH,WAFf,eAEeA,WAFf;AAAA,UAGAc,cAHA,GAG4H,IAH5H,CAGAA,cAHA;AAAA,UAGeJ,aAHf,GAG4H,IAH5H,CAGeA,aAHf;AAAA,UAG8BD,iBAH9B,GAG4H,IAH5H,CAG8BA,iBAH9B;AAAA,UAGiDE,eAHjD,GAG4H,IAH5H,CAGiDA,eAHjD;AAAA,UAGkEH,UAHlE,GAG4H,IAH5H,CAGkEA,UAHlE;AAAA,UAG8EF,YAH9E,GAG4H,IAH5H,CAG8EA,YAH9E;AAAA,UAG2FM,WAH3F,GAG4H,IAH5H,CAG2FA,WAH3F;AAAA,UAGwGC,kBAHxG,GAG4H,IAH5H,CAGwGA,kBAHxG;AAIL,UAAI0E,gBAAc,KAAKzF,KAAL,CAAWC,OAAX,CAAmBC,WAAnB,CAAlB;;AACA,UAAGD,QAAQ8B,MAAR,KAAiB,CAApB,EAAsB;AAClB,eACI,oBAAC,SAAD;AAAW,mBAAS,oBAAC,SAAD;AAAW,mBAAOlC,eAAe,eAAf;AAAlB,YAApB;AACW,kBAAQ,oBAAC,SAAD;AAAW,mBAAOA,eAAe,cAAf;AAAlB,YADnB;AAEW,oBAAUW;AAFrB,UADJ;AAKH;;AACD,aACI;AAAK,mBAAU;AAAf,SACI,oBAAC,qBAAD;AAAuB,kBAAUqC,QAAjC;AAA2C,wBAAgB7B;AAA3D,QADJ,EAEI;AAAK,mBAAU;AAAf,QAFJ,EAGKX,SAAO,MAAP,GAAc,oBAAC,gBAAD;AAAkB,iBAASJ,OAA3B;AACkB,kBAAUsF,QAD5B;AAEkB,qBAAaC,WAF/B;AAGkB,uBAAeC,aAHjC;AAIkB,qBAAavF,WAJ/B;AAKkB,uBAAeU,aALjC;AAMkB,2BAAmBD,iBANrC;AAOkB,yBAAiBE,eAPnC;AAQkB,4BAAoBE,kBARtC;AASkB,oBAAYL,UAT9B;AAUkB,sBAAcF,YAVhC;AAWkB,qBAAaM;AAX/B,QAAd,GAW4D,oBAAC,iBAAD;AAAmB,iBAASb,OAA5B;AACmB,kBAAU,IAD7B;AAEmB,kBAAU4C;AAF7B,QAdjE,EAiBI,oBAAC,MAAD;AAAQ,eAAO,KAAK7C,KAAL,CAAWI;AAA1B,QAjBJ,CADJ;AAqBH;;;;;;EA1RyBtB,MAAM4G,S;;AA6RpC3F,kBAAkBZ,UAAU;AACxBwG,QAAM;AADkB,CAAV,EAEf5F,eAFe,CAAlB;AA5SAhB,OAAO6G,aAAP,CAgTexG,QAAQ,iBAAS;AAC5B,SAAO;AACHyD,cAAU7C,MAAM2F,IAAN,CAAW,eAAX,EAA4BE;AADnC,GAAP;AAGH,CAJc,EAIZ9F,eAJY,CAhTf","sourcesContent":["import React from \"react\";\nimport {reduxForm} from \"redux-form\";\nimport {connect} from \"react-redux\";\nimport {Translate, I18n} from \"react-redux-i18n\";\nimport Saving from \"../../../core/ui/components/saving\";\nimport CampaignInvitesHeader from \"./invites/header\";\nimport CampaignListView from \"./invites/list-view/container\";\nimport CampaignTableView from \"./invites/table-view/container\";\nimport notie from \"notie\";\nimport ListEmpty from \"../../../core/ui/components/list-empty\";\n\nlet getTranslation = (key) => {\n    return \"Campaigns.edit.tabs.invites.\" + key;\n};\n\nclass CampaignInvites extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            invites:[],\n            actionIndex: 0,\n            currentOption: null,\n            saving: \"saved\",\n            view: \"list\"\n        };\n\n        this.deleteInvite = this.deleteInvite.bind(this);\n        this.createInvite = this.createInvite.bind(this);\n        this.updateInvite = this.updateInvite.bind(this);\n        this.goToAction=this.goToAction.bind(this);\n        this.updateInviteValue=this.updateInviteValue.bind(this);\n        this.toggleNetwork=this.toggleNetwork.bind(this);\n        this.addInviteOption=this.addInviteOption.bind(this);\n        this.saveInvites=this.saveInvites.bind(this);\n        this.deleteInviteOption=this.deleteInviteOption.bind(this);\n        this.updateViewType=this.updateViewType.bind(this);\n    }\n\n    toggleNetwork(network){\n        let component=this;\n        return function(){\n            let newState={...component.state};\n            newState.invites=[...newState.invites];\n            let newInvite={...newState.invites[newState.actionIndex]};\n            newInvite.networks={...newInvite.networks};\n            newInvite.networks[network]=!newInvite.networks[network];\n            newState.invites.splice(newState.actionIndex,1,newInvite);\n            component.setState(newState);\n        }\n    }\n\n    goToAction(action){\n        let component=this;\n        return function(e){\n            let val;\n            if(action===\"goTo\"){\n                val=Number(e.target.value);\n            }\n            if(action===\"previous\"){\n                if(component.state.actionIndex===0) return;\n                val=component.state.actionIndex-1;\n            }\n            if(action===\"next\"){\n                if(component.state.actionIndex===(component.props.invites.length-1)) return;\n                val=component.state.actionIndex+1;\n            }\n            component.setState({actionIndex:val});\n        }\n    }\n\n    updateInviteValue(key){\n        let component=this;\n        return function(e){\n            let val=e.target?e.target.value:e;\n            let newState={...component.state};\n            let newInvite={...newState.invites[newState.actionIndex]};\n            newInvite[key]=val;\n            //console.log(\"NEW_INVITE\",key,val);\n            newState.invites=[...newState.invites];\n            newState.invites.splice(newState.actionIndex,1,newInvite);\n            //console.log(\"updateInviteValue\", newState);\n            component.setState(newState);\n        }\n    }\n\n    addInviteOption(option){\n        let newState={...this.state};\n        let newInvite={...newState.invites[newState.actionIndex]};\n        newInvite.options=[...newInvite.options];\n        newInvite.options.push(option);\n        newState.invites.splice(newState.actionIndex,1,newInvite);\n        //console.log(\"ADD_INVITE_OPTION\", newState);\n        this.setState(newState);\n    }\n\n    deleteInviteOption(option){\n\n        delete option.index;\n        let newState={...this.state};\n        let newInvite={...newState.invites[newState.actionIndex]};\n        newInvite.options=[...newInvite.options];\n        option=newInvite.options.filter(o=>o.date===option.date && o.media===option.media && o.message===option.message)[0];\n        let indexOfOption=newInvite.options.indexOf(option);\n        newInvite.options.splice(indexOfOption,1);\n        console.log(\"DELETE_OPTION\", newInvite, option);\n        this.setState(newState);\n\n    }\n\n    createInvite() {\n        let component = this;\n        let {campaign} = this.props;\n        let data={campaign};\n        Meteor.call(\"invite-create\", data, function (err, res) {\n            if (err) {\n                if (err.error === 500) {\n                    err.error = I18n.t(getTranslation(\"messages.error\"));\n                }\n                //console.log(\"ERROR\", err);\n                notie.alert(3, err.reason || err.error, 3);\n                return\n            }\n            notie.alert(1, I18n.t(getTranslation(\"messages.saved\")), 3);\n            setTimeout(function(){\n                console.log(\"SERVER_CRETE_INVITE_RESPONSE\", res);\n                component.props.refetch({date:new Date()});\n            },100);\n\n        });\n    }\n\n    updateInvite(data) {\n        //console.log(\"CREATE!\");\n        let component = this;\n        Meteor.call(\"invite-update\", data, function (err, res) {\n            if (err) {\n                if (err.error === 500) {\n                    err.error = I18n.t(getTranslation(\"messages.error\"));\n                }\n                //console.log(\"ERROR\", err);\n                notie.alert(3, err.reason || err.error, 3);\n                return\n            }\n            notie.alert(1, I18n.t(getTranslation(\"messages.updated\")), 3);\n            //component.props.refetch();\n            component.closeModal();\n            //console.log(\"SERVER_UPDATE_INVITE_RESPONSE\", res);\n        });\n    }\n\n    deleteInvite(element) {\n        let component = this;\n        return function () {\n            swal({\n                title: 'Are you sure?',\n                text: \"You won't be able to revert this!\",\n                type: 'warning',\n                showCancelButton: true,\n                confirmButtonColor: '#3085d6',\n                cancelButtonColor: '#d33',\n                confirmButtonText: 'Yes, delete it!'\n            }).then(function () {\n                let newState = component.state;\n                newState.invites=[...newState.invites];\n                let indexOfMatch = null;\n                let match = newState.invites.filter((t, i) => {\n                    if (t._id === element._id) {\n                        indexOfMatch = i;\n                    }\n                    return t._id === element._id;\n                })[0];\n                if (match) {\n                    newState.invites.splice(indexOfMatch, 1);\n                    component.setState(newState);\n                    component.save()\n                } else {\n                    console.error(\"SOMETHING WENT WRONG\");\n                }\n            })\n        }\n    }\n\n    saveInvites(silent){\n        let component = this;\n        let {campaign} = this.props;\n        let invites=this.state.invites;\n        this.saving=true;\n        if (silent && typeof(silent) === \"boolean\") {\n            silent = true;\n        } else {\n            silent = false;\n        }\n\n        if (silent && this.savedData === JSON.stringify(invites)) {\n            this.setState({saving: \"saved\"});\n            return\n        }\n        this.setState({saving: \"saving\"});\n        this.savedData = JSON.stringify(invites);\n        Meteor.call(\"invite-save-multiple\", invites, campaign._id, function (err, res) {\n            if (err) {\n                if (err.error === 500) {\n                    err.error = I18n.t(getTranslation(\"messages.error\"));\n                }\n                //console.log(\"ERROR\", err);\n                notie.alert(3, err.reason || err.error, 3);\n                return\n            }\n            component.setState({saving: \"saved\"});\n            if(!silent){\n                notie.alert(1, I18n.t(getTranslation(\"messages.saved\")), 3);\n            }\n\n            /*\n            component.props.refetch({\n                \"campaignID\": component.props.campaign._id\n            });\n            * */\n\n            //console.log(\"SERVER_SAVE_INVITE_RESPONSE\", res);\n        });\n    }\n\n    componentWillMount(){\n        let {invites}=this.props;\n        //console.log(\"WILL_MOINT\", invites);\n        this.setState({invites:[...invites]})\n    }\n\n    componentWillReceiveProps(){\n        let {invites}=this.props;\n       // this.setState({invites:[...invites]})\n    }\n\n    componentDidUpdate(){\n        let {invites}=this.props;\n        if(this.state.invites.length===0 || invites.length>this.state.invites.length || this.saving){\n            //this.setState({invites:[...invites]});\n            this.saving=false;\n        }\n    }\n\n    componentDidMount() {\n        this.savedData = JSON.stringify(this.props.invites);\n        let component = this;\n        this.saveInterval=setInterval(function () {\n            if (component.state.invites && component.state.invites.length>0) {\n                component.saveInvites(true);\n            }\n        }, 5000);\n    }\n\n    componentWillUnmount(){\n        clearInterval(this.saveInterval);\n    }\n\n    updateViewType(view){\n        let component=this;\n        return function(){\n            component.setState({view})\n        }\n    }\n\n    render() {\n        let {campaign, accounts, teamAttacks}= this.props;\n        let {invites, view, actionIndex}=this.state;\n        let {updateViewType,toggleNetwork, updateInviteValue, addInviteOption, goToAction, createInvite,saveInvites, deleteInviteOption}=this;\n        let currentInvite=this.state.invites[actionIndex];\n        if(invites.length===0){\n            return (\n                <ListEmpty message={<Translate value={getTranslation(\"empty.message\")}/>}\n                           button={<Translate value={getTranslation(\"empty.button\")}/>}\n                           callback={createInvite}/>\n            )\n        }\n        return (\n            <div className=\"content-padding-30 invite-actions\">\n                <CampaignInvitesHeader campaign={campaign} updateViewType={updateViewType}/>\n                <div className=\"spacer-20\"/>\n                {view===\"list\"?<CampaignListView invites={invites}\n                                                 accounts={accounts}\n                                                 teamAttacks={teamAttacks}\n                                                 currentInvite={currentInvite}\n                                                 actionIndex={actionIndex}\n                                                 toggleNetwork={toggleNetwork}\n                                                 updateInviteValue={updateInviteValue}\n                                                 addInviteOption={addInviteOption}\n                                                 deleteInviteOption={deleteInviteOption}\n                                                 goToAction={goToAction}\n                                                 createInvite={createInvite}\n                                                 saveInvites={saveInvites}/>:<CampaignTableView invites={invites}\n                                                                                                hasTotal={true}\n                                                                                                campaign={campaign}/>}\n                <Saving state={this.state.saving}/>\n            </div>\n        );\n    }\n}\n\nCampaignInvites = reduxForm({\n    form: 'invite-action'\n})(CampaignInvites);\n\nexport default connect(state => {\n    return {\n        campaign: state.form[\"campaign-edit\"].values\n    }\n})(CampaignInvites)\n\n"]},"sourceType":"script","hash":"8d4264c30bb6b388e75a5bcc5330681189ffe333"}
