{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/stripe/server/subscriptions/coupons.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"imports/modules/stripe/server/subscriptions/coupons.jsx","filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/stripe/server/subscriptions/coupons.jsx","passPerPreset":false,"envName":"development","cwd":"/home/blackstoneteam/repos/viralizing-web/app","root":"/home/blackstoneteam/repos/viralizing-web/app","presets":[],"generatorOpts":{"filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/stripe/server/subscriptions/coupons.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/modules/stripe/server/subscriptions/coupons.jsx"}},"code":"let StripeConnection;\nmodule.watch(require(\"../connection\"), {\n  default(v) {\n    StripeConnection = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet check;\nmodule.watch(require(\"meteor/check\"), {\n  check(v) {\n    check = v;\n  }\n\n}, 2);\nlet Match;\nmodule.watch(require(\"meteor/check\"), {\n  Match(v) {\n    Match = v;\n  }\n\n}, 3);\nMeteor.methods({\n  \"stripe_coupons_create\": function (data) {\n    if (!data) {\n      throw new Meteor.Error(500, \"[Stripe Coupons] - No Stripe Coupon Data Provided\");\n    }\n\n    check(data, {\n      id: Match.Maybe(String),\n      duration: Match.Where(function (duration) {\n        check(duration, String);\n\n        if (duration === \"repeating\" && !data.duration_in_months) {\n          throw new Error(\"duration_in_months must be set when duration is repeating\");\n        }\n\n        if (!data.amount_off && !data.percent_off || data.amount_off && data.percent_off) {\n          throw new Error(\"Either percent_off or amount_off must be set\");\n        }\n\n        if (data.amount_off && !data.currency) {\n          throw new Error(\"Currency must be set when amount_off is used\");\n        }\n\n        return true;\n      }),\n      amount_off: Match.Maybe(Match.Where(function (amount) {\n        if (data.percent_off) {\n          return true;\n        }\n\n        check(amount, Number);\n        return true;\n      })),\n      currency: Match.Maybe(Match.Where(function (currency) {\n        if (data.amount_off) {\n          check(currency, String);\n          return true;\n        }\n\n        return true;\n      })),\n      duration_in_months: Match.Maybe(Match.Where(function (months) {\n        if (data.duration === \"repeating\") {\n          check(months, Number);\n          return true;\n        }\n\n        return true;\n      })),\n      max_redemptions: Match.Maybe(Number),\n      metadata: Match.Maybe(Object),\n      percent_off: Match.Maybe(Match.Where(function (amount) {\n        if (data.amount_off) {\n          return true;\n        }\n\n        check(amount, Number);\n        return true;\n      })),\n      redeem_by: Match.Maybe(Number)\n    });\n    let client = StripeConnection();\n    let method = Meteor.wrapAsync(client.coupons.create, client.coupons);\n    return method(data);\n  },\n  \"stripe_coupons_update\": function (couponID, data) {\n    if (!couponID) {\n      throw new Meteor.Error(500, \"[Stripe Coupons] - No Stripe Coupon ID Provided\");\n    }\n\n    if (!data) {\n      throw new Meteor.Error(500, \"[Stripe Coupons] - No Stripe Coupon Data Provided\");\n    }\n\n    check(couponID, String);\n    check(data, {\n      metadata: Match.Maybe(Object)\n    });\n    let client = StripeConnection();\n    let method = Meteor.wrapAsync(client.coupons.update, client.coupons);\n    return method(couponID, data);\n  },\n  \"stripe_coupons_get\": function (couponID) {\n    if (!couponID) {\n      throw new Meteor.Error(500, \"[Stripe Coupons] - No Stripe Coupon ID Provided\");\n    }\n\n    check(couponID, String);\n    let client = StripeConnection();\n    let method = Meteor.wrapAsync(client.coupons.retrieve, client.coupons);\n    return method(couponID);\n  },\n  \"stripe_coupons_delete\": function (couponID) {\n    if (!couponID) {\n      throw new Meteor.Error(500, \"[Stripe Coupons] - No Coupon ID Provided\");\n    }\n\n    check(couponID, String);\n    let client = StripeConnection();\n    let method = Meteor.wrapAsync(client.coupons.del, client.coupons);\n    return method(couponID);\n  },\n  \"stripe_coupons_list\": function (query) {\n    check(query, {\n      created: Match.Maybe(Match.ObjectIncluding({\n        gt: Match.Maybe(String),\n        gte: Match.Maybe(String),\n        lt: Match.Maybe(String),\n        lte: Match.Maybe(String)\n      })),\n      ending_before: Match.Maybe(String),\n      limit: Match.Maybe(Number),\n      starting_after: Match.Maybe(String)\n    });\n    let client = StripeConnection();\n    let method = Meteor.wrapAsync(client.coupons.list, client.coupons);\n    return method(query);\n  }\n});","map":{"version":3,"sources":["imports/modules/stripe/server/subscriptions/coupons.jsx"],"names":["StripeConnection","module","watch","require","default","v","Meteor","check","Match","methods","data","Error","id","Maybe","String","duration","Where","duration_in_months","amount_off","percent_off","currency","amount","Number","months","max_redemptions","metadata","Object","redeem_by","client","method","wrapAsync","coupons","create","couponID","update","retrieve","del","query","created","ObjectIncluding","gt","gte","lt","lte","ending_before","limit","starting_after","list"],"mappings":"AAAA,IAAIA,gBAAJ;AAAqBC,OAAOC,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACC,UAAQC,CAAR,EAAU;AAACL,uBAAiBK,CAAjB;AAAmB;;AAA/B,CAAtC,EAAuE,CAAvE;AAA0E,IAAIC,MAAJ;AAAWL,OAAOC,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACG,SAAOD,CAAP,EAAS;AAACC,aAAOD,CAAP;AAAS;;AAApB,CAAtC,EAA4D,CAA5D;AAA+D,IAAIE,KAAJ;AAAUN,OAAOC,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACI,QAAMF,CAAN,EAAQ;AAACE,YAAMF,CAAN;AAAQ;;AAAlB,CAArC,EAAyD,CAAzD;AAA4D,IAAIG,KAAJ;AAAUP,OAAOC,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACK,QAAMH,CAAN,EAAQ;AAACG,YAAMH,CAAN;AAAQ;;AAAlB,CAArC,EAAyD,CAAzD;AAKzPC,OAAOG,OAAP,CAAe;AACX,2BAAyB,UAAUC,IAAV,EAAgB;AACrC,QAAI,CAACA,IAAL,EAAW;AACP,YAAM,IAAIJ,OAAOK,KAAX,CAAiB,GAAjB,EAAsB,mDAAtB,CAAN;AACH;;AACDJ,UAAMG,IAAN,EAAY;AACRE,UAAIJ,MAAMK,KAAN,CAAYC,MAAZ,CADI;AAERC,gBAAUP,MAAMQ,KAAN,CAAY,UAASD,QAAT,EAAkB;AACpCR,cAAMQ,QAAN,EAAeD,MAAf;;AACA,YAAGC,aAAW,WAAX,IAA0B,CAACL,KAAKO,kBAAnC,EAAsD;AAClD,gBAAM,IAAIN,KAAJ,CAAU,2DAAV,CAAN;AACH;;AACD,YAAI,CAACD,KAAKQ,UAAN,IAAoB,CAACR,KAAKS,WAA3B,IAA4CT,KAAKQ,UAAL,IAAmBR,KAAKS,WAAvE,EAAoF;AAChF,gBAAM,IAAIR,KAAJ,CAAU,8CAAV,CAAN;AACH;;AACD,YAAGD,KAAKQ,UAAL,IAAmB,CAACR,KAAKU,QAA5B,EAAqC;AACjC,gBAAM,IAAIT,KAAJ,CAAU,8CAAV,CAAN;AACH;;AACD,eAAO,IAAP;AACH,OAZS,CAFF;AAeRO,kBAAYV,MAAMK,KAAN,CAAYL,MAAMQ,KAAN,CAAY,UAAUK,MAAV,EAAkB;AAClD,YAAIX,KAAKS,WAAT,EAAsB;AAClB,iBAAO,IAAP;AACH;;AACDZ,cAAMc,MAAN,EAAcC,MAAd;AACA,eAAO,IAAP;AACH,OANuB,CAAZ,CAfJ;AAsBRF,gBAAUZ,MAAMK,KAAN,CAAYL,MAAMQ,KAAN,CAAY,UAAUI,QAAV,EAAoB;AAClD,YAAIV,KAAKQ,UAAT,EAAqB;AACjBX,gBAAMa,QAAN,EAAgBN,MAAhB;AACA,iBAAO,IAAP;AACH;;AACD,eAAO,IAAP;AACH,OANqB,CAAZ,CAtBF;AA6BRG,0BAAoBT,MAAMK,KAAN,CAAYL,MAAMQ,KAAN,CAAY,UAAUO,MAAV,EAAkB;AAC1D,YAAIb,KAAKK,QAAL,KAAgB,WAApB,EAAiC;AAC7BR,gBAAMgB,MAAN,EAAcD,MAAd;AACA,iBAAO,IAAP;AACH;;AACD,eAAO,IAAP;AACH,OAN+B,CAAZ,CA7BZ;AAoCRE,uBAAiBhB,MAAMK,KAAN,CAAYS,MAAZ,CApCT;AAqCRG,gBAAUjB,MAAMK,KAAN,CAAYa,MAAZ,CArCF;AAsCRP,mBAAaX,MAAMK,KAAN,CAAYL,MAAMQ,KAAN,CAAY,UAAUK,MAAV,EAAkB;AACnD,YAAIX,KAAKQ,UAAT,EAAqB;AACjB,iBAAO,IAAP;AACH;;AACDX,cAAMc,MAAN,EAAcC,MAAd;AACA,eAAO,IAAP;AACH,OANwB,CAAZ,CAtCL;AA6CRK,iBAAWnB,MAAMK,KAAN,CAAYS,MAAZ;AA7CH,KAAZ;AAgDA,QAAIM,SAAS5B,kBAAb;AACA,QAAI6B,SAASvB,OAAOwB,SAAP,CAAiBF,OAAOG,OAAP,CAAeC,MAAhC,EAAwCJ,OAAOG,OAA/C,CAAb;AAEA,WAAOF,OAAOnB,IAAP,CAAP;AACH,GAzDU;AA0DX,2BAAyB,UAAUuB,QAAV,EAAoBvB,IAApB,EAA0B;AAC/C,QAAI,CAACuB,QAAL,EAAe;AACX,YAAM,IAAI3B,OAAOK,KAAX,CAAiB,GAAjB,EAAsB,iDAAtB,CAAN;AACH;;AACD,QAAI,CAACD,IAAL,EAAW;AACP,YAAM,IAAIJ,OAAOK,KAAX,CAAiB,GAAjB,EAAsB,mDAAtB,CAAN;AACH;;AAEDJ,UAAM0B,QAAN,EAAgBnB,MAAhB;AACAP,UAAMG,IAAN,EAAY;AACRe,gBAAUjB,MAAMK,KAAN,CAAYa,MAAZ;AADF,KAAZ;AAIA,QAAIE,SAAS5B,kBAAb;AACA,QAAI6B,SAASvB,OAAOwB,SAAP,CAAiBF,OAAOG,OAAP,CAAeG,MAAhC,EAAwCN,OAAOG,OAA/C,CAAb;AAEA,WAAOF,OAAOI,QAAP,EAAiBvB,IAAjB,CAAP;AACH,GA3EU;AA4EX,wBAAsB,UAAUuB,QAAV,EAAoB;AACtC,QAAI,CAACA,QAAL,EAAe;AACX,YAAM,IAAI3B,OAAOK,KAAX,CAAiB,GAAjB,EAAsB,iDAAtB,CAAN;AACH;;AAEDJ,UAAM0B,QAAN,EAAgBnB,MAAhB;AAEA,QAAIc,SAAS5B,kBAAb;AACA,QAAI6B,SAASvB,OAAOwB,SAAP,CAAiBF,OAAOG,OAAP,CAAeI,QAAhC,EAA0CP,OAAOG,OAAjD,CAAb;AAEA,WAAOF,OAAOI,QAAP,CAAP;AACH,GAvFU;AAwFX,2BAAyB,UAAUA,QAAV,EAAoB;AACzC,QAAI,CAACA,QAAL,EAAe;AACX,YAAM,IAAI3B,OAAOK,KAAX,CAAiB,GAAjB,EAAsB,0CAAtB,CAAN;AACH;;AAEDJ,UAAM0B,QAAN,EAAgBnB,MAAhB;AAEA,QAAIc,SAAS5B,kBAAb;AACA,QAAI6B,SAASvB,OAAOwB,SAAP,CAAiBF,OAAOG,OAAP,CAAeK,GAAhC,EAAqCR,OAAOG,OAA5C,CAAb;AAEA,WAAOF,OAAOI,QAAP,CAAP;AACH,GAnGU;AAoGX,yBAAuB,UAAUI,KAAV,EAAiB;AACpC9B,UAAM8B,KAAN,EAAa;AACTC,eAAS9B,MAAMK,KAAN,CAAYL,MAAM+B,eAAN,CAAsB;AACvCC,YAAIhC,MAAMK,KAAN,CAAYC,MAAZ,CADmC;AAEvC2B,aAAKjC,MAAMK,KAAN,CAAYC,MAAZ,CAFkC;AAGvC4B,YAAIlC,MAAMK,KAAN,CAAYC,MAAZ,CAHmC;AAIvC6B,aAAKnC,MAAMK,KAAN,CAAYC,MAAZ;AAJkC,OAAtB,CAAZ,CADA;AAOT8B,qBAAepC,MAAMK,KAAN,CAAYC,MAAZ,CAPN;AAQT+B,aAAOrC,MAAMK,KAAN,CAAYS,MAAZ,CARE;AASTwB,sBAAgBtC,MAAMK,KAAN,CAAYC,MAAZ;AATP,KAAb;AAYA,QAAIc,SAAS5B,kBAAb;AACA,QAAI6B,SAASvB,OAAOwB,SAAP,CAAiBF,OAAOG,OAAP,CAAegB,IAAhC,EAAsCnB,OAAOG,OAA7C,CAAb;AACA,WAAOF,OAAOQ,KAAP,CAAP;AACH;AApHU,CAAf","sourcesContent":["import StripeConnection from \"../connection\";\nimport {Meteor} from \"meteor/meteor\";\nimport {check} from \"meteor/check\";\nimport {Match} from \"meteor/check\";\n\nMeteor.methods({\n    \"stripe_coupons_create\": function (data) {\n        if (!data) {\n            throw new Meteor.Error(500, \"[Stripe Coupons] - No Stripe Coupon Data Provided\");\n        }\n        check(data, {\n            id: Match.Maybe(String),\n            duration: Match.Where(function(duration){\n                check(duration,String);\n                if(duration===\"repeating\" && !data.duration_in_months){\n                    throw new Error(\"duration_in_months must be set when duration is repeating\");\n                }\n                if((!data.amount_off && !data.percent_off) || (data.amount_off && data.percent_off)){\n                    throw new Error(\"Either percent_off or amount_off must be set\");\n                }\n                if(data.amount_off && !data.currency){\n                    throw new Error(\"Currency must be set when amount_off is used\");\n                }\n                return true;\n            }),\n            amount_off: Match.Maybe(Match.Where(function (amount) {\n                if (data.percent_off) {\n                    return true;\n                }\n                check(amount, Number);\n                return true\n            })),\n            currency: Match.Maybe(Match.Where(function (currency) {\n                if (data.amount_off) {\n                    check(currency, String);\n                    return true;\n                }\n                return true\n            })),\n            duration_in_months: Match.Maybe(Match.Where(function (months) {\n                if (data.duration===\"repeating\") {\n                    check(months, Number);\n                    return true;\n                }\n                return true\n            })),\n            max_redemptions: Match.Maybe(Number),\n            metadata: Match.Maybe(Object),\n            percent_off: Match.Maybe(Match.Where(function (amount) {\n                if (data.amount_off) {\n                    return true;\n                }\n                check(amount, Number);\n                return true\n            })),\n            redeem_by: Match.Maybe(Number)\n        });\n\n        let client = StripeConnection();\n        let method = Meteor.wrapAsync(client.coupons.create, client.coupons);\n\n        return method(data);\n    },\n    \"stripe_coupons_update\": function (couponID, data) {\n        if (!couponID) {\n            throw new Meteor.Error(500, \"[Stripe Coupons] - No Stripe Coupon ID Provided\");\n        }\n        if (!data) {\n            throw new Meteor.Error(500, \"[Stripe Coupons] - No Stripe Coupon Data Provided\");\n        }\n\n        check(couponID, String);\n        check(data, {\n            metadata: Match.Maybe(Object)\n        });\n\n        let client = StripeConnection();\n        let method = Meteor.wrapAsync(client.coupons.update, client.coupons);\n\n        return method(couponID, data);\n    },\n    \"stripe_coupons_get\": function (couponID) {\n        if (!couponID) {\n            throw new Meteor.Error(500, \"[Stripe Coupons] - No Stripe Coupon ID Provided\");\n        }\n\n        check(couponID, String);\n\n        let client = StripeConnection();\n        let method = Meteor.wrapAsync(client.coupons.retrieve, client.coupons);\n\n        return method(couponID);\n    },\n    \"stripe_coupons_delete\": function (couponID) {\n        if (!couponID) {\n            throw new Meteor.Error(500, \"[Stripe Coupons] - No Coupon ID Provided\");\n        }\n\n        check(couponID, String);\n\n        let client = StripeConnection();\n        let method = Meteor.wrapAsync(client.coupons.del, client.coupons);\n\n        return method(couponID);\n    },\n    \"stripe_coupons_list\": function (query) {\n        check(query, {\n            created: Match.Maybe(Match.ObjectIncluding({\n                gt: Match.Maybe(String),\n                gte: Match.Maybe(String),\n                lt: Match.Maybe(String),\n                lte: Match.Maybe(String)\n            })),\n            ending_before: Match.Maybe(String),\n            limit: Match.Maybe(Number),\n            starting_after: Match.Maybe(String)\n        });\n\n        let client = StripeConnection();\n        let method = Meteor.wrapAsync(client.coupons.list, client.coupons);\n        return method(query);\n    }\n});"]},"sourceType":"script","hash":"2c802bc87250b42a11318ac500e4b423ff420703"}
