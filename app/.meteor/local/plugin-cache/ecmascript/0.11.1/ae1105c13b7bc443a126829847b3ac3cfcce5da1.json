{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/core/ui/components/auth-form.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"imports/modules/core/ui/components/auth-form.jsx","filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/core/ui/components/auth-form.jsx","passPerPreset":false,"envName":"development","cwd":"/home/blackstoneteam/repos/viralizing-web/app","root":"/home/blackstoneteam/repos/viralizing-web/app","generatorOpts":{"filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/core/ui/components/auth-form.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/modules/core/ui/components/auth-form.jsx"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar React;\nmodule.watch(require(\"react\"), {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 0);\nvar Link;\nmodule.watch(require(\"react-router\"), {\n  Link: function (v) {\n    Link = v;\n  }\n}, 1);\nvar CookieName;\nmodule.watch(require(\"../../settings\"), {\n  CookieName: function (v) {\n    CookieName = v;\n  }\n}, 2);\nvar Button;\nmodule.watch(require(\"react-router-bootstrap\"), {\n  Button: function (v) {\n    Button = v;\n  }\n}, 3);\nvar IconFacebook, IconTwitter, IconGoogle;\nmodule.watch(require(\"../components/social-icons\"), {\n  IconFacebook: function (v) {\n    IconFacebook = v;\n  },\n  IconTwitter: function (v) {\n    IconTwitter = v;\n  },\n  IconGoogle: function (v) {\n    IconGoogle = v;\n  }\n}, 4);\nvar notie;\nmodule.watch(require(\"notie\"), {\n  \"default\": function (v) {\n    notie = v;\n  }\n}, 5);\nvar AppSettings;\nmodule.watch(require(\"../../../../settings\"), {\n  \"default\": function (v) {\n    AppSettings = v;\n  }\n}, 6);\nvar Translate, I18n;\nmodule.watch(require(\"react-redux-i18n\"), {\n  Translate: function (v) {\n    Translate = v;\n  },\n  I18n: function (v) {\n    I18n = v;\n  }\n}, 7);\nvar SocialShare;\nmodule.watch(require(\"../../../core/ui/components/social-share\"), {\n  SocialShare: function (v) {\n    SocialShare = v;\n  }\n}, 8);\nvar AppLogo;\nmodule.watch(require(\"../../../core/ui/components/logo\"), {\n  \"default\": function (v) {\n    AppLogo = v;\n  }\n}, 9);\nvar IntMenu;\nmodule.watch(require(\"../components/nav-bar/int-menu\"), {\n  \"default\": function (v) {\n    IntMenu = v;\n  }\n}, 10);\n\nvar getTranslation = function (key) {\n  return \"Core.auth.\" + key;\n};\n\nvar AuthForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inheritsLoose2.default)(AuthForm, _React$Component);\n\n  function AuthForm() {\n    var _this;\n\n    _this = _React$Component.call(this) || this;\n    _this.state = {\n      email: null,\n      password: null,\n      rememberMe: false\n    };\n    _this.getButtonText = _this.getButtonText.bind((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)));\n    _this.getSocialLogin = _this.getSocialLogin.bind((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)));\n    _this.accountsRegister = _this.accountsRegister.bind((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)));\n    _this.accountsLogin = _this.accountsLogin.bind((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)));\n    _this.accountsRestore = _this.accountsRestore.bind((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)));\n    _this.loginWith = _this.loginWith.bind((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)));\n    _this.updateValue = _this.updateValue.bind((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)));\n    return _this;\n  }\n\n  var _proto = AuthForm.prototype;\n\n  _proto.updateValue = function () {\n    function updateValue(key) {\n      var component = this;\n      return function (e) {\n        var val = e.target.value;\n        var newState = Object.assign({}, component.state);\n        if (typeof val === 'string') val = val.trim();\n        newState[key] = val;\n        component.setState(newState);\n      };\n    }\n\n    return updateValue;\n  }();\n\n  _proto.getButtonText = function () {\n    function getButtonText(action) {\n      var value = \"\";\n\n      switch (action) {\n        case \"login\":\n          value = React.createElement(Translate, {\n            value: getTranslation(action + \".button\")\n          });\n          break;\n\n        case \"restore\":\n          value = React.createElement(Translate, {\n            value: getTranslation(action + \".button\")\n          });\n          break;\n\n        case \"register\":\n          value = React.createElement(Translate, {\n            value: getTranslation(action + \".button\")\n          });\n          break;\n\n        case \"recover\":\n          value = React.createElement(Translate, {\n            value: getTranslation(action + \".button\")\n          });\n          break;\n\n        default:\n          value = React.createElement(Translate, {\n            value: getTranslation(\"login.button\")\n          });\n      }\n\n      return value;\n    }\n\n    return getButtonText;\n  }();\n\n  _proto.loginWith = function () {\n    function loginWith(service) {\n      return function () {\n        //console.log(\"Login with,\",service);\n        switch (service) {\n          case \"facebook\":\n            Meteor.loginWithFacebook({\n              requestPermissions: ['public_profile', 'email']\n            }, function (err, res) {\n              //console.log(service+\" Login\",arguments);\n              if (err && err.reason && err.reason === \"Email already exists.\") {\n                notie.alert(3, \"Account already exists with Email credentials\", 5);\n                return;\n              }\n\n              console.debug(\"Social Login Res:\", res);\n            });\n            break;\n\n          case \"twitter\":\n            Meteor.loginWithTwitter({}, function (err, res) {\n              //console.log(service+\" Login\",arguments);\n              if (err && err.reason && err.reason === \"Email already exists.\") {\n                notie.alert(3, \"Account already exists with Email credentials\", 5);\n                return;\n              }\n\n              console.debug(\"Social Login Res:\", res);\n            });\n            break;\n\n          case \"google\":\n            Meteor.loginWithGoogle({}, function (err, res) {\n              // console.log(service+\" Login\",arguments);\n              if (err && err.reason && err.reason === \"Email already exists.\") {\n                notie.alert(3, \"Account already exists with Email credentials\", 5);\n                return;\n              }\n\n              console.debug(\"Social Login Res:\", res);\n            });\n            break;\n\n          case \"instagram\":\n            Meteor.loginWithInstagram({}, function (err, res) {\n              //console.log(service+\" Login\",arguments);\n              if (err && err.reason && err.reason === \"Email already exists.\") {\n                notie.alert(3, \"Account already exists with Email credentials\", 5);\n                return;\n              }\n\n              console.debug(\"Social Login Res:\", res);\n            });\n            break;\n\n          default:\n            console.error(\"Login with \" + service + \" is not available\");\n        }\n      };\n    }\n\n    return loginWith;\n  }();\n\n  _proto.getSocialLogin = function () {\n    function getSocialLogin(action) {\n      if (action === \"login\") {\n        //console.log(\"GET_SOCIAL_LOGIN\", this.loginWith);\n        return React.createElement(\"div\", {\n          className: \"social-login\"\n        }, React.createElement(SocialShare, {\n          loginWith: this.loginWith,\n          message: React.createElement(Translate, {\n            value: getTranslation(\"labels.or\")\n          })\n        }));\n      }\n\n      return \"\";\n    }\n\n    return getSocialLogin;\n  }();\n\n  _proto.accountsRegister = function () {\n    function accountsRegister(email, password) {\n      //console.log(\"register\");\n      var self = this;\n      Meteor.call('users_create_account', email, password, \"Plan\", \"Source\", function (err, res) {\n        if (err && err.reason) {\n          notie.alert(3, err.reason, 3);\n          return;\n        }\n\n        self.accountsLogin(email, password);\n      });\n    }\n\n    return accountsRegister;\n  }();\n\n  _proto.accountsLogin = function () {\n    function accountsLogin(email, password) {\n      //console.log(\"ACCOUNTS_LOGIN\", email, password);\n      Meteor.loginWithPassword(email, password, function (err, res) {\n        if (err && err.reason) {\n          notie.alert(3, I18n.t(getTranslation(\"errors.login\")), 3);\n          return;\n        }\n      });\n    }\n\n    return accountsLogin;\n  }();\n\n  _proto.accountsRestore = function () {\n    function accountsRestore(password) {\n      if (window.localStorage.getItem(CookieName + \"_USER_DATA\")) {\n        var data = JSON.parse(window.localStorage.getItem(CookieName + \"_USER_DATA\")); //console.log(\"ACCOUNT_RESTORE\", data.email, password);\n\n        this.accountsLogin(data.email, password);\n      }\n    }\n\n    return accountsRestore;\n  }();\n\n  _proto.handleSubmit = function () {\n    function handleSubmit(e) {\n      var action = this.props.action;\n      e.preventDefault();\n      var form = this.state;\n\n      if (action !== \"restore\") {\n        if (form.rememberMe) {\n          window.localStorage.setItem(CookieName + \"_USER_DATA\", JSON.stringify({\n            active: true,\n            email: form.email\n          }));\n        } else {\n          window.localStorage.removeItem(CookieName + \"_USER_DATA\");\n        }\n      } //console.log(\"FORM_SUBMIT_DATA\", form);\n\n\n      switch (action) {\n        case \"login\":\n          this.accountsLogin(form.email, form.password);\n          break;\n\n        case \"register\":\n          this.accountsRegister(form.email, form.password);\n          break;\n\n        case \"recover\":\n          this.accountsRecover(form.email);\n          break;\n\n        case \"restore\":\n          this.accountsRestore(form.password);\n          break;\n\n        default:\n          throw new Error(\"Wrong Auth State\");\n      }\n\n      return false;\n    }\n\n    return handleSubmit;\n  }();\n\n  _proto.render = function () {\n    function render() {\n      var action = this.props.action;\n      var user = {\n        avatar: null,\n        name: null\n      };\n\n      if (window.localStorage.getItem(CookieName + \"_USER_DATA\")) {\n        user = JSON.parse(window.localStorage.getItem(CookieName + \"_USER_DATA\"));\n      }\n\n      var emailInput = React.createElement(\"div\", {\n        className: \"form-group\"\n      }, React.createElement(\"label\", {\n        className: \"sr-only\",\n        htmlFor: \"inputEmail\"\n      }, I18n.t(getTranslation(\"labels.email\"))), React.createElement(\"input\", {\n        type: \"email\",\n        className: \"form-control\",\n        id: \"inputEmail\",\n        placeholder: I18n.t(getTranslation(\"labels.email\")),\n        onChange: this.updateValue('email'),\n        name: \"Email\"\n      }));\n      var passwordInput = React.createElement(\"div\", {\n        className: \"form-group\"\n      }, React.createElement(\"label\", {\n        className: \"sr-only\",\n        htmlFor: \"inputPassword\"\n      }, I18n.t(getTranslation(\"labels.password\"))), React.createElement(\"input\", {\n        type: \"password\",\n        className: \"form-control\",\n        id: \"inputPassword\",\n        placeholder: I18n.t(getTranslation(\"labels.password\")),\n        onChange: this.updateValue('password'),\n        name: \"Password\"\n      }));\n      var greetingMessage = React.createElement(Translate, {\n        value: getTranslation(action + \".greeting\")\n      });\n      var extra;\n\n      switch (action) {\n        case \"login\":\n          extra = React.createElement(Link, {\n            to: \"/auth/register\"\n          }, React.createElement(Translate, {\n            value: getTranslation(\"register.button\")\n          }));\n          break;\n\n        case \"restore\":\n          extra = React.createElement(Link, {\n            to: \"/auth/login\"\n          }, React.createElement(Translate, {\n            value: getTranslation(\"restore.footer2\")\n          }));\n          break;\n\n        case \"register\":\n          extra = React.createElement(Link, {\n            to: \"/auth/login\"\n          }, React.createElement(Translate, {\n            value: getTranslation(\"login.button\")\n          }));\n          break;\n\n        case \"recover\":\n          extra = React.createElement(Link, {\n            to: \"/auth/login\"\n          }, React.createElement(Translate, {\n            value: getTranslation(\"login.button\")\n          }));\n          break;\n\n        default:\n      }\n\n      var footerMessage = React.createElement(\"div\", null, React.createElement(Translate, {\n        value: getTranslation(action + \".footer\")\n      }), extra);\n      var headerImage = React.createElement(AppLogo, {\n        alt: true\n      });\n\n      if (action === \"restore\") {\n        headerImage = React.createElement(\"img\", {\n          src: user.avatar,\n          alt: user.name | \"...\",\n          className: \"avatar\"\n        });\n        passwordInput = React.createElement(\"div\", {\n          className: \"input-group\"\n        }, React.createElement(\"input\", {\n          type: \"password\",\n          className: \"form-control\",\n          id: \"inputPassword\",\n          placeholder: I18n.t(getTranslation(\"labels.password\")),\n          onChange: this.updateValue('password'),\n          name: \"password\"\n        }), React.createElement(\"span\", {\n          className: \"input-group-btn\"\n        }, React.createElement(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\"\n        }, React.createElement(\"i\", {\n          className: \"icon wb-unlock\",\n          \"aria-hidden\": \"true\"\n        }), React.createElement(\"span\", {\n          className: \"sr-only\"\n        }, \"unLock\"))));\n      }\n\n      var loginHelpers = React.createElement(\"div\", {\n        className: \"form-group clearfix\"\n      }, React.createElement(\"div\", {\n        className: \"checkbox-custom checkbox-inline checkbox-primary pull-left\"\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"inputCheckbox\",\n        name: \"remember\",\n        onChange: this.updateValue('rememberMe')\n      }), React.createElement(\"label\", {\n        htmlFor: \"inputCheckbox\"\n      }, React.createElement(Translate, {\n        value: getTranslation(\"login.remember\")\n      }))), React.createElement(Link, {\n        className: \"pull-right\",\n        to: \"/auth/recover\"\n      }, React.createElement(Translate, {\n        value: getTranslation(\"recover.link\")\n      })));\n      return React.createElement(\"div\", {\n        className: \"page-content vertical-align-middle page-login\"\n      }, React.createElement(\"div\", {\n        className: \"brand\"\n      }, headerImage), React.createElement(\"p\", null, greetingMessage), React.createElement(\"form\", {\n        className: \"auth-form\",\n        onSubmit: this.handleSubmit\n      }, action !== \"restore\" ? emailInput : \"\", action !== \"recover\" ? passwordInput : \"\", action === \"login\" ? loginHelpers : \"\", action !== \"restore\" ? React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary btn-block\"\n      }, this.getButtonText(action)) : \"\", this.getSocialLogin(action), React.createElement(\"div\", {\n        className: \"footer\"\n      }, footerMessage), React.createElement(\"div\", {\n        className: \"language\"\n      }, React.createElement(IntMenu, null), React.createElement(Translate, {\n        value: getTranslation(\"labels.language\")\n      }))));\n    }\n\n    return render;\n  }();\n\n  return AuthForm;\n}(React.Component);\n\nmodule.exportDefault(AuthForm);","map":{"version":3,"sources":["imports/modules/core/ui/components/auth-form.jsx"],"names":["React","module","watch","require","v","Link","CookieName","Button","IconFacebook","IconTwitter","IconGoogle","notie","AppSettings","Translate","I18n","SocialShare","AppLogo","IntMenu","getTranslation","key","AuthForm","state","email","password","rememberMe","getButtonText","bind","getSocialLogin","accountsRegister","accountsLogin","accountsRestore","handleSubmit","loginWith","updateValue","component","e","val","target","value","newState","Object","assign","trim","setState","action","service","Meteor","loginWithFacebook","requestPermissions","err","res","reason","alert","console","debug","loginWithTwitter","loginWithGoogle","loginWithInstagram","error","self","call","loginWithPassword","t","window","localStorage","getItem","data","JSON","parse","props","preventDefault","form","setItem","stringify","active","removeItem","accountsRecover","Error","render","user","avatar","name","emailInput","passwordInput","greetingMessage","extra","footerMessage","headerImage","loginHelpers","Component","exportDefault"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Link} from \"react-router\";\nimport {CookieName} from \"../../settings\";\nimport {Button} from \"react-router-bootstrap\";\nimport {IconFacebook, IconTwitter, IconGoogle} from \"../components/social-icons\";\nimport notie from \"notie\";\nimport AppSettings from \"../../../../settings\";\nimport {Translate, I18n} from \"react-redux-i18n\";\nimport {SocialShare} from \"../../../core/ui/components/social-share\";\nimport AppLogo from \"../../../core/ui/components/logo\";\nimport IntMenu from \"../components/nav-bar/int-menu\";\n\nlet getTranslation = (key) => {\n    return \"Core.auth.\" + key;\n};\n\nclass AuthForm extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            email: null,\n            password: null,\n\t        rememberMe: false\n        };\n\n        this.getButtonText = this.getButtonText.bind(this);\n        this.getSocialLogin = this.getSocialLogin.bind(this);\n        this.accountsRegister = this.accountsRegister.bind(this);\n        this.accountsLogin = this.accountsLogin.bind(this);\n        this.accountsRestore = this.accountsRestore.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.loginWith=this.loginWith.bind(this);\n        this.updateValue = this.updateValue.bind(this);\n    }\n\n\tupdateValue(key){\n        let component=this;\n        return function(e){\n            let val = e.target.value;\n            let newState = Object.assign({}, component.state);\n            if(typeof (val) === 'string') val = val.trim();\n            newState[key] = val;\n            component.setState(newState);\n        };\n    }\n\n    getButtonText(action) {\n        let value = \"\";\n        switch (action) {\n            case \"login\":\n                value = <Translate value={getTranslation(action + \".button\")}/>;\n                break;\n            case \"restore\":\n                value = <Translate value={getTranslation(action + \".button\")}/>;\n                break;\n            case \"register\":\n                value = <Translate value={getTranslation(action + \".button\")}/>;\n                break;\n            case \"recover\":\n                value = <Translate value={getTranslation(action + \".button\")}/>;\n                break;\n            default:\n                value = <Translate value={getTranslation(\"login.button\")}/>\n        }\n\n        return value;\n    }\n\n    loginWith(service){\n        return function(){\n            //console.log(\"Login with,\",service);\n            switch(service) {\n                case \"facebook\":\n                    Meteor.loginWithFacebook({\n                        requestPermissions: ['public_profile', 'email']\n                    },function(err,res){\n                        //console.log(service+\" Login\",arguments);\n                        if(err && err.reason && err.reason===\"Email already exists.\"){\n                            notie.alert(3,\"Account already exists with Email credentials\",5);\n                            return;\n                        }\n\n                        console.debug(\"Social Login Res:\",res);\n                    });\n                    break;\n                case \"twitter\":\n                    Meteor.loginWithTwitter({},function(err,res){\n                        //console.log(service+\" Login\",arguments);\n                        if(err && err.reason && err.reason===\"Email already exists.\"){\n                            notie.alert(3,\"Account already exists with Email credentials\",5);\n                            return;\n                        }\n\n                        console.debug(\"Social Login Res:\",res);\n                    });\n                    break;\n                case \"google\":\n                    Meteor.loginWithGoogle({},function(err,res){\n                       // console.log(service+\" Login\",arguments);\n                        if(err && err.reason && err.reason===\"Email already exists.\"){\n                            notie.alert(3,\"Account already exists with Email credentials\",5);\n                            return;\n                        }\n\n                        console.debug(\"Social Login Res:\",res);\n                    });\n                    break;\n                case \"instagram\":\n                    Meteor.loginWithInstagram({},function(err,res){\n                        //console.log(service+\" Login\",arguments);\n                        if(err && err.reason && err.reason===\"Email already exists.\"){\n                            notie.alert(3,\"Account already exists with Email credentials\",5);\n                            return;\n                        }\n\n                        console.debug(\"Social Login Res:\",res);\n                    });\n                    break;\n\n                default:\n                    console.error(\"Login with \"+service+\" is not available\");\n            }\n        }\n    }\n\n    getSocialLogin(action) {\n        if (action === \"login\") {\n            //console.log(\"GET_SOCIAL_LOGIN\", this.loginWith);\n            return (\n                <div className=\"social-login\">\n                    <SocialShare loginWith={this.loginWith} message={<Translate value={getTranslation(\"labels.or\")}/>}/>\n                </div>\n            )\n        }\n        return \"\"\n    }\n\n    accountsRegister(email, password) {\n        //console.log(\"register\");\n        let self = this;\n        Meteor.call('users_create_account', email, password, \"Plan\", \"Source\", function (err, res) {\n            if (err && err.reason) {\n                notie.alert(3, err.reason, 3);\n                return\n            }\n            self.accountsLogin(email, password);\n        })\n\n    }\n\n    accountsLogin(email, password) {\n        //console.log(\"ACCOUNTS_LOGIN\", email, password);\n\n        Meteor.loginWithPassword(email, password, function (err, res) {\n\n            if (err && err.reason) {\n                notie.alert(3, I18n.t(getTranslation(\"errors.login\")), 3);\n\n                return;\n            }\n\n        });\n    }\n\n    accountsRestore(password) {\n        if (window.localStorage.getItem(CookieName + \"_USER_DATA\")) {\n            let data = JSON.parse(window.localStorage.getItem(CookieName + \"_USER_DATA\"));\n            //console.log(\"ACCOUNT_RESTORE\", data.email, password);\n            this.accountsLogin(data.email, password);\n        }\n    }\n\n    handleSubmit(e) {\n        const action = this.props.action;\n        e.preventDefault();\n        let form = this.state;\n\n        if (action !== \"restore\") {\n            if (form.rememberMe) {\n                window.localStorage.setItem(CookieName + \"_USER_DATA\", JSON.stringify({\n                    active: true,\n                    email: form.email\n                }));\n            } else {\n                window.localStorage.removeItem(CookieName + \"_USER_DATA\");\n            }\n        }\n\n        //console.log(\"FORM_SUBMIT_DATA\", form);\n\n\n        switch (action) {\n            case \"login\":\n                this.accountsLogin(form.email, form.password);\n                break;\n            case \"register\":\n                this.accountsRegister(form.email, form.password);\n                break;\n            case \"recover\":\n                this.accountsRecover(form.email);\n                break;\n            case \"restore\":\n                this.accountsRestore(form.password);\n                break;\n            default:\n                throw new Error(\"Wrong Auth State\");\n        }\n        return false\n    }\n\n    render() {\n        const {action} = this.props;\n        let user = {\n            avatar: null,\n            name: null\n        };\n\n        if (window.localStorage.getItem(CookieName + \"_USER_DATA\")) {\n            user = JSON.parse(window.localStorage.getItem(CookieName + \"_USER_DATA\"));\n        }\n\n        const emailInput = (\n            <div className=\"form-group\">\n                <label className=\"sr-only\" htmlFor=\"inputEmail\">{I18n.t(getTranslation(\"labels.email\"))}</label>\n                <input type=\"email\" className=\"form-control\" id=\"inputEmail\"\n                       placeholder={I18n.t(getTranslation(\"labels.email\"))}\n                       onChange = {this.updateValue('email')}\n                       name=\"Email\"/>\n            </div>\n        );\n\n        let passwordInput = (\n            <div className=\"form-group\">\n                <label className=\"sr-only\" htmlFor=\"inputPassword\">{I18n.t(getTranslation(\"labels.password\"))}</label>\n                <input type=\"password\" className=\"form-control\" id=\"inputPassword\"\n                       placeholder={I18n.t(getTranslation(\"labels.password\"))}\n                       onChange = {this.updateValue('password')}\n                       name=\"Password\"/>\n            </div>\n        );\n\n        let greetingMessage = <Translate value={getTranslation(action + \".greeting\")}/>;\n        let extra;\n        switch (action) {\n            case \"login\":\n                extra = <Link to=\"/auth/register\"><Translate value={getTranslation(\"register.button\")}/></Link>;\n                break;\n            case \"restore\":\n                extra = <Link to=\"/auth/login\"><Translate value={getTranslation(\"restore.footer2\")}/></Link>;\n                break;\n            case \"register\":\n                extra = <Link to=\"/auth/login\"><Translate value={getTranslation(\"login.button\")}/></Link>;\n                break;\n            case \"recover\":\n                extra = <Link to=\"/auth/login\"><Translate value={getTranslation(\"login.button\")}/></Link>;\n                break;\n            default:\n\n        }\n\n        let footerMessage = (\n            <div>\n                <Translate value={getTranslation(action + \".footer\")}/>\n                {extra}\n            </div>\n        );\n        let headerImage = <AppLogo alt={true}/>;\n\n\n        if (action === \"restore\") {\n            headerImage = <img src={user.avatar} alt={user.name | \"...\"} className=\"avatar\"/>;\n            passwordInput = (\n                <div className=\"input-group\">\n                    <input type=\"password\" className=\"form-control\" id=\"inputPassword\"\n                           placeholder={I18n.t(getTranslation(\"labels.password\"))}\n                           onChange = {this.updateValue('password')}\n                           name=\"password\"/>\n                    <span className=\"input-group-btn\">\n                        <button type=\"submit\" className=\"btn btn-primary\">\n                            <i className=\"icon wb-unlock\" aria-hidden=\"true\"/>\n                            <span className=\"sr-only\">unLock</span>\n                        </button>\n                      </span>\n                </div>\n            );\n        }\n\n        const loginHelpers = (\n            <div className=\"form-group clearfix\">\n                <div className=\"checkbox-custom checkbox-inline checkbox-primary pull-left\">\n                    <input type=\"checkbox\" id=\"inputCheckbox\" name=\"remember\"\n                           onChange = {this.updateValue('rememberMe')}/>\n                    <label htmlFor=\"inputCheckbox\"><Translate value={getTranslation(\"login.remember\")}/></label>\n                </div>\n                <Link className=\"pull-right\" to=\"/auth/recover\"><Translate\n                    value={getTranslation(\"recover.link\")}/></Link>\n            </div>\n        );\n\n        return (\n            <div className=\"page-content vertical-align-middle page-login\">\n                <div className=\"brand\">\n                    {headerImage}\n                </div>\n                <p>{greetingMessage}</p>\n                <form className=\"auth-form\" onSubmit={this.handleSubmit}>\n                    {action !== \"restore\" ? emailInput : \"\"}\n\n                    {action !== \"recover\" ? passwordInput : \"\"}\n\n                    {action === \"login\" ? loginHelpers : \"\"}\n\n                    {action !== \"restore\" ? <button type=\"submit\"\n                                                    className=\"btn btn-primary btn-block\">{this.getButtonText(action)}</button> : \"\"}\n\n                    {this.getSocialLogin(action)}\n\n                    <div className=\"footer\">\n                        {footerMessage}\n                    </div>\n                    {/*<AccountsUIWrapper/>*/}\n                    <div className=\"language\">\n                        <IntMenu/>\n                        <Translate value={getTranslation(\"labels.language\")}/>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default AuthForm ;\n"]},"sourceType":"script","hash":"ae1105c13b7bc443a126829847b3ac3cfcce5da1"}
