{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/campaigns/server/methods.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"imports/modules/campaigns/server/methods.jsx","filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/campaigns/server/methods.jsx","passPerPreset":false,"envName":"development","cwd":"/home/blackstoneteam/repos/viralizing-web/app","root":"/home/blackstoneteam/repos/viralizing-web/app","presets":[],"generatorOpts":{"filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/campaigns/server/methods.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/modules/campaigns/server/methods.jsx"}},"code":"let Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Email;\nmodule.watch(require(\"meteor/email\"), {\n  Email(v) {\n    Email = v;\n  }\n\n}, 1);\nlet Settings;\nmodule.watch(require(\"../../../settings\"), {\n  default(v) {\n    Settings = v;\n  }\n\n}, 2);\nlet CampaignsSchema;\nmodule.watch(require(\"../../../server/schemas/campaign/schema\"), {\n  default(v) {\n    CampaignsSchema = v;\n  }\n\n}, 3);\nlet InviteSchema;\nmodule.watch(require(\"../../../server/schemas/invites/schema\"), {\n  default(v) {\n    InviteSchema = v;\n  }\n\n}, 4);\nMeteor.methods({\n  \"campaigns-crate\": function (data) {\n    // console.log(\"CAMPAIGNS_CREATE_BEFORE\", data);\n    let user = Meteor.user();\n    let newCampaign = Object.assign({}, CampaignsSchema, {\n      owner: user._id,\n      manager: user._id\n    });\n    let {\n      name,\n      dateStart,\n      dateEnd,\n      brands\n    } = data;\n    newCampaign.information = Object.assign({}, newCampaign.information, {\n      name,\n      dateStart,\n      dateEnd,\n      brands: brands.map(b => b._id)\n    }); //console.log(\"CAMPAIGNS_CREATE_INSERT\", newCampaign, data);\n\n    return Campaigns.insert(newCampaign);\n  },\n  \"campaigns-save\": function (campaign) {\n    const user = Meteor.user();\n    let dbCampaign = Campaigns.findOne({\n      _id: campaign._id\n    });\n\n    const removeTypeNames = function (obj) {\n      Object.keys(obj).forEach(function (k) {\n        if (k === \"__typename\") {\n          delete obj[k];\n        }\n\n        if (obj[k] && typeof obj[k] === \"object\") {\n          removeTypeNames(obj[k]);\n        }\n      });\n    };\n\n    campaign.owner = campaign.owner._id;\n    campaign.manager = campaign.manager._id;\n\n    if (campaign.information.brands) {\n      campaign.information.brands = campaign.information.brands.map(b => b._id);\n    }\n\n    removeTypeNames(campaign);\n    return Campaigns.update(campaign._id, {\n      $set: Object.assign({}, dbCampaign, campaign)\n    });\n  },\n  \"invite-create\": function (invite) {\n    //console.log(\"INVITE_CREATE\");\n    let user = Meteor.user();\n\n    const removeTypeNames = function (obj) {\n      Object.keys(obj).forEach(function (k) {\n        if (k === \"__typename\") {\n          delete obj[k];\n        }\n\n        if (obj[k] && typeof obj[k] === \"object\") {\n          removeTypeNames(obj[k]);\n        }\n      });\n    };\n\n    let newInvite = Object.assign({}, InviteSchema, invite, {\n      owner: user._id\n    });\n    newInvite.campaign = newInvite.campaign._id;\n    newInvite.influencers = newInvite.influencers.map(a => a._id);\n    removeTypeNames(newInvite);\n    return Invites.insert(newInvite);\n  },\n  \"invite-update\": function (invite) {\n    const user = Meteor.user();\n\n    const removeTypeNames = function (obj) {\n      Object.keys(obj).forEach(function (k) {\n        if (k === \"__typename\") {\n          delete obj[k];\n        }\n\n        if (obj[k] && typeof obj[k] === \"object\") {\n          removeTypeNames(obj[k]);\n        }\n      });\n    };\n\n    invite.influencers = invite.influencers.map(a => a._id);\n    invite.teamAttacks = invite.teamAttacks.map(a => a._id);\n    removeTypeNames(invite);\n    return Invites.update(invite._id, {\n      $set: invite\n    });\n  },\n  \"invite-save-multiple\": function (invites, campaignID) {\n    let writes = [];\n    invites.forEach(invite => {\n      invite.campaign = campaignID;\n      writes.push(Meteor.call(\"invite-update\", invite));\n    });\n    return writes;\n  },\n  \"campaign-objective-proposal\": function (campaignID, data) {\n    //console.log(\"campaign-objective-proposal\", campaignID, data);\n    let user = Meteor.user();\n    let userName = user.profile.name;\n    let action = \"Objetivo de Campaña\";\n    let proposal = data.objective;\n    this.unblock();\n    let subject = \"Se ha sugerido un nuevo \" + action;\n    let html = (userName ? userName : \"El usuario\") + \" (\" + user.emails[0].address + \" - \" + user._id + \")\" + \" ha sugerido un nuevo \" + action + \": \" + proposal + \".\";\n    Email.send({\n      from: Settings.email.noReply,\n      to: \"hello@viralizing.me\",\n      subject,\n      html\n    });\n  }\n});","map":{"version":3,"sources":["imports/modules/campaigns/server/methods.jsx"],"names":["Meteor","module","watch","require","v","Email","Settings","default","CampaignsSchema","InviteSchema","methods","data","user","newCampaign","Object","assign","owner","_id","manager","name","dateStart","dateEnd","brands","information","map","b","Campaigns","insert","campaign","dbCampaign","findOne","removeTypeNames","obj","keys","forEach","k","update","$set","invite","newInvite","influencers","a","Invites","teamAttacks","invites","campaignID","writes","push","call","userName","profile","action","proposal","objective","unblock","subject","html","emails","address","send","from","email","noReply","to"],"mappings":"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","sourcesContent":["import {Meteor} from \"meteor/meteor\";\nimport {Email} from 'meteor/email';\nimport Settings from \"../../../settings\";\nimport CampaignsSchema from \"../../../server/schemas/campaign/schema\";\nimport InviteSchema from \"../../../server/schemas/invites/schema\";\n\nMeteor.methods({\n    \"campaigns-crate\": function (data) {\n       // console.log(\"CAMPAIGNS_CREATE_BEFORE\", data);\n        let user = Meteor.user();\n\n        let newCampaign = Object.assign({}, CampaignsSchema, {\n            owner: user._id,\n            manager: user._id\n        });\n\n        let {name, dateStart, dateEnd, brands} = data;\n\n        newCampaign.information = Object.assign({}, newCampaign.information, {\n            name,\n            dateStart,\n            dateEnd,\n            brands:brands.map((b)=>b._id)\n        });\n\n        //console.log(\"CAMPAIGNS_CREATE_INSERT\", newCampaign, data);\n\n        return Campaigns.insert(newCampaign);\n    },\n    \"campaigns-save\": function (campaign) {\n        const user = Meteor.user();\n        let dbCampaign = Campaigns.findOne({_id: campaign._id});\n        const removeTypeNames = function (obj) {\n            Object.keys(obj).forEach(function (k) {\n                if (k === \"__typename\") {\n                    delete obj[k];\n                }\n                if (obj[k] && typeof obj[k] === \"object\") {\n                    removeTypeNames(obj[k]);\n                }\n            });\n        };\n\n        campaign.owner = campaign.owner._id;\n        campaign.manager = campaign.manager._id;\n        if (campaign.information.brands) {\n            campaign.information.brands = campaign.information.brands.map((b)=>b._id);\n        }\n\n        removeTypeNames(campaign);\n\n        return Campaigns.update(campaign._id, {$set: Object.assign({}, dbCampaign, campaign)});\n    },\n    \"invite-create\": function (invite) {\n        //console.log(\"INVITE_CREATE\");\n        let user = Meteor.user();\n        const removeTypeNames = function (obj) {\n            Object.keys(obj).forEach(function (k) {\n                if (k === \"__typename\") {\n                    delete obj[k];\n                }\n                if (obj[k] && typeof obj[k] === \"object\") {\n                    removeTypeNames(obj[k]);\n                }\n            });\n        };\n\n        let newInvite = Object.assign({}, InviteSchema, invite, {\n            owner: user._id\n        });\n        newInvite.campaign = newInvite.campaign._id;\n        newInvite.influencers = newInvite.influencers.map((a) => a._id);\n\n        removeTypeNames(newInvite);\n\n        return Invites.insert(newInvite);\n    },\n    \"invite-update\": function (invite) {\n        const user = Meteor.user();\n        const removeTypeNames = function (obj) {\n            Object.keys(obj).forEach(function (k) {\n                if (k === \"__typename\") {\n                    delete obj[k];\n                }\n                if (obj[k] && typeof obj[k] === \"object\") {\n                    removeTypeNames(obj[k]);\n                }\n            });\n        };\n\n        invite.influencers = invite.influencers.map((a) => a._id);\n        invite.teamAttacks = invite.teamAttacks.map((a) => a._id);\n\n        removeTypeNames(invite);\n        return Invites.update(invite._id, {$set: invite});\n    },\n    \"invite-save-multiple\": function (invites, campaignID) {\n        let writes = [];\n        invites.forEach((invite) => {\n            invite.campaign = campaignID;\n            writes.push(Meteor.call(\"invite-update\", invite));\n        });\n        return writes;\n    },\n    \"campaign-objective-proposal\": function(campaignID, data){\n        //console.log(\"campaign-objective-proposal\", campaignID, data);\n\n        let user=Meteor.user();\n        let userName = user.profile.name;\n\n        let action=\"Objetivo de Campaña\";\n        let proposal=data.objective;\n\n        this.unblock();\n        let subject = \"Se ha sugerido un nuevo \"+action;\n        let html = ((userName?userName:\"El usuario\")+\" (\" + user.emails[0].address + \" - \"+user._id+\")\") + \" ha sugerido un nuevo \"+action+\": \"+proposal+\".\";\n\n        Email.send({\n            from: Settings.email.noReply,\n            to: \"hello@viralizing.me\",\n            subject,\n            html\n        });\n    }\n});\n\n"]},"sourceType":"script","hash":"4beb998bde820e51fdd29669238d9f45140fe893"}
