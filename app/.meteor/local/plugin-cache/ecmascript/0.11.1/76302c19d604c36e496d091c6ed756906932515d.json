{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/agenda/ui/components/post-create/time-date.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"imports/modules/agenda/ui/components/post-create/time-date.jsx","filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/agenda/ui/components/post-create/time-date.jsx","passPerPreset":false,"envName":"development","cwd":"/home/blackstoneteam/repos/viralizing-web/app","root":"/home/blackstoneteam/repos/viralizing-web/app","presets":[],"generatorOpts":{"filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/agenda/ui/components/post-create/time-date.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/modules/agenda/ui/components/post-create/time-date.jsx"}},"code":"let React;\nmodule.watch(require(\"react\"), {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet InfiniteCalendar;\nmodule.watch(require(\"react-infinite-calendar\"), {\n  default(v) {\n    InfiniteCalendar = v;\n  }\n\n}, 1);\nlet TimePicker;\nmodule.watch(require(\"react-times\"), {\n  default(v) {\n    TimePicker = v;\n  }\n\n}, 2);\nlet Translate, I18n;\nmodule.watch(require(\"react-redux-i18n\"), {\n  Translate(v) {\n    Translate = v;\n  },\n\n  I18n(v) {\n    I18n = v;\n  }\n\n}, 3);\n\nclass PostTimeDate extends React.Component {\n  constructor() {\n    super();\n    let date = moment();\n    this.state = {\n      time: date,\n      quantum: date.format(\"A\")\n    };\n    this.onTimeChange = this.onTimeChange.bind(this);\n    this.onTimeQuantumChange = this.onTimeQuantumChange.bind(this);\n    this.onCalendarChange = this.onCalendarChange.bind(this);\n    this.saveDate = this.saveDate.bind(this);\n    this.getCurrentDate = this.getCurrentDate.bind(this);\n  }\n\n  componentWillMount() {\n    let time = new Date();\n    let currentState = this.props.store ? this.props.store.getState() : null;\n    /*\n             if (currentState && currentState.form[\"post-create\"] && currentState.form[\"post-create\"].values && currentState.form[\"post-create\"].values.date) {\n                time = currentState.form[\"post-create\"].values.date;\n            } */\n\n    if (this.props.input && this.props.input.value) {\n      time = this.props.input.value;\n    } else {\n      let wrapped = moment(time);\n      let remainder = 5 - wrapped.minute() % 5;\n      time = wrapped.add(remainder, \"minutes\").toDate();\n    }\n\n    let date = moment(time);\n    this.setState({\n      time: date,\n      quantum: date.format(\"A\")\n    });\n  }\n\n  onTimeChange(time) {\n    let values = time.split(\":\"),\n        hours = Number(values[0]),\n        minutes = Number(values[1]);\n\n    if (this.state.quantum === \"PM\") {\n      hours += 12;\n    }\n\n    let newDate = moment(this.state.time).startOf(\"day\").add(hours, \"hours\").add(minutes, \"minutes\");\n    this.setState({\n      time: newDate\n    });\n\n    if (this.props.autoSave) {\n      this.saveDate();\n    }\n  }\n\n  onTimeQuantumChange(timeQuantum) {\n    this.setState({\n      quantum: timeQuantum\n    });\n\n    if (this.props.autoSave) {\n      this.saveDate();\n    }\n  }\n\n  onCalendarChange(date) {\n    const currentDate = this.state.time;\n    const hours = currentDate.hours();\n    const minutes = currentDate.minutes();\n    const newTime = moment(date).hour(hours).minutes(minutes);\n    this.setState({\n      time: newTime\n    });\n\n    if (this.props.autoSave) {\n      this.saveDate();\n    }\n  }\n\n  saveDate() {\n    if (this.props.close) {\n      this.props.close();\n    }\n\n    this.props.input.onChange(this.state.time.toDate());\n  }\n\n  getCurrentDate() {\n    let date = moment();\n\n    if (this.state && this.state.time) {\n      date = moment(this.state.time);\n    }\n\n    return date;\n  }\n\n  render() {\n    let getTranslation = key => {\n      return \"Agenda.publish.modal.\" + key;\n    };\n\n    return React.createElement(\"div\", {\n      className: (this.props.open ? \"open\" : \"\") + \" panel date-panel panel-modal\"\n    }, React.createElement(\"div\", {\n      className: \"panel-body container-fluid padding-20\"\n    }, React.createElement(\"div\", {\n      className: \"row\"\n    }, React.createElement(\"div\", {\n      className: \"col-md-6\"\n    }, this.props.open ? React.createElement(InfiniteCalendar, {\n      minDate: new Date(),\n      onSelect: this.onCalendarChange,\n      selectedDate: this.state.time,\n      rowHeight: 35,\n      className: \"ibol-calendar\"\n    }) : \"\"), React.createElement(\"div\", {\n      className: \"col-md-6 date-controls\"\n    }, React.createElement(TimePicker, {\n      timeMode: \"12\",\n      withoutIcon: true,\n      onTimeChange: this.onTimeChange,\n      onTimeQuantumChange: this.onTimeQuantumChange,\n      timeQuantum: this.state.quantum,\n      time: this.state.time.format(\"hh:mm\")\n    }), React.createElement(\"p\", null, moment.tz.guess().split(\"_\").join(\" \")), React.createElement(\"div\", {\n      className: \"row\"\n    }, React.createElement(\"div\", {\n      className: \"col-md-6\"\n    }, React.createElement(\"div\", {\n      className: \"time-zone\"\n    }, React.createElement(\"div\", {\n      className: \"location\"\n    }, React.createElement(Translate, {\n      value: getTranslation(\"cities.mexico\")\n    })), React.createElement(\"div\", {\n      className: \"time\"\n    }, this.getCurrentDate().tz('America/Mexico_City').format('hh:mm A')))), React.createElement(\"div\", {\n      className: \"col-md-6\"\n    }, React.createElement(\"div\", {\n      className: \"time-zone\"\n    }, React.createElement(\"div\", {\n      className: \"location\"\n    }, React.createElement(Translate, {\n      value: getTranslation(\"cities.newYork\")\n    })), React.createElement(\"div\", {\n      className: \"time\"\n    }, this.getCurrentDate().tz('America/New_York').format('hh:mm A')))), React.createElement(\"div\", {\n      className: \"col-md-6\"\n    }, React.createElement(\"div\", {\n      className: \"time-zone\"\n    }, React.createElement(\"div\", {\n      className: \"location\"\n    }, React.createElement(Translate, {\n      value: getTranslation(\"cities.london\")\n    })), React.createElement(\"div\", {\n      className: \"time\"\n    }, this.getCurrentDate().tz('Europe/London').format('hh:mm A')))), React.createElement(\"div\", {\n      className: \"col-md-6\"\n    }, React.createElement(\"div\", {\n      className: \"time-zone\"\n    }, React.createElement(\"div\", {\n      className: \"location\"\n    }, React.createElement(Translate, {\n      value: getTranslation(\"cities.losAngeles\")\n    })), React.createElement(\"div\", {\n      className: \"time\"\n    }, this.getCurrentDate().tz('America/Los_Angeles').format('hh:mm A'))))), !this.props.autoSave && React.createElement(\"a\", {\n      className: \"btn btn-primary pull-right\",\n      onClick: this.saveDate\n    }, React.createElement(Translate, {\n      value: getTranslation(\"time.save\")\n    }))))));\n  }\n\n}\n\nmodule.exportDefault(PostTimeDate);","map":{"version":3,"sources":["imports/modules/agenda/ui/components/post-create/time-date.jsx"],"names":["React","module","watch","require","default","v","InfiniteCalendar","TimePicker","Translate","I18n","PostTimeDate","Component","constructor","date","moment","state","time","quantum","format","onTimeChange","bind","onTimeQuantumChange","onCalendarChange","saveDate","getCurrentDate","componentWillMount","Date","currentState","props","store","getState","input","value","wrapped","remainder","minute","add","toDate","setState","values","split","hours","Number","minutes","newDate","startOf","autoSave","timeQuantum","currentDate","newTime","hour","close","onChange","render","getTranslation","key","open","tz","guess","join","exportDefault"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport InfiniteCalendar from \"react-infinite-calendar\";\nimport TimePicker from \"react-times\";\nimport {Translate, I18n} from \"react-redux-i18n\";\n\nclass PostTimeDate extends React.Component {\n    constructor() {\n        super();\n\n        let date = moment();\n        this.state = {\n            time: date,\n            quantum: date.format(\"A\")\n        };\n\n        this.onTimeChange = this.onTimeChange.bind(this);\n        this.onTimeQuantumChange = this.onTimeQuantumChange.bind(this);\n        this.onCalendarChange = this.onCalendarChange.bind(this);\n        this.saveDate = this.saveDate.bind(this);\n        this.getCurrentDate =  this.getCurrentDate.bind(this);\n    }\n\n    componentWillMount() {\n        let time = new Date();\n        let currentState = this.props.store ? this.props.store.getState() : null;\n/*\n         if (currentState && currentState.form[\"post-create\"] && currentState.form[\"post-create\"].values && currentState.form[\"post-create\"].values.date) {\n            time = currentState.form[\"post-create\"].values.date;\n        } */\n        if(this.props.input && this.props.input.value){\n             time=this.props.input.value;\n        } else {\n            let wrapped = moment(time);\n            let remainder = 5 - wrapped.minute() % 5;\n            time = wrapped.add(remainder, \"minutes\").toDate()\n        }\n\n        let date = moment(time);\n        this.setState({\n            time: date,\n            quantum: date.format(\"A\")\n        })\n    }\n\n    onTimeChange(time) {\n        let values = time.split(\":\"),\n            hours = Number(values[0]),\n            minutes = Number(values[1]);\n        if (this.state.quantum === \"PM\") {\n            hours += 12;\n        }\n        let newDate = moment(this.state.time).startOf(\"day\").add(hours, \"hours\").add(minutes, \"minutes\");\n\n        this.setState({time: newDate});\n        if(this.props.autoSave){\n            this.saveDate();\n        }\n    }\n\n    onTimeQuantumChange(timeQuantum) {\n        this.setState({quantum: timeQuantum});\n        if(this.props.autoSave){\n            this.saveDate();\n        }\n    }\n\n    onCalendarChange(date) {\n        const currentDate = this.state.time;\n        const hours = currentDate.hours();\n        const minutes = currentDate.minutes();\n        const newTime = moment(date).hour(hours).minutes(minutes);\n\n        this.setState({\n            time: newTime\n        });\n        if(this.props.autoSave){\n            this.saveDate();\n        }\n    }\n\n    saveDate() {\n        if(this.props.close){\n            this.props.close();\n        }\n        this.props.input.onChange(this.state.time.toDate());\n    }\n    getCurrentDate(){\n        let date = moment();\n        if(this.state && this.state.time){\n            date = moment(this.state.time);\n        }\n\n        return date;\n    }\n    render() {\n        let getTranslation = (key) => {\n            return \"Agenda.publish.modal.\" + key;\n        };\n        return (\n            <div className={(this.props.open ? \"open\" : \"\") + \" panel date-panel panel-modal\"}>\n                <div className=\"panel-body container-fluid padding-20\">\n                    <div className=\"row\">\n                        <div className=\"col-md-6\">\n                            {this.props.open ? <InfiniteCalendar minDate={new Date()} onSelect={this.onCalendarChange}\n                                                                 selectedDate={this.state.time}\n                                                                 rowHeight={35}\n                                                                 className=\"ibol-calendar\"/> : \"\"}\n                        </div>\n                        <div className=\"col-md-6 date-controls\">\n                            <TimePicker timeMode=\"12\"\n                                        withoutIcon={true}\n                                        onTimeChange={this.onTimeChange}\n                                        onTimeQuantumChange={this.onTimeQuantumChange}\n                                        timeQuantum={this.state.quantum}\n                                        time={this.state.time.format(\"hh:mm\")}/>\n\n                            <p>{moment.tz.guess().split(\"_\").join(\" \")}</p>\n                            <div className=\"row\">\n                                <div className=\"col-md-6\">\n                                    <div className=\"time-zone\">\n                                        <div className=\"location\"><Translate value={getTranslation(\"cities.mexico\")}/></div>\n                                        <div\n                                            className=\"time\">{this.getCurrentDate().tz('America/Mexico_City').format('hh:mm A')}</div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-6\">\n                                    <div className=\"time-zone\">\n                                        <div className=\"location\"><Translate value={getTranslation(\"cities.newYork\")}/></div>\n                                        <div\n                                            className=\"time\">{this.getCurrentDate().tz('America/New_York').format('hh:mm A')}</div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-6\">\n                                    <div className=\"time-zone\">\n                                        <div className=\"location\"><Translate value={getTranslation(\"cities.london\")}/></div>\n                                        <div\n                                            className=\"time\">{this.getCurrentDate().tz('Europe/London').format('hh:mm A')}</div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-6\">\n                                    <div className=\"time-zone\">\n                                        <div className=\"location\"><Translate value={getTranslation(\"cities.losAngeles\")}/></div>\n                                        <div\n                                            className=\"time\">{this.getCurrentDate().tz('America/Los_Angeles').format('hh:mm A')}</div>\n                                    </div>\n                                </div>\n                            </div>\n                            {!this.props.autoSave && (\n                                <a className=\"btn btn-primary pull-right\" onClick={this.saveDate}>\n                                    <Translate value={getTranslation(\"time.save\")}/>\n                                </a>\n                            )}\n                        </div>\n\n\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default PostTimeDate;"]},"sourceType":"script","hash":"76302c19d604c36e496d091c6ed756906932515d"}
