{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/campaigns/ui/components/invites/list-view/aside/action-controls/team-attack.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"imports/modules/campaigns/ui/components/invites/list-view/aside/action-controls/team-attack.jsx","filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/campaigns/ui/components/invites/list-view/aside/action-controls/team-attack.jsx","passPerPreset":false,"envName":"development","cwd":"/home/blackstoneteam/repos/viralizing-web/app","root":"/home/blackstoneteam/repos/viralizing-web/app","presets":[],"generatorOpts":{"filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/campaigns/ui/components/invites/list-view/aside/action-controls/team-attack.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/modules/campaigns/ui/components/invites/list-view/aside/action-controls/team-attack.jsx"}},"code":"let React;\nmodule.watch(require(\"react\"), {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet Translate, I18n;\nmodule.watch(require(\"react-redux-i18n\"), {\n  Translate(v) {\n    Translate = v;\n  },\n\n  I18n(v) {\n    I18n = v;\n  }\n\n}, 1);\nlet Field;\nmodule.watch(require(\"redux-form\"), {\n  Field(v) {\n    Field = v;\n  }\n\n}, 2);\nlet AccountSearch;\nmodule.watch(require(\"../../../../../../../core/ui/components/forms/account-search\"), {\n  default(v) {\n    AccountSearch = v;\n  }\n\n}, 3);\nlet InputTeamAttack;\nmodule.watch(require(\"../../../form/input-teamAttack\"), {\n  default(v) {\n    InputTeamAttack = v;\n  }\n\n}, 4);\n\nclass ActionTeamAttack extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      teamAttack: {\n        members: []\n      }\n    };\n    this.updateTeamAttack = this.updateTeamAttack.bind(this);\n    this.searchChange = this.searchChange.bind(this);\n  }\n\n  updateTeamAttack(e) {\n    let {\n      updateInviteValue\n    } = this.props;\n    let options = e.target.options;\n    let selected = [];\n\n    for (let i = 0, l = options.length; i < l; i++) {\n      if (options[i].selected) {\n        selected.push(options[i].value);\n      }\n    }\n\n    selected = selected.map(s => JSON.parse(s)); //let teamAttack = JSON.parse(val);\n\n    console.log(\"TEAM_ATTACK_SELECTED\", selected);\n    updateInviteValue(\"teamAttacks\")({\n      target: {\n        value: selected\n      }\n    }); //this.setState({teamAttack: selected});\n  }\n\n  searchChange(value) {\n    //console.log(\"TA_SEARCH_CHANGE\", value);\n    this.props.updateInviteValue(\"teamAttackMembers\")({\n      target: {\n        value\n      }\n    });\n  }\n\n  render() {\n    let {\n      teamAttacks,\n      updateInviteValue,\n      currentInvite\n    } = this.props;\n\n    let getTranslation = key => {\n      return \"Campaigns.edit.tabs.invites.edit.form.\" + key;\n    };\n\n    return React.createElement(\"div\", null, React.createElement(\"div\", {\n      className: \"form-group no-margin\"\n    }, React.createElement(\"label\", {\n      htmlFor: \"informationName\"\n    }, React.createElement(Translate, {\n      value: getTranslation(\"teamAttack.select\")\n    })), React.createElement(\"select\", {\n      multiple: true,\n      className: \"form-control\",\n      onChange: this.updateTeamAttack\n    }, teamAttacks.map((t, i) => React.createElement(\"option\", {\n      value: JSON.stringify(t),\n      key: i\n    }, t.name)))), React.createElement(\"div\", {\n      className: \"form-group\"\n    }));\n  }\n\n}\n\nmodule.exportDefault(ActionTeamAttack);","map":{"version":3,"sources":["imports/modules/campaigns/ui/components/invites/list-view/aside/action-controls/team-attack.jsx"],"names":["React","module","watch","require","default","v","Translate","I18n","Field","AccountSearch","InputTeamAttack","ActionTeamAttack","Component","constructor","state","teamAttack","members","updateTeamAttack","bind","searchChange","e","updateInviteValue","props","options","target","selected","i","l","length","push","value","map","s","JSON","parse","console","log","render","teamAttacks","currentInvite","getTranslation","key","t","stringify","name","exportDefault"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Translate, I18n} from \"react-redux-i18n\";\nimport {Field} from \"redux-form\";\nimport AccountSearch from \"../../../../../../../core/ui/components/forms/account-search\";\nimport InputTeamAttack from \"../../../form/input-teamAttack\";\n\nclass ActionTeamAttack extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            teamAttack: {\n                members: []\n            }\n        };\n\n        this.updateTeamAttack = this.updateTeamAttack.bind(this);\n        this.searchChange=this.searchChange.bind(this);\n    }\n\n    updateTeamAttack(e) {\n        let {updateInviteValue}=this.props;\n        let options = e.target.options;\n        let selected = [];\n\t    for (let i = 0, l = options.length; i < l; i++) {\n\t\t    if (options[i].selected) {\n\t\t\t    selected.push(options[i].value);\n\t\t    }\n\t    }\n\n\t    selected = selected.map(s=>JSON.parse(s));\n        //let teamAttack = JSON.parse(val);\n        console.log(\"TEAM_ATTACK_SELECTED\", selected);\n\n        updateInviteValue(\"teamAttacks\")({\n            target: {value: selected}\n        });\n\n        //this.setState({teamAttack: selected});\n    }\n\n    searchChange(value){\n        //console.log(\"TA_SEARCH_CHANGE\", value);\n        this.props.updateInviteValue(\"teamAttackMembers\")({\n            target: {value}\n        });\n    }\n\n\n    render() {\n        let {teamAttacks, updateInviteValue, currentInvite}=this.props;\n        let getTranslation = (key) => {\n            return \"Campaigns.edit.tabs.invites.edit.form.\" + key;\n        };\n        return (\n            <div>\n                <div className=\"form-group no-margin\">\n                    <label htmlFor=\"informationName\">\n                        <Translate value={getTranslation(\"teamAttack.select\")}/>\n                    </label>\n                    <select multiple className=\"form-control\" onChange={this.updateTeamAttack}>\n                        {teamAttacks.map((t, i) => <option value={JSON.stringify(t)} key={i}>{t.name}</option>)}\n                    </select>\n                </div>\n                <div className=\"form-group\">\n                    {/*\n                    <InputTeamAttack input={{value:currentInvite.teamAttackMembers, onChange:this.searchChange}} label={<Translate value={getTranslation(\"teamAttack.members\")}/>}/>\n                    */}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ActionTeamAttack;\n"]},"sourceType":"script","hash":"1ad3cd8378bd207541cd3fb2b64e9b9cc6c363b4"}
