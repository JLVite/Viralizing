{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$4","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$5","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$6","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$7","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$9","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/statement/ui/containers/statement.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"imports/modules/statement/ui/containers/statement.jsx","filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/statement/ui/containers/statement.jsx","passPerPreset":false,"envName":"development","cwd":"/home/blackstoneteam/repos/viralizing-web/app","root":"/home/blackstoneteam/repos/viralizing-web/app","generatorOpts":{"filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/statement/ui/containers/statement.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/modules/statement/ui/containers/statement.jsx"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/builtin/interopRequireDefault\");\n\nvar _taggedTemplateLiteral2 = _interopRequireDefault(require(\"@babel/runtime/helpers/builtin/taggedTemplateLiteral\"));\n\nfunction _templateObject() {\n  const data = (0, _taggedTemplateLiteral2.default)([\"\\n    query ($year: String, $month: String, $accounts: [String]) {\\n        paymentsOwn(year: $year, month: $month, accounts: $accounts) {\\n            amount\\n            date,\\n            from{\\n                _id,\\n                profile{\\n                    name\\n                    lastName,\\n                    avatar\\n                }\\n            }\\n            to{\\n                _id,\\n                type,\\n                network,\\n                information{\\n                    name\\n                    lastName,\\n                    avatar\\n                }\\n            }\\n            type\\n            paymentMethod{\\n                brand,\\n                last4\\n            }\\n            status,\\n            type,\\n            campaign{\\n                _id,\\n                owner{\\n                    profile{\\n                        name,\\n                        lastName,\\n                        avatar\\n                    }\\n                }\\n                manager{\\n                    _id,\\n                    profile{\\n                        name,\\n                        lastName,\\n                        avatar\\n                    }\\n                }\\n                information{\\n                    name,\\n                    brands{\\n                        _id,\\n                        network,\\n                        information{\\n                            name,\\n                            lastName,\\n                            avatar\\n                        }\\n                    }\\n                }\\n            },\\n            post{\\n                _id,\\n                status,\\n                type,\\n                date,\\n                useHashtag,\\n                account{\\n                    _id,\\n                    name,\\n                    lastName,\\n                    avatar,\\n                    network,\\n                }\\n                data{\\n                    message,\\n                    media,\\n                    location\\n                }\\n            }\\n        }\\n    }\\n\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nlet React;\nmodule.watch(require(\"react\"), {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet graphql;\nmodule.watch(require(\"react-apollo\"), {\n  graphql(v) {\n    graphql = v;\n  }\n\n}, 1);\nlet Loading;\nmodule.watch(require(\"../../../core/ui/components/loading\"), {\n  default(v) {\n    Loading = v;\n  }\n\n}, 2);\nlet Payments;\nmodule.watch(require(\"../components/statement/payments/container\"), {\n  default(v) {\n    Payments = v;\n  }\n\n}, 3);\nlet createContainer;\nmodule.watch(require(\"meteor/react-meteor-data\"), {\n  createContainer(v) {\n    createContainer = v;\n  }\n\n}, 4);\nlet gql;\nmodule.watch(require(\"graphql-tag\"), {\n  default(v) {\n    gql = v;\n  }\n\n}, 5);\n\nclass EditContainer extends React.Component {\n  render() {\n    let {\n      loading,\n      refetch,\n      paymentsOwn,\n      updateMonth,\n      updateYear,\n      updateAccounts,\n      year,\n      month,\n      accounts\n    } = this.props;\n    return React.createElement(\"div\", null, loading ? React.createElement(Loading, null) : React.createElement(Payments, {\n      payments: paymentsOwn,\n      refetch: refetch,\n      year: year,\n      month: month,\n      accounts: accounts,\n      updateMonth: updateMonth,\n      updateYear: updateYear,\n      updateAccounts: updateAccounts\n    }));\n  }\n\n}\n\nconst QUERY = gql(_templateObject());\nconst withData = graphql(QUERY, {\n  props: (_ref) => {\n    let {\n      data: {\n        error,\n        loading,\n        paymentsOwn,\n        refetch\n      }\n    } = _ref;\n    if (loading) return {\n      loading: true\n    };\n    if (error) return {\n      hasErrors: true\n    };\n    return {\n      loading,\n      paymentsOwn,\n      refetch\n    };\n  },\n  options: ownProps => ({\n    variables: {\n      year: ownProps.year,\n      month: ownProps.month,\n      accounts: ownProps.accounts\n    }\n  })\n});\nmodule.exportDefault(withData(EditContainer));","map":{"version":3,"sources":["imports/modules/statement/ui/containers/statement.jsx"],"names":["React","module","watch","require","default","v","graphql","Loading","Payments","createContainer","gql","EditContainer","Component","render","loading","refetch","paymentsOwn","updateMonth","updateYear","updateAccounts","year","month","accounts","props","QUERY","withData","data","error","hasErrors","options","ownProps","variables","exportDefault"],"mappings":";;;;;;;;;;;;;;AAAA,IAAIA,KAAJ;AAAUC,OAAOC,KAAP,CAAaC,QAAQ,OAAR,CAAb,EAA8B;AAACC,UAAQC,CAAR,EAAU;AAACL,YAAMK,CAAN;AAAQ;;AAApB,CAA9B,EAAoD,CAApD;AAAuD,IAAIC,OAAJ;AAAYL,OAAOC,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACG,UAAQD,CAAR,EAAU;AAACC,cAAQD,CAAR;AAAU;;AAAtB,CAArC,EAA6D,CAA7D;AAAgE,IAAIE,OAAJ;AAAYN,OAAOC,KAAP,CAAaC,QAAQ,qCAAR,CAAb,EAA4D;AAACC,UAAQC,CAAR,EAAU;AAACE,cAAQF,CAAR;AAAU;;AAAtB,CAA5D,EAAoF,CAApF;AAAuF,IAAIG,QAAJ;AAAaP,OAAOC,KAAP,CAAaC,QAAQ,4CAAR,CAAb,EAAmE;AAACC,UAAQC,CAAR,EAAU;AAACG,eAASH,CAAT;AAAW;;AAAvB,CAAnE,EAA4F,CAA5F;AAA+F,IAAII,eAAJ;AAAoBR,OAAOC,KAAP,CAAaC,QAAQ,0BAAR,CAAb,EAAiD;AAACM,kBAAgBJ,CAAhB,EAAkB;AAACI,sBAAgBJ,CAAhB;AAAkB;;AAAtC,CAAjD,EAAyF,CAAzF;AAA4F,IAAIK,GAAJ;AAAQT,OAAOC,KAAP,CAAaC,QAAQ,aAAR,CAAb,EAAoC;AAACC,UAAQC,CAAR,EAAU;AAACK,UAAIL,CAAJ;AAAM;;AAAlB,CAApC,EAAwD,CAAxD;;AASpd,MAAMM,aAAN,SAA4BX,MAAMY,SAAlC,CAA4C;AACxCC,WAAS;AACL,QAAI;AAACC,aAAD;AAAUC,aAAV;AAAmBC,iBAAnB;AAAgCC,iBAAhC;AAA6CC,gBAA7C;AAAyDC,oBAAzD;AAAyEC,UAAzE;AAA+EC,WAA/E;AAAsFC;AAAtF,QAAgG,KAAKC,KAAzG;AACA,WACI,iCACKT,UAAU,oBAAC,OAAD,OAAV,GACG,oBAAC,QAAD;AAAU,gBAAUE,WAApB;AACU,eAASD,OADnB;AAEU,YAAMK,IAFhB;AAGU,aAAOC,KAHjB;AAIU,gBAAUC,QAJpB;AAKU,mBAAaL,WALvB;AAMU,kBAAYC,UANtB;AAOU,sBAAgBC;AAP1B,MAFR,CADJ;AAaH;;AAhBuC;;AAmB5C,MAAMK,QAAQd,GAAR,mBAAN;AAoFA,MAAMe,WAAWnB,QAAQkB,KAAR,EAAe;AAC5BD,SAAO,UAAoD;AAAA,QAAnD;AAACG,YAAM;AAACC,aAAD;AAAQb,eAAR;AAAiBE,mBAAjB;AAA8BD;AAA9B;AAAP,KAAmD;AACvD,QAAID,OAAJ,EAAa,OAAO;AAACA,eAAS;AAAV,KAAP;AACb,QAAIa,KAAJ,EAAW,OAAO;AAACC,iBAAW;AAAZ,KAAP;AACX,WAAO;AACHd,aADG;AAEHE,iBAFG;AAGHD;AAHG,KAAP;AAKH,GAT2B;AAU5Bc,WAAUC,QAAD,KACL;AACIC,eAAW;AACPX,YAAMU,SAASV,IADR;AAEPC,aAAOS,SAAST,KAFT;AAGPC,gBAAUQ,SAASR;AAHZ;AADf,GADK;AAVmB,CAAf,CAAjB;AAhHArB,OAAO+B,aAAP,CAqIeP,SAASd,aAAT,CArIf","sourcesContent":["import React from \"react\";\nimport {graphql} from \"react-apollo\";\nimport Loading from \"../../../core/ui/components/loading\";\nimport Payments from \"../components/statement/payments/container\";\nimport {createContainer} from \"meteor/react-meteor-data\";\n\nimport gql from \"graphql-tag\";\n\n\nclass EditContainer extends React.Component {\n    render() {\n        let {loading, refetch, paymentsOwn, updateMonth, updateYear, updateAccounts, year, month, accounts}=this.props;\n        return (\n            <div>\n                {loading ? <Loading/> :\n                    <Payments payments={paymentsOwn}\n                              refetch={refetch}\n                              year={year}\n                              month={month}\n                              accounts={accounts}\n                              updateMonth={updateMonth}\n                              updateYear={updateYear}\n                              updateAccounts={updateAccounts}/>}\n            </div>\n        )\n    }\n}\n\nconst QUERY = gql`\n    query ($year: String, $month: String, $accounts: [String]) {\n        paymentsOwn(year: $year, month: $month, accounts: $accounts) {\n            amount\n            date,\n            from{\n                _id,\n                profile{\n                    name\n                    lastName,\n                    avatar\n                }\n            }\n            to{\n                _id,\n                type,\n                network,\n                information{\n                    name\n                    lastName,\n                    avatar\n                }\n            }\n            type\n            paymentMethod{\n                brand,\n                last4\n            }\n            status,\n            type,\n            campaign{\n                _id,\n                owner{\n                    profile{\n                        name,\n                        lastName,\n                        avatar\n                    }\n                }\n                manager{\n                    _id,\n                    profile{\n                        name,\n                        lastName,\n                        avatar\n                    }\n                }\n                information{\n                    name,\n                    brands{\n                        _id,\n                        network,\n                        information{\n                            name,\n                            lastName,\n                            avatar\n                        }\n                    }\n                }\n            },\n            post{\n                _id,\n                status,\n                type,\n                date,\n                useHashtag,\n                account{\n                    _id,\n                    name,\n                    lastName,\n                    avatar,\n                    network,\n                }\n                data{\n                    message,\n                    media,\n                    location\n                }\n            }\n        }\n    }\n\n`;\n\nconst withData = graphql(QUERY, {\n    props: ({data: {error, loading, paymentsOwn, refetch}}) => {\n        if (loading) return {loading: true};\n        if (error) return {hasErrors: true};\n        return {\n            loading,\n            paymentsOwn,\n            refetch,\n        };\n    },\n    options: (ownProps) => (\n        {\n            variables: {\n                year: ownProps.year,\n                month: ownProps.month,\n                accounts: ownProps.accounts\n            }\n        }\n    ),\n});\n\nexport default withData(EditContainer);"]},"sourceType":"script","hash":"c1541a76111991b168459cfde4e59bbebb5f3a4c"}
