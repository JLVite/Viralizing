{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/reporter/ui/containers/edit.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"imports/modules/reporter/ui/containers/edit.jsx","filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/reporter/ui/containers/edit.jsx","passPerPreset":false,"envName":"development","cwd":"/home/blackstoneteam/repos/viralizing-web/app","root":"/home/blackstoneteam/repos/viralizing-web/app","presets":[],"generatorOpts":{"filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/reporter/ui/containers/edit.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/modules/reporter/ui/containers/edit.jsx"}},"code":"let React;\nmodule.watch(require(\"react\"), {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet graphql;\nmodule.watch(require(\"react-apollo\"), {\n  graphql(v) {\n    graphql = v;\n  }\n\n}, 1);\nlet connect;\nmodule.watch(require(\"react-redux\"), {\n  connect(v) {\n    connect = v;\n  }\n\n}, 2);\nlet Loading;\nmodule.watch(require(\"../../../core/ui/components/loading\"), {\n  default(v) {\n    Loading = v;\n  }\n\n}, 3);\nlet Edit;\nmodule.watch(require(\"../layouts/edit\"), {\n  default(v) {\n    Edit = v;\n  }\n\n}, 4);\nlet createContainer;\nmodule.watch(require(\"meteor/react-meteor-data\"), {\n  createContainer(v) {\n    createContainer = v;\n  }\n\n}, 5);\nlet gql;\nmodule.watch(require(\"graphql-tag\"), {\n  default(v) {\n    gql = v;\n  }\n\n}, 6);\nlet notie;\nmodule.watch(require(\"notie\"), {\n  default(v) {\n    notie = v;\n  }\n\n}, 7);\nlet I18n;\nmodule.watch(require(\"react-redux-i18n\"), {\n  I18n(v) {\n    I18n = v;\n  }\n\n}, 8);\n\nlet getTranslation = key => {\n  return \"Campaigns.edit.messages.\" + key;\n};\n\nclass ListContainer extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      saving: \"saved\"\n    };\n    this.saveReport = this.saveReport.bind(this);\n  }\n\n  componentDidMount() {\n    this.savedData = JSON.stringify(this.props.account);\n    let component = this;\n    this.saveInterval = setInterval(function () {\n      if (component.props.form && component.props.form.values) {\n        component.saveReport(component.props.form.values, true);\n      }\n    }, 5000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.saveInterval);\n  }\n\n  saveReport(data, silent) {\n    if (silent && typeof silent === \"boolean\") {\n      silent = true;\n    } else {\n      silent = false;\n    }\n\n    if (silent && this.savedData === JSON.stringify(data)) {\n      this.setState({\n        saving: \"saved\"\n      });\n      return;\n    }\n\n    this.setState({\n      saving: \"saving\"\n    });\n    this.savedData = JSON.stringify(data);\n    let component = this; //TODO: Validate Data\n\n    Meteor.call(\"report-save\", data, function (err, res) {\n      if (err) {\n        if (err.error === 500) {\n          err.error = \"Failed to create report.\";\n        } //console.log(\"ERROR\",err);\n\n\n        notie.alert(3, err.reason || err.error, 3);\n        return;\n      }\n\n      component.setState({\n        saving: \"saved\"\n      });\n\n      if (!silent) {\n        notie.alert(1, I18n.t(getTranslation(\"saved\")), 3);\n      } //console.log(\"SERVER_SAVE_POSTS_RESPONSE\",res);\n\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", null, this.props.loading ? React.createElement(Loading, null) : React.createElement(Edit, {\n      initialValues: this.props.report,\n      refetch: this.props.refetch,\n      history: this.props.history\n    }));\n  }\n\n}\n\nconst QUERY = gql`\n    query ($reportId: String!){\n        report(reportId:$reportId){\n            _id,\n            name,\n            owner {\n                _id\n            },\n            items {\n                name\n                Description\n                type,\n                size,\n                source {\n                    type,\n                    campaign {\n                        _id\n                        status\n                    },\n                    account {\n                        _id\n                        suspended\n                        type\n                        active\n                        delete\n                        network\n                        groups\n                        campaignsCount\n                    }\n                }\n            }\n        }\n    }\n`;\nconst withData = graphql(QUERY, {\n  props: ({\n    data: {\n      error,\n      loading,\n      report,\n      refetch\n    }\n  }) => {\n    if (loading) return {\n      loading: true\n    };\n    if (error) return {\n      hasErrors: true\n    };\n    return {\n      loading,\n      report,\n      refetch\n    };\n  },\n  options: ownProps => ({\n    variables: {\n      reportId: ownProps.params.reportID,\n      query: \"\"\n    },\n    pollInterval: 3000\n  })\n});\nconst ListContainerWithData = withData(ListContainer);\nmodule.exportDefault(connect(state => {\n  return {\n    form: state.form[\"report-edit\"]\n  };\n})(ListContainerWithData));","map":{"version":3,"sources":["imports/modules/reporter/ui/containers/edit.jsx"],"names":["React","module","watch","require","default","v","graphql","connect","Loading","Edit","createContainer","gql","notie","I18n","getTranslation","key","ListContainer","Component","constructor","state","saving","saveReport","bind","componentDidMount","savedData","JSON","stringify","props","account","component","saveInterval","setInterval","form","values","componentWillUnmount","clearInterval","data","silent","setState","Meteor","call","err","res","error","alert","reason","t","render","loading","report","refetch","history","QUERY","withData","hasErrors","options","ownProps","variables","reportId","params","reportID","query","pollInterval","ListContainerWithData","exportDefault"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {graphql} from 'react-apollo';\nimport {connect} from \"react-redux\";\nimport Loading from \"../../../core/ui/components/loading\";\nimport Edit from \"../layouts/edit\";\nimport {createContainer} from 'meteor/react-meteor-data';\nimport gql from 'graphql-tag';\nimport notie from \"notie\";\nimport {I18n} from \"react-redux-i18n\";\n\nlet getTranslation = (key) => {\n    return \"Campaigns.edit.messages.\" + key;\n};\n\nclass ListContainer extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            saving: \"saved\"\n        };\n\n        this.saveReport = this.saveReport.bind(this);\n    }\n    componentDidMount() {\n        this.savedData = JSON.stringify(this.props.account);\n        let component = this;\n        this.saveInterval = setInterval(function () {\n            if (component.props.form && component.props.form.values) {\n                component.saveReport(component.props.form.values, true);\n            }\n        }, 5000);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.saveInterval);\n    }\n\n    saveReport(data, silent) {\n        if (silent && typeof(silent) === \"boolean\") {\n            silent = true;\n        } else {\n            silent = false;\n        }\n\n        if (silent && this.savedData === JSON.stringify(data)) {\n            this.setState({saving: \"saved\"});\n            return\n        }\n\n        this.setState({saving: \"saving\"});\n        this.savedData = JSON.stringify(data);\n        let component = this;\n        //TODO: Validate Data\n        Meteor.call(\"report-save\", data, function (err, res) {\n            if (err) {\n                if (err.error === 500) {\n                    err.error = \"Failed to create report.\";\n                }\n                //console.log(\"ERROR\",err);\n                notie.alert(3, err.reason || err.error, 3);\n                return\n            }\n            component.setState({saving: \"saved\"});\n            if (!silent) {\n                notie.alert(1, I18n.t(getTranslation(\"saved\")), 3);\n            }\n            //console.log(\"SERVER_SAVE_POSTS_RESPONSE\",res);\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                {this.props.loading ? <Loading/> :\n                    <Edit initialValues={this.props.report} refetch={this.props.refetch} history={this.props.history}/>}\n            </div>\n        )\n    }\n}\n\nconst QUERY = gql`\n    query ($reportId: String!){\n        report(reportId:$reportId){\n            _id,\n            name,\n            owner {\n                _id\n            },\n            items {\n                name\n                Description\n                type,\n                size,\n                source {\n                    type,\n                    campaign {\n                        _id\n                        status\n                    },\n                    account {\n                        _id\n                        suspended\n                        type\n                        active\n                        delete\n                        network\n                        groups\n                        campaignsCount\n                    }\n                }\n            }\n        }\n    }\n`;\n\nconst withData = graphql(QUERY, {\n    props: ({data: {error, loading, report, refetch}}) => {\n        if (loading) return {loading: true};\n        if (error) return {hasErrors: true};\n        return {\n            loading,\n            report,\n            refetch,\n        };\n    },\n    options: (ownProps) => (\n        {\n            variables: {\n                reportId: ownProps.params.reportID,\n                query: \"\"\n            },\n            pollInterval: 3000\n        }\n    ),\n});\n\nconst ListContainerWithData = withData(ListContainer);\n\nexport default connect(state => {\n    return {\n        form: state.form[\"report-edit\"]\n    }\n})(ListContainerWithData);"]},"sourceType":"script","hash":"efbb2375c7ef804c5aafd18ffb3025719bf1a5cd"}
