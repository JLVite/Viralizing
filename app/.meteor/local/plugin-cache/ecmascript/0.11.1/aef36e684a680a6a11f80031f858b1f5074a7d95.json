{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$4","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$5","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$6","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$7","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$9","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/teamattack/ui/components/edit/filter/account-item/list.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"imports/modules/teamattack/ui/components/edit/filter/account-item/list.jsx","filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/teamattack/ui/components/edit/filter/account-item/list.jsx","passPerPreset":false,"envName":"development","cwd":"/home/blackstoneteam/repos/viralizing-web/app","root":"/home/blackstoneteam/repos/viralizing-web/app","generatorOpts":{"filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/teamattack/ui/components/edit/filter/account-item/list.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/modules/teamattack/ui/components/edit/filter/account-item/list.jsx"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/builtin/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/builtin/objectSpread\"));\n\nlet React;\nmodule.watch(require(\"react\"), {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet Localize, Translate;\nmodule.watch(require(\"react-redux-i18n\"), {\n  Localize(v) {\n    Localize = v;\n  },\n\n  Translate(v) {\n    Translate = v;\n  }\n\n}, 1);\nlet Link;\nmodule.watch(require(\"react-router\"), {\n  Link(v) {\n    Link = v;\n  }\n\n}, 2);\nlet SocialAvatar;\nmodule.watch(require(\"../../../../../../core/ui/components/social-avatar\"), {\n  default(v) {\n    SocialAvatar = v;\n  }\n\n}, 3);\n\nclass AccountItem extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      expanded: false\n    };\n    this.toggleExtra = this.toggleExtra.bind(this);\n  }\n\n  toggleExtra(e) {\n    e.stopPropagation();\n    let newState = (0, _objectSpread2.default)({}, this.state);\n    newState.expanded = !newState.expanded;\n    this.setState(newState);\n  }\n\n  render() {\n    let getTranslation = key => {\n      return \"TeamAttack.edit.search.results.results.helpers.\" + key;\n    };\n\n    function followerFormatter(num) {\n      num = Number(num);\n      return num > 999 ? (num / 1000).toFixed(1) + 'K' : num > 999999 ? (num / 1000000).toFixed(1) + 'M' : num;\n    }\n\n    let {\n      account,\n      toggleAccount,\n      value,\n      view,\n      filters\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: view === \"list\" ? \"col-md-4\" : \"col-md-12\"\n    }, React.createElement(\"div\", {\n      className: \"panel\",\n      onClick: toggleAccount(account)\n    }, React.createElement(\"div\", {\n      className: \"panel-body container-fluid team-attack-profile \" + (value.filter(a => a._id === account._id)[0] ? \"active\" : \"\")\n    }, React.createElement(\"div\", {\n      className: \"selected\"\n    }, React.createElement(\"i\", {\n      className: \"icon wb-check\"\n    })), React.createElement(\"div\", {\n      className: \"header\"\n    }, React.createElement(\"div\", {\n      className: \"avatar\"\n    }, React.createElement(SocialAvatar, {\n      avatar: account.information.avatar,\n      network: account.network,\n      name: (account.information.name || \"\") + \" \" + (account.information.lastName || \"\"),\n      size: \"50\"\n    })), React.createElement(\"div\", {\n      className: \"content\"\n    }, React.createElement(\"div\", {\n      className: \"title\"\n    }, (account.information.name || \"\") + \" \" + (account.information.lastName || \"\")), React.createElement(\"div\", {\n      className: \"location\"\n    }, account.information.country)), React.createElement(Link, {\n      onClick: event => {\n        event.preventDefault();\n        window.open(\"/accounts/view/\".concat(account._id));\n      },\n      className: \"view-profile\"\n    }, React.createElement(\"i\", {\n      className: \"fa fa-eye\",\n      \"aria-hidden\": \"true\"\n    }))), React.createElement(\"div\", {\n      className: \"content\"\n    }, filters && React.createElement(\"div\", {\n      className: \"cost\"\n    }, React.createElement(\"div\", {\n      className: \"label\"\n    }, React.createElement(Translate, {\n      value: getTranslation(\"cost.\".concat(filters.action_type))\n    })), React.createElement(\"div\", {\n      className: \"price\"\n    }, React.createElement(\"span\", null, React.createElement(Localize, {\n      value: Number(account.pricing[filters.action_type]) || 0,\n      options: {\n        style: 'currency',\n        currency: 'USD',\n        minimumFractionDigits: 0,\n        maximumFractionDigits: 2\n      }\n    }), \" USD\"))), React.createElement(\"div\", {\n      className: \"followers\"\n    }, React.createElement(\"div\", {\n      className: \"content\"\n    }, React.createElement(\"div\", {\n      className: \"count\"\n    }, \" \", account.statistics ? followerFormatter(account.statistics.followers) : \"-\"), React.createElement(\"div\", {\n      className: \"label\"\n    }, React.createElement(Translate, {\n      value: getTranslation(\"followers\")\n    }))), React.createElement(\"div\", {\n      className: \"icon\"\n    }, React.createElement(\"i\", {\n      className: \"social-icon \" + account.network\n    })))), React.createElement(\"div\", {\n      className: \"more \" + (this.state.expanded ? \"expanded\" : \"\"),\n      onClick: this.toggleExtra,\n      style: {\n        cursor: \"pointer\"\n      }\n    }, this.state.expanded ? \"\" : \"\", \" \", React.createElement(\"i\", {\n      className: \"fa fa-angle-double-down\",\n      \"aria-hidden\": \"true\"\n    })), this.state.expanded ? React.createElement(\"div\", {\n      className: \"extra\"\n    }, React.createElement(\"table\", {\n      className: \"price-table\"\n    }, React.createElement(\"tbody\", null, React.createElement(\"tr\", null, React.createElement(\"td\", null, React.createElement(Translate, {\n      value: getTranslation(\"cost.post\")\n    })), React.createElement(\"td\", null, account.pricing.post ? React.createElement(\"span\", null, React.createElement(Localize, {\n      value: Number(account.pricing.post) || 0,\n      options: {\n        style: 'currency',\n        currency: 'USD',\n        minimumFractionDigits: 0,\n        maximumFractionDigits: 2\n      }\n    }), \" USD\") : \"-\")), React.createElement(\"tr\", null, React.createElement(\"td\", null, React.createElement(Translate, {\n      value: getTranslation(\"cost.profilePicture\")\n    })), React.createElement(\"td\", null, account.pricing.profilePicture ? React.createElement(\"span\", null, React.createElement(Localize, {\n      value: Number(account.pricing.profilePicture) || 0,\n      options: {\n        style: 'currency',\n        currency: 'USD',\n        minimumFractionDigits: 0,\n        maximumFractionDigits: 2\n      }\n    }), \" USD\") : \"-\")), React.createElement(\"tr\", null, React.createElement(\"td\", null, React.createElement(Translate, {\n      value: getTranslation(\"cost.coverPhoto\")\n    })), React.createElement(\"td\", null, account.pricing.coverPhoto ? React.createElement(\"span\", null, React.createElement(Localize, {\n      value: Number(account.pricing.coverPhoto) || 0,\n      options: {\n        style: 'currency',\n        currency: 'USD',\n        minimumFractionDigits: 0,\n        maximumFractionDigits: 2\n      }\n    }), \" USD\") : \"-\")), React.createElement(\"tr\", null, React.createElement(\"td\", null, React.createElement(Translate, {\n      value: getTranslation(\"cost.noPost.hour\")\n    })), React.createElement(\"td\", null, account.pricing.noPostHour ? React.createElement(\"span\", null, React.createElement(Localize, {\n      value: Number(account.pricing.noPostHour) || 0,\n      options: {\n        style: 'currency',\n        currency: 'USD',\n        minimumFractionDigits: 0,\n        maximumFractionDigits: 2\n      }\n    }), \" USD\") : \"-\")), React.createElement(\"tr\", null, React.createElement(\"td\", null, React.createElement(Translate, {\n      value: getTranslation(\"cost.noPost.noPost.day\")\n    })), React.createElement(\"td\", null, account.pricing.noPostDay ? React.createElement(\"span\", null, React.createElement(Localize, {\n      value: Number(account.pricing.noPostDay) || 0,\n      options: {\n        style: 'currency',\n        currency: 'USD',\n        minimumFractionDigits: 0,\n        maximumFractionDigits: 2\n      }\n    }), \" USD\") : \"-\")), React.createElement(\"tr\", null, React.createElement(\"td\", null, React.createElement(Translate, {\n      value: getTranslation(\"cost.share\")\n    })), React.createElement(\"td\", null, account.pricing.share ? React.createElement(\"span\", null, React.createElement(Localize, {\n      value: Number(account.pricing.share) || 0,\n      options: {\n        style: 'currency',\n        currency: 'USD',\n        minimumFractionDigits: 0,\n        maximumFractionDigits: 2\n      }\n    }), \" USD\") : \"-\"))))) : \"\")));\n  }\n\n}\n\nmodule.exportDefault(AccountItem);","map":{"version":3,"sources":["imports/modules/teamattack/ui/components/edit/filter/account-item/list.jsx"],"names":["React","module","watch","require","default","v","Localize","Translate","Link","SocialAvatar","AccountItem","Component","constructor","state","expanded","toggleExtra","bind","e","stopPropagation","newState","setState","render","getTranslation","key","followerFormatter","num","Number","toFixed","account","toggleAccount","value","view","filters","props","filter","a","_id","information","avatar","network","name","lastName","country","event","preventDefault","window","open","action_type","pricing","style","currency","minimumFractionDigits","maximumFractionDigits","statistics","followers","cursor","post","profilePicture","coverPhoto","noPostHour","noPostDay","share","exportDefault"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Localize, Translate} from \"react-redux-i18n\";\nimport {Link} from \"react-router\";\nimport SocialAvatar from \"../../../../../../core/ui/components/social-avatar\";\n\nclass AccountItem extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            expanded: false\n        };\n\n        this.toggleExtra = this.toggleExtra.bind(this);\n    }\n\n    toggleExtra(e) {\n        e.stopPropagation();\n        let newState = {...this.state};\n        newState.expanded = !newState.expanded;\n        this.setState(newState);\n    }\n\n    render() {\n        let getTranslation = (key) => {\n            return \"TeamAttack.edit.search.results.results.helpers.\" + key;\n        };\n\n        function followerFormatter(num) {\n            num = Number(num);\n            return num > 999 ? (num / 1000).toFixed(1) + 'K' : (num > 999999 ? (num / 1000000).toFixed(1) + 'M' : num)\n        }\n\n        let {account, toggleAccount, value, view, filters} = this.props;\n        return (\n            <div className={view === \"list\" ? \"col-md-4\" : \"col-md-12\"}>\n                <div className=\"panel\" onClick={toggleAccount(account)}>\n                    <div\n                        className={\"panel-body container-fluid team-attack-profile \" + (value.filter(a => a._id === account._id)[0] ? \"active\" : \"\")}>\n                        <div className=\"selected\">\n                            <i className=\"icon wb-check\"/>\n                        </div>\n                        <div className=\"header\">\n                            <div className=\"avatar\">\n                                <SocialAvatar avatar={account.information.avatar} network={account.network}\n                                              name={(account.information.name || \"\") + \" \" + (account.information.lastName || \"\")}\n                                              size=\"50\"/>\n                            </div>\n                            <div className=\"content\">\n                                <div className=\"title\">\n                                    {(account.information.name || \"\") + \" \" + (account.information.lastName || \"\")}\n                                </div>\n                                <div className=\"location\">\n                                    {account.information.country}\n                                </div>\n                            </div>\n                            <Link  onClick={(event) => {event.preventDefault(); \n                                window.open(`/accounts/view/${account._id}`);}} className=\"view-profile\">\n                                <i className=\"fa fa-eye\" aria-hidden=\"true\"/>\n                            </Link>\n                        </div>\n                        <div className=\"content\">\n                            {filters && (\n                                <div className=\"cost\">\n                                    <div className=\"label\">\n                                        <Translate\n                                            value={getTranslation(`cost.${filters.action_type}`)}/>\n                                    </div>\n                                    <div className=\"price\">\n                                        <span>\n                                            <Localize value={Number(account.pricing[filters.action_type]) || 0}\n                                                      options={{\n                                                          style: 'currency',\n                                                          currency: 'USD',\n                                                          minimumFractionDigits: 0,\n                                                          maximumFractionDigits: 2\n                                                      }}/> USD\n                                        </span>\n                                    </div>\n                                </div>\n                            )}\n\n                            <div className=\"followers\">\n                                <div className=\"content\">\n                                    <div\n                                        className=\"count\"> {account.statistics ? followerFormatter(account.statistics.followers) : \"-\"}</div>\n                                    <div className=\"label\">\n                                        <Translate\n                                            value={getTranslation(\"followers\")}/>\n                                    </div>\n                                </div>\n                                <div className=\"icon\"><i className={\"social-icon \" + account.network}/>\n                                </div>\n                            </div>\n                        </div>\n                        <div className={\"more \" + (this.state.expanded ? \"expanded\" : \"\")} onClick={this.toggleExtra}\n                             style={{cursor: \"pointer\"}}>\n                            {this.state.expanded ? \"\" : \"\"} <i className=\"fa fa-angle-double-down\" aria-hidden=\"true\"/>\n                        </div>\n                        {this.state.expanded ? (\n                            <div className=\"extra\">\n                                <table className=\"price-table\">\n                                    <tbody>\n                                    <tr>\n                                        <td><Translate value={getTranslation(\"cost.post\")}/></td>\n                                        <td>\n                                            {account.pricing.post ? (\n                                                <span>\n                                                            <Localize value={Number(account.pricing.post) || 0}\n                                                                      options={{\n                                                                          style: 'currency',\n                                                                          currency: 'USD',\n                                                                          minimumFractionDigits: 0,\n                                                                          maximumFractionDigits: 2\n                                                                      }}/> USD\n                                                        </span>\n                                            ) : \"-\"}\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td><Translate value={getTranslation(\"cost.profilePicture\")}/></td>\n                                        <td>\n                                            {account.pricing.profilePicture ? (\n                                                <span>\n                                                            <Localize\n                                                                value={Number(account.pricing.profilePicture) || 0}\n                                                                options={{\n                                                                    style: 'currency',\n                                                                    currency: 'USD',\n                                                                    minimumFractionDigits: 0,\n                                                                    maximumFractionDigits: 2\n                                                                }}/> USD\n                                                        </span>\n                                            ) : \"-\"}\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td><Translate value={getTranslation(\"cost.coverPhoto\")}/></td>\n                                        <td>\n                                            {account.pricing.coverPhoto ? (\n                                                <span>\n                                                            <Localize value={Number(account.pricing.coverPhoto) || 0}\n                                                                      options={{\n                                                                          style: 'currency',\n                                                                          currency: 'USD',\n                                                                          minimumFractionDigits: 0,\n                                                                          maximumFractionDigits: 2\n                                                                      }}/> USD\n                                                        </span>\n                                            ) : \"-\"}\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td><Translate value={getTranslation(\"cost.noPost.hour\")}/></td>\n                                        <td>\n                                            {account.pricing.noPostHour ? (\n                                                <span>\n                                                            <Localize value={Number(account.pricing.noPostHour) || 0}\n                                                                      options={{\n                                                                          style: 'currency',\n                                                                          currency: 'USD',\n                                                                          minimumFractionDigits: 0,\n                                                                          maximumFractionDigits: 2\n                                                                      }}/> USD\n                                                        </span>\n                                            ) : \"-\"}\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td><Translate value={getTranslation(\"cost.noPost.noPost.day\")}/></td>\n                                        <td>\n                                            {account.pricing.noPostDay ? (\n                                                <span>\n                                                            <Localize value={Number(account.pricing.noPostDay) || 0}\n                                                                      options={{\n                                                                          style: 'currency',\n                                                                          currency: 'USD',\n                                                                          minimumFractionDigits: 0,\n                                                                          maximumFractionDigits: 2\n                                                                      }}/> USD\n                                                        </span>\n                                            ) : \"-\"}\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td><Translate value={getTranslation(\"cost.share\")}/></td>\n                                        <td>\n                                            {account.pricing.share ? (\n                                                <span>\n                                                            <Localize value={Number(account.pricing.share) || 0}\n                                                                      options={{\n                                                                          style: 'currency',\n                                                                          currency: 'USD',\n                                                                          minimumFractionDigits: 0,\n                                                                          maximumFractionDigits: 2\n                                                                      }}/> USD\n                                                        </span>\n                                            ) : \"-\"}\n                                        </td>\n                                    </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                        ) : \"\"}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default AccountItem;"]},"sourceType":"script","hash":"aef36e684a680a6a11f80031f858b1f5074a7d95"}
