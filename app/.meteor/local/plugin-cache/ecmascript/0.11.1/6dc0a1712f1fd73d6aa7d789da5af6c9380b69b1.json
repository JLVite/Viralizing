{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/core/server/users/native-auth.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"imports/modules/core/server/users/native-auth.jsx","filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/core/server/users/native-auth.jsx","passPerPreset":false,"envName":"development","cwd":"/home/blackstoneteam/repos/viralizing-web/app","root":"/home/blackstoneteam/repos/viralizing-web/app","presets":[],"generatorOpts":{"filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/core/server/users/native-auth.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/modules/core/server/users/native-auth.jsx"}},"code":"let Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet check;\nmodule.watch(require(\"meteor/check\"), {\n  check(v) {\n    check = v;\n  }\n\n}, 1);\nMeteor.methods({\n  'native-authentication': (service, data) => {\n    // Check service is a string\n    check(service, String); // Check data is an object\n\n    check(data, Object);\n    console.log('SERVICE', service);\n    console.log('DATA', data); // Initialize query object\n\n    const query = {}; // Set query for service\n\n    query[`services[${service}].id`] = data.id; // Find matching account\n\n    const user = Meteor.users.findOne(query); // If match found\n\n    if (user) {\n      // Return Token for login\n      return Accounts.impSvc.set(user._id);\n    } // Create Identity Object\n\n\n    const identity = {};\n    const newUser = {\n      services: {},\n      profile: {\n        name: identity.name\n      },\n      emails: [{\n        address: identity.email,\n        verified: true\n      }]\n    }; // Set Oauth service data\n\n    newUser.services[service] = data; // Insert new user data\n\n    userId = Meteor.users.insert(newUser); // Return Token for login\n\n    return Accounts.impSvc.set(userId);\n  }\n});","map":{"version":3,"sources":["imports/modules/core/server/users/native-auth.jsx"],"names":["Meteor","module","watch","require","v","check","methods","service","data","String","Object","console","log","query","id","user","users","findOne","Accounts","impSvc","set","_id","identity","newUser","services","profile","name","emails","address","email","verified","userId","insert"],"mappings":"AAAA,IAAIA,MAAJ;AAAWC,OAAOC,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACH,SAAOI,CAAP,EAAS;AAACJ,aAAOI,CAAP;AAAS;;AAApB,CAAtC,EAA4D,CAA5D;AAA+D,IAAIC,KAAJ;AAAUJ,OAAOC,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACE,QAAMD,CAAN,EAAQ;AAACC,YAAMD,CAAN;AAAQ;;AAAlB,CAArC,EAAyD,CAAzD;AAGpFJ,OAAOM,OAAP,CAAe;AACd,2BAAyB,CAACC,OAAD,EAAUC,IAAV,KAAiB;AACzC;AACAH,UAAME,OAAN,EAAeE,MAAf,EAFyC,CAGzC;;AACAJ,UAAMG,IAAN,EAAYE,MAAZ;AACAC,YAAQC,GAAR,CAAY,SAAZ,EAAuBL,OAAvB;AACAI,YAAQC,GAAR,CAAY,MAAZ,EAAoBJ,IAApB,EANyC,CAOzC;;AACA,UAAMK,QAAQ,EAAd,CARyC,CASzC;;AACAA,UAAO,YAAWN,OAAQ,MAA1B,IAAmCC,KAAKM,EAAxC,CAVyC,CAWzC;;AACA,UAAMC,OAAOf,OAAOgB,KAAP,CAAaC,OAAb,CAAqBJ,KAArB,CAAb,CAZyC,CAazC;;AACA,QAAGE,IAAH,EAAQ;AACP;AACA,aAAOG,SAASC,MAAT,CAAgBC,GAAhB,CAAoBL,KAAKM,GAAzB,CAAP;AACA,KAjBwC,CAkBzC;;;AACA,UAAMC,WAAU,EAAhB;AAEA,UAAMC,UAAU;AACfC,gBAAU,EADK;AAEfC,eAAS;AAAEC,cAAMJ,SAASI;AAAjB,OAFM;AAGfC,cAAQ,CAAC;AACRC,iBAASN,SAASO,KADV;AAERC,kBAAU;AAFF,OAAD;AAHO,KAAhB,CArByC,CA6BzC;;AACAP,YAAQC,QAAR,CAAiBjB,OAAjB,IAA4BC,IAA5B,CA9ByC,CA+BzC;;AACAuB,aAAS/B,OAAOgB,KAAP,CAAagB,MAAb,CAAoBT,OAApB,CAAT,CAhCyC,CAiCzC;;AACA,WAAOL,SAASC,MAAT,CAAgBC,GAAhB,CAAoBW,MAApB,CAAP;AACA;AApCa,CAAf","sourcesContent":["import {Meteor} from 'meteor/meteor';\nimport { check } from 'meteor/check';\n\nMeteor.methods({\n\t'native-authentication': (service, data)=>{\n\t\t// Check service is a string\n\t\tcheck(service, String);\n\t\t// Check data is an object\n\t\tcheck(data, Object);\n\t\tconsole.log('SERVICE', service);\n\t\tconsole.log('DATA', data);\n\t\t// Initialize query object\n\t\tconst query = {};\n\t\t// Set query for service\n\t\tquery[`services[${service}].id`] = data.id;\n\t\t// Find matching account\n\t\tconst user = Meteor.users.findOne(query);\n\t\t// If match found\n\t\tif(user){\n\t\t\t// Return Token for login\n\t\t\treturn Accounts.impSvc.set(user._id);\n\t\t}\n\t\t// Create Identity Object\n\t\tconst identity ={};\n\n\t\tconst newUser = {\n\t\t\tservices: {},\n\t\t\tprofile: { name: identity.name },\n\t\t\temails: [{\n\t\t\t\taddress: identity.email,\n\t\t\t\tverified: true\n\t\t\t}]\n\t\t};\n\t\t// Set Oauth service data\n\t\tnewUser.services[service] = data;\n\t\t// Insert new user data\n\t\tuserId = Meteor.users.insert(newUser);\n\t\t// Return Token for login\n\t\treturn Accounts.impSvc.set(userId);\n\t}\n});\n"]},"sourceType":"script","hash":"6dc0a1712f1fd73d6aa7d789da5af6c9380b69b1"}
