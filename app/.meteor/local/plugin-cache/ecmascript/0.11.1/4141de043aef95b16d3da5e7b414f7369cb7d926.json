{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/accounts/ui/containers/edit.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"imports/modules/accounts/ui/containers/edit.jsx","filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/accounts/ui/containers/edit.jsx","passPerPreset":false,"envName":"development","cwd":"/home/blackstoneteam/repos/viralizing-web/app","root":"/home/blackstoneteam/repos/viralizing-web/app","generatorOpts":{"filename":"/home/blackstoneteam/repos/viralizing-web/app/imports/modules/accounts/ui/containers/edit.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/modules/accounts/ui/containers/edit.jsx"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _taggedTemplateLiteralLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteralLoose\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nfunction _templateObject() {\n  var data = (0, _taggedTemplateLiteralLoose2.default)([\"\\n    query ($_id: String!){\\n        account(_id:$_id){\\n            _id,\\n            active,\\n            suspended,\\n            delete,\\n            network,\\n            manager {\\n                _id\\n                profile {\\n                    name\\n                    lastName\\n                    avatar\\n                }\\n                emails {\\n                    address\\n                }\\n            },\\n            owner {\\n                _id\\n                profile {\\n                    name\\n                    lastName\\n                    avatar\\n                }\\n                emails {\\n                    address\\n                }\\n            },\\n            shares {\\n                _id\\n                profile {\\n                    name\\n                    lastName\\n                    avatar\\n                }\\n                emails {\\n                    address\\n                }\\n            },\\n            settings{\\n                type {\\n                    brand\\n                    influencer\\n                }\\n            },\\n            information {\\n                name\\n                lastName\\n                avatar\\n                gender\\n                birthDate\\n                country\\n                city\\n                maritalStatus\\n                forbiddenSubjects\\n                sexualOrientation\\n                likes\\n                language\\n                description\\n                categories\\n                specialties\\n                urls\\n            },\\n            audience {\\n                targets {\\n                    name,\\n                    age,\\n                    gender,\\n                    nrssg,\\n                    countries,\\n                    cities,\\n                    languages,\\n                    description\\n                },\\n                conquer,\\n                objectives {\\n                    increaseFollowers,\\n                    increaseViews,\\n                    increaseShares,\\n                    increaseEngagement,\\n                    increaseLikes,\\n                    increaseTrafficHours,\\n                    reachNewMarkets,\\n                    increaseSpeaking,\\n                    increasePlays,\\n                    increaseWebsiteTraffic,\\n                    positionTarget,\\n                    keepTarget,\\n                    presence,\\n                    positionNewMarkets,\\n                }\\n            }\\n            pricing {\\n                post\\n                share\\n                partnership\\n                ambassador,\\n                profilePicture,\\n                coverPhoto,\\n                noPostHour,\\n                noPostDay,\\n            },\\n            statistics {\\n                retweets\\n                retweetsPerPost\\n                favorites\\n                favoritesPerPost\\n                comments\\n                commentsPerPost\\n                likes\\n                likesPerPost\\n                shares\\n                sharesPerPost\\n                engagement\\n                followers\\n                following\\n                profileLikes\\n                posts\\n                postsPerDay\\n            },\\n            gallery {\\n                images{\\n                    name,\\n                    content\\n                },\\n                videos{\\n                    name,\\n                    content\\n                }\\n            },\\n            groups\\n        }\\n    }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar React;\nmodule.watch(require(\"react\"), {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 0);\nvar graphql;\nmodule.watch(require(\"react-apollo\"), {\n  graphql: function (v) {\n    graphql = v;\n  }\n}, 1);\nvar connect;\nmodule.watch(require(\"react-redux\"), {\n  connect: function (v) {\n    connect = v;\n  }\n}, 2);\nvar Loading;\nmodule.watch(require(\"../../../core/ui/components/loading\"), {\n  \"default\": function (v) {\n    Loading = v;\n  }\n}, 3);\nvar EditAccount;\nmodule.watch(require(\"../layouts/edit\"), {\n  \"default\": function (v) {\n    EditAccount = v;\n  }\n}, 4);\nvar createContainer;\nmodule.watch(require(\"meteor/react-meteor-data\"), {\n  createContainer: function (v) {\n    createContainer = v;\n  }\n}, 5);\nvar I18n;\nmodule.watch(require(\"react-redux-i18n\"), {\n  I18n: function (v) {\n    I18n = v;\n  }\n}, 6);\nvar gql;\nmodule.watch(require(\"graphql-tag\"), {\n  \"default\": function (v) {\n    gql = v;\n  }\n}, 7);\nvar notie;\nmodule.watch(require(\"notie\"), {\n  \"default\": function (v) {\n    notie = v;\n  }\n}, 8);\nvar Saving;\nmodule.watch(require(\"../../../core/ui/components/saving\"), {\n  \"default\": function (v) {\n    Saving = v;\n  }\n}, 9);\n\nvar EditContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inheritsLoose2.default)(EditContainer, _React$Component);\n\n  function EditContainer() {\n    var _this;\n\n    _this = _React$Component.call(this) || this;\n    _this.state = {\n      saving: \"saved\"\n    };\n    _this.saveAccount = _this.saveAccount.bind((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)));\n    return _this;\n  }\n\n  var _proto = EditContainer.prototype;\n\n  _proto.componentDidMount = function () {\n    function componentDidMount() {\n      this.savedData = JSON.stringify(this.props.account);\n      var component = this;\n      this.saveInterval = setInterval(function () {\n        if (component.props.form && component.props.form.values) {\n          component.saveAccount(component.props.form.values, true);\n        }\n      }, 5000);\n    }\n\n    return componentDidMount;\n  }();\n\n  _proto.componentWillUnmount = function () {\n    function componentWillUnmount() {\n      clearInterval(this.saveInterval);\n    }\n\n    return componentWillUnmount;\n  }();\n\n  _proto.saveAccount = function () {\n    function saveAccount(data, silent) {\n      var getTranslation = function (key) {\n        return \"Accounts.edit.\" + key;\n      };\n\n      if (silent && typeof silent === \"boolean\") {\n        silent = true;\n      } else {\n        silent = false;\n      }\n\n      if (silent && this.savedData === JSON.stringify(data)) {\n        this.setState({\n          saving: \"saved\"\n        });\n        return;\n      }\n\n      this.setState({\n        saving: \"saving\"\n      });\n      this.savedData = JSON.stringify(data);\n      var component = this; //TODO: Validate Data\n\n      Meteor.call(\"profiles-save\", data, function (err, res) {\n        if (err) {\n          if (err.error === 500) {\n            err.error = \"Failed to create post.\";\n          }\n\n          console.error(\"ERROR_SAVING_ACCOUNT\", err);\n          component.setState({\n            saving: \"saved\"\n          });\n          notie.alert(3, err.reason || err.error, 3);\n          return;\n        }\n\n        component.setState({\n          saving: \"saved\"\n        });\n\n        if (!silent) {\n          notie.alert(1, I18n.t(getTranslation(\"saveMessage\")), 3);\n        }\n      });\n    }\n\n    return saveAccount;\n  }();\n\n  _proto.render = function () {\n    function render() {\n      return React.createElement(\"div\", null, this.props.loading ? React.createElement(Loading, null) : React.createElement(EditAccount, {\n        initialValues: this.props.account,\n        userId: this.props.userId,\n        refetch: this.props.refetch,\n        history: this.props.history,\n        onSubmit: this.saveAccount\n      }), React.createElement(Saving, {\n        state: this.state.saving\n      }));\n    }\n\n    return render;\n  }();\n\n  return EditContainer;\n}(React.Component);\n\nvar QUERY = gql(_templateObject());\nvar withData = graphql(QUERY, {\n  props: function (_ref) {\n    var _ref$data = _ref.data,\n        error = _ref$data.error,\n        loading = _ref$data.loading,\n        account = _ref$data.account,\n        refetch = _ref$data.refetch;\n    if (loading) return {\n      loading: true\n    };\n    if (error) return {\n      hasErrors: true\n    };\n    return {\n      loading: loading,\n      account: account,\n      refetch: refetch\n    };\n  },\n  options: function (ownProps) {\n    return {\n      variables: {\n        _id: ownProps.params.accountID\n      }\n    };\n  }\n});\nvar EditContainerWithData = withData(EditContainer);\nvar EditContainerWithUserId = createContainer(function () {\n  return {\n    userId: Meteor.userId() || ''\n  };\n}, EditContainerWithData);\nmodule.exportDefault(connect(function (state) {\n  return {\n    form: state.form[\"account-edit\"]\n  };\n})(EditContainerWithUserId));","map":{"version":3,"sources":["imports/modules/accounts/ui/containers/edit.jsx"],"names":["React","module","watch","require","v","graphql","connect","Loading","EditAccount","createContainer","I18n","gql","notie","Saving","EditContainer","state","saving","saveAccount","bind","componentDidMount","savedData","JSON","stringify","props","account","component","saveInterval","setInterval","form","values","componentWillUnmount","clearInterval","data","silent","getTranslation","key","setState","Meteor","call","err","res","error","console","alert","reason","t","render","loading","userId","refetch","history","Component","QUERY","withData","hasErrors","options","ownProps","variables","_id","params","accountID","EditContainerWithData","EditContainerWithUserId","exportDefault"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {graphql} from \"react-apollo\";\nimport {connect} from 'react-redux';\nimport Loading from \"../../../core/ui/components/loading\";\nimport EditAccount from \"../layouts/edit\";\nimport {createContainer} from \"meteor/react-meteor-data\";\nimport {I18n} from \"react-redux-i18n\";\nimport gql from \"graphql-tag\";\nimport notie from \"notie\";\nimport Saving from \"../../../core/ui/components/saving\";\n\nclass EditContainer extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            saving: \"saved\"\n        };\n\n        this.saveAccount = this.saveAccount.bind(this);\n    }\n\n    componentDidMount() {\n        this.savedData = JSON.stringify(this.props.account);\n        let component = this;\n        this.saveInterval = setInterval(function () {\n            if (component.props.form && component.props.form.values) {\n                component.saveAccount(component.props.form.values, true);\n            }\n        }, 5000);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.saveInterval);\n    }\n\n    saveAccount(data, silent) {\n        let getTranslation = (key) => {\n            return \"Accounts.edit.\" + key;\n        };\n        if (silent && typeof(silent) === \"boolean\") {\n            silent = true;\n        } else {\n            silent = false;\n        }\n\n        if (silent && this.savedData === JSON.stringify(data)) {\n            this.setState({saving: \"saved\"});\n            return\n        }\n        this.setState({saving: \"saving\"});\n        this.savedData = JSON.stringify(data);\n        let component = this;\n        //TODO: Validate Data\n        Meteor.call(\"profiles-save\", data, function (err, res) {\n            if (err) {\n                if (err.error === 500) {\n                    err.error = \"Failed to create post.\";\n                }\n                console.error(\"ERROR_SAVING_ACCOUNT\", err);\n                component.setState({saving: \"saved\"});\n                notie.alert(3, err.reason || err.error, 3);\n                return\n            }\n            component.setState({saving: \"saved\"});\n            if (!silent) {\n                notie.alert(1, I18n.t(getTranslation(\"saveMessage\")), 3);\n            }\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                {this.props.loading ? <Loading/> :\n                    <EditAccount initialValues={this.props.account} userId={this.props.userId}\n                                 refetch={this.props.refetch} history={this.props.history}\n                                 onSubmit={this.saveAccount}/>}\n                <Saving state={this.state.saving}/>\n            </div>\n        )\n    }\n}\n\nconst QUERY = gql`\n    query ($_id: String!){\n        account(_id:$_id){\n            _id,\n            active,\n            suspended,\n            delete,\n            network,\n            manager {\n                _id\n                profile {\n                    name\n                    lastName\n                    avatar\n                }\n                emails {\n                    address\n                }\n            },\n            owner {\n                _id\n                profile {\n                    name\n                    lastName\n                    avatar\n                }\n                emails {\n                    address\n                }\n            },\n            shares {\n                _id\n                profile {\n                    name\n                    lastName\n                    avatar\n                }\n                emails {\n                    address\n                }\n            },\n            settings{\n                type {\n                    brand\n                    influencer\n                }\n            },\n            information {\n                name\n                lastName\n                avatar\n                gender\n                birthDate\n                country\n                city\n                maritalStatus\n                forbiddenSubjects\n                sexualOrientation\n                likes\n                language\n                description\n                categories\n                specialties\n                urls\n            },\n            audience {\n                targets {\n                    name,\n                    age,\n                    gender,\n                    nrssg,\n                    countries,\n                    cities,\n                    languages,\n                    description\n                },\n                conquer,\n                objectives {\n                    increaseFollowers,\n                    increaseViews,\n                    increaseShares,\n                    increaseEngagement,\n                    increaseLikes,\n                    increaseTrafficHours,\n                    reachNewMarkets,\n                    increaseSpeaking,\n                    increasePlays,\n                    increaseWebsiteTraffic,\n                    positionTarget,\n                    keepTarget,\n                    presence,\n                    positionNewMarkets,\n                }\n            }\n            pricing {\n                post\n                share\n                partnership\n                ambassador,\n                profilePicture,\n                coverPhoto,\n                noPostHour,\n                noPostDay,\n            },\n            statistics {\n                retweets\n                retweetsPerPost\n                favorites\n                favoritesPerPost\n                comments\n                commentsPerPost\n                likes\n                likesPerPost\n                shares\n                sharesPerPost\n                engagement\n                followers\n                following\n                profileLikes\n                posts\n                postsPerDay\n            },\n            gallery {\n                images{\n                    name,\n                    content\n                },\n                videos{\n                    name,\n                    content\n                }\n            },\n            groups\n        }\n    }\n`;\n\nconst withData = graphql(QUERY, {\n    props: ({data: {error, loading, account, refetch}}) => {\n        if (loading) return {loading: true};\n        if (error) return {hasErrors: true};\n        return {\n            loading,\n            account,\n            refetch,\n        };\n    },\n    options: (ownProps) => (\n        {\n            variables: {\n                _id: ownProps.params.accountID\n            }\n        }\n    ),\n});\n\nconst EditContainerWithData = withData(EditContainer);\n\nconst EditContainerWithUserId = createContainer(() => {\n    return {\n        userId: Meteor.userId() || '',\n    };\n}, EditContainerWithData);\n\nexport default connect(state => {\n    return {\n        form: state.form[\"account-edit\"]\n    }\n})(EditContainerWithUserId)"]},"sourceType":"script","hash":"4141de043aef95b16d3da5e7b414f7369cb7d926"}
