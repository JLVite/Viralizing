var require = meteorInstall({"client":{"template.main.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// client/template.main.js                                                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.body.addContent((function() {
  var view = this;
  return HTML.Raw('<div id="root"></div>');
}));
Meteor.startup(Template.body.renderToDocument);
Meteor.startup(function() {
  var attrs = {"class":"site-menubar-unfold"};
  for (var prop in attrs) {
    document.body.setAttribute(prop, attrs[prop]);
  }
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"lib":{"jVectorMap":{"jquery-jvectormap-2.0.3.min.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// client/lib/jVectorMap/jquery-jvectormap-2.0.3.min.js                                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
!function($){var apiParams={set:{colors:1,values:1,backgroundColor:1,scaleColors:1,normalizeFunction:1,focus:1},get:{selectedRegions:1,selectedMarkers:1,mapObject:1,regionName:1}};$.fn.vectorMap=function(options){var map,methodName,map=this.children(".jvectormap-container").data("mapObject");if("addMap"===options)jvm.Map.maps[arguments[1]]=arguments[2];else{if(("set"===options||"get"===options)&&apiParams[options][arguments[1]])return methodName=arguments[1].charAt(0).toUpperCase()+arguments[1].substr(1),map[options+methodName].apply(map,Array.prototype.slice.call(arguments,2));options=options||{},options.container=this,map=new jvm.Map(options)}return this}}(jQuery),function(factory){"function"==typeof define&&define.amd?define(["jquery"],factory):"object"==typeof exports?module.exports=factory:factory(jQuery)}(function($){function handler(event){var orgEvent=event||window.event,args=slice.call(arguments,1),delta=0,deltaX=0,deltaY=0,absDelta=0;if(event=$.event.fix(orgEvent),event.type="mousewheel","detail"in orgEvent&&(deltaY=-1*orgEvent.detail),"wheelDelta"in orgEvent&&(deltaY=orgEvent.wheelDelta),"wheelDeltaY"in orgEvent&&(deltaY=orgEvent.wheelDeltaY),"wheelDeltaX"in orgEvent&&(deltaX=-1*orgEvent.wheelDeltaX),"axis"in orgEvent&&orgEvent.axis===orgEvent.HORIZONTAL_AXIS&&(deltaX=-1*deltaY,deltaY=0),delta=0===deltaY?deltaX:deltaY,"deltaY"in orgEvent&&(deltaY=-1*orgEvent.deltaY,delta=deltaY),"deltaX"in orgEvent&&(deltaX=orgEvent.deltaX,0===deltaY&&(delta=-1*deltaX)),0!==deltaY||0!==deltaX){if(1===orgEvent.deltaMode){var lineHeight=$.data(this,"mousewheel-line-height");delta*=lineHeight,deltaY*=lineHeight,deltaX*=lineHeight}else if(2===orgEvent.deltaMode){var pageHeight=$.data(this,"mousewheel-page-height");delta*=pageHeight,deltaY*=pageHeight,deltaX*=pageHeight}return absDelta=Math.max(Math.abs(deltaY),Math.abs(deltaX)),(!lowestDelta||lowestDelta>absDelta)&&(lowestDelta=absDelta,shouldAdjustOldDeltas(orgEvent,absDelta)&&(lowestDelta/=40)),shouldAdjustOldDeltas(orgEvent,absDelta)&&(delta/=40,deltaX/=40,deltaY/=40),delta=Math[delta>=1?"floor":"ceil"](delta/lowestDelta),deltaX=Math[deltaX>=1?"floor":"ceil"](deltaX/lowestDelta),deltaY=Math[deltaY>=1?"floor":"ceil"](deltaY/lowestDelta),event.deltaX=deltaX,event.deltaY=deltaY,event.deltaFactor=lowestDelta,event.deltaMode=0,args.unshift(event,delta,deltaX,deltaY),nullLowestDeltaTimeout&&clearTimeout(nullLowestDeltaTimeout),nullLowestDeltaTimeout=setTimeout(nullLowestDelta,200),($.event.dispatch||$.event.handle).apply(this,args)}}function nullLowestDelta(){lowestDelta=null}function shouldAdjustOldDeltas(orgEvent,absDelta){return special.settings.adjustOldDeltas&&"mousewheel"===orgEvent.type&&absDelta%120===0}var nullLowestDeltaTimeout,lowestDelta,toFix=["wheel","mousewheel","DOMMouseScroll","MozMousePixelScroll"],toBind="onwheel"in document||document.documentMode>=9?["wheel"]:["mousewheel","DomMouseScroll","MozMousePixelScroll"],slice=Array.prototype.slice;if($.event.fixHooks)for(var i=toFix.length;i;)$.event.fixHooks[toFix[--i]]=$.event.mouseHooks;var special=$.event.special.mousewheel={version:"3.1.9",setup:function(){if(this.addEventListener)for(var i=toBind.length;i;)this.addEventListener(toBind[--i],handler,!1);else this.onmousewheel=handler;$.data(this,"mousewheel-line-height",special.getLineHeight(this)),$.data(this,"mousewheel-page-height",special.getPageHeight(this))},teardown:function(){if(this.removeEventListener)for(var i=toBind.length;i;)this.removeEventListener(toBind[--i],handler,!1);else this.onmousewheel=null},getLineHeight:function(elem){return parseInt($(elem)["offsetParent"in $.fn?"offsetParent":"parent"]().css("fontSize"),10)},getPageHeight:function(elem){return $(elem).height()},settings:{adjustOldDeltas:!0}};$.fn.extend({mousewheel:function(fn){return fn?this.bind("mousewheel",fn):this.trigger("mousewheel")},unmousewheel:function(fn){return this.unbind("mousewheel",fn)}})});var jvm={inherits:function(child,parent){function temp(){}temp.prototype=parent.prototype,child.prototype=new temp,child.prototype.constructor=child,child.parentClass=parent},mixin:function(target,source){var prop;for(prop in source.prototype)source.prototype.hasOwnProperty(prop)&&(target.prototype[prop]=source.prototype[prop])},min:function(values){var i,min=Number.MAX_VALUE;if(values instanceof Array)for(i=0;i<values.length;i++)values[i]<min&&(min=values[i]);else for(i in values)values[i]<min&&(min=values[i]);return min},max:function(values){var i,max=Number.MIN_VALUE;if(values instanceof Array)for(i=0;i<values.length;i++)values[i]>max&&(max=values[i]);else for(i in values)values[i]>max&&(max=values[i]);return max},keys:function(object){var key,keys=[];for(key in object)keys.push(key);return keys},values:function(object){var key,i,values=[];for(i=0;i<arguments.length;i++){object=arguments[i];for(key in object)values.push(object[key])}return values},whenImageLoaded:function(url){var deferred=new jvm.$.Deferred,img=jvm.$("<img/>");return img.error(function(){deferred.reject()}).load(function(){deferred.resolve(img)}),img.attr("src",url),deferred},isImageUrl:function(s){return/\.\w{3,4}$/.test(s)}};jvm.$=jQuery,Array.prototype.indexOf||(Array.prototype.indexOf=function(searchElement,fromIndex){var k;if(null==this)throw new TypeError('"this" is null or not defined');var O=Object(this),len=O.length>>>0;if(0===len)return-1;var n=+fromIndex||0;if(1/0===Math.abs(n)&&(n=0),n>=len)return-1;for(k=Math.max(n>=0?n:len-Math.abs(n),0);len>k;){if(k in O&&O[k]===searchElement)return k;k++}return-1}),jvm.AbstractElement=function(name,config){this.node=this.createElement(name),this.name=name,this.properties={},config&&this.set(config)},jvm.AbstractElement.prototype.set=function(property,value){var key;if("object"==typeof property)for(key in property)this.properties[key]=property[key],this.applyAttr(key,property[key]);else this.properties[property]=value,this.applyAttr(property,value)},jvm.AbstractElement.prototype.get=function(property){return this.properties[property]},jvm.AbstractElement.prototype.applyAttr=function(property,value){this.node.setAttribute(property,value)},jvm.AbstractElement.prototype.remove=function(){jvm.$(this.node).remove()},jvm.AbstractCanvasElement=function(container,width,height){this.container=container,this.setSize(width,height),this.rootElement=new jvm[this.classPrefix+"GroupElement"],this.node.appendChild(this.rootElement.node),this.container.appendChild(this.node)},jvm.AbstractCanvasElement.prototype.add=function(element,group){group=group||this.rootElement,group.add(element),element.canvas=this},jvm.AbstractCanvasElement.prototype.addPath=function(config,style,group){var el=new jvm[this.classPrefix+"PathElement"](config,style);return this.add(el,group),el},jvm.AbstractCanvasElement.prototype.addCircle=function(config,style,group){var el=new jvm[this.classPrefix+"CircleElement"](config,style);return this.add(el,group),el},jvm.AbstractCanvasElement.prototype.addImage=function(config,style,group){var el=new jvm[this.classPrefix+"ImageElement"](config,style);return this.add(el,group),el},jvm.AbstractCanvasElement.prototype.addText=function(config,style,group){var el=new jvm[this.classPrefix+"TextElement"](config,style);return this.add(el,group),el},jvm.AbstractCanvasElement.prototype.addGroup=function(parentGroup){var el=new jvm[this.classPrefix+"GroupElement"];return parentGroup?parentGroup.node.appendChild(el.node):this.node.appendChild(el.node),el.canvas=this,el},jvm.AbstractShapeElement=function(name,config,style){this.style=style||{},this.style.current=this.style.current||{},this.isHovered=!1,this.isSelected=!1,this.updateStyle()},jvm.AbstractShapeElement.prototype.setStyle=function(property,value){var styles={};"object"==typeof property?styles=property:styles[property]=value,jvm.$.extend(this.style.current,styles),this.updateStyle()},jvm.AbstractShapeElement.prototype.updateStyle=function(){var attrs={};jvm.AbstractShapeElement.mergeStyles(attrs,this.style.initial),jvm.AbstractShapeElement.mergeStyles(attrs,this.style.current),this.isHovered&&jvm.AbstractShapeElement.mergeStyles(attrs,this.style.hover),this.isSelected&&(jvm.AbstractShapeElement.mergeStyles(attrs,this.style.selected),this.isHovered&&jvm.AbstractShapeElement.mergeStyles(attrs,this.style.selectedHover)),this.set(attrs)},jvm.AbstractShapeElement.mergeStyles=function(styles,newStyles){var key;newStyles=newStyles||{};for(key in newStyles)null===newStyles[key]?delete styles[key]:styles[key]=newStyles[key]},jvm.SVGElement=function(){jvm.SVGElement.parentClass.apply(this,arguments)},jvm.inherits(jvm.SVGElement,jvm.AbstractElement),jvm.SVGElement.svgns="http://www.w3.org/2000/svg",jvm.SVGElement.prototype.createElement=function(tagName){return document.createElementNS(jvm.SVGElement.svgns,tagName)},jvm.SVGElement.prototype.addClass=function(className){this.node.setAttribute("class",className)},jvm.SVGElement.prototype.getElementCtr=function(ctr){return jvm["SVG"+ctr]},jvm.SVGElement.prototype.getBBox=function(){return this.node.getBBox()},jvm.SVGGroupElement=function(){jvm.SVGGroupElement.parentClass.call(this,"g")},jvm.inherits(jvm.SVGGroupElement,jvm.SVGElement),jvm.SVGGroupElement.prototype.add=function(element){this.node.appendChild(element.node)},jvm.SVGCanvasElement=function(){this.classPrefix="SVG",jvm.SVGCanvasElement.parentClass.call(this,"svg"),this.defsElement=new jvm.SVGElement("defs"),this.node.appendChild(this.defsElement.node),jvm.AbstractCanvasElement.apply(this,arguments)},jvm.inherits(jvm.SVGCanvasElement,jvm.SVGElement),jvm.mixin(jvm.SVGCanvasElement,jvm.AbstractCanvasElement),jvm.SVGCanvasElement.prototype.setSize=function(width,height){this.width=width,this.height=height,this.node.setAttribute("width",width),this.node.setAttribute("height",height)},jvm.SVGCanvasElement.prototype.applyTransformParams=function(scale,transX,transY){this.scale=scale,this.transX=transX,this.transY=transY,this.rootElement.node.setAttribute("transform","scale("+scale+") translate("+transX+", "+transY+")")},jvm.SVGShapeElement=function(name,config){jvm.SVGShapeElement.parentClass.call(this,name,config),jvm.AbstractShapeElement.apply(this,arguments)},jvm.inherits(jvm.SVGShapeElement,jvm.SVGElement),jvm.mixin(jvm.SVGShapeElement,jvm.AbstractShapeElement),jvm.SVGShapeElement.prototype.applyAttr=function(attr,value){var patternEl,imageEl,that=this;"fill"===attr&&jvm.isImageUrl(value)?jvm.SVGShapeElement.images[value]?this.applyAttr("fill","url(#image"+jvm.SVGShapeElement.images[value]+")"):jvm.whenImageLoaded(value).then(function(img){imageEl=new jvm.SVGElement("image"),imageEl.node.setAttributeNS("http://www.w3.org/1999/xlink","href",value),imageEl.applyAttr("x","0"),imageEl.applyAttr("y","0"),imageEl.applyAttr("width",img[0].width),imageEl.applyAttr("height",img[0].height),patternEl=new jvm.SVGElement("pattern"),patternEl.applyAttr("id","image"+jvm.SVGShapeElement.imageCounter),patternEl.applyAttr("x",0),patternEl.applyAttr("y",0),patternEl.applyAttr("width",img[0].width/2),patternEl.applyAttr("height",img[0].height/2),patternEl.applyAttr("viewBox","0 0 "+img[0].width+" "+img[0].height),patternEl.applyAttr("patternUnits","userSpaceOnUse"),patternEl.node.appendChild(imageEl.node),that.canvas.defsElement.node.appendChild(patternEl.node),jvm.SVGShapeElement.images[value]=jvm.SVGShapeElement.imageCounter++,that.applyAttr("fill","url(#image"+jvm.SVGShapeElement.images[value]+")")}):jvm.SVGShapeElement.parentClass.prototype.applyAttr.apply(this,arguments)},jvm.SVGShapeElement.imageCounter=1,jvm.SVGShapeElement.images={},jvm.SVGPathElement=function(config,style){jvm.SVGPathElement.parentClass.call(this,"path",config,style),this.node.setAttribute("fill-rule","evenodd")},jvm.inherits(jvm.SVGPathElement,jvm.SVGShapeElement),jvm.SVGCircleElement=function(config,style){jvm.SVGCircleElement.parentClass.call(this,"circle",config,style)},jvm.inherits(jvm.SVGCircleElement,jvm.SVGShapeElement),jvm.SVGImageElement=function(config,style){jvm.SVGImageElement.parentClass.call(this,"image",config,style)},jvm.inherits(jvm.SVGImageElement,jvm.SVGShapeElement),jvm.SVGImageElement.prototype.applyAttr=function(attr,value){var that=this;"image"==attr?jvm.whenImageLoaded(value).then(function(img){that.node.setAttributeNS("http://www.w3.org/1999/xlink","href",value),that.width=img[0].width,that.height=img[0].height,that.applyAttr("width",that.width),that.applyAttr("height",that.height),that.applyAttr("x",that.cx-that.width/2),that.applyAttr("y",that.cy-that.height/2),jvm.$(that.node).trigger("imageloaded",[img])}):"cx"==attr?(this.cx=value,this.width&&this.applyAttr("x",value-this.width/2)):"cy"==attr?(this.cy=value,this.height&&this.applyAttr("y",value-this.height/2)):jvm.SVGImageElement.parentClass.prototype.applyAttr.apply(this,arguments)},jvm.SVGTextElement=function(config,style){jvm.SVGTextElement.parentClass.call(this,"text",config,style)},jvm.inherits(jvm.SVGTextElement,jvm.SVGShapeElement),jvm.SVGTextElement.prototype.applyAttr=function(attr,value){"text"===attr?this.node.textContent=value:jvm.SVGTextElement.parentClass.prototype.applyAttr.apply(this,arguments)},jvm.VMLElement=function(){jvm.VMLElement.VMLInitialized||jvm.VMLElement.initializeVML(),jvm.VMLElement.parentClass.apply(this,arguments)},jvm.inherits(jvm.VMLElement,jvm.AbstractElement),jvm.VMLElement.VMLInitialized=!1,jvm.VMLElement.initializeVML=function(){try{document.namespaces.rvml||document.namespaces.add("rvml","urn:schemas-microsoft-com:vml"),jvm.VMLElement.prototype.createElement=function(tagName){return document.createElement("<rvml:"+tagName+' class="rvml">')}}catch(e){jvm.VMLElement.prototype.createElement=function(tagName){return document.createElement("<"+tagName+' xmlns="urn:schemas-microsoft.com:vml" class="rvml">')}}document.createStyleSheet().addRule(".rvml","behavior:url(#default#VML)"),jvm.VMLElement.VMLInitialized=!0},jvm.VMLElement.prototype.getElementCtr=function(ctr){return jvm["VML"+ctr]},jvm.VMLElement.prototype.addClass=function(className){jvm.$(this.node).addClass(className)},jvm.VMLElement.prototype.applyAttr=function(attr,value){this.node[attr]=value},jvm.VMLElement.prototype.getBBox=function(){var node=jvm.$(this.node);return{x:node.position().left/this.canvas.scale,y:node.position().top/this.canvas.scale,width:node.width()/this.canvas.scale,height:node.height()/this.canvas.scale}},jvm.VMLGroupElement=function(){jvm.VMLGroupElement.parentClass.call(this,"group"),this.node.style.left="0px",this.node.style.top="0px",this.node.coordorigin="0 0"},jvm.inherits(jvm.VMLGroupElement,jvm.VMLElement),jvm.VMLGroupElement.prototype.add=function(element){this.node.appendChild(element.node)},jvm.VMLCanvasElement=function(){this.classPrefix="VML",jvm.VMLCanvasElement.parentClass.call(this,"group"),jvm.AbstractCanvasElement.apply(this,arguments),this.node.style.position="absolute"},jvm.inherits(jvm.VMLCanvasElement,jvm.VMLElement),jvm.mixin(jvm.VMLCanvasElement,jvm.AbstractCanvasElement),jvm.VMLCanvasElement.prototype.setSize=function(width,height){var paths,groups,i,l;if(this.width=width,this.height=height,this.node.style.width=width+"px",this.node.style.height=height+"px",this.node.coordsize=width+" "+height,this.node.coordorigin="0 0",this.rootElement){for(paths=this.rootElement.node.getElementsByTagName("shape"),i=0,l=paths.length;l>i;i++)paths[i].coordsize=width+" "+height,paths[i].style.width=width+"px",paths[i].style.height=height+"px";for(groups=this.node.getElementsByTagName("group"),i=0,l=groups.length;l>i;i++)groups[i].coordsize=width+" "+height,groups[i].style.width=width+"px",groups[i].style.height=height+"px"}},jvm.VMLCanvasElement.prototype.applyTransformParams=function(scale,transX,transY){this.scale=scale,this.transX=transX,this.transY=transY,this.rootElement.node.coordorigin=this.width-transX-this.width/100+","+(this.height-transY-this.height/100),this.rootElement.node.coordsize=this.width/scale+","+this.height/scale},jvm.VMLShapeElement=function(name,config){jvm.VMLShapeElement.parentClass.call(this,name,config),this.fillElement=new jvm.VMLElement("fill"),this.strokeElement=new jvm.VMLElement("stroke"),this.node.appendChild(this.fillElement.node),this.node.appendChild(this.strokeElement.node),this.node.stroked=!1,jvm.AbstractShapeElement.apply(this,arguments)},jvm.inherits(jvm.VMLShapeElement,jvm.VMLElement),jvm.mixin(jvm.VMLShapeElement,jvm.AbstractShapeElement),jvm.VMLShapeElement.prototype.applyAttr=function(attr,value){switch(attr){case"fill":this.node.fillcolor=value;break;case"fill-opacity":this.fillElement.node.opacity=Math.round(100*value)+"%";break;case"stroke":this.node.stroked="none"===value?!1:!0,this.node.strokecolor=value;break;case"stroke-opacity":this.strokeElement.node.opacity=Math.round(100*value)+"%";break;case"stroke-width":this.node.stroked=0===parseInt(value,10)?!1:!0,this.node.strokeweight=value;break;case"d":this.node.path=jvm.VMLPathElement.pathSvgToVml(value);break;default:jvm.VMLShapeElement.parentClass.prototype.applyAttr.apply(this,arguments)}},jvm.VMLPathElement=function(config,style){var scale=new jvm.VMLElement("skew");jvm.VMLPathElement.parentClass.call(this,"shape",config,style),this.node.coordorigin="0 0",scale.node.on=!0,scale.node.matrix="0.01,0,0,0.01,0,0",scale.node.offset="0,0",this.node.appendChild(scale.node)},jvm.inherits(jvm.VMLPathElement,jvm.VMLShapeElement),jvm.VMLPathElement.prototype.applyAttr=function(attr,value){"d"===attr?this.node.path=jvm.VMLPathElement.pathSvgToVml(value):jvm.VMLShapeElement.prototype.applyAttr.call(this,attr,value)},jvm.VMLPathElement.pathSvgToVml=function(path){var ctrlx,ctrly,cx=0,cy=0;return path=path.replace(/(-?\d+)e(-?\d+)/g,"0"),path.replace(/([MmLlHhVvCcSs])\s*((?:-?\d*(?:\.\d+)?\s*,?\s*)+)/g,function(segment,letter,coords){coords=coords.replace(/(\d)-/g,"$1,-").replace(/^\s+/g,"").replace(/\s+$/g,"").replace(/\s+/g,",").split(","),coords[0]||coords.shift();for(var i=0,l=coords.length;l>i;i++)coords[i]=Math.round(100*coords[i]);switch(letter){case"m":return cx+=coords[0],cy+=coords[1],"t"+coords.join(",");case"M":return cx=coords[0],cy=coords[1],"m"+coords.join(",");case"l":return cx+=coords[0],cy+=coords[1],"r"+coords.join(",");case"L":return cx=coords[0],cy=coords[1],"l"+coords.join(",");case"h":return cx+=coords[0],"r"+coords[0]+",0";case"H":return cx=coords[0],"l"+cx+","+cy;case"v":return cy+=coords[0],"r0,"+coords[0];case"V":return cy=coords[0],"l"+cx+","+cy;case"c":return ctrlx=cx+coords[coords.length-4],ctrly=cy+coords[coords.length-3],cx+=coords[coords.length-2],cy+=coords[coords.length-1],"v"+coords.join(",");case"C":return ctrlx=coords[coords.length-4],ctrly=coords[coords.length-3],cx=coords[coords.length-2],cy=coords[coords.length-1],"c"+coords.join(",");case"s":return coords.unshift(cy-ctrly),coords.unshift(cx-ctrlx),ctrlx=cx+coords[coords.length-4],ctrly=cy+coords[coords.length-3],cx+=coords[coords.length-2],cy+=coords[coords.length-1],"v"+coords.join(",");case"S":return coords.unshift(cy+cy-ctrly),coords.unshift(cx+cx-ctrlx),ctrlx=coords[coords.length-4],ctrly=coords[coords.length-3],cx=coords[coords.length-2],cy=coords[coords.length-1],"c"+coords.join(",")}return""}).replace(/z/g,"e")},jvm.VMLCircleElement=function(config,style){jvm.VMLCircleElement.parentClass.call(this,"oval",config,style)},jvm.inherits(jvm.VMLCircleElement,jvm.VMLShapeElement),jvm.VMLCircleElement.prototype.applyAttr=function(attr,value){switch(attr){case"r":this.node.style.width=2*value+"px",this.node.style.height=2*value+"px",this.applyAttr("cx",this.get("cx")||0),this.applyAttr("cy",this.get("cy")||0);break;case"cx":if(!value)return;this.node.style.left=value-(this.get("r")||0)+"px";break;case"cy":if(!value)return;this.node.style.top=value-(this.get("r")||0)+"px";break;default:jvm.VMLCircleElement.parentClass.prototype.applyAttr.call(this,attr,value)}},jvm.VectorCanvas=function(container,width,height){return this.mode=window.SVGAngle?"svg":"vml",this.impl="svg"==this.mode?new jvm.SVGCanvasElement(container,width,height):new jvm.VMLCanvasElement(container,width,height),this.impl.mode=this.mode,this.impl},jvm.SimpleScale=function(scale){this.scale=scale},jvm.SimpleScale.prototype.getValue=function(value){return value},jvm.OrdinalScale=function(scale){this.scale=scale},jvm.OrdinalScale.prototype.getValue=function(value){return this.scale[value]},jvm.OrdinalScale.prototype.getTicks=function(){var key,ticks=[];for(key in this.scale)ticks.push({label:key,value:this.scale[key]});return ticks},jvm.NumericScale=function(scale,normalizeFunction,minValue,maxValue){this.scale=[],normalizeFunction=normalizeFunction||"linear",scale&&this.setScale(scale),normalizeFunction&&this.setNormalizeFunction(normalizeFunction),"undefined"!=typeof minValue&&this.setMin(minValue),"undefined"!=typeof maxValue&&this.setMax(maxValue)},jvm.NumericScale.prototype={setMin:function(min){this.clearMinValue=min,this.minValue="function"==typeof this.normalize?this.normalize(min):min},setMax:function(max){this.clearMaxValue=max,this.maxValue="function"==typeof this.normalize?this.normalize(max):max},setScale:function(scale){var i;for(this.scale=[],i=0;i<scale.length;i++)this.scale[i]=[scale[i]]},setNormalizeFunction:function(f){"polynomial"===f?this.normalize=function(value){return Math.pow(value,.2)}:"linear"===f?delete this.normalize:this.normalize=f,this.setMin(this.clearMinValue),this.setMax(this.clearMaxValue)},getValue:function(value){var l,c,lengthes=[],fullLength=0,i=0;for("function"==typeof this.normalize&&(value=this.normalize(value)),i=0;i<this.scale.length-1;i++)l=this.vectorLength(this.vectorSubtract(this.scale[i+1],this.scale[i])),lengthes.push(l),fullLength+=l;for(c=(this.maxValue-this.minValue)/fullLength,i=0;i<lengthes.length;i++)lengthes[i]*=c;for(i=0,value-=this.minValue;value-lengthes[i]>=0;)value-=lengthes[i],i++;return value=this.vectorToNum(i==this.scale.length-1?this.scale[i]:this.vectorAdd(this.scale[i],this.vectorMult(this.vectorSubtract(this.scale[i+1],this.scale[i]),value/lengthes[i])))},vectorToNum:function(vector){var i,num=0;for(i=0;i<vector.length;i++)num+=Math.round(vector[i])*Math.pow(256,vector.length-i-1);return num},vectorSubtract:function(vector1,vector2){var i,vector=[];for(i=0;i<vector1.length;i++)vector[i]=vector1[i]-vector2[i];return vector},vectorAdd:function(vector1,vector2){var i,vector=[];for(i=0;i<vector1.length;i++)vector[i]=vector1[i]+vector2[i];return vector},vectorMult:function(vector,num){var i,result=[];for(i=0;i<vector.length;i++)result[i]=vector[i]*num;return result},vectorLength:function(vector){var i,result=0;for(i=0;i<vector.length;i++)result+=vector[i]*vector[i];return Math.sqrt(result)},getTicks:function(){var tick,v,m=5,extent=[this.clearMinValue,this.clearMaxValue],span=extent[1]-extent[0],step=Math.pow(10,Math.floor(Math.log(span/m)/Math.LN10)),err=m/span*step,ticks=[];for(.15>=err?step*=10:.35>=err?step*=5:.75>=err&&(step*=2),extent[0]=Math.floor(extent[0]/step)*step,extent[1]=Math.ceil(extent[1]/step)*step,tick=extent[0];tick<=extent[1];)v=tick==extent[0]?this.clearMinValue:tick==extent[1]?this.clearMaxValue:tick,ticks.push({label:tick,value:this.getValue(v)}),tick+=step;return ticks}},jvm.ColorScale=function(){jvm.ColorScale.parentClass.apply(this,arguments)},jvm.inherits(jvm.ColorScale,jvm.NumericScale),jvm.ColorScale.prototype.setScale=function(scale){var i;for(i=0;i<scale.length;i++)this.scale[i]=jvm.ColorScale.rgbToArray(scale[i])},jvm.ColorScale.prototype.getValue=function(value){return jvm.ColorScale.numToRgb(jvm.ColorScale.parentClass.prototype.getValue.call(this,value))},jvm.ColorScale.arrayToRgb=function(ar){var d,i,rgb="#";for(i=0;i<ar.length;i++)d=ar[i].toString(16),rgb+=1==d.length?"0"+d:d;return rgb},jvm.ColorScale.numToRgb=function(num){for(num=num.toString(16);num.length<6;)num="0"+num;return"#"+num},jvm.ColorScale.rgbToArray=function(rgb){return rgb=rgb.substr(1),[parseInt(rgb.substr(0,2),16),parseInt(rgb.substr(2,2),16),parseInt(rgb.substr(4,2),16)]},jvm.Legend=function(params){this.params=params||{},this.map=this.params.map,this.series=this.params.series,this.body=jvm.$("<div/>"),this.body.addClass("jvectormap-legend"),this.params.cssClass&&this.body.addClass(this.params.cssClass),params.vertical?this.map.legendCntVertical.append(this.body):this.map.legendCntHorizontal.append(this.body),this.render()},jvm.Legend.prototype.render=function(){var i,tick,sample,label,ticks=this.series.scale.getTicks(),inner=jvm.$("<div/>").addClass("jvectormap-legend-inner");for(this.body.html(""),this.params.title&&this.body.append(jvm.$("<div/>").addClass("jvectormap-legend-title").html(this.params.title)),this.body.append(inner),i=0;i<ticks.length;i++){switch(tick=jvm.$("<div/>").addClass("jvectormap-legend-tick"),sample=jvm.$("<div/>").addClass("jvectormap-legend-tick-sample"),this.series.params.attribute){case"fill":jvm.isImageUrl(ticks[i].value)?sample.css("background","url("+ticks[i].value+")"):sample.css("background",ticks[i].value);break;case"stroke":sample.css("background",ticks[i].value);break;case"image":sample.css("background","url("+ticks[i].value+") no-repeat center center");break;case"r":jvm.$("<div/>").css({"border-radius":ticks[i].value,border:this.map.params.markerStyle.initial["stroke-width"]+"px "+this.map.params.markerStyle.initial.stroke+" solid",width:2*ticks[i].value+"px",height:2*ticks[i].value+"px",background:this.map.params.markerStyle.initial.fill}).appendTo(sample)}tick.append(sample),label=ticks[i].label,this.params.labelRender&&(label=this.params.labelRender(label)),tick.append(jvm.$("<div>"+label+" </div>").addClass("jvectormap-legend-tick-text")),inner.append(tick)}inner.append(jvm.$("<div/>").css("clear","both"))},jvm.DataSeries=function(params,elements,map){var scaleConstructor;params=params||{},params.attribute=params.attribute||"fill",this.elements=elements,this.params=params,this.map=map,params.attributes&&this.setAttributes(params.attributes),jvm.$.isArray(params.scale)?(scaleConstructor="fill"===params.attribute||"stroke"===params.attribute?jvm.ColorScale:jvm.NumericScale,this.scale=new scaleConstructor(params.scale,params.normalizeFunction,params.min,params.max)):this.scale=params.scale?new jvm.OrdinalScale(params.scale):new jvm.SimpleScale(params.scale),this.values=params.values||{},this.setValues(this.values),this.params.legend&&(this.legend=new jvm.Legend($.extend({map:this.map,series:this},this.params.legend)))},jvm.DataSeries.prototype={setAttributes:function(key,attr){var code,attrs=key;if("string"==typeof key)this.elements[key]&&this.elements[key].setStyle(this.params.attribute,attr);else for(code in attrs)this.elements[code]&&this.elements[code].element.setStyle(this.params.attribute,attrs[code])},setValues:function(values){var val,cc,max=-Number.MAX_VALUE,min=Number.MAX_VALUE,attrs={};if(this.scale instanceof jvm.OrdinalScale||this.scale instanceof jvm.SimpleScale)for(cc in values)attrs[cc]=values[cc]?this.scale.getValue(values[cc]):this.elements[cc].element.style.initial[this.params.attribute];else{if("undefined"==typeof this.params.min||"undefined"==typeof this.params.max)for(cc in values)val=parseFloat(values[cc]),val>max&&(max=val),min>val&&(min=val);"undefined"==typeof this.params.min?(this.scale.setMin(min),this.params.min=min):this.scale.setMin(this.params.min),"undefined"==typeof this.params.max?(this.scale.setMax(max),this.params.max=max):this.scale.setMax(this.params.max);for(cc in values)"indexOf"!=cc&&(val=parseFloat(values[cc]),attrs[cc]=isNaN(val)?this.elements[cc].element.style.initial[this.params.attribute]:this.scale.getValue(val))}this.setAttributes(attrs),jvm.$.extend(this.values,values)},clear:function(){var key,attrs={};for(key in this.values)this.elements[key]&&(attrs[key]=this.elements[key].element.shape.style.initial[this.params.attribute]);this.setAttributes(attrs),this.values={}},setScale:function(scale){this.scale.setScale(scale),this.values&&this.setValues(this.values)},setNormalizeFunction:function(f){this.scale.setNormalizeFunction(f),this.values&&this.setValues(this.values)}},jvm.Proj={degRad:180/Math.PI,radDeg:Math.PI/180,radius:6381372,sgn:function(n){return n>0?1:0>n?-1:n},mill:function(lat,lng,c){return{x:this.radius*(lng-c)*this.radDeg,y:-this.radius*Math.log(Math.tan((45+.4*lat)*this.radDeg))/.8}},mill_inv:function(x,y,c){return{lat:(2.5*Math.atan(Math.exp(.8*y/this.radius))-5*Math.PI/8)*this.degRad,lng:(c*this.radDeg+x/this.radius)*this.degRad}},merc:function(lat,lng,c){return{x:this.radius*(lng-c)*this.radDeg,y:-this.radius*Math.log(Math.tan(Math.PI/4+lat*Math.PI/360))}},merc_inv:function(x,y,c){return{lat:(2*Math.atan(Math.exp(y/this.radius))-Math.PI/2)*this.degRad,lng:(c*this.radDeg+x/this.radius)*this.degRad}},aea:function(lat,lng,c){var fi0=0,lambda0=c*this.radDeg,fi1=29.5*this.radDeg,fi2=45.5*this.radDeg,fi=lat*this.radDeg,lambda=lng*this.radDeg,n=(Math.sin(fi1)+Math.sin(fi2))/2,C=Math.cos(fi1)*Math.cos(fi1)+2*n*Math.sin(fi1),theta=n*(lambda-lambda0),ro=Math.sqrt(C-2*n*Math.sin(fi))/n,ro0=Math.sqrt(C-2*n*Math.sin(fi0))/n;return{x:ro*Math.sin(theta)*this.radius,y:-(ro0-ro*Math.cos(theta))*this.radius}},aea_inv:function(xCoord,yCoord,c){var x=xCoord/this.radius,y=yCoord/this.radius,fi0=0,lambda0=c*this.radDeg,fi1=29.5*this.radDeg,fi2=45.5*this.radDeg,n=(Math.sin(fi1)+Math.sin(fi2))/2,C=Math.cos(fi1)*Math.cos(fi1)+2*n*Math.sin(fi1),ro0=Math.sqrt(C-2*n*Math.sin(fi0))/n,ro=Math.sqrt(x*x+(ro0-y)*(ro0-y)),theta=Math.atan(x/(ro0-y));return{lat:Math.asin((C-ro*ro*n*n)/(2*n))*this.degRad,lng:(lambda0+theta/n)*this.degRad}},lcc:function(lat,lng,c){var fi0=0,lambda0=c*this.radDeg,lambda=lng*this.radDeg,fi1=33*this.radDeg,fi2=45*this.radDeg,fi=lat*this.radDeg,n=Math.log(Math.cos(fi1)*(1/Math.cos(fi2)))/Math.log(Math.tan(Math.PI/4+fi2/2)*(1/Math.tan(Math.PI/4+fi1/2))),F=Math.cos(fi1)*Math.pow(Math.tan(Math.PI/4+fi1/2),n)/n,ro=F*Math.pow(1/Math.tan(Math.PI/4+fi/2),n),ro0=F*Math.pow(1/Math.tan(Math.PI/4+fi0/2),n);return{x:ro*Math.sin(n*(lambda-lambda0))*this.radius,y:-(ro0-ro*Math.cos(n*(lambda-lambda0)))*this.radius}},lcc_inv:function(xCoord,yCoord,c){var x=xCoord/this.radius,y=yCoord/this.radius,fi0=0,lambda0=c*this.radDeg,fi1=33*this.radDeg,fi2=45*this.radDeg,n=Math.log(Math.cos(fi1)*(1/Math.cos(fi2)))/Math.log(Math.tan(Math.PI/4+fi2/2)*(1/Math.tan(Math.PI/4+fi1/2))),F=Math.cos(fi1)*Math.pow(Math.tan(Math.PI/4+fi1/2),n)/n,ro0=F*Math.pow(1/Math.tan(Math.PI/4+fi0/2),n),ro=this.sgn(n)*Math.sqrt(x*x+(ro0-y)*(ro0-y)),theta=Math.atan(x/(ro0-y));return{lat:(2*Math.atan(Math.pow(F/ro,1/n))-Math.PI/2)*this.degRad,lng:(lambda0+theta/n)*this.degRad}}},jvm.MapObject=function(){},jvm.MapObject.prototype.getLabelText=function(key){var text;return text=this.config.label?"function"==typeof this.config.label.render?this.config.label.render(key):key:null},jvm.MapObject.prototype.getLabelOffsets=function(key){var offsets;return this.config.label&&("function"==typeof this.config.label.offsets?offsets=this.config.label.offsets(key):"object"==typeof this.config.label.offsets&&(offsets=this.config.label.offsets[key])),offsets||[0,0]},jvm.MapObject.prototype.setHovered=function(isHovered){this.isHovered!==isHovered&&(this.isHovered=isHovered,this.shape.isHovered=isHovered,this.shape.updateStyle(),this.label&&(this.label.isHovered=isHovered,this.label.updateStyle()))},jvm.MapObject.prototype.setSelected=function(isSelected){this.isSelected!==isSelected&&(this.isSelected=isSelected,this.shape.isSelected=isSelected,this.shape.updateStyle(),this.label&&(this.label.isSelected=isSelected,this.label.updateStyle()),jvm.$(this.shape).trigger("selected",[isSelected]))},jvm.MapObject.prototype.setStyle=function(){this.shape.setStyle.apply(this.shape,arguments)},jvm.MapObject.prototype.remove=function(){this.shape.remove(),this.label&&this.label.remove()},jvm.Region=function(config){var bbox,text,offsets;this.config=config,this.map=this.config.map,this.shape=config.canvas.addPath({d:config.path,"data-code":config.code},config.style,config.canvas.rootElement),this.shape.addClass("jvectormap-region jvectormap-element"),bbox=this.shape.getBBox(),text=this.getLabelText(config.code),this.config.label&&text&&(offsets=this.getLabelOffsets(config.code),this.labelX=bbox.x+bbox.width/2+offsets[0],this.labelY=bbox.y+bbox.height/2+offsets[1],this.label=config.canvas.addText({text:text,"text-anchor":"middle","alignment-baseline":"central",x:this.labelX,y:this.labelY,"data-code":config.code},config.labelStyle,config.labelsGroup),this.label.addClass("jvectormap-region jvectormap-element"))
},jvm.inherits(jvm.Region,jvm.MapObject),jvm.Region.prototype.updateLabelPosition=function(){this.label&&this.label.set({x:this.labelX*this.map.scale+this.map.transX*this.map.scale,y:this.labelY*this.map.scale+this.map.transY*this.map.scale})},jvm.Marker=function(config){var text;this.config=config,this.map=this.config.map,this.isImage=!!this.config.style.initial.image,this.createShape(),text=this.getLabelText(config.index),this.config.label&&text&&(this.offsets=this.getLabelOffsets(config.index),this.labelX=config.cx/this.map.scale-this.map.transX,this.labelY=config.cy/this.map.scale-this.map.transY,this.label=config.canvas.addText({text:text,"data-index":config.index,dy:"0.6ex",x:this.labelX,y:this.labelY},config.labelStyle,config.labelsGroup),this.label.addClass("jvectormap-marker jvectormap-element"))},jvm.inherits(jvm.Marker,jvm.MapObject),jvm.Marker.prototype.createShape=function(){var that=this;this.shape&&this.shape.remove(),this.shape=this.config.canvas[this.isImage?"addImage":"addCircle"]({"data-index":this.config.index,cx:this.config.cx,cy:this.config.cy},this.config.style,this.config.group),this.shape.addClass("jvectormap-marker jvectormap-element"),this.isImage&&jvm.$(this.shape.node).on("imageloaded",function(){that.updateLabelPosition()})},jvm.Marker.prototype.updateLabelPosition=function(){this.label&&this.label.set({x:this.labelX*this.map.scale+this.offsets[0]+this.map.transX*this.map.scale+5+(this.isImage?(this.shape.width||0)/2:this.shape.properties.r),y:this.labelY*this.map.scale+this.map.transY*this.map.scale+this.offsets[1]})},jvm.Marker.prototype.setStyle=function(property){var isImage;jvm.Marker.parentClass.prototype.setStyle.apply(this,arguments),"r"===property&&this.updateLabelPosition(),isImage=!!this.shape.get("image"),isImage!=this.isImage&&(this.isImage=isImage,this.config.style=jvm.$.extend(!0,{},this.shape.style),this.createShape())},jvm.Map=function(params){var e,map=this;if(this.params=jvm.$.extend(!0,{},jvm.Map.defaultParams,params),!jvm.Map.maps[this.params.map])throw new Error("Attempt to use map which was not loaded: "+this.params.map);this.mapData=jvm.Map.maps[this.params.map],this.markers={},this.regions={},this.regionsColors={},this.regionsData={},this.container=jvm.$("<div>").addClass("jvectormap-container"),this.params.container&&this.params.container.append(this.container),this.container.data("mapObject",this),this.defaultWidth=this.mapData.width,this.defaultHeight=this.mapData.height,this.setBackgroundColor(this.params.backgroundColor),this.onResize=function(){map.updateSize()},jvm.$(window).resize(this.onResize);for(e in jvm.Map.apiEvents)this.params[e]&&this.container.bind(jvm.Map.apiEvents[e]+".jvectormap",this.params[e]);this.canvas=new jvm.VectorCanvas(this.container[0],this.width,this.height),this.params.bindTouchEvents&&("ontouchstart"in window||window.DocumentTouch&&document instanceof DocumentTouch?this.bindContainerTouchEvents():window.MSGesture&&this.bindContainerPointerEvents()),this.bindContainerEvents(),this.bindElementEvents(),this.createTip(),this.params.zoomButtons&&this.bindZoomButtons(),this.createRegions(),this.createMarkers(this.params.markers||{}),this.updateSize(),this.params.focusOn&&("string"==typeof this.params.focusOn?this.params.focusOn={region:this.params.focusOn}:jvm.$.isArray(this.params.focusOn)&&(this.params.focusOn={regions:this.params.focusOn}),this.setFocus(this.params.focusOn)),this.params.selectedRegions&&this.setSelectedRegions(this.params.selectedRegions),this.params.selectedMarkers&&this.setSelectedMarkers(this.params.selectedMarkers),this.legendCntHorizontal=jvm.$("<div/>").addClass("jvectormap-legend-cnt jvectormap-legend-cnt-h"),this.legendCntVertical=jvm.$("<div/>").addClass("jvectormap-legend-cnt jvectormap-legend-cnt-v"),this.container.append(this.legendCntHorizontal),this.container.append(this.legendCntVertical),this.params.series&&this.createSeries()},jvm.Map.prototype={transX:0,transY:0,scale:1,baseTransX:0,baseTransY:0,baseScale:1,width:0,height:0,setBackgroundColor:function(backgroundColor){this.container.css("background-color",backgroundColor)},resize:function(){var curBaseScale=this.baseScale;this.width/this.height>this.defaultWidth/this.defaultHeight?(this.baseScale=this.height/this.defaultHeight,this.baseTransX=Math.abs(this.width-this.defaultWidth*this.baseScale)/(2*this.baseScale)):(this.baseScale=this.width/this.defaultWidth,this.baseTransY=Math.abs(this.height-this.defaultHeight*this.baseScale)/(2*this.baseScale)),this.scale*=this.baseScale/curBaseScale,this.transX*=this.baseScale/curBaseScale,this.transY*=this.baseScale/curBaseScale},updateSize:function(){this.width=this.container.width(),this.height=this.container.height(),this.resize(),this.canvas.setSize(this.width,this.height),this.applyTransform()},reset:function(){var key,i;for(key in this.series)for(i=0;i<this.series[key].length;i++)this.series[key][i].clear();this.scale=this.baseScale,this.transX=this.baseTransX,this.transY=this.baseTransY,this.applyTransform()},applyTransform:function(){var maxTransX,maxTransY,minTransX,minTransY;this.defaultWidth*this.scale<=this.width?(maxTransX=(this.width-this.defaultWidth*this.scale)/(2*this.scale),minTransX=(this.width-this.defaultWidth*this.scale)/(2*this.scale)):(maxTransX=0,minTransX=(this.width-this.defaultWidth*this.scale)/this.scale),this.defaultHeight*this.scale<=this.height?(maxTransY=(this.height-this.defaultHeight*this.scale)/(2*this.scale),minTransY=(this.height-this.defaultHeight*this.scale)/(2*this.scale)):(maxTransY=0,minTransY=(this.height-this.defaultHeight*this.scale)/this.scale),this.transY>maxTransY?this.transY=maxTransY:this.transY<minTransY&&(this.transY=minTransY),this.transX>maxTransX?this.transX=maxTransX:this.transX<minTransX&&(this.transX=minTransX),this.canvas.applyTransformParams(this.scale,this.transX,this.transY),this.markers&&this.repositionMarkers(),this.repositionLabels(),this.container.trigger("viewportChange",[this.scale/this.baseScale,this.transX,this.transY])},bindContainerEvents:function(){var oldPageX,oldPageY,mouseDown=!1,map=this;this.params.panOnDrag&&(this.container.mousemove(function(e){return mouseDown&&(map.transX-=(oldPageX-e.pageX)/map.scale,map.transY-=(oldPageY-e.pageY)/map.scale,map.applyTransform(),oldPageX=e.pageX,oldPageY=e.pageY),!1}).mousedown(function(e){return mouseDown=!0,oldPageX=e.pageX,oldPageY=e.pageY,!1}),this.onContainerMouseUp=function(){mouseDown=!1},jvm.$("body").mouseup(this.onContainerMouseUp)),this.params.zoomOnScroll},bindContainerTouchEvents:function(){var touchStartScale,touchStartDistance,touchX,touchY,centerTouchX,centerTouchY,lastTouchesLength,map=this,handleTouchEvent=function(e){var offset,scale,transXOld,transYOld,touches=e.originalEvent.touches;"touchstart"==e.type&&(lastTouchesLength=0),1==touches.length?(1==lastTouchesLength&&(transXOld=map.transX,transYOld=map.transY,map.transX-=(touchX-touches[0].pageX)/map.scale,map.transY-=(touchY-touches[0].pageY)/map.scale,map.applyTransform(),map.tip.hide(),(transXOld!=map.transX||transYOld!=map.transY)&&e.preventDefault()),touchX=touches[0].pageX,touchY=touches[0].pageY):2==touches.length&&(2==lastTouchesLength?(scale=Math.sqrt(Math.pow(touches[0].pageX-touches[1].pageX,2)+Math.pow(touches[0].pageY-touches[1].pageY,2))/touchStartDistance,map.setScale(touchStartScale*scale,centerTouchX,centerTouchY),map.tip.hide(),e.preventDefault()):(offset=jvm.$(map.container).offset(),centerTouchX=touches[0].pageX>touches[1].pageX?touches[1].pageX+(touches[0].pageX-touches[1].pageX)/2:touches[0].pageX+(touches[1].pageX-touches[0].pageX)/2,centerTouchY=touches[0].pageY>touches[1].pageY?touches[1].pageY+(touches[0].pageY-touches[1].pageY)/2:touches[0].pageY+(touches[1].pageY-touches[0].pageY)/2,centerTouchX-=offset.left,centerTouchY-=offset.top,touchStartScale=map.scale,touchStartDistance=Math.sqrt(Math.pow(touches[0].pageX-touches[1].pageX,2)+Math.pow(touches[0].pageY-touches[1].pageY,2)))),lastTouchesLength=touches.length};jvm.$(this.container).bind("touchstart",handleTouchEvent),jvm.$(this.container).bind("touchmove",handleTouchEvent)},bindContainerPointerEvents:function(){var map=this,gesture=new MSGesture,element=this.container[0],handlePointerDownEvent=function(e){gesture.addPointer(e.pointerId)},handleGestureEvent=function(e){var transXOld,transYOld;(0!=e.translationX||0!=e.translationY)&&(transXOld=map.transX,transYOld=map.transY,map.transX+=e.translationX/map.scale,map.transY+=e.translationY/map.scale,map.applyTransform(),map.tip.hide(),(transXOld!=map.transX||transYOld!=map.transY)&&e.preventDefault()),1!=e.scale&&(map.setScale(map.scale*e.scale,e.offsetX,e.offsetY),map.tip.hide(),e.preventDefault())};gesture.target=element,element.addEventListener("MSGestureChange",handleGestureEvent,!1),element.addEventListener("pointerdown",handlePointerDownEvent,!1)},bindElementEvents:function(){var pageX,pageY,mouseMoved,map=this;this.container.mousemove(function(e){Math.abs(pageX-e.pageX)+Math.abs(pageY-e.pageY)>2&&(mouseMoved=!0)}),this.container.delegate("[class~='jvectormap-element']","mouseover mouseout",function(e){var baseVal=jvm.$(this).attr("class").baseVal||jvm.$(this).attr("class"),type=-1===baseVal.indexOf("jvectormap-region")?"marker":"region",code=jvm.$(this).attr("region"==type?"data-code":"data-index"),element="region"==type?map.regions[code].element:map.markers[code].element,tipText="region"==type?map.mapData.paths[code].name:map.markers[code].config.name||"",tipShowEvent=jvm.$.Event(type+"TipShow.jvectormap"),overEvent=jvm.$.Event(type+"Over.jvectormap");"mouseover"==e.type?(map.container.trigger(overEvent,[code]),overEvent.isDefaultPrevented()||element.setHovered(!0),map.tip.text(tipText),map.container.trigger(tipShowEvent,[map.tip,code]),tipShowEvent.isDefaultPrevented()||(map.tip.show(),map.tipWidth=map.tip.width(),map.tipHeight=map.tip.height())):(element.setHovered(!1),map.tip.hide(),map.container.trigger(type+"Out.jvectormap",[code]))}),this.container.delegate("[class~='jvectormap-element']","mousedown",function(e){pageX=e.pageX,pageY=e.pageY,mouseMoved=!1}),this.container.delegate("[class~='jvectormap-element']","mouseup",function(){var baseVal=jvm.$(this).attr("class").baseVal?jvm.$(this).attr("class").baseVal:jvm.$(this).attr("class"),type=-1===baseVal.indexOf("jvectormap-region")?"marker":"region",code=jvm.$(this).attr("region"==type?"data-code":"data-index"),clickEvent=jvm.$.Event(type+"Click.jvectormap"),element="region"==type?map.regions[code].element:map.markers[code].element;mouseMoved||(map.container.trigger(clickEvent,[code]),("region"===type&&map.params.regionsSelectable||"marker"===type&&map.params.markersSelectable)&&(clickEvent.isDefaultPrevented()||(map.params[type+"sSelectableOne"]&&map.clearSelected(type+"s"),element.setSelected(!element.isSelected))))})},bindZoomButtons:function(){var map=this;jvm.$("<div/>").addClass("jvectormap-zoomin").text("+").appendTo(this.container),jvm.$("<div/>").addClass("jvectormap-zoomout").html("&#x2212;").appendTo(this.container),this.container.find(".jvectormap-zoomin").click(function(){map.setScale(map.scale*map.params.zoomStep,map.width/2,map.height/2,!1,map.params.zoomAnimate)}),this.container.find(".jvectormap-zoomout").click(function(){map.setScale(map.scale/map.params.zoomStep,map.width/2,map.height/2,!1,map.params.zoomAnimate)})},createTip:function(){var map=this;this.tip=jvm.$("<div/>").addClass("jvectormap-tip").appendTo(jvm.$("body")),this.container.mousemove(function(e){var left=e.pageX-15-map.tipWidth,top=e.pageY-15-map.tipHeight;5>left&&(left=e.pageX+15),5>top&&(top=e.pageY+15),map.tip.css({left:left,top:top})})},setScale:function(scale,anchorX,anchorY,isCentered,animate){var interval,scaleStart,scaleDiff,transXStart,transXDiff,transYStart,transYDiff,transX,transY,viewportChangeEvent=jvm.$.Event("zoom.jvectormap"),that=this,i=0,count=Math.abs(Math.round(60*(scale-this.scale)/Math.max(scale,this.scale))),deferred=new jvm.$.Deferred;return scale>this.params.zoomMax*this.baseScale?scale=this.params.zoomMax*this.baseScale:scale<this.params.zoomMin*this.baseScale&&(scale=this.params.zoomMin*this.baseScale),"undefined"!=typeof anchorX&&"undefined"!=typeof anchorY&&(zoomStep=scale/this.scale,isCentered?(transX=anchorX+this.defaultWidth*(this.width/(this.defaultWidth*scale))/2,transY=anchorY+this.defaultHeight*(this.height/(this.defaultHeight*scale))/2):(transX=this.transX-(zoomStep-1)/scale*anchorX,transY=this.transY-(zoomStep-1)/scale*anchorY)),animate&&count>0?(scaleStart=this.scale,scaleDiff=(scale-scaleStart)/count,transXStart=this.transX*this.scale,transYStart=this.transY*this.scale,transXDiff=(transX*scale-transXStart)/count,transYDiff=(transY*scale-transYStart)/count,interval=setInterval(function(){i+=1,that.scale=scaleStart+scaleDiff*i,that.transX=(transXStart+transXDiff*i)/that.scale,that.transY=(transYStart+transYDiff*i)/that.scale,that.applyTransform(),i==count&&(clearInterval(interval),that.container.trigger(viewportChangeEvent,[scale/that.baseScale]),deferred.resolve())},10)):(this.transX=transX,this.transY=transY,this.scale=scale,this.applyTransform(),this.container.trigger(viewportChangeEvent,[scale/this.baseScale]),deferred.resolve()),deferred},setFocus:function(config){var bbox,itemBbox,newBbox,codes,i,point;if(config=config||{},config.region?codes=[config.region]:config.regions&&(codes=config.regions),codes){for(i=0;i<codes.length;i++)this.regions[codes[i]]&&(itemBbox=this.regions[codes[i]].element.shape.getBBox(),itemBbox&&("undefined"==typeof bbox?bbox=itemBbox:(newBbox={x:Math.min(bbox.x,itemBbox.x),y:Math.min(bbox.y,itemBbox.y),width:Math.max(bbox.x+bbox.width,itemBbox.x+itemBbox.width)-Math.min(bbox.x,itemBbox.x),height:Math.max(bbox.y+bbox.height,itemBbox.y+itemBbox.height)-Math.min(bbox.y,itemBbox.y)},bbox=newBbox)));return this.setScale(Math.min(this.width/bbox.width,this.height/bbox.height),-(bbox.x+bbox.width/2),-(bbox.y+bbox.height/2),!0,config.animate)}return config.lat&&config.lng?(point=this.latLngToPoint(config.lat,config.lng),config.x=this.transX-point.x/this.scale,config.y=this.transY-point.y/this.scale):config.x&&config.y&&(config.x*=-this.defaultWidth,config.y*=-this.defaultHeight),this.setScale(config.scale*this.baseScale,config.x,config.y,!0,config.animate)},getSelected:function(type){var key,selected=[];for(key in this[type])this[type][key].element.isSelected&&selected.push(key);return selected},getSelectedRegions:function(){return this.getSelected("regions")},getSelectedMarkers:function(){return this.getSelected("markers")},setSelected:function(type,keys){var i;if("object"!=typeof keys&&(keys=[keys]),jvm.$.isArray(keys))for(i=0;i<keys.length;i++)this[type][keys[i]].element.setSelected(!0);else for(i in keys)this[type][i].element.setSelected(!!keys[i])},setSelectedRegions:function(keys){this.setSelected("regions",keys)},setSelectedMarkers:function(keys){this.setSelected("markers",keys)},clearSelected:function(type){var i,select={},selected=this.getSelected(type);for(i=0;i<selected.length;i++)select[selected[i]]=!1;this.setSelected(type,select)},clearSelectedRegions:function(){this.clearSelected("regions")},clearSelectedMarkers:function(){this.clearSelected("markers")},getMapObject:function(){return this},getRegionName:function(code){return this.mapData.paths[code].name},createRegions:function(){var key,region,map=this;this.regionLabelsGroup=this.regionLabelsGroup||this.canvas.addGroup();for(key in this.mapData.paths)region=new jvm.Region({map:this,path:this.mapData.paths[key].path,code:key,style:jvm.$.extend(!0,{},this.params.regionStyle),labelStyle:jvm.$.extend(!0,{},this.params.regionLabelStyle),canvas:this.canvas,labelsGroup:this.regionLabelsGroup,label:"vml"!=this.canvas.mode?this.params.labels&&this.params.labels.regions:null}),jvm.$(region.shape).bind("selected",function(e,isSelected){map.container.trigger("regionSelected.jvectormap",[jvm.$(this.node).attr("data-code"),isSelected,map.getSelectedRegions()])}),this.regions[key]={element:region,config:this.mapData.paths[key]}},createMarkers:function(markers){var i,marker,point,markerConfig,markersArray,map=this;if(this.markersGroup=this.markersGroup||this.canvas.addGroup(),this.markerLabelsGroup=this.markerLabelsGroup||this.canvas.addGroup(),jvm.$.isArray(markers))for(markersArray=markers.slice(),markers={},i=0;i<markersArray.length;i++)markers[i]=markersArray[i];for(i in markers)markerConfig=markers[i]instanceof Array?{latLng:markers[i]}:markers[i],point=this.getMarkerPosition(markerConfig),point!==!1&&(marker=new jvm.Marker({map:this,style:jvm.$.extend(!0,{},this.params.markerStyle,{initial:markerConfig.style||{}}),labelStyle:jvm.$.extend(!0,{},this.params.markerLabelStyle),index:i,cx:point.x,cy:point.y,group:this.markersGroup,canvas:this.canvas,labelsGroup:this.markerLabelsGroup,label:"vml"!=this.canvas.mode?this.params.labels&&this.params.labels.markers:null}),jvm.$(marker.shape).bind("selected",function(e,isSelected){map.container.trigger("markerSelected.jvectormap",[jvm.$(this.node).attr("data-index"),isSelected,map.getSelectedMarkers()])}),this.markers[i]&&this.removeMarkers([i]),this.markers[i]={element:marker,config:markerConfig})},repositionMarkers:function(){var i,point;for(i in this.markers)point=this.getMarkerPosition(this.markers[i].config),point!==!1&&this.markers[i].element.setStyle({cx:point.x,cy:point.y})},repositionLabels:function(){var key;for(key in this.regions)this.regions[key].element.updateLabelPosition();for(key in this.markers)this.markers[key].element.updateLabelPosition()},getMarkerPosition:function(markerConfig){return jvm.Map.maps[this.params.map].projection?this.latLngToPoint.apply(this,markerConfig.latLng||[0,0]):{x:markerConfig.coords[0]*this.scale+this.transX*this.scale,y:markerConfig.coords[1]*this.scale+this.transY*this.scale}},addMarker:function(key,marker,seriesData){var values,i,markers={},data=[],seriesData=seriesData||[];for(markers[key]=marker,i=0;i<seriesData.length;i++)values={},"undefined"!=typeof seriesData[i]&&(values[key]=seriesData[i]),data.push(values);this.addMarkers(markers,data)},addMarkers:function(markers,seriesData){var i;for(seriesData=seriesData||[],this.createMarkers(markers),i=0;i<seriesData.length;i++)this.series.markers[i].setValues(seriesData[i]||{})},removeMarkers:function(markers){var i;for(i=0;i<markers.length;i++)this.markers[markers[i]].element.remove(),delete this.markers[markers[i]]},removeAllMarkers:function(){var i,markers=[];for(i in this.markers)markers.push(i);this.removeMarkers(markers)},latLngToPoint:function(lat,lng){var point,inset,bbox,proj=jvm.Map.maps[this.params.map].projection,centralMeridian=proj.centralMeridian;return-180+centralMeridian>lng&&(lng+=360),point=jvm.Proj[proj.type](lat,lng,centralMeridian),inset=this.getInsetForPoint(point.x,point.y),inset?(bbox=inset.bbox,point.x=(point.x-bbox[0].x)/(bbox[1].x-bbox[0].x)*inset.width*this.scale,point.y=(point.y-bbox[0].y)/(bbox[1].y-bbox[0].y)*inset.height*this.scale,{x:point.x+this.transX*this.scale+inset.left*this.scale,y:point.y+this.transY*this.scale+inset.top*this.scale}):!1},pointToLatLng:function(x,y){var i,inset,bbox,nx,ny,proj=jvm.Map.maps[this.params.map].projection,centralMeridian=proj.centralMeridian,insets=jvm.Map.maps[this.params.map].insets;for(i=0;i<insets.length;i++)if(inset=insets[i],bbox=inset.bbox,nx=x-(this.transX*this.scale+inset.left*this.scale),ny=y-(this.transY*this.scale+inset.top*this.scale),nx=nx/(inset.width*this.scale)*(bbox[1].x-bbox[0].x)+bbox[0].x,ny=ny/(inset.height*this.scale)*(bbox[1].y-bbox[0].y)+bbox[0].y,nx>bbox[0].x&&nx<bbox[1].x&&ny>bbox[0].y&&ny<bbox[1].y)return jvm.Proj[proj.type+"_inv"](nx,-ny,centralMeridian);return!1},getInsetForPoint:function(x,y){var i,bbox,insets=jvm.Map.maps[this.params.map].insets;for(i=0;i<insets.length;i++)if(bbox=insets[i].bbox,x>bbox[0].x&&x<bbox[1].x&&y>bbox[0].y&&y<bbox[1].y)return insets[i]},createSeries:function(){var i,key;this.series={markers:[],regions:[]};for(key in this.params.series)for(i=0;i<this.params.series[key].length;i++)this.series[key][i]=new jvm.DataSeries(this.params.series[key][i],this[key],this)},remove:function(){this.tip.remove(),this.container.remove(),jvm.$(window).unbind("resize",this.onResize),jvm.$("body").unbind("mouseup",this.onContainerMouseUp)}},jvm.Map.maps={},jvm.Map.defaultParams={map:"world_mill_en",backgroundColor:"#505050",zoomButtons:!0,zoomOnScroll:!0,zoomOnScrollSpeed:3,panOnDrag:!0,zoomMax:8,zoomMin:1,zoomStep:1.6,zoomAnimate:!0,regionsSelectable:!1,markersSelectable:!1,bindTouchEvents:!0,regionStyle:{initial:{fill:"white","fill-opacity":1,stroke:"none","stroke-width":0,"stroke-opacity":1},hover:{"fill-opacity":.8,cursor:"pointer"},selected:{fill:"yellow"},selectedHover:{}},regionLabelStyle:{initial:{"font-family":"Verdana","font-size":"12","font-weight":"bold",cursor:"default",fill:"black"},hover:{cursor:"pointer"}},markerStyle:{initial:{fill:"grey",stroke:"#505050","fill-opacity":1,"stroke-width":1,"stroke-opacity":1,r:5},hover:{stroke:"black","stroke-width":2,cursor:"pointer"},selected:{fill:"blue"},selectedHover:{}},markerLabelStyle:{initial:{"font-family":"Verdana","font-size":"12","font-weight":"bold",cursor:"default",fill:"black"},hover:{cursor:"pointer"}}},jvm.Map.apiEvents={onRegionTipShow:"regionTipShow",onRegionOver:"regionOver",onRegionOut:"regionOut",onRegionClick:"regionClick",onRegionSelected:"regionSelected",onMarkerTipShow:"markerTipShow",onMarkerOver:"markerOver",onMarkerOut:"markerOut",onMarkerClick:"markerClick",onMarkerSelected:"markerSelected",onViewportChange:"viewportChange"},jvm.MultiMap=function(params){var that=this;this.maps={},this.params=jvm.$.extend(!0,{},jvm.MultiMap.defaultParams,params),this.params.maxLevel=this.params.maxLevel||Number.MAX_VALUE,this.params.main=this.params.main||{},this.params.main.multiMapLevel=0,this.history=[this.addMap(this.params.main.map,this.params.main)],this.defaultProjection=this.history[0].mapData.projection.type,this.mapsLoaded={},this.params.container.css({position:"relative"}),this.backButton=jvm.$("<div/>").addClass("jvectormap-goback").text("Back").appendTo(this.params.container),this.backButton.hide(),this.backButton.click(function(){that.goBack()}),this.spinner=jvm.$("<div/>").addClass("jvectormap-spinner").appendTo(this.params.container),this.spinner.hide()},jvm.MultiMap.prototype={addMap:function(name,config){var cnt=jvm.$("<div/>").css({width:"100%",height:"100%"});return this.params.container.append(cnt),this.maps[name]=new jvm.Map(jvm.$.extend(config,{container:cnt})),this.params.maxLevel>config.multiMapLevel&&this.maps[name].container.on("regionClick.jvectormap",{scope:this},function(e,code){var multimap=e.data.scope,mapName=multimap.params.mapNameByCode(code,multimap);multimap.drillDownPromise&&"pending"===multimap.drillDownPromise.state()||multimap.drillDown(mapName,code)}),this.maps[name]},downloadMap:function(code){var that=this,deferred=jvm.$.Deferred();return this.mapsLoaded[code]?deferred.resolve():jvm.$.get(this.params.mapUrlByCode(code,this)).then(function(){that.mapsLoaded[code]=!0,deferred.resolve()},function(){deferred.reject()}),deferred},drillDown:function(name,code){var currentMap=this.history[this.history.length-1],that=this,focusPromise=currentMap.setFocus({region:code,animate:!0}),downloadPromise=this.downloadMap(code);focusPromise.then(function(){"pending"===downloadPromise.state()&&that.spinner.show()}),downloadPromise.always(function(){that.spinner.hide()}),this.drillDownPromise=jvm.$.when(downloadPromise,focusPromise),this.drillDownPromise.then(function(){currentMap.params.container.hide(),that.maps[name]?that.maps[name].params.container.show():that.addMap(name,{map:name,multiMapLevel:currentMap.params.multiMapLevel+1}),that.history.push(that.maps[name]),that.backButton.show()})},goBack:function(){var currentMap=this.history.pop(),prevMap=this.history[this.history.length-1],that=this;currentMap.setFocus({scale:1,x:.5,y:.5,animate:!0}).then(function(){currentMap.params.container.hide(),prevMap.params.container.show(),prevMap.updateSize(),1===that.history.length&&that.backButton.hide(),prevMap.setFocus({scale:1,x:.5,y:.5,animate:!0})})}},jvm.MultiMap.defaultParams={mapNameByCode:function(code,multiMap){return code.toLowerCase()+"_"+multiMap.defaultProjection+"_en"},mapUrlByCode:function(code,multiMap){return"jquery-jvectormap-data-"+code.toLowerCase()+"-"+multiMap.defaultProjection+"-en.js"}};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"jquery-jvectormap-world-mill.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// client/lib/jVectorMap/jquery-jvectormap-world-mill.js                                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
jQuery.fn.vectorMap('addMap', 'world_mill', {
  "insets": [{
    "width": 900,
    "top": 0,
    "height": 440.7063107441331,
    "bbox": [{
      "y": -12671671.123330014,
      "x": -20004297.151525836
    }, {
      "y": 6930392.025135122,
      "x": 20026572.394749384
    }],
    "left": 0
  }],
  "paths": {
    "BD": {
      "path": "M651.84,230.21l-0.6,-2.0l-1.36,-1.71l-2.31,-0.11l-0.41,0.48l0.2,0.94l-0.53,0.99l-0.72,-0.36l-0.68,0.35l-1.2,-0.36l-0.37,-2.0l-0.81,-1.86l0.39,-1.46l-0.22,-0.47l-1.14,-0.53l0.29,-0.5l1.48,-0.94l0.03,-0.65l-1.55,-1.22l0.55,-1.14l1.61,0.94l1.04,0.15l0.18,1.54l0.34,0.35l5.64,0.63l-0.84,1.64l-1.22,0.34l-0.77,1.51l0.07,0.47l1.37,1.37l0.67,-0.19l0.42,-1.39l1.21,3.84l-0.03,1.21l-0.33,-0.15l-0.4,0.28Z",
      "name": "Bangladesh"
    },
    "BE": {
      "path": "M429.29,144.05l1.91,0.24l2.1,-0.63l2.63,1.99l-0.21,1.66l-0.69,0.4l-0.18,1.2l-1.66,-1.13l-1.39,0.15l-2.73,-2.7l-1.17,-0.18l-0.16,-0.52l1.54,-0.5Z",
      "name": "Belgium"
    },
    "BF": {
      "path": "M421.42,247.64l-0.11,0.95l0.34,1.16l1.4,1.71l0.07,1.1l0.32,0.37l2.55,0.51l-0.04,1.28l-0.38,0.53l-1.07,0.21l-0.72,1.18l-0.63,0.21l-3.22,-0.25l-0.94,0.39l-5.4,-0.05l-0.39,0.38l0.16,2.73l-1.23,-0.43l-1.17,0.1l-0.89,0.57l-2.27,-1.72l-0.13,-1.11l0.61,-0.96l0.02,-0.93l1.87,-1.98l0.44,-1.81l0.43,-0.39l1.28,0.26l1.05,-0.52l0.47,-0.73l1.84,-1.09l0.55,-0.83l2.2,-1.0l1.15,-0.3l0.72,0.45l1.13,-0.01Z",
      "name": "Burkina Faso"
    },
    "BG": {
      "path": "M491.65,168.18l-0.86,0.88l-0.91,2.17l0.48,1.34l-1.6,-0.24l-2.55,0.95l-0.28,1.51l-1.8,0.22l-2.0,-1.0l-1.92,0.79l-1.42,-0.07l-0.15,-1.63l-1.05,-0.97l0.0,-0.8l1.2,-1.57l0.01,-0.56l-1.14,-1.23l-0.05,-0.94l0.88,0.97l0.88,-0.2l1.91,0.47l3.68,0.16l1.42,-0.81l2.72,-0.66l2.55,1.24Z",
      "name": "Bulgaria"
    },
    "BA": {
      "path": "M463.49,163.65l2.1,0.5l1.72,-0.03l1.52,0.68l-0.36,0.78l0.08,0.45l1.04,1.02l-0.25,0.98l-1.81,1.15l-0.38,1.38l-1.67,-0.87l-0.89,-1.2l-2.11,-1.83l-1.63,-2.22l0.23,-0.57l0.48,0.38l0.55,-0.06l0.43,-0.51l0.94,-0.06Z",
      "name": "Bosnia and Herz."
    },
    "BN": {
      "path": "M707.48,273.58l0.68,-0.65l1.41,-0.91l-0.15,1.63l-0.81,-0.05l-0.61,0.58l-0.53,-0.6Z",
      "name": "Brunei"
    },
    "BO": {
      "path": "M263.83,340.69l-3.09,-0.23l-0.38,0.23l-0.7,1.52l-1.31,-1.53l-3.28,-0.64l-2.37,2.4l-1.31,0.26l-0.88,-3.26l-1.3,-2.86l0.74,-2.37l-0.13,-0.43l-1.2,-1.01l-0.37,-1.89l-1.08,-1.55l1.45,-2.56l-0.96,-2.33l0.47,-1.06l-0.34,-0.73l0.91,-1.32l0.16,-3.84l0.5,-1.18l-1.81,-3.41l2.46,0.07l0.8,-0.85l3.4,-1.91l2.66,-0.35l-0.19,1.38l0.3,1.07l-0.05,1.97l2.72,2.27l2.88,0.49l0.89,0.86l1.79,0.58l0.98,0.7l1.71,0.05l1.17,0.61l0.6,2.7l-0.7,0.54l0.96,2.99l0.37,0.28l4.3,0.1l-0.25,1.2l0.27,1.02l1.43,0.9l0.5,1.35l-0.41,1.86l-0.65,1.08l0.12,1.35l-2.69,-1.65l-2.4,-0.03l-4.36,0.76l-1.49,2.5l-0.11,1.52l-0.75,2.37Z",
      "name": "Bolivia"
    },
    "JP": {
      "path": "M781.12,166.87l1.81,0.68l1.62,-0.97l0.39,2.42l-3.35,0.75l-2.23,2.88l-3.63,-1.9l-0.56,0.2l-1.26,3.05l-2.16,0.03l-0.29,-2.51l1.08,-2.03l2.45,-0.16l0.37,-0.33l1.25,-5.94l2.47,2.71l2.03,1.12ZM773.56,187.34l-0.91,2.22l0.37,1.52l-1.14,1.75l-3.02,1.26l-4.58,0.27l-3.34,3.01l-1.25,-0.8l-0.09,-1.9l-0.46,-0.38l-4.35,0.62l-3.0,1.32l-2.85,0.05l-0.37,0.27l0.13,0.44l2.32,1.89l-1.54,4.34l-1.26,0.9l-0.79,-0.7l0.56,-2.27l-0.21,-0.45l-1.47,-0.75l-0.74,-1.4l2.12,-0.84l1.26,-1.7l2.45,-1.42l1.83,-1.91l4.78,-0.81l2.6,0.57l0.44,-0.21l2.39,-4.66l1.29,1.06l0.5,0.01l5.1,-4.02l1.69,-3.73l-0.38,-3.4l0.9,-1.61l2.14,-0.44l1.23,3.72l-0.07,2.18l-2.23,2.84l-0.04,3.16ZM757.78,196.26l0.19,0.56l-1.01,1.21l-1.16,-0.68l-1.28,0.65l-0.69,1.45l-1.02,-0.5l0.01,-0.93l1.14,-1.38l1.57,0.14l0.85,-0.98l1.4,0.46Z",
      "name": "Japan"
    },
    "BI": {
      "path": "M495.45,295.49l-1.08,-2.99l1.14,-0.11l0.64,-1.19l0.76,0.09l0.65,1.83l-2.1,2.36Z",
      "name": "Burundi"
    },
    "BJ": {
      "path": "M429.57,255.75l-0.05,0.8l0.5,1.34l-0.42,0.86l0.17,0.79l-1.81,2.12l-0.57,1.76l-0.08,5.42l-1.41,0.2l-0.48,-1.36l0.11,-5.71l-0.52,-0.7l-0.2,-1.35l-1.48,-1.48l0.21,-0.9l0.89,-0.43l0.42,-0.92l1.27,-0.36l1.22,-1.34l0.61,-0.0l1.62,1.24Z",
      "name": "Benin"
    },
    "BT": {
      "path": "M650.32,213.86l0.84,0.71l-0.12,1.1l-3.76,-0.11l-1.57,0.4l-1.93,-0.87l1.48,-1.96l1.13,-0.57l1.63,0.57l1.33,0.08l0.99,0.65Z",
      "name": "Bhutan"
    },
    "JM": {
      "path": "M228.38,239.28l-0.8,0.4l-2.26,-1.06l0.84,-0.23l2.14,0.3l1.17,0.56l-1.08,0.03Z",
      "name": "Jamaica"
    },
    "BW": {
      "path": "M483.92,330.07l2.27,4.01l2.83,2.86l0.96,0.31l0.78,2.43l2.13,0.61l1.02,0.76l-3.0,1.64l-2.32,2.02l-1.54,2.69l-1.52,0.45l-0.64,1.94l-1.34,0.52l-1.85,-0.12l-1.21,-0.74l-1.35,-0.3l-1.22,0.62l-0.75,1.37l-2.31,1.9l-1.4,0.21l-0.35,-0.59l0.16,-1.75l-1.48,-2.54l-0.62,-0.43l-0.0,-7.1l2.08,-0.08l0.39,-0.4l0.07,-8.9l5.19,-0.93l0.8,0.89l0.51,0.07l1.5,-0.95l2.21,-0.49Z",
      "name": "Botswana"
    },
    "BR": {
      "path": "M259.98,275.05l3.24,0.7l0.65,-0.53l4.55,-1.32l1.08,-1.06l-0.02,-0.63l0.55,-0.05l0.28,0.28l-0.26,0.87l0.22,0.48l0.73,0.32l0.4,0.81l-0.62,0.86l-0.4,2.13l0.82,2.56l1.69,1.43l1.43,0.2l3.17,-1.68l3.18,0.3l0.65,-0.75l-0.27,-0.92l1.9,-0.09l2.39,0.99l1.06,-0.61l0.84,0.78l1.2,-0.18l1.18,-1.06l0.84,-1.94l1.36,-2.11l0.37,-0.05l1.89,5.45l1.33,0.59l0.05,1.28l-1.77,1.94l0.02,0.56l1.02,0.87l4.07,0.36l0.08,2.16l0.66,0.29l1.74,-1.5l6.97,2.32l1.02,1.22l-0.35,1.18l0.49,0.5l2.81,-0.74l4.77,1.3l3.75,-0.08l3.57,2.0l3.29,2.86l1.93,0.72l2.12,0.12l0.71,0.62l1.21,4.51l-0.95,3.98l-4.72,5.06l-1.64,2.92l-1.72,2.05l-0.8,0.3l-0.72,2.03l0.18,4.75l-0.94,5.53l-0.81,1.13l-0.43,3.36l-2.55,3.5l-0.4,2.51l-1.86,1.04l-0.67,1.53l-2.54,0.01l-3.94,1.01l-1.83,1.2l-2.87,0.82l-3.03,2.19l-2.2,2.83l-0.36,2.0l0.4,1.58l-0.44,2.6l-0.51,1.2l-1.77,1.54l-2.75,4.78l-3.83,3.42l-1.24,2.74l-1.18,1.15l-0.36,-0.83l0.95,-1.14l0.01,-0.5l-1.52,-1.97l-4.56,-3.32l-1.03,-0.0l-2.38,-2.02l-0.81,-0.0l5.34,-5.45l3.77,-2.58l0.22,-2.46l-1.35,-1.81l-0.91,0.07l0.58,-2.33l0.01,-1.54l-1.11,-0.83l-1.75,0.3l-0.44,-3.11l-0.52,-0.95l-1.88,-0.88l-1.24,0.47l-2.17,-0.41l0.15,-3.21l-0.62,-1.34l0.66,-0.73l-0.22,-1.34l0.66,-1.13l0.44,-2.04l-0.61,-1.83l-1.4,-0.86l-0.2,-0.75l0.34,-1.39l-0.38,-0.5l-4.52,-0.1l-0.72,-2.22l0.59,-0.42l-0.03,-1.1l-0.5,-0.87l-0.32,-1.7l-1.45,-0.76l-1.63,-0.02l-1.05,-0.72l-1.6,-0.48l-1.13,-0.99l-2.69,-0.4l-2.47,-2.06l0.13,-4.35l-0.45,-0.45l-3.46,0.5l-3.44,1.94l-0.6,0.74l-2.9,-0.17l-1.47,0.42l-0.72,-0.18l0.15,-3.52l-0.63,-0.34l-1.94,1.41l-1.87,-0.06l-0.83,-1.18l-1.37,-0.26l0.21,-1.01l-1.35,-1.49l-0.88,-1.91l0.56,-0.6l-0.0,-0.81l1.29,-0.62l0.22,-0.43l-0.22,-1.19l0.61,-0.91l0.15,-0.99l2.65,-1.58l1.99,-0.47l0.42,-0.36l2.06,0.11l0.42,-0.33l1.19,-8.0l-0.41,-1.56l-1.1,-1.0l0.01,-1.33l1.91,-0.42l0.08,-0.96l-0.33,-0.43l-1.14,-0.2l-0.02,-0.83l4.47,0.05l0.82,-0.67l0.82,1.81l0.8,0.07l1.15,1.1l2.26,-0.05l0.71,-0.83l2.78,-0.96l0.48,-1.13l1.6,-0.64l0.24,-0.47l-0.48,-0.82l-1.83,-0.19l-0.36,-3.22Z",
      "name": "Brazil"
    },
    "BS": {
      "path": "M226.4,223.87l-0.48,-1.15l-0.84,-0.75l0.36,-1.11l0.95,1.95l0.01,1.06ZM225.56,216.43l-1.87,0.29l-0.04,-0.22l0.74,-0.14l1.17,0.06Z",
      "name": "Bahamas"
    },
    "BY": {
      "path": "M493.84,128.32l0.29,0.7l0.49,0.23l1.19,-0.38l2.09,0.72l0.19,1.26l-0.45,1.24l1.57,2.26l0.89,0.59l0.17,0.81l1.58,0.56l0.4,0.5l-0.53,0.41l-1.87,-0.11l-0.73,0.38l-0.13,0.52l1.04,2.74l-1.91,0.26l-0.89,0.99l-0.11,1.18l-2.73,-0.04l-0.53,-0.62l-0.52,-0.08l-0.75,0.46l-0.91,-0.42l-1.92,-0.07l-2.75,-0.79l-2.6,-0.28l-2.0,0.07l-1.5,0.92l-0.67,0.07l-0.08,-1.22l-0.59,-1.19l1.36,-0.88l0.01,-1.35l-0.7,-1.41l-0.07,-1.0l2.16,-0.02l2.72,-1.3l0.75,-2.04l1.91,-1.04l0.2,-0.41l-0.19,-1.25l3.8,-1.78l2.3,0.77Z",
      "name": "Belarus"
    },
    "BZ": {
      "path": "M198.03,244.38l0.1,-4.49l0.69,-0.06l0.74,-1.3l0.34,0.28l-0.4,1.3l0.17,0.58l-0.34,2.25l-1.3,1.42Z",
      "name": "Belize"
    },
    "RU": {
      "path": "M491.55,115.25l2.55,-1.85l-0.01,-0.65l-2.2,-1.5l7.32,-6.76l1.03,-2.11l-0.13,-0.49l-3.46,-2.52l0.86,-2.7l-2.11,-2.81l1.56,-3.67l-2.77,-4.52l2.15,-2.99l-0.08,-0.55l-3.65,-2.73l0.3,-2.54l1.81,-0.37l4.26,-1.77l2.42,-1.45l4.06,2.61l6.79,1.04l9.34,4.85l1.78,1.88l0.14,2.46l-2.55,2.02l-3.9,1.06l-11.07,-3.14l-2.06,0.53l-0.13,0.7l3.94,2.94l0.31,5.86l0.26,0.36l5.14,2.24l0.58,-0.29l0.32,-1.94l-1.35,-1.78l1.13,-1.09l6.13,2.42l2.11,-0.98l0.18,-0.56l-1.51,-2.67l5.41,-3.76l2.07,0.22l2.26,1.41l0.57,-0.16l1.46,-2.87l-0.05,-0.44l-1.92,-2.32l1.12,-2.32l-1.32,-2.27l5.87,1.16l1.04,1.75l-2.59,0.43l-0.33,0.4l0.02,2.36l2.46,1.83l3.87,-0.91l0.86,-2.8l13.69,-5.65l0.99,0.11l-1.92,2.06l0.23,0.67l3.11,0.45l2.0,-1.48l4.56,-0.12l3.64,-1.73l2.65,2.44l0.56,-0.01l2.85,-2.88l-0.01,-0.57l-2.35,-2.29l0.9,-1.01l7.14,1.3l3.41,1.36l9.05,4.97l0.51,-0.11l1.67,-2.27l-0.05,-0.53l-2.43,-2.21l-0.06,-0.78l-0.34,-0.36l-2.52,-0.36l0.64,-1.93l-1.32,-3.46l-0.06,-1.21l4.48,-4.06l1.69,-4.29l1.6,-0.81l6.23,1.18l0.44,2.21l-2.29,3.64l0.06,0.5l1.47,1.39l0.76,3.0l-0.56,6.03l2.69,2.82l-0.96,2.57l-4.86,5.95l0.23,0.64l2.86,0.61l0.42,-0.17l0.93,-1.4l2.64,-1.03l0.87,-2.24l2.09,-1.96l0.07,-0.5l-1.36,-2.28l1.09,-2.69l-0.32,-0.55l-2.47,-0.33l-0.5,-2.06l1.94,-4.38l-0.06,-0.42l-2.96,-3.4l4.12,-2.88l0.16,-0.4l-0.51,-2.93l0.54,-0.05l1.13,2.25l-0.96,4.35l0.27,0.47l2.68,0.84l0.5,-0.51l-1.02,-2.99l3.79,-1.66l5.01,-0.24l4.53,2.61l0.48,-0.06l0.07,-0.48l-2.18,-3.82l-0.23,-4.67l3.98,-0.9l5.97,0.21l5.49,-0.64l0.27,-0.65l-1.83,-2.31l2.56,-2.9l2.87,-0.17l4.8,-2.47l6.54,-0.67l1.03,-1.42l6.25,-0.45l2.32,1.11l5.53,-2.7l4.5,0.08l0.39,-0.28l0.66,-2.15l2.26,-2.12l5.69,-2.11l3.21,1.29l-2.46,0.94l-0.25,0.42l0.34,0.35l5.41,0.77l0.61,2.33l0.58,0.25l2.2,-1.22l7.13,0.07l5.51,2.47l1.79,1.72l-0.53,2.24l-9.16,4.15l-1.97,1.52l0.16,0.71l6.77,1.91l2.16,-0.78l1.13,2.74l0.67,0.11l1.01,-1.15l3.81,-0.73l7.7,0.77l0.54,1.99l0.36,0.29l10.47,0.71l0.43,-0.38l0.13,-3.23l4.87,0.78l3.95,-0.02l3.83,2.4l1.03,2.71l-1.35,1.79l0.02,0.5l3.15,3.64l4.07,1.96l0.53,-0.18l2.23,-4.47l3.95,1.93l4.16,-1.21l4.73,1.39l2.05,-1.26l3.94,0.62l0.43,-0.55l-1.68,-4.02l2.89,-1.8l22.31,3.03l2.16,2.75l6.55,3.51l10.29,-0.81l4.82,0.73l1.85,1.66l-0.29,3.08l0.25,0.41l3.08,1.26l3.56,-0.88l4.35,-0.11l4.8,0.87l4.57,-0.47l4.23,3.79l0.43,0.07l3.1,-1.4l0.16,-0.6l-1.88,-2.62l0.85,-1.52l7.71,1.21l5.22,-0.26l7.09,2.09l9.59,5.22l6.35,4.11l-0.2,2.38l1.88,1.41l0.6,-0.42l-0.48,-2.53l6.15,0.57l4.4,3.51l-1.97,1.43l-4.0,0.41l-0.36,0.39l-0.06,3.79l-0.74,0.62l-2.07,-0.11l-1.91,-1.39l-3.14,-1.11l-0.78,-1.85l-2.72,-0.68l-2.63,0.49l-1.04,-1.1l0.46,-1.31l-0.5,-0.51l-3.0,0.98l-0.22,0.58l0.99,1.7l-1.21,1.48l-3.04,1.68l-3.12,-0.28l-0.4,0.23l0.09,0.46l2.2,2.09l1.46,3.2l1.15,1.1l0.24,1.33l-0.42,0.67l-4.63,-0.77l-6.96,2.9l-2.19,0.44l-7.6,5.06l-0.84,1.45l-3.61,-2.37l-6.24,2.82l-0.94,-1.15l-0.53,-0.08l-2.28,1.52l-3.2,-0.49l-0.44,0.27l-0.78,2.37l-3.05,3.78l0.09,1.47l0.29,0.36l2.54,0.72l-0.29,4.53l-1.97,0.11l-0.35,0.26l-1.07,2.94l0.8,1.45l-3.91,1.58l-1.05,3.95l-3.48,0.77l-0.3,0.3l-0.72,3.29l-3.09,2.65l-0.7,-1.74l-2.44,-12.44l1.16,-4.71l2.04,-2.06l0.22,-1.64l3.8,-0.86l4.46,-4.61l4.28,-3.81l4.48,-3.01l2.17,-5.63l-0.42,-0.54l-3.04,0.33l-1.77,3.31l-5.86,3.86l-1.86,-4.25l-0.45,-0.23l-6.46,1.3l-6.47,6.44l-0.01,0.55l1.58,1.74l-8.24,1.17l0.15,-2.2l-0.34,-0.42l-3.89,-0.56l-3.25,1.81l-7.62,-0.62l-8.45,1.19l-17.71,15.41l0.22,0.7l3.74,0.41l1.36,2.17l2.43,0.76l1.88,-1.68l2.4,0.2l3.4,3.54l0.08,2.6l-1.95,3.42l-0.21,3.9l-1.1,5.06l-3.71,4.54l-0.87,2.21l-8.29,8.89l-3.19,1.7l-1.32,0.03l-1.45,-1.36l-0.49,-0.04l-2.27,1.5l0.41,-3.65l-0.59,-2.47l1.75,-0.89l2.91,0.53l0.42,-0.2l1.68,-3.03l0.87,-3.46l0.97,-1.18l1.32,-2.88l-0.45,-0.56l-4.14,0.95l-2.19,1.25l-3.41,-0.0l-1.06,-2.93l-2.97,-2.3l-4.28,-1.06l-1.75,-5.07l-2.66,-5.01l-2.29,-1.29l-3.75,-1.01l-3.44,0.08l-3.18,0.62l-2.24,1.77l0.05,0.66l1.18,0.69l0.02,1.43l-1.33,1.05l-2.26,3.51l-0.04,1.43l-3.16,1.84l-2.82,-1.16l-3.01,0.23l-1.35,-1.07l-1.5,-0.35l-3.9,2.31l-3.22,0.52l-2.27,0.79l-3.05,-0.51l-2.21,0.03l-1.48,-1.6l-2.6,-1.63l-2.63,-0.43l-5.46,1.01l-3.23,-1.25l-0.72,-2.57l-5.2,-1.24l-2.75,-1.36l-0.5,0.12l-2.59,3.45l0.84,2.1l-2.06,1.93l-3.41,-0.77l-2.42,-0.12l-1.83,-1.54l-2.53,-0.05l-2.42,-0.98l-3.86,1.57l-4.72,2.78l-3.3,0.75l-1.55,-1.92l-3.0,0.41l-1.11,-1.33l-1.62,-0.59l-1.31,-1.94l-1.38,-0.6l-3.7,0.79l-3.31,-1.83l-0.51,0.11l-0.99,1.29l-5.29,-8.05l-2.96,-2.48l0.65,-0.77l0.01,-0.51l-0.5,-0.11l-6.2,3.21l-1.84,0.15l0.15,-1.39l-0.26,-0.42l-3.22,-1.17l-2.46,0.7l-0.69,-3.16l-0.32,-0.31l-4.5,-0.75l-2.47,1.47l-6.19,1.27l-1.29,0.86l-9.51,1.3l-1.15,1.17l-0.03,0.53l1.47,1.9l-1.89,0.69l-0.22,0.56l0.31,0.6l-2.11,1.44l0.03,0.68l3.75,2.12l-0.39,0.98l-3.23,-0.13l-0.86,0.86l-3.09,-1.59l-3.97,0.07l-2.66,1.35l-8.32,-3.56l-4.07,0.06l-5.39,3.68l-0.39,2.0l-2.03,-1.5l-0.59,0.13l-2.0,3.59l0.57,0.93l-1.28,2.16l0.06,0.48l2.13,2.17l1.95,0.04l1.37,1.82l-0.23,1.46l0.25,0.43l0.83,0.33l-0.8,1.31l-2.49,0.62l-2.49,3.2l0.0,0.49l2.17,2.78l-0.15,2.18l2.5,3.24l-1.58,1.59l-0.7,-0.13l-1.63,-1.72l-2.29,-0.84l-0.94,-1.31l-2.34,-0.63l-1.48,0.4l-0.43,-0.47l-3.51,-1.48l-5.76,-1.01l-0.45,0.19l-2.89,-2.34l-2.9,-1.2l-1.53,-1.29l1.29,-0.43l2.08,-2.61l-0.05,-0.55l-0.89,-0.79l3.05,-1.06l0.27,-0.42l-0.07,-0.69l-0.49,-0.35l-1.73,0.39l0.04,-0.68l1.04,-0.72l2.66,-0.48l0.4,-1.32l-0.5,-1.6l0.92,-1.54l0.03,-1.17l-0.29,-0.37l-3.69,-1.06l-1.41,0.02l-1.42,-1.41l-2.19,0.38l-2.77,-1.01l-0.03,-0.59l-0.89,-1.43l-2.0,-0.32l-0.11,-0.54l0.49,-0.53l0.01,-0.53l-1.6,-1.9l-3.58,0.02l-0.88,0.73l-0.46,-0.07l-1.0,-2.79l2.22,-0.02l0.97,-0.74l0.07,-0.57l-0.9,-1.04l-1.35,-0.48l-0.11,-0.7l-0.95,-0.58l-1.38,-1.99l0.46,-0.98l-0.51,-1.96l-2.45,-0.84l-1.21,0.3l-0.46,-0.76l-2.46,-0.83l-0.72,-1.87l-0.21,-1.69l-0.99,-0.85l0.85,-1.17l-0.7,-3.21l1.66,-1.97l-0.16,-0.79ZM749.2,170.72l-0.6,0.4l-0.13,0.16l-0.01,-0.51l0.74,-0.05ZM871.88,65.81l2.17,-0.13l3.19,1.16l-2.39,1.09l-5.63,0.48l-0.26,-0.84l2.92,-1.76ZM797.39,48.49l-2.0,1.36l-3.8,-0.42l-4.25,-1.8l0.35,-0.97l9.69,1.83ZM783.67,46.12l-1.63,3.09l-8.98,-0.13l-4.09,1.14l-4.54,-2.97l1.16,-3.01l3.05,-0.89l6.5,0.22l8.54,2.56ZM778.2,134.98l-0.56,-0.9l0.27,-0.12l0.29,1.01ZM778.34,135.48l0.94,3.53l-0.05,3.38l1.05,3.39l2.18,5.0l-2.89,-0.83l-0.49,0.26l-1.54,4.65l2.42,3.5l-0.04,1.13l-1.24,-1.24l-0.61,0.06l-1.09,1.61l-0.28,-1.61l0.27,-3.1l-0.28,-3.4l0.58,-2.47l0.11,-4.39l-1.46,-3.36l0.21,-4.32l2.15,-1.46l0.07,-0.34ZM771.95,56.61l1.76,-1.42l2.89,-0.42l3.28,1.71l0.14,0.6l-3.27,0.03l-4.81,-0.5ZM683.76,31.09l-13.01,1.93l4.03,-6.35l1.82,-0.56l1.73,0.34l5.99,2.98l-0.56,1.66ZM670.85,27.93l-5.08,0.64l-6.86,-1.57l-3.99,-2.05l-2.1,-4.16l-2.6,-0.87l5.72,-3.5l5.2,-1.28l4.69,2.85l5.59,5.4l-0.56,4.53ZM564.15,68.94l-0.64,0.17l-7.85,-0.57l-0.86,-2.04l-4.28,-1.17l-0.28,-1.94l2.27,-0.89l0.25,-0.39l-0.08,-2.38l4.81,-3.97l-0.15,-0.7l-1.47,-0.38l5.3,-3.81l0.15,-0.44l-0.58,-1.94l5.28,-2.51l8.21,-3.27l8.28,-0.96l4.35,-1.94l4.6,-0.64l1.36,1.61l-1.34,1.28l-16.43,4.94l-7.97,4.88l-7.74,9.63l0.66,4.14l4.16,3.27ZM548.81,18.48l-5.5,1.18l-0.58,1.02l-2.59,0.84l-2.13,-1.07l1.12,-1.42l-0.3,-0.65l-2.33,-0.07l1.68,-0.36l3.47,-0.06l0.42,1.29l0.66,0.16l1.38,-1.34l2.15,-0.88l2.94,1.01l-0.39,0.36ZM477.37,133.15l-4.08,0.05l-2.56,-0.32l0.33,-0.87l3.17,-1.03l3.24,0.96l-0.09,1.23Z",
      "name": "Russia"
    },
    "RW": {
      "path": "M497.0,288.25l0.71,1.01l-0.11,1.09l-1.63,0.03l-1.04,1.39l-0.83,-0.11l0.51,-1.2l0.08,-1.34l0.42,-0.41l0.7,0.14l1.19,-0.61Z",
      "name": "Rwanda"
    },
    "RS": {
      "path": "M469.4,163.99l0.42,-0.5l-0.01,-0.52l-1.15,-1.63l1.43,-0.62l1.33,0.12l1.17,1.06l0.46,1.13l1.34,0.64l0.35,1.35l1.46,0.9l0.76,-0.29l0.2,0.69l-0.48,0.78l0.22,1.12l1.05,1.22l-0.77,0.8l-0.37,1.52l-1.21,0.08l0.24,-0.64l-0.39,-0.54l-2.08,-1.64l-0.9,0.05l-0.48,0.94l-2.12,-1.37l0.53,-1.6l-1.11,-1.37l0.51,-1.1l-0.41,-0.57Z",
      "name": "Serbia"
    },
    "TL": {
      "path": "M734.55,307.93l-0.1,-0.97l4.5,-0.86l-2.82,1.28l-1.59,0.55Z",
      "name": "Timor-Leste"
    },
    "TM": {
      "path": "M553.03,173.76l-0.04,0.34l-0.09,-0.22l0.13,-0.12ZM555.87,172.66l0.45,-0.1l1.48,0.74l2.06,2.43l4.07,-0.18l0.38,-0.51l-0.32,-1.19l1.92,-0.94l1.91,-1.59l2.94,1.39l0.43,2.47l1.19,0.67l2.58,-0.13l0.62,0.4l1.32,3.12l4.54,3.44l2.67,1.45l3.06,1.14l-0.04,1.05l-1.33,-0.75l-0.59,0.19l-0.32,0.84l-2.2,0.81l-0.46,2.13l-1.21,0.74l-1.91,0.42l-0.73,1.33l-1.56,0.31l-2.22,-0.94l-0.2,-2.17l-0.38,-0.36l-1.73,-0.09l-2.76,-2.46l-2.14,-0.4l-2.84,-1.48l-1.78,-0.27l-1.24,0.53l-1.57,-0.08l-2.0,1.69l-1.7,0.43l-0.36,-1.58l0.36,-2.98l-0.22,-0.4l-1.65,-0.84l0.54,-1.69l-0.34,-0.52l-1.22,-0.13l0.36,-1.64l2.22,0.59l2.2,-0.95l0.12,-0.65l-1.77,-1.74l-0.66,-1.57Z",
      "name": "Turkmenistan"
    },
    "TJ": {
      "path": "M597.75,178.82l-2.54,-0.44l-0.47,0.34l-0.24,1.7l0.43,0.45l2.64,-0.22l3.18,0.95l4.39,-0.41l0.56,2.37l0.52,0.29l0.67,-0.24l1.11,0.49l0.21,2.13l-3.76,-0.21l-1.8,1.32l-1.76,0.74l-0.61,-0.58l0.21,-2.23l-0.64,-0.49l-0.07,-0.93l-1.36,-0.66l-0.45,0.07l-1.08,1.01l-0.55,1.48l-1.31,-0.05l-0.95,1.16l-0.9,-0.35l-1.86,0.74l1.26,-2.83l-0.54,-2.17l-1.67,-0.82l0.33,-0.66l2.18,-0.04l1.19,-1.63l0.76,-1.79l2.43,-0.5l-0.26,1.0l0.73,1.05Z",
      "name": "Tajikistan"
    },
    "RO": {
      "path": "M487.53,154.23l0.6,0.24l2.87,3.98l-0.17,2.69l0.45,1.42l1.32,0.81l1.35,-0.42l0.76,0.36l0.02,0.31l-0.83,0.45l-0.59,-0.22l-0.54,0.3l-0.62,3.3l-1.0,-0.22l-2.07,-1.13l-2.95,0.71l-1.25,0.76l-3.51,-0.15l-1.89,-0.47l-0.87,0.16l-0.82,-1.3l0.29,-0.26l-0.06,-0.64l-1.09,-0.34l-0.56,0.5l-1.05,-0.64l-0.39,-1.39l-1.36,-0.65l-0.35,-1.0l-0.83,-0.75l1.54,-0.54l2.66,-4.21l2.4,-1.24l2.96,0.34l1.48,0.73l0.79,-0.45l1.78,-0.3l0.75,-0.74l0.79,0.0Z",
      "name": "Romania"
    },
    "GW": {
      "path": "M386.23,253.6l-0.29,0.84l0.15,0.6l-2.21,0.59l-0.86,0.96l-1.04,-0.83l-1.09,-0.23l-0.54,-1.06l-0.66,-0.49l2.41,-0.48l4.13,0.1Z",
      "name": "Guinea-Bissau"
    },
    "GT": {
      "path": "M195.08,249.77l-2.48,-0.37l-1.03,-0.45l-1.14,-0.89l0.3,-0.99l-0.24,-0.68l0.96,-1.66l2.98,-0.01l0.4,-0.37l-0.19,-1.28l-1.67,-1.4l0.51,-0.4l0.0,-1.05l3.85,0.02l-0.21,4.53l0.4,0.43l1.46,0.38l-1.48,0.98l-0.35,0.7l0.12,0.57l-2.2,1.96Z",
      "name": "Guatemala"
    },
    "GR": {
      "path": "M487.07,174.59l-0.59,1.43l-0.37,0.21l-2.84,-0.35l-3.03,0.77l-0.18,0.68l1.28,1.23l-0.61,0.23l-1.14,0.0l-1.2,-1.39l-0.63,0.03l-0.53,1.01l0.56,1.76l1.03,1.19l-0.56,0.38l-0.05,0.62l2.52,2.12l0.02,0.87l-1.78,-0.59l-0.48,0.56l0.5,1.0l-1.07,0.2l-0.3,0.53l0.75,2.01l-0.98,0.02l-1.84,-1.12l-1.37,-4.2l-2.21,-2.95l-0.11,-0.56l1.04,-1.28l0.2,-0.95l0.85,-0.66l0.03,-0.46l1.32,-0.21l1.01,-0.64l1.22,0.05l0.65,-0.56l2.26,-0.0l1.82,-0.75l1.85,1.0l2.28,-0.28l0.35,-0.39l0.01,-0.77l0.34,0.22ZM480.49,192.16l0.58,0.4l-0.68,-0.12l0.11,-0.28ZM482.52,192.82l2.51,0.06l0.24,0.32l-1.99,0.13l-0.77,-0.51Z",
      "name": "Greece"
    },
    "GQ": {
      "path": "M448.79,279.62l0.02,2.22l-4.09,0.0l0.69,-2.27l3.38,0.05Z",
      "name": "Eq. Guinea"
    },
    "GY": {
      "path": "M277.42,270.07l-0.32,1.83l-1.32,0.57l-0.23,0.46l-0.28,2.0l1.11,1.82l0.83,0.19l0.32,1.25l1.13,1.62l-1.21,-0.19l-1.08,0.71l-1.77,0.5l-0.44,0.46l-0.86,-0.09l-1.32,-1.01l-0.77,-2.27l0.36,-1.9l0.68,-1.23l-0.57,-1.17l-0.74,-0.43l0.12,-1.16l-0.9,-0.69l-1.1,0.09l-1.31,-1.48l0.53,-0.72l-0.04,-0.84l1.99,-0.86l0.05,-0.59l-0.71,-0.78l0.14,-0.57l1.66,-1.24l1.36,0.77l1.41,1.49l0.06,1.15l0.37,0.38l0.8,0.05l2.06,1.86Z",
      "name": "Guyana"
    },
    "GE": {
      "path": "M521.71,168.93l5.29,0.89l4.07,2.01l1.41,-0.44l2.07,0.56l0.68,1.1l1.07,0.55l-0.12,0.59l0.98,1.29l-1.01,-0.13l-1.81,-0.83l-0.94,0.47l-3.23,0.43l-2.29,-1.39l-2.33,0.05l0.21,-0.97l-0.76,-2.26l-1.45,-1.12l-1.43,-0.39l-0.41,-0.42Z",
      "name": "Georgia"
    },
    "GB": {
      "path": "M412.61,118.72l-2.19,3.22l-0.0,0.45l5.13,-0.3l-0.53,2.37l-2.2,3.12l0.29,0.63l2.37,0.21l2.33,4.3l1.76,0.69l2.2,5.12l2.94,0.77l-0.23,1.62l-1.15,0.88l-0.1,0.52l0.82,1.42l-1.86,1.43l-3.3,-0.02l-4.12,0.87l-1.04,-0.58l-0.47,0.06l-1.51,1.41l-2.12,-0.34l-1.86,1.18l-0.6,-0.29l3.19,-3.0l2.16,-0.69l0.28,-0.41l-0.34,-0.36l-3.73,-0.53l-0.4,-0.76l2.2,-0.87l0.17,-0.61l-1.26,-1.67l0.36,-1.7l3.38,0.28l0.43,-0.33l0.37,-1.99l-1.79,-2.49l-3.11,-0.72l-0.38,-0.59l0.79,-1.35l-0.04,-0.46l-0.82,-0.97l-0.61,0.01l-0.68,0.84l-0.1,-2.34l-1.23,-1.88l0.85,-3.47l1.77,-2.68l1.85,0.26l2.17,-0.22ZM406.26,132.86l-1.01,1.77l-1.57,-0.59l-1.16,0.01l0.37,-1.54l-0.39,-1.39l1.45,-0.1l2.3,1.84Z",
      "name": "United Kingdom"
    },
    "GA": {
      "path": "M453.24,279.52l-0.08,0.98l0.7,1.29l2.36,0.24l-0.98,2.63l1.18,1.79l0.25,1.78l-0.29,1.52l-0.6,0.93l-1.84,-0.09l-1.23,-1.11l-0.66,0.23l-0.15,0.84l-1.42,0.26l-1.02,0.7l-0.11,0.52l0.77,1.35l-1.34,0.97l-3.94,-4.3l-1.44,-2.45l0.06,-0.6l0.54,-0.81l1.05,-3.46l4.17,-0.07l0.4,-0.4l-0.02,-2.66l2.39,0.21l1.25,-0.27Z",
      "name": "Gabon"
    },
    "GN": {
      "path": "M391.8,254.11l0.47,0.8l1.11,-0.32l0.98,0.7l1.07,0.2l2.26,-1.22l0.64,0.44l1.13,1.56l-0.48,1.4l0.8,0.3l-0.08,0.48l0.46,0.68l-0.35,1.36l1.05,2.61l-1.0,0.69l0.03,1.41l-0.72,-0.06l-1.08,1.0l-0.24,-0.27l0.07,-1.11l-1.05,-1.54l-1.79,0.21l-0.35,-2.01l-1.6,-2.18l-2.0,-0.0l-1.31,0.54l-1.95,2.18l-1.86,-2.19l-1.2,-0.78l-0.3,-1.11l-0.8,-0.85l0.65,-0.72l0.81,-0.03l1.64,-0.8l0.23,-1.87l2.67,0.64l0.89,-0.3l1.21,0.15Z",
      "name": "Guinea"
    },
    "GM": {
      "path": "M379.31,251.39l0.1,-0.35l2.43,-0.07l0.74,-0.61l0.51,-0.03l0.77,0.49l-1.03,-0.3l-1.87,0.9l-1.65,-0.04ZM384.03,250.91l0.91,0.05l0.75,-0.24l-0.59,0.31l-1.08,-0.13Z",
      "name": "Gambia"
    },
    "GL": {
      "path": "M353.02,1.2l14.69,4.67l-3.68,1.89l-22.97,0.86l-0.36,0.27l0.12,0.43l1.55,1.18l8.79,-0.66l7.48,2.07l4.86,-1.77l1.66,1.73l-2.53,3.19l-0.01,0.48l0.46,0.15l6.35,-2.2l12.06,-2.31l7.24,1.13l1.09,1.99l-9.79,4.01l-1.44,1.32l-7.87,0.98l-0.35,0.41l0.38,0.38l5.07,0.24l-2.53,3.58l-2.07,3.81l0.08,6.05l2.57,3.11l-3.22,0.2l-4.12,1.66l-0.05,0.72l4.45,2.65l0.51,3.75l-2.3,0.4l-0.25,0.64l2.79,3.69l-4.82,0.31l-0.36,0.29l0.16,0.44l2.62,1.8l-0.59,1.22l-3.3,0.7l-3.45,0.01l-0.29,0.68l3.03,3.12l0.02,1.34l-4.4,-1.73l-1.72,1.35l0.15,0.66l3.31,1.15l3.13,2.71l0.81,3.16l-3.85,0.75l-4.89,-4.26l-0.47,-0.03l-0.17,0.44l0.79,2.86l-2.71,2.21l-0.13,0.44l0.37,0.27l8.73,0.34l-12.32,6.64l-7.24,1.48l-2.94,0.08l-2.69,1.75l-3.43,4.41l-5.24,2.84l-1.73,0.18l-7.12,2.1l-2.15,2.52l-0.13,2.99l-1.19,2.45l-4.01,3.09l-0.14,0.44l0.97,2.9l-2.28,6.48l-3.1,0.2l-3.83,-3.07l-4.86,-0.02l-2.25,-1.93l-1.7,-3.79l-4.3,-4.84l-1.21,-2.49l-0.44,-3.8l-3.32,-3.63l0.84,-2.86l-1.56,-1.7l2.28,-4.6l3.83,-1.74l1.03,-1.96l0.52,-3.47l-0.59,-0.41l-4.17,2.21l-2.07,0.58l-2.72,-1.28l-0.15,-2.71l0.85,-2.09l2.01,-0.06l5.06,1.2l0.46,-0.23l-0.14,-0.49l-6.54,-4.47l-2.67,0.55l-1.58,-0.86l2.56,-4.01l-0.03,-0.48l-1.5,-1.74l-4.98,-8.5l-3.13,-1.96l0.03,-1.88l-0.24,-0.37l-6.85,-3.02l-5.36,-0.38l-12.7,0.58l-2.78,-1.57l-3.66,-2.77l5.73,-1.45l5.0,-0.28l0.38,-0.38l-0.35,-0.41l-10.67,-1.38l-5.3,-2.06l0.25,-1.54l18.41,-5.26l1.22,-2.27l-0.25,-0.55l-6.14,-1.86l1.68,-1.77l8.55,-4.03l3.59,-0.63l0.3,-0.54l-0.88,-2.27l5.47,-1.47l7.65,-0.95l7.55,-0.05l3.04,1.85l6.48,-3.27l5.81,2.22l3.56,0.5l5.16,1.94l0.5,-0.21l-0.17,-0.52l-5.71,-3.13l0.28,-2.13l8.12,-3.6l8.7,0.28l3.35,-2.34l8.71,-0.6l19.93,0.8Z",
      "name": "Greenland"
    },
    "GH": {
      "path": "M420.53,257.51l-0.01,0.72l0.96,1.2l0.24,3.73l0.59,0.95l-0.51,2.1l0.19,1.41l1.02,2.21l-6.97,2.84l-1.8,-0.57l0.04,-0.89l-1.02,-2.04l0.61,-2.65l1.07,-2.32l-0.96,-6.47l5.01,0.07l0.94,-0.39l0.61,0.11Z",
      "name": "Ghana"
    },
    "OM": {
      "path": "M568.09,230.93l-0.91,1.67l-1.22,0.04l-0.6,0.76l-0.41,1.51l0.27,1.58l-1.16,0.05l-1.56,0.97l-0.76,1.74l-1.62,0.05l-0.98,0.65l-0.17,1.15l-0.89,0.52l-1.49,-0.18l-2.4,0.94l-2.47,-5.4l7.35,-2.71l1.67,-5.23l-1.12,-2.09l0.05,-0.83l0.67,-1.0l0.07,-1.05l0.9,-0.42l-0.05,-2.07l0.7,-0.01l1.0,1.62l1.51,1.08l3.3,0.84l1.73,2.29l0.81,0.37l-1.23,2.35l-0.99,0.79Z",
      "name": "Oman"
    },
    "TN": {
      "path": "M448.1,188.24l-1.0,1.27l-0.02,1.32l0.84,0.88l-0.28,2.09l-1.53,1.32l-0.12,0.42l0.48,1.54l1.42,0.32l0.53,1.11l0.9,0.52l-0.11,1.67l-3.54,2.64l-0.1,2.38l-0.58,0.3l-0.96,-4.45l-1.54,-1.25l-0.16,-0.78l-1.92,-1.56l-0.18,-1.76l1.51,-1.62l0.59,-2.34l-0.38,-2.78l0.42,-1.21l2.45,-1.05l1.29,0.26l-0.06,1.11l0.58,0.38l1.47,-0.73Z",
      "name": "Tunisia"
    },
    "JO": {
      "path": "M518.64,201.38l-5.14,1.56l-0.19,0.65l2.16,2.39l-0.89,1.14l-1.71,0.34l-1.71,1.8l-2.34,-0.37l1.21,-4.32l0.56,-4.07l2.8,0.94l4.46,-2.71l0.79,2.66Z",
      "name": "Jordan"
    },
    "HR": {
      "path": "M455.59,162.84l1.09,0.07l-0.82,0.94l-0.27,-1.01ZM456.96,162.92l0.62,-0.41l1.73,0.45l0.42,-0.4l-0.01,-0.59l0.86,-0.52l0.2,-1.05l1.63,-0.68l2.57,1.68l2.07,0.6l0.87,-0.31l1.05,1.57l-0.52,0.63l-1.05,-0.56l-1.68,0.04l-2.1,-0.5l-1.29,0.06l-0.57,0.49l-0.59,-0.47l-0.62,0.16l-0.46,1.7l1.79,2.42l2.79,2.75l-1.18,-0.87l-2.21,-0.87l-1.67,-1.78l0.13,-0.63l-1.05,-1.19l-0.32,-1.27l-1.42,-0.43Z",
      "name": "Croatia"
    },
    "HT": {
      "path": "M237.05,238.38l-1.16,0.43l-0.91,-0.55l0.05,-0.2l2.02,0.31ZM237.53,238.43l1.06,0.12l-0.05,0.01l-1.01,-0.12ZM239.25,238.45l0.79,-0.51l0.06,-0.62l-1.02,-1.0l0.02,-0.82l-0.3,-0.4l-0.93,-0.32l3.16,0.45l0.02,1.84l-0.48,0.34l-0.08,0.58l0.54,0.72l-1.78,-0.26Z",
      "name": "Haiti"
    },
    "HU": {
      "path": "M462.08,157.89l0.65,-1.59l-0.09,-0.44l0.64,-0.0l0.39,-0.34l0.1,-0.69l1.75,0.87l2.32,-0.37l0.43,-0.66l3.49,-0.78l0.69,-0.78l0.57,-0.14l2.57,0.93l0.67,-0.23l1.03,0.65l0.08,0.37l-1.42,0.71l-2.59,4.14l-1.8,0.53l-1.68,-0.1l-2.74,1.23l-1.85,-0.54l-2.54,-1.66l-0.66,-1.1Z",
      "name": "Hungary"
    },
    "HN": {
      "path": "M199.6,249.52l-1.7,-1.21l0.06,-0.94l3.04,-2.14l2.37,0.28l1.27,-0.09l1.1,-0.52l1.3,0.28l1.14,-0.25l1.38,0.37l2.23,1.37l-2.36,0.93l-1.23,-0.39l-0.88,1.3l-1.28,0.99l-0.98,-0.22l-0.42,0.52l-0.96,0.05l-0.36,0.41l0.04,0.88l-0.52,0.6l-0.3,0.04l-0.3,-0.55l-0.66,-0.31l0.11,-0.67l-0.48,-0.65l-0.87,-0.26l-0.73,0.2Z",
      "name": "Honduras"
    },
    "PR": {
      "path": "M256.17,238.73l-0.26,0.27l-2.83,0.05l-0.07,-0.55l1.95,-0.1l1.22,0.33Z",
      "name": "Puerto Rico"
    },
    "PS": {
      "path": "M509.21,203.07l0.1,-0.06l-0.02,0.03l-0.09,0.03ZM509.36,202.91l-0.02,-0.63l-0.33,-0.16l0.31,-1.09l0.24,0.1l-0.2,1.78Z",
      "name": "Palestine"
    },
    "PT": {
      "path": "M401.84,187.38l-0.64,0.47l-1.13,-0.35l-0.91,0.17l0.28,-1.78l-0.24,-1.78l-1.25,-0.56l-0.45,-0.84l0.17,-1.66l1.01,-1.18l0.69,-2.92l-0.04,-1.39l-0.59,-1.9l1.3,-0.85l0.84,1.35l3.1,-0.3l0.46,0.99l-1.05,0.94l-0.03,2.16l-0.41,0.57l-0.08,1.1l-0.79,0.18l-0.26,0.59l0.91,1.6l-0.63,1.75l0.76,1.09l-1.1,1.52l0.07,1.05Z",
      "name": "Portugal"
    },
    "PY": {
      "path": "M274.9,336.12l0.74,1.52l-0.16,3.45l0.32,0.41l2.64,0.5l1.11,-0.47l1.4,0.59l0.36,0.6l0.53,3.42l1.27,0.4l0.98,-0.38l0.51,0.27l-0.0,1.18l-1.21,5.32l-2.09,1.9l-1.8,0.4l-4.71,-0.98l2.2,-3.63l-0.32,-1.5l-2.78,-1.28l-3.03,-1.94l-2.07,-0.44l-4.34,-4.06l0.91,-2.9l0.08,-1.42l1.07,-2.04l4.13,-0.72l2.18,0.03l2.05,1.17l0.03,0.59Z",
      "name": "Paraguay"
    },
    "PA": {
      "path": "M213.8,263.68l0.26,-1.52l-0.36,-0.26l-0.01,-0.49l0.44,-0.1l0.93,1.4l1.26,0.03l0.77,0.49l1.38,-0.23l2.51,-1.11l0.86,-0.72l3.45,0.85l1.4,1.18l0.41,1.74l-0.21,0.34l-0.53,-0.12l-0.47,0.29l-0.16,0.6l-0.68,-1.28l0.45,-0.49l-0.19,-0.66l-0.47,-0.13l-0.54,-0.84l-1.5,-0.75l-1.1,0.16l-0.75,0.99l-1.62,0.84l-0.18,0.96l0.85,0.97l-0.58,0.45l-0.69,0.08l-0.34,-1.18l-1.27,0.03l-0.71,-1.05l-2.59,-0.46Z",
      "name": "Panama"
    },
    "PG": {
      "path": "M808.58,298.86l2.54,2.56l-0.13,0.26l-0.33,0.12l-0.87,-0.78l-1.22,-2.16ZM801.41,293.04l0.5,0.29l0.26,0.27l-0.49,-0.35l-0.27,-0.21ZM803.17,294.58l0.59,0.5l0.08,1.06l-0.29,-0.91l-0.38,-0.65ZM796.68,298.41l0.52,0.75l1.43,-0.19l2.27,-1.81l-0.01,-1.43l1.12,0.16l-0.04,1.1l-0.7,1.28l-1.12,0.18l-0.62,0.79l-2.46,1.11l-1.17,-0.0l-3.08,-1.25l3.41,0.0l0.45,-0.68ZM789.15,303.55l2.31,1.8l1.59,2.61l1.34,0.13l-0.06,0.66l0.31,0.43l1.06,0.24l0.06,0.65l2.25,1.05l-1.22,0.13l-0.72,-0.63l-4.56,-0.65l-3.22,-2.87l-1.49,-2.34l-3.27,-1.1l-2.38,0.72l-1.59,0.86l-0.2,0.42l0.27,1.55l-1.55,0.68l-1.36,-0.4l-2.21,-0.09l-0.08,-15.41l8.39,2.93l2.95,2.4l0.6,1.64l4.02,1.49l0.31,0.68l-1.76,0.21l-0.33,0.52l0.55,1.68Z",
      "name": "Papua New Guinea"
    },
    "PE": {
      "path": "M244.96,295.21l-1.26,-0.07l-0.57,0.42l-1.93,0.45l-2.98,1.75l-0.36,1.36l-0.58,0.8l0.12,1.37l-1.24,0.59l-0.22,1.22l-0.62,0.84l1.04,2.27l1.28,1.44l-0.41,0.84l0.32,0.57l1.48,0.13l1.16,1.37l2.21,0.07l1.63,-1.08l-0.13,3.02l0.3,0.4l1.14,0.29l1.31,-0.34l1.9,3.59l-0.48,0.85l-0.17,3.85l-0.94,1.59l0.35,0.75l-0.47,1.07l0.98,1.97l-2.1,3.82l-0.98,0.5l-2.17,-1.28l-0.39,-1.16l-4.95,-2.58l-4.46,-2.79l-1.84,-1.51l-0.91,-1.84l0.3,-0.96l-2.11,-3.33l-4.82,-9.68l-1.04,-1.2l-0.87,-1.94l-3.4,-2.48l0.58,-1.18l-1.13,-2.23l0.66,-1.49l1.45,-1.15l-0.6,0.98l0.07,0.92l0.47,0.36l1.74,0.03l0.97,1.17l0.54,0.07l1.42,-1.03l0.6,-1.84l1.42,-2.02l3.04,-1.04l2.73,-2.62l0.86,-1.74l-0.1,-1.87l1.44,1.02l0.9,1.25l1.06,0.59l1.7,2.73l1.86,0.31l1.45,-0.61l0.96,0.39l1.36,-0.19l1.45,0.89l-1.4,2.21l0.31,0.61l0.59,0.05l0.47,0.5Z",
      "name": "Peru"
    },
    "PK": {
      "path": "M615.09,192.34l-1.83,1.81l-2.6,0.39l-3.73,-0.68l-1.58,1.33l-0.09,0.42l1.77,4.39l1.7,1.23l-1.69,1.27l-0.12,2.14l-2.33,2.64l-1.6,2.8l-2.46,2.67l-3.03,-0.07l-2.76,2.83l0.05,0.6l1.5,1.11l0.26,1.9l1.44,1.5l0.37,1.68l-5.01,-0.01l-1.78,1.7l-1.42,-0.52l-0.76,-1.87l-2.27,-2.15l-11.61,0.86l0.71,-2.34l3.43,-1.32l0.25,-0.44l-0.21,-1.24l-1.2,-0.65l-0.28,-2.46l-2.29,-1.14l-1.28,-1.94l2.82,0.94l2.62,-0.38l1.42,0.33l0.76,-0.56l1.71,0.19l3.25,-1.14l0.27,-0.36l0.08,-2.19l1.18,-1.32l1.68,0.0l0.58,-0.82l1.6,-0.3l1.19,0.16l0.98,-0.78l0.02,-1.88l0.93,-1.47l1.48,-0.66l0.19,-0.55l-0.66,-1.25l2.04,-0.11l0.69,-1.01l-0.02,-1.16l1.11,-1.06l-0.17,-1.78l-0.49,-1.03l1.15,-0.98l5.42,-0.91l2.6,-0.82l1.6,1.16l0.97,2.34l3.45,0.97Z",
      "name": "Pakistan"
    },
    "PH": {
      "path": "M737.01,263.84l0.39,2.97l-0.44,1.18l-0.55,-1.53l-0.67,-0.14l-1.17,1.28l0.65,2.09l-0.42,0.69l-2.48,-1.23l-0.57,-1.49l0.65,-1.03l-0.1,-0.54l-1.59,-1.19l-0.56,0.08l-0.65,0.87l-1.23,0.0l-1.58,0.97l0.83,-1.8l2.56,-1.42l0.65,0.84l0.45,0.13l1.9,-0.69l0.56,-1.11l1.5,-0.06l0.38,-0.43l-0.09,-1.19l1.21,0.71l0.36,2.02ZM733.59,256.58l0.05,0.75l0.08,0.26l-0.8,-0.42l-0.18,-0.71l0.85,0.12ZM734.08,256.1l-0.12,-1.12l-1.0,-1.27l1.36,0.03l0.53,0.73l0.51,2.04l-1.27,-0.4ZM733.76,257.68l0.38,0.98l-0.32,0.15l-0.07,-1.13ZM724.65,238.43l1.46,0.7l0.72,-0.31l-0.32,1.17l0.79,1.71l-0.57,1.84l-1.53,1.04l-0.39,2.25l0.56,2.04l1.63,0.57l1.16,-0.27l2.71,1.23l-0.19,1.08l0.76,0.84l-0.08,0.36l-1.4,-0.9l-0.88,-1.27l-0.66,0.0l-0.38,0.55l-1.6,-1.31l-2.15,0.36l-0.87,-0.39l0.07,-0.61l0.66,-0.55l-0.01,-0.62l-0.75,-0.59l-0.72,0.44l-0.74,-0.87l-0.39,-2.49l0.32,0.27l0.66,-0.28l0.26,-3.97l0.7,-2.02l1.14,0.0ZM731.03,258.87l-0.88,0.85l-1.19,1.94l-1.05,-1.19l0.93,-1.1l0.32,-1.47l0.52,-0.06l-0.27,1.15l0.22,0.45l0.49,-0.12l1.0,-1.32l-0.08,0.85ZM726.83,255.78l0.83,0.38l1.17,-0.0l-0.02,0.48l-2.0,1.4l0.03,-2.26ZM724.81,252.09l-0.38,1.27l-1.42,-1.95l1.2,0.05l0.6,0.63ZM716.55,261.82l1.1,-0.95l0.03,-0.03l-0.28,0.36l-0.85,0.61ZM719.22,259.06l0.04,-0.06l0.8,-1.53l0.16,0.75l-1.0,0.84Z",
      "name": "Philippines"
    },
    "PL": {
      "path": "M468.44,149.42l-1.11,-1.54l-1.86,-0.33l-0.48,-1.05l-1.72,-0.37l-0.65,0.69l-0.72,-0.36l0.11,-0.61l-0.33,-0.46l-1.75,-0.27l-1.04,-0.93l-0.94,-1.94l0.16,-1.22l-0.62,-1.8l-0.78,-1.07l0.57,-1.04l-0.48,-1.43l1.41,-0.83l6.91,-2.71l2.14,0.5l0.52,0.91l5.51,0.44l4.55,-0.05l1.07,0.31l0.48,0.84l0.15,1.58l0.65,1.2l-0.01,0.99l-1.27,0.58l-0.19,0.54l0.73,1.48l0.08,1.55l1.2,2.76l-0.17,0.58l-1.23,0.44l-2.27,2.72l0.18,0.95l-1.97,-1.03l-1.98,0.4l-1.36,-0.28l-1.24,0.58l-1.07,-0.97l-1.16,0.24Z",
      "name": "Poland"
    },
    "ZM": {
      "path": "M481.47,313.3l0.39,0.31l2.52,0.14l0.99,1.17l2.01,0.35l1.4,-0.64l0.69,1.17l1.78,0.33l1.84,2.35l2.23,0.18l0.4,-0.43l-0.21,-2.74l-0.62,-0.3l-0.48,0.32l-1.98,-1.17l0.72,-5.29l-0.51,-1.18l0.57,-1.3l3.68,-0.62l0.26,0.63l1.21,0.63l0.9,-0.22l2.16,0.67l1.33,0.71l1.07,1.02l0.56,1.87l-0.88,2.7l0.43,2.09l-0.73,0.87l-0.76,2.37l0.59,0.68l-6.6,1.83l-0.29,0.44l0.19,1.45l-1.68,0.35l-1.43,1.02l-0.38,0.87l-0.87,0.26l-3.48,3.69l-4.16,-0.53l-1.52,-1.0l-1.77,-0.13l-1.83,0.52l-3.04,-3.4l0.11,-7.59l4.82,0.03l0.39,-0.49l-0.18,-0.76l0.33,-0.83l-0.4,-1.36l0.24,-1.05Z",
      "name": "Zambia"
    },
    "EH": {
      "path": "M384.42,230.28l0.25,-0.79l1.06,-1.29l0.8,-3.51l3.38,-2.78l0.7,-1.81l0.06,4.84l-1.98,0.2l-0.94,1.59l0.39,3.56l-3.7,-0.01ZM392.01,218.1l0.7,-1.8l1.77,-0.24l2.09,0.34l0.95,-0.62l1.28,-0.07l-0.0,2.51l-6.79,-0.12Z",
      "name": "W. Sahara"
    },
    "EE": {
      "path": "M485.71,115.04l2.64,0.6l2.56,0.11l-1.6,1.91l0.61,3.54l-0.81,0.87l-1.78,-0.01l-3.22,-1.76l-1.8,0.45l0.21,-1.53l-0.58,-0.41l-0.69,0.34l-1.26,-1.03l-0.17,-1.63l2.83,-0.92l3.05,-0.52Z",
      "name": "Estonia"
    },
    "EG": {
      "path": "M492.06,205.03l1.46,0.42l2.95,-1.64l2.04,-0.21l1.53,0.3l0.59,1.19l0.69,0.04l0.41,-0.64l1.81,0.58l1.95,0.16l1.04,-0.51l1.42,4.08l-2.03,4.54l-1.66,-1.77l-1.76,-3.85l-0.64,-0.12l-0.36,0.67l1.04,2.88l3.44,6.95l1.78,3.04l2.03,2.65l-0.36,0.53l0.23,2.01l2.7,2.19l-28.41,0.0l0.0,-18.96l-0.73,-2.2l0.59,-1.56l-0.32,-1.26l0.68,-0.99l3.06,-0.04l4.82,1.52Z",
      "name": "Egypt"
    },
    "ZA": {
      "path": "M467.14,373.21l-0.13,-1.96l-0.68,-1.56l0.7,-0.68l-0.13,-2.33l-4.56,-8.19l0.77,-0.86l0.6,0.45l0.69,1.31l2.83,0.72l1.5,-0.26l2.24,-1.39l0.19,-9.55l1.35,2.3l-0.21,1.5l0.61,1.2l0.4,0.19l1.79,-0.27l2.6,-2.07l0.69,-1.32l0.96,-0.48l2.19,1.04l2.04,0.13l1.77,-0.65l0.85,-2.12l1.38,-0.33l1.59,-2.76l2.15,-1.89l3.41,-1.87l2.0,0.45l1.02,-0.28l0.99,0.2l1.75,5.29l-0.38,3.25l-0.81,-0.23l-1.0,0.46l-0.87,1.68l-0.05,1.16l1.97,1.84l1.47,-0.29l0.69,-1.18l1.09,0.01l-0.76,3.69l-0.58,1.09l-2.2,1.79l-3.17,4.76l-2.8,2.83l-3.57,2.88l-2.53,1.05l-1.22,0.14l-0.51,0.7l-1.18,-0.32l-1.39,0.5l-2.59,-0.52l-1.61,0.33l-1.18,-0.11l-2.55,1.1l-2.1,0.44l-1.6,1.07l-0.85,0.05l-0.93,-0.89l-0.93,-0.15l-0.97,-1.13l-0.25,0.05ZM491.45,364.19l0.62,-0.93l1.48,-0.59l1.18,-2.19l-0.07,-0.49l-1.99,-1.69l-1.66,0.56l-1.43,1.14l-1.34,1.73l0.02,0.51l1.88,2.11l1.31,-0.16Z",
      "name": "South Africa"
    },
    "EC": {
      "path": "M231.86,285.53l0.29,1.59l-0.69,1.45l-2.61,2.51l-3.13,1.11l-1.53,2.18l-0.49,1.68l-1.0,0.73l-1.02,-1.11l-1.78,-0.16l0.67,-1.15l-0.24,-0.86l1.25,-2.13l-0.54,-1.09l-0.67,-0.08l-0.72,0.87l-0.87,-0.64l0.35,-0.69l-0.36,-1.96l0.81,-0.51l0.45,-1.51l0.92,-1.57l-0.07,-0.97l2.65,-1.33l2.75,1.35l0.77,1.05l2.12,0.35l0.76,-0.32l1.96,1.21Z",
      "name": "Ecuador"
    },
    "IT": {
      "path": "M451.59,158.63l3.48,0.94l-0.21,1.17l0.3,0.83l-1.49,-0.24l-2.04,1.1l-0.21,0.39l0.13,1.45l-0.25,1.12l0.82,1.57l2.39,1.63l1.31,2.54l2.79,2.43l2.05,0.08l0.21,0.23l-0.39,0.33l0.09,0.67l4.05,1.97l2.17,1.76l-0.16,0.36l-1.17,-1.08l-2.18,-0.49l-0.44,0.2l-1.05,1.91l0.14,0.54l1.57,0.95l-0.19,0.98l-1.06,0.33l-1.25,2.34l-0.37,0.08l0.0,-0.33l1.0,-2.45l-1.73,-3.17l-1.12,-0.51l-0.88,-1.33l-1.51,-0.51l-1.27,-1.25l-1.75,-0.18l-4.12,-3.21l-1.62,-1.65l-1.03,-3.19l-3.53,-1.36l-1.3,0.51l-1.69,1.41l0.16,-0.72l-0.28,-0.47l-1.14,-0.33l-0.53,-1.96l0.72,-0.78l0.04,-0.48l-0.65,-1.17l0.8,0.39l1.4,-0.23l1.11,-0.84l0.52,0.35l1.19,-0.1l0.75,-1.2l1.53,0.33l1.36,-0.56l0.35,-1.14l1.08,0.32l0.68,-0.64l1.98,-0.44l0.42,0.82ZM459.19,184.75l-0.65,1.65l0.32,1.05l-0.31,0.89l-1.5,-0.85l-4.5,-1.67l0.19,-0.82l2.67,0.23l3.78,-0.48ZM443.93,176.05l1.18,1.66l-0.3,3.32l-1.06,-0.01l-0.77,0.73l-0.53,-0.44l-0.1,-3.37l-0.39,-1.22l1.04,0.01l0.92,-0.68Z",
      "name": "Italy"
    },
    "VN": {
      "path": "M690.56,230.25l-2.7,1.82l-2.09,2.46l-0.63,1.95l4.31,6.45l2.32,1.65l1.43,1.94l1.11,4.59l-0.32,4.24l-1.93,1.54l-2.84,1.61l-2.11,2.15l-2.73,2.06l-0.59,-1.05l0.63,-1.53l-0.13,-0.47l-1.34,-1.04l1.51,-0.71l2.55,-0.18l0.3,-0.63l-0.82,-1.14l4.0,-2.07l0.31,-3.05l-0.57,-1.77l0.42,-2.66l-0.73,-1.97l-1.86,-1.76l-3.63,-5.29l-2.72,-1.46l0.36,-0.47l1.5,-0.64l0.21,-0.52l-0.97,-2.27l-0.37,-0.24l-2.83,-0.02l-2.24,-3.9l0.83,-0.4l4.39,-0.29l2.06,-1.31l1.15,0.89l1.88,0.4l-0.17,1.51l1.35,1.16l1.67,0.45Z",
      "name": "Vietnam"
    },
    "SB": {
      "path": "M826.69,311.6l-0.61,0.09l-0.2,-0.33l0.37,0.15l0.44,0.09ZM824.18,307.38l-0.26,-0.3l-0.31,-0.91l0.03,0.0l0.54,1.21ZM823.04,309.33l-1.66,-0.22l-0.2,-0.52l1.16,0.28l0.69,0.46ZM819.28,304.68l1.14,0.65l0.02,0.03l-0.81,-0.44l-0.35,-0.23Z",
      "name": "Solomon Is."
    },
    "ET": {
      "path": "M516.04,247.79l1.1,0.84l1.63,-0.45l0.68,0.47l1.63,0.03l2.01,0.94l1.73,1.66l1.64,2.07l-1.52,2.04l0.16,1.72l0.39,0.38l2.05,0.0l-0.36,1.03l2.86,3.58l8.32,3.08l1.31,0.02l-6.32,6.75l-3.1,0.11l-2.36,1.77l-1.47,0.04l-0.86,0.79l-1.38,-0.0l-1.32,-0.81l-2.29,1.05l-0.76,0.98l-3.29,-0.41l-3.07,-2.07l-1.8,-0.07l-0.62,-0.6l0.0,-1.24l-0.28,-0.38l-1.15,-0.37l-1.4,-2.59l-1.19,-0.68l-0.47,-1.0l-1.27,-1.23l-1.16,-0.22l0.43,-0.72l1.45,-0.28l0.41,-0.95l-0.03,-2.21l0.68,-2.44l1.05,-0.63l1.43,-3.06l1.57,-1.37l1.02,-2.51l0.35,-1.88l2.52,0.46l0.44,-0.24l0.58,-1.43Z",
      "name": "Ethiopia"
    },
    "SO": {
      "path": "M525.13,288.48l-1.13,-1.57l-0.03,-8.86l2.66,-3.38l1.67,-0.13l2.13,-1.69l3.41,-0.23l7.08,-7.55l2.91,-3.69l0.08,-4.82l2.98,-0.67l1.24,-0.86l0.45,-0.0l-0.2,3.0l-1.21,3.62l-2.73,5.97l-2.13,3.65l-5.03,6.16l-8.56,6.4l-2.78,3.08l-0.8,1.56Z",
      "name": "Somalia"
    },
    "ZW": {
      "path": "M498.91,341.09l-1.11,-0.22l-0.92,0.28l-2.09,-0.44l-1.5,-1.11l-1.89,-0.43l-0.62,-1.4l-0.01,-0.84l-0.3,-0.38l-0.97,-0.25l-2.71,-2.74l-1.92,-3.32l3.83,0.45l3.73,-3.82l1.08,-0.44l0.26,-0.77l1.25,-0.9l1.41,-0.26l0.5,0.89l1.99,-0.05l1.72,1.17l1.11,0.17l1.05,0.66l0.01,2.99l-0.59,3.76l0.38,0.86l-0.23,1.23l-0.39,0.35l-0.63,1.81l-2.43,2.75Z",
      "name": "Zimbabwe"
    },
    "ES": {
      "path": "M416.0,169.21l1.07,1.17l4.61,1.38l1.06,-0.57l2.6,1.26l2.71,-0.3l0.09,1.12l-2.14,1.8l-3.11,0.61l-0.31,0.31l-0.2,0.89l-1.54,1.69l-0.97,2.4l0.84,1.74l-1.32,1.27l-0.48,1.68l-1.88,0.65l-1.66,2.07l-5.36,-0.01l-1.79,1.08l-0.89,0.98l-0.88,-0.17l-0.79,-0.82l-0.68,-1.59l-2.37,-0.63l-0.11,-0.5l1.21,-1.82l-0.77,-1.13l0.61,-1.68l-0.76,-1.62l0.87,-0.49l0.09,-1.25l0.42,-0.6l0.03,-2.11l0.99,-0.69l0.13,-0.5l-1.03,-1.73l-1.46,-0.11l-0.61,0.38l-1.06,0.0l-0.52,-1.23l-0.53,-0.21l-1.32,0.67l-0.01,-1.49l-0.75,-0.96l3.03,-1.88l2.99,0.53l3.32,-0.02l2.63,0.51l6.01,-0.06Z",
      "name": "Spain"
    },
    "ER": {
      "path": "M520.38,246.23l3.42,2.43l3.5,3.77l0.84,0.54l-0.95,-0.01l-3.51,-3.89l-2.33,-1.15l-1.73,-0.07l-0.91,-0.51l-1.26,0.51l-1.34,-1.02l-0.61,0.17l-0.66,1.61l-2.35,-0.43l-0.17,-0.67l1.29,-5.29l0.61,-0.61l1.95,-0.53l0.87,-1.01l1.17,2.41l0.68,2.33l1.49,1.43Z",
      "name": "Eritrea"
    },
    "ME": {
      "path": "M468.91,172.53l-1.22,-1.02l0.47,-1.81l0.89,-0.72l2.26,1.51l-0.5,0.57l-0.75,-0.27l-1.14,1.73Z",
      "name": "Montenegro"
    },
    "MD": {
      "path": "M488.41,153.73l1.4,-0.27l1.72,0.93l1.07,0.15l0.85,0.65l-0.14,0.84l0.96,0.85l1.12,2.47l-1.15,-0.07l-0.66,-0.41l-0.52,0.25l-0.09,0.86l-1.08,1.89l-0.27,-0.86l0.25,-1.34l-0.16,-1.6l-3.29,-4.34Z",
      "name": "Moldova"
    },
    "MG": {
      "path": "M545.91,319.14l0.4,3.03l0.62,1.21l-0.21,1.02l-0.57,-0.8l-0.69,-0.01l-0.47,0.76l0.41,2.12l-0.18,0.87l-0.73,0.78l-0.15,2.14l-4.71,15.2l-1.06,2.88l-3.92,1.64l-3.12,-1.49l-0.6,-1.21l-0.19,-2.4l-0.86,-2.05l-0.21,-1.77l0.38,-1.62l1.21,-0.75l0.01,-0.76l1.19,-2.04l0.23,-1.66l-1.06,-2.99l-0.19,-2.21l0.81,-1.33l0.32,-1.46l4.63,-1.22l3.44,-3.0l0.85,-1.4l-0.08,-0.7l0.78,-0.04l1.38,-1.77l0.13,-1.64l0.45,-0.61l1.16,1.69l0.59,1.6Z",
      "name": "Madagascar"
    },
    "MA": {
      "path": "M378.78,230.02l0.06,-0.59l0.92,-0.73l0.82,-1.37l-0.09,-1.04l0.79,-1.7l1.31,-1.58l0.96,-0.59l0.66,-1.55l0.09,-1.47l0.81,-1.48l1.72,-1.07l1.55,-2.69l1.16,-0.96l2.44,-0.39l1.94,-1.82l1.31,-0.78l2.09,-2.28l-0.51,-3.65l1.24,-3.7l1.5,-1.75l4.46,-2.57l2.37,-4.47l1.44,0.01l1.68,1.21l2.32,-0.19l3.47,0.65l0.8,1.54l0.16,1.71l0.86,2.96l0.56,0.59l-0.26,0.61l-3.05,0.44l-1.26,1.05l-1.33,0.22l-0.33,0.37l-0.09,1.78l-2.68,1.0l-1.07,1.42l-4.47,1.13l-4.04,2.01l-0.54,4.64l-1.15,0.06l-0.92,0.61l-1.96,-0.35l-2.42,0.54l-0.74,1.9l-0.86,0.4l-1.14,3.26l-3.53,3.01l-0.8,3.55l-0.96,1.1l-0.29,0.82l-4.95,0.18Z",
      "name": "Morocco"
    },
    "UZ": {
      "path": "M598.64,172.75l-1.63,1.52l0.06,0.64l1.85,1.12l1.97,-0.64l2.21,1.17l-2.52,1.68l-2.59,-0.22l-0.18,-0.41l0.46,-1.23l-0.45,-0.53l-3.35,0.69l-2.1,3.51l-1.87,-0.12l-1.03,1.51l0.22,0.55l1.64,0.62l0.46,1.83l-1.19,2.49l-2.66,-0.53l0.05,-1.36l-0.26,-0.39l-3.3,-1.23l-2.56,-1.4l-4.4,-3.34l-1.34,-3.14l-1.08,-0.6l-2.58,0.13l-0.69,-0.44l-0.47,-2.52l-3.37,-1.6l-0.43,0.05l-2.07,1.72l-2.1,1.01l-0.21,0.47l0.28,1.01l-1.91,0.03l-0.09,-10.5l5.99,-1.7l6.19,3.54l2.71,2.84l7.05,-0.67l2.71,2.01l-0.17,2.81l0.39,0.42l0.9,0.02l0.44,2.14l0.38,0.32l2.94,0.09l0.95,1.42l1.28,-0.24l1.05,-2.04l4.43,-2.5Z",
      "name": "Uzbekistan"
    },
    "MM": {
      "path": "M673.9,230.21l-1.97,1.57l-0.57,0.96l-1.4,0.6l-1.36,1.05l-1.99,0.36l-1.08,2.66l-0.91,0.4l-0.19,0.55l1.21,2.27l2.52,3.43l-0.79,1.91l-0.74,0.41l-0.17,0.52l0.65,1.37l1.61,1.95l0.25,2.58l0.9,2.13l-1.92,3.57l0.68,-2.25l-0.81,-1.74l0.19,-2.65l-1.05,-1.53l-1.24,-6.17l-1.12,-2.26l-0.6,-0.13l-4.34,3.02l-2.39,-0.65l0.77,-2.84l-0.52,-2.61l-1.91,-2.96l0.25,-0.75l-0.29,-0.51l-1.33,-0.3l-1.61,-1.93l-0.1,-1.3l0.82,-0.24l0.04,-1.64l1.02,-0.52l0.21,-0.45l-0.23,-0.95l0.54,-0.96l0.08,-2.22l1.46,0.45l0.47,-0.2l1.12,-2.19l0.16,-1.35l1.33,-2.16l-0.0,-1.52l2.89,-1.66l1.63,0.44l0.5,-0.44l-0.17,-1.4l0.64,-0.36l0.08,-1.04l0.77,-0.11l0.71,1.35l1.06,0.69l-0.03,3.86l-2.38,2.37l-0.3,3.15l0.46,0.43l2.28,-0.38l0.51,2.08l1.47,0.67l-0.6,1.8l0.19,0.48l2.97,1.48l1.64,-0.55l0.02,0.32Z",
      "name": "Myanmar"
    },
    "ML": {
      "path": "M392.61,254.08l-0.19,-2.37l-0.99,-0.87l-0.44,-1.3l-0.09,-1.28l0.81,-0.58l0.35,-1.24l2.37,0.65l1.31,-0.47l0.86,0.15l0.66,-0.56l9.83,-0.04l0.38,-0.28l0.56,-1.8l-0.44,-0.65l-2.35,-21.95l3.27,-0.04l16.7,11.38l0.74,1.31l2.5,1.09l0.02,1.38l0.44,0.39l2.34,-0.21l0.01,5.38l-1.28,1.61l-0.26,1.49l-5.31,0.57l-1.07,0.92l-2.9,0.1l-0.86,-0.48l-1.38,0.36l-2.4,1.08l-0.6,0.87l-1.85,1.09l-0.43,0.7l-0.79,0.39l-1.44,-0.21l-0.81,0.84l-0.34,1.64l-1.91,2.02l-0.06,1.03l-0.67,1.22l0.13,1.16l-0.97,0.39l-0.23,-0.64l-0.52,-0.24l-1.35,0.4l-0.34,0.55l-2.69,-0.28l-0.37,-0.35l-0.02,-0.9l-0.65,-0.35l0.45,-0.64l-0.03,-0.53l-2.12,-2.44l-0.76,-0.01l-2.0,1.16l-0.78,-0.15l-0.8,-0.67l-1.21,0.23Z",
      "name": "Mali"
    },
    "MN": {
      "path": "M676.61,146.48l3.81,1.68l5.67,-1.0l2.37,0.41l2.34,1.5l1.79,1.75l2.29,-0.03l3.12,0.52l2.47,-0.81l3.41,-0.59l3.53,-2.21l1.25,0.29l1.53,1.13l2.27,-0.21l-2.66,5.01l0.64,1.68l0.47,0.21l1.32,-0.38l2.38,0.48l2.02,-1.11l1.76,0.89l2.06,2.02l-0.13,0.53l-1.72,-0.29l-3.77,0.46l-1.88,0.99l-1.76,1.99l-3.71,1.17l-2.45,1.6l-3.83,-0.87l-0.41,0.17l-1.31,1.99l1.04,2.24l-1.52,0.9l-1.74,1.57l-2.79,1.02l-3.78,0.13l-4.05,1.05l-2.77,1.52l-1.16,-0.85l-2.94,0.0l-3.62,-1.79l-2.58,-0.49l-3.4,0.41l-5.12,-0.67l-2.63,0.06l-1.31,-1.6l-1.4,-3.0l-1.48,-0.33l-3.13,-1.94l-6.16,-0.93l-0.71,-1.06l0.86,-3.82l-1.93,-2.71l-3.5,-1.18l-1.95,-1.58l-0.5,-1.72l2.34,-0.52l4.75,-2.8l3.62,-1.47l2.18,0.97l2.46,0.05l1.81,1.53l2.46,0.12l3.95,0.71l2.43,-2.28l0.08,-0.48l-0.9,-1.72l2.24,-2.98l2.62,1.27l4.94,1.17l0.43,2.24Z",
      "name": "Mongolia"
    },
    "MK": {
      "path": "M472.8,173.98l0.49,-0.71l3.57,-0.71l1.0,0.77l0.13,1.45l-0.65,0.53l-1.15,-0.05l-1.12,0.67l-1.39,0.22l-0.79,-0.55l-0.29,-1.03l0.19,-0.6Z",
      "name": "Macedonia"
    },
    "MW": {
      "path": "M505.5,309.31l0.85,1.95l0.15,2.86l-0.69,1.65l0.71,1.8l0.06,1.28l0.49,0.64l0.07,1.06l0.4,0.55l0.8,-0.23l0.55,0.61l0.69,-0.21l0.34,0.6l0.19,2.94l-1.04,0.62l-0.54,1.25l-1.11,-1.08l-0.16,-1.56l0.51,-1.31l-0.32,-1.3l-0.99,-0.65l-0.82,0.12l-2.36,-1.64l0.63,-1.96l0.82,-1.18l-0.46,-2.01l0.9,-2.86l-0.94,-2.51l0.96,0.18l0.29,0.4Z",
      "name": "Malawi"
    },
    "MR": {
      "path": "M407.36,220.66l-2.58,0.03l-0.39,0.44l2.42,22.56l0.36,0.43l-0.39,1.24l-9.75,0.04l-0.56,0.53l-0.91,-0.11l-1.27,0.45l-1.61,-0.66l-0.97,0.03l-0.36,0.29l-0.38,1.35l-0.42,0.23l-2.93,-3.4l-2.96,-1.52l-1.62,-0.03l-1.27,0.54l-1.12,-0.2l-0.65,0.4l-0.08,-0.49l0.68,-1.29l0.31,-2.43l-0.57,-3.91l0.23,-1.21l-0.69,-1.5l-1.15,-1.02l0.25,-0.39l9.58,0.02l0.4,-0.45l-0.46,-3.68l0.47,-1.04l2.12,-0.21l0.36,-0.4l-0.08,-6.4l7.81,0.13l0.41,-0.4l0.01,-3.31l7.76,5.35Z",
      "name": "Mauritania"
    },
    "UG": {
      "path": "M498.55,276.32l0.7,-0.46l1.65,0.5l1.96,-0.57l1.7,0.01l1.45,-0.98l0.91,1.33l1.33,3.95l-2.57,4.03l-1.46,-0.4l-2.54,0.91l-1.37,1.61l-0.01,0.81l-2.42,-0.01l-2.26,1.01l-0.17,-1.59l0.58,-1.04l0.14,-1.94l1.37,-2.28l1.78,-1.58l-0.17,-0.65l-0.72,-0.24l0.13,-2.43Z",
      "name": "Uganda"
    },
    "MY": {
      "path": "M717.47,273.46l-1.39,0.65l-2.12,-0.41l-2.88,-0.0l-0.38,0.28l-0.84,2.75l-0.99,0.96l-1.21,3.29l-1.73,0.45l-2.45,-0.68l-1.39,0.31l-1.33,1.15l-1.59,-0.14l-1.41,0.44l-1.44,-1.19l-0.18,-0.73l1.34,0.53l1.93,-0.47l0.75,-2.22l4.02,-1.03l2.75,-3.21l0.82,0.94l0.64,-0.05l0.4,-0.65l0.96,0.06l0.42,-0.36l0.24,-2.68l1.81,-1.64l1.21,-1.86l0.63,-0.01l1.07,1.05l0.34,1.28l3.44,1.35l-0.06,0.35l-1.37,0.1l-0.35,0.54l0.32,0.88ZM673.68,269.59l0.17,1.09l0.47,0.33l1.65,-0.3l0.87,-0.94l1.61,1.52l0.98,1.56l-0.12,2.81l0.41,2.29l0.95,0.9l0.88,2.44l-1.27,0.12l-5.1,-3.67l-0.34,-1.29l-1.37,-1.59l-0.33,-1.97l-0.88,-1.4l0.25,-1.68l-0.46,-1.05l1.63,0.84Z",
      "name": "Malaysia"
    },
    "MX": {
      "path": "M133.12,200.41l0.2,0.47l9.63,3.33l6.96,-0.02l0.4,-0.4l0.0,-0.74l3.77,0.0l3.55,2.93l1.39,2.83l1.52,1.04l2.08,0.82l0.47,-0.14l1.46,-2.0l1.73,-0.04l1.59,0.98l2.05,3.35l1.47,1.56l1.26,3.14l2.18,1.02l2.26,0.58l-1.18,3.72l-0.42,5.04l1.79,4.89l1.62,1.89l0.61,1.52l1.2,1.42l2.55,0.66l1.37,1.1l7.54,-1.89l1.86,-1.3l1.14,-4.3l4.1,-1.21l3.57,-0.11l0.32,0.3l-0.06,0.94l-1.26,1.45l-0.67,1.71l0.38,0.7l-0.72,2.27l-0.49,-0.3l-1.0,0.08l-1.0,1.39l-0.47,-0.11l-0.53,0.47l-4.26,-0.02l-0.4,0.4l-0.0,1.06l-1.1,0.26l0.1,0.44l1.82,1.44l0.56,0.91l-3.19,0.21l-1.21,2.09l0.24,0.72l-0.2,0.44l-2.24,-2.18l-1.45,-0.93l-2.22,-0.69l-1.52,0.22l-3.07,1.16l-10.55,-3.85l-2.86,-1.96l-3.78,-0.92l-1.08,-1.19l-2.62,-1.43l-1.18,-1.54l-0.38,-0.81l0.66,-0.63l-0.18,-0.53l0.52,-0.76l0.01,-0.91l-2.0,-3.82l-2.21,-2.63l-2.53,-2.09l-1.19,-1.62l-2.2,-1.17l-0.3,-0.43l0.34,-1.48l-0.21,-0.45l-1.23,-0.6l-1.36,-1.2l-0.59,-1.78l-1.54,-0.47l-2.44,-2.55l-0.16,-0.9l-1.33,-2.03l-0.84,-1.99l-0.16,-1.33l-1.81,-1.1l-0.97,0.05l-1.31,-0.7l-0.57,0.22l-0.4,1.12l0.72,3.77l3.51,3.89l0.28,0.78l0.53,0.26l0.41,1.43l1.33,1.73l1.58,1.41l0.8,2.39l1.43,2.41l0.13,1.32l0.37,0.36l1.04,0.08l1.67,2.28l-0.85,0.76l-0.66,-1.51l-1.68,-1.54l-2.91,-1.87l0.06,-1.82l-0.54,-1.68l-2.91,-2.03l-0.55,0.09l-1.95,-1.1l-0.88,-0.94l0.68,-0.08l0.93,-1.01l0.08,-1.78l-1.93,-1.94l-1.46,-0.77l-3.75,-7.56l4.88,-0.42Z",
      "name": "Mexico"
    },
    "IL": {
      "path": "M507.76,203.05l0.4,-0.78l0.18,0.4l-0.33,1.03l0.52,0.44l0.68,-0.22l-0.86,3.6l-1.16,-3.32l0.59,-0.74l-0.03,-0.41ZM508.73,200.34l0.37,-1.02l0.64,0.0l0.52,-0.51l-0.49,1.53l-0.56,-0.24l-0.48,0.23Z",
      "name": "Israel"
    },
    "FR": {
      "path": "M444.48,172.62l-0.64,1.78l-0.58,-0.31l-0.49,-1.72l0.4,-0.89l1.0,-0.72l0.3,1.85ZM429.64,147.1l1.78,1.58l1.46,-0.13l2.1,1.42l1.35,0.27l1.23,0.83l3.04,0.5l-1.03,1.85l-0.3,2.12l-0.41,0.32l-0.95,-0.24l-0.5,0.43l0.06,0.61l-1.81,1.92l-0.04,1.42l0.55,0.38l0.88,-0.36l0.61,0.97l-0.03,1.0l0.57,0.91l-0.75,1.09l0.65,2.39l1.27,0.57l-0.18,0.82l-2.01,1.53l-4.77,-0.8l-3.82,1.0l-0.53,1.85l-2.49,0.34l-2.71,-1.31l-1.16,0.57l-4.31,-1.29l-0.72,-0.86l1.19,-1.78l0.39,-6.45l-2.58,-3.3l-1.9,-1.66l-3.72,-1.23l-0.19,-1.72l2.81,-0.61l4.12,0.81l0.47,-0.48l-0.6,-2.77l1.94,0.95l5.83,-2.54l0.92,-2.74l1.6,-0.49l0.24,0.78l1.36,0.33l1.05,1.19ZM289.01,278.39l-0.81,0.8l-0.78,0.12l-0.5,-0.66l-0.56,-0.1l-0.91,0.6l-0.46,-0.22l1.09,-2.96l-0.96,-1.77l-0.17,-1.49l1.07,-1.77l2.32,0.75l2.51,2.01l0.3,0.74l-2.14,3.96Z",
      "name": "France"
    },
    "XS": {
      "path": "M531.15,258.94l1.51,0.12l5.13,-0.95l5.3,-1.48l-0.01,4.4l-2.67,3.39l-1.85,0.01l-8.04,-2.94l-2.55,-3.17l1.12,-1.71l2.04,2.34Z",
      "name": "Somaliland"
    },
    "FI": {
      "path": "M492.17,76.39l-0.23,3.5l3.52,2.63l-2.08,2.88l-0.02,0.44l2.8,4.56l-1.59,3.31l2.16,3.24l-0.94,2.39l0.14,0.47l3.44,2.51l-0.77,1.62l-7.52,6.95l-4.5,0.31l-4.38,1.37l-3.8,0.74l-1.44,-1.96l-2.17,-1.11l0.5,-3.66l-1.16,-3.33l1.09,-2.08l2.21,-2.42l5.67,-4.32l1.64,-0.83l0.21,-0.42l-0.46,-2.02l-3.38,-1.89l-0.75,-1.43l-0.22,-6.74l-6.79,-4.8l0.8,-0.62l2.54,2.12l3.46,-0.12l3.0,0.96l2.51,-2.11l1.17,-3.08l3.55,-1.38l2.76,1.53l-0.95,2.79Z",
      "name": "Finland"
    },
    "FJ": {
      "path": "M869.95,326.98l-1.21,0.41l-0.08,-0.23l2.97,-1.21l-0.14,0.42l-1.54,0.61ZM867.58,329.25l0.43,0.37l-0.27,0.88l-1.24,0.28l-1.04,-0.24l-0.14,-0.66l0.63,-0.58l0.92,0.26l0.7,-0.31Z",
      "name": "Fiji"
    },
    "FK": {
      "path": "M274.36,425.85l1.44,1.08l-0.47,0.73l-3.0,0.89l-0.96,-1.0l-0.52,-0.05l-1.83,1.29l-0.73,-0.88l2.46,-1.64l1.93,0.76l1.67,-1.19Z",
      "name": "Falkland Is."
    },
    "NI": {
      "path": "M202.33,252.67l0.81,-0.18l1.03,-1.02l-0.04,-0.88l0.68,-0.0l0.63,-0.54l0.97,0.22l1.53,-1.26l0.58,-0.99l1.17,0.34l2.41,-0.94l0.13,1.32l-0.81,1.94l0.1,2.74l-0.36,0.37l-0.11,1.75l-0.47,0.81l0.18,1.14l-1.73,-0.85l-0.71,0.27l-1.47,-0.6l-0.52,0.16l-4.01,-3.81Z",
      "name": "Nicaragua"
    },
    "NL": {
      "path": "M430.31,143.39l0.6,-0.5l2.13,-4.8l3.2,-1.33l1.74,0.08l0.33,0.8l-0.59,2.92l-0.5,0.99l-1.26,0.0l-0.4,0.45l0.33,2.7l-2.2,-1.78l-2.62,0.58l-0.75,-0.11Z",
      "name": "Netherlands"
    },
    "NO": {
      "path": "M491.44,67.41l6.8,2.89l-2.29,0.86l-0.15,0.65l2.33,2.38l-4.98,1.79l0.84,-2.45l-0.18,-0.48l-3.55,-1.8l-3.89,1.52l-1.42,3.38l-2.12,1.72l-2.64,-1.0l-3.11,0.21l-2.66,-2.22l-0.5,-0.01l-1.41,1.1l-1.44,0.17l-0.35,0.35l-0.32,2.47l-4.32,-0.64l-0.44,0.29l-0.58,2.11l-2.45,0.2l-4.15,7.68l-3.88,5.76l0.78,1.62l-0.64,1.16l-2.24,-0.06l-0.38,0.24l-1.66,3.89l0.15,5.17l1.57,2.04l-0.78,4.16l-2.02,2.48l-0.85,1.63l-1.3,-1.75l-0.58,-0.07l-4.87,4.19l-3.1,0.79l-3.16,-1.7l-0.85,-3.77l-0.77,-8.55l2.14,-2.31l6.55,-3.27l5.02,-4.17l10.63,-13.84l10.98,-8.7l5.35,-1.91l4.34,0.12l3.69,-3.64l4.49,0.19l4.37,-0.89ZM484.55,20.04l4.26,1.75l-3.1,2.55l-7.1,0.65l-7.08,-0.9l-0.37,-1.31l-0.37,-0.29l-3.44,-0.1l-2.08,-2.0l6.87,-1.44l3.9,1.31l2.39,-1.64l6.13,1.4ZM481.69,33.93l-4.45,1.74l-3.54,-0.99l1.12,-0.9l0.05,-0.58l-1.06,-1.22l4.22,-0.89l1.09,1.97l2.57,0.87ZM466.44,24.04l7.43,3.77l-5.41,1.86l-1.58,4.08l-2.26,1.2l-1.12,4.11l-2.61,0.18l-4.79,-2.86l1.84,-1.54l-0.1,-0.68l-3.69,-1.53l-4.77,-4.51l-1.73,-3.89l6.11,-1.82l1.54,1.92l3.57,-0.08l1.2,-1.96l3.32,-0.18l3.05,1.92Z",
      "name": "Norway"
    },
    "NA": {
      "path": "M474.26,330.66l-0.97,0.04l-0.38,0.4l-0.07,8.9l-2.09,0.08l-0.39,0.4l-0.0,17.42l-1.98,1.23l-1.17,0.17l-2.44,-0.66l-0.48,-1.13l-0.99,-0.74l-0.54,0.05l-0.9,1.01l-1.53,-1.68l-0.93,-1.88l-1.99,-8.56l-0.06,-3.12l-0.33,-1.52l-2.3,-3.34l-1.91,-4.83l-1.96,-2.43l-0.12,-1.57l2.33,-0.79l1.43,0.07l1.81,1.13l10.23,-0.25l1.84,1.23l5.87,0.35ZM474.66,330.64l6.51,-1.6l1.9,0.39l-1.69,0.4l-1.31,0.83l-1.12,-0.94l-4.29,0.92Z",
      "name": "Namibia"
    },
    "VU": {
      "path": "M839.04,322.8l0.22,1.14l-0.44,0.03l-0.2,-1.45l0.42,0.27Z",
      "name": "Vanuatu"
    },
    "NC": {
      "path": "M838.78,341.24l-0.33,0.22l-2.9,-1.75l-3.26,-3.37l1.65,0.83l4.85,4.07Z",
      "name": "New Caledonia"
    },
    "NE": {
      "path": "M454.75,226.53l1.33,1.37l0.48,0.07l1.27,-0.7l0.53,3.52l0.94,0.83l0.17,0.92l0.81,0.69l-0.44,0.95l-0.96,5.26l-0.13,3.22l-3.04,2.31l-1.22,3.57l1.02,1.24l-0.0,1.46l0.39,0.4l1.13,0.04l-0.9,1.25l-1.47,-2.42l-0.86,-0.29l-2.09,1.37l-1.74,-0.67l-1.45,-0.17l-0.85,0.35l-1.36,-0.07l-1.64,1.09l-1.06,0.05l-2.94,-1.28l-1.44,0.59l-1.01,-0.03l-0.97,-0.94l-2.7,-0.98l-2.69,0.3l-0.87,0.64l-0.47,1.6l-0.75,1.16l-0.12,1.53l-1.57,-1.1l-1.31,0.24l0.03,-0.81l-0.32,-0.41l-2.59,-0.52l-0.15,-1.16l-1.35,-1.6l-0.29,-1.0l0.13,-0.84l1.29,-0.08l1.08,-0.92l3.31,-0.22l2.22,-0.41l0.32,-0.34l0.2,-1.47l1.39,-1.88l-0.01,-5.66l3.36,-1.12l7.24,-5.12l8.42,-4.92l3.69,1.06Z",
      "name": "Niger"
    },
    "NG": {
      "path": "M456.32,253.89l0.64,0.65l-0.28,1.04l-2.11,2.01l-2.03,5.18l-1.37,1.16l-1.15,3.18l-1.33,0.66l-1.46,-0.97l-1.21,0.16l-1.38,1.36l-0.91,0.24l-1.79,4.06l-2.33,0.81l-1.11,-0.07l-0.86,0.5l-1.71,-0.05l-1.19,-1.39l-0.89,-1.89l-1.77,-1.66l-3.95,-0.08l0.07,-5.21l0.42,-1.43l1.95,-2.3l-0.14,-0.91l0.43,-1.18l-0.53,-1.41l0.25,-2.92l0.72,-1.07l0.32,-1.34l0.46,-0.39l2.47,-0.28l2.34,0.89l1.15,1.02l1.28,0.04l1.22,-0.58l3.03,1.27l1.49,-0.14l1.36,-1.0l1.33,0.07l0.82,-0.35l3.45,0.8l1.82,-1.32l1.84,2.67l0.66,0.16Z",
      "name": "Nigeria"
    },
    "NZ": {
      "path": "M857.8,379.65l1.86,3.12l0.44,0.18l0.3,-0.38l0.03,-1.23l0.38,0.27l0.57,2.31l2.02,0.94l1.81,0.27l1.57,-1.06l0.7,0.18l-1.15,3.59l-1.98,0.11l-0.74,1.2l0.2,1.11l-2.42,3.98l-1.49,0.92l-1.04,-0.85l1.21,-2.05l-0.81,-2.01l-2.63,-1.25l0.04,-0.57l1.82,-1.19l0.43,-2.34l-0.16,-2.03l-0.95,-1.82l-0.06,-0.72l-3.11,-3.64l-0.79,-1.52l1.56,1.45l1.76,0.66l0.65,2.34ZM853.83,393.59l0.57,1.24l0.59,0.16l1.42,-0.97l0.46,0.79l0.0,1.03l-2.47,3.48l-1.26,1.2l-0.06,0.5l0.55,0.87l-1.41,0.07l-2.33,1.38l-2.03,5.02l-3.02,2.16l-2.06,-0.06l-1.71,-1.04l-2.47,-0.2l-0.27,-0.73l1.22,-2.1l3.05,-2.94l1.62,-0.59l4.02,-2.82l1.57,-1.67l1.07,-2.16l0.88,-0.7l0.48,-1.75l1.24,-0.97l0.35,0.79Z",
      "name": "New Zealand"
    },
    "NP": {
      "path": "M641.14,213.62l0.01,3.19l-1.74,0.04l-4.8,-0.86l-1.58,-1.39l-3.37,-0.34l-7.65,-3.7l0.8,-2.09l2.33,-1.7l1.77,0.75l2.49,1.76l1.38,0.41l0.99,1.35l1.9,0.52l1.99,1.17l5.49,0.9Z",
      "name": "Nepal"
    },
    "XK": {
      "path": "M472.77,172.64l-1.08,-1.29l0.96,-0.77l0.29,-0.83l1.98,1.64l-0.36,0.67l-1.79,0.58Z",
      "name": "Kosovo"
    },
    "CI": {
      "path": "M407.4,259.27l0.86,0.42l0.56,0.9l1.13,0.53l1.19,-0.61l0.97,-0.08l1.42,0.54l0.6,3.24l-1.03,2.08l-0.65,2.84l1.06,2.33l-0.06,0.53l-2.54,-0.47l-1.66,0.03l-3.06,0.46l-4.11,1.6l0.32,-3.06l-1.18,-1.31l-1.32,-0.66l0.42,-0.85l-0.2,-1.4l0.5,-0.67l0.01,-1.59l0.84,-0.32l0.26,-0.5l-1.15,-3.01l0.12,-0.5l0.51,-0.25l0.66,0.31l1.93,0.02l0.67,-0.71l0.71,-0.14l0.25,0.69l0.57,0.22l1.4,-0.61Z",
      "name": "C\xF4te d'Ivoire"
    },
    "CH": {
      "path": "M444.62,156.35l-0.29,0.87l0.18,0.53l1.13,0.58l1.0,0.1l-0.1,0.65l-0.79,0.38l-1.72,-0.37l-0.45,0.23l-0.45,1.04l-0.75,0.06l-0.84,-0.4l-1.32,1.0l-0.96,0.12l-0.88,-0.55l-0.81,-1.3l-0.49,-0.16l-0.63,0.26l0.02,-0.65l1.71,-1.66l0.1,-0.56l0.93,0.08l0.58,-0.46l1.99,0.02l0.66,-0.61l2.19,0.79Z",
      "name": "Switzerland"
    },
    "CO": {
      "path": "M242.07,254.93l-1.7,0.59l-0.59,1.18l-1.7,1.69l-0.38,1.93l-0.67,1.43l0.31,0.57l1.03,0.13l0.25,0.9l0.57,0.64l-0.04,2.34l1.64,1.42l3.16,-0.24l1.26,0.28l1.67,2.06l0.41,0.13l4.09,-0.39l0.45,0.22l-0.92,1.95l-0.2,1.8l0.52,1.83l0.75,1.05l-1.12,1.1l0.07,0.63l0.84,0.51l0.74,1.29l-0.39,-0.45l-0.59,-0.01l-0.71,0.74l-4.71,-0.05l-0.4,0.41l0.03,1.57l0.33,0.39l1.11,0.2l-1.68,0.4l-0.29,0.38l-0.01,1.82l1.16,1.14l0.34,1.25l-1.05,7.05l-1.04,-0.87l1.26,-1.99l-0.13,-0.56l-2.18,-1.23l-1.38,0.2l-1.14,-0.38l-1.27,0.61l-1.55,-0.26l-1.38,-2.46l-1.23,-0.75l-0.85,-1.2l-1.67,-1.19l-0.86,0.13l-2.11,-1.32l-1.01,0.31l-1.8,-0.29l-0.52,-0.91l-3.09,-1.68l0.77,-0.52l-0.1,-1.12l0.41,-0.64l1.34,-0.32l2.0,-2.88l-0.11,-0.57l-0.66,-0.43l0.39,-1.38l-0.52,-2.1l0.49,-0.83l-0.4,-2.13l-0.97,-1.35l0.17,-0.66l0.86,-0.08l0.47,-0.75l-0.46,-1.63l1.41,-0.07l1.8,-1.69l0.93,-0.24l0.3,-0.38l0.45,-2.76l1.22,-1.0l1.44,-0.04l0.45,-0.5l1.91,0.12l2.93,-1.84l1.15,-1.14l0.91,0.46l-0.25,0.45Z",
      "name": "Colombia"
    },
    "CN": {
      "path": "M740.23,148.97l4.57,1.3l2.8,2.17l0.98,2.9l0.38,0.27l3.8,0.0l2.32,-1.28l3.29,-0.75l-0.96,2.09l-1.02,1.28l-0.85,3.4l-1.52,2.73l-2.76,-0.5l-2.4,1.13l-0.21,0.45l0.64,2.57l-0.32,3.2l-0.94,0.06l-0.37,0.89l-0.91,-1.01l-0.64,0.07l-0.92,1.57l-3.73,1.25l-0.26,0.48l0.26,1.06l-1.5,-0.08l-1.09,-0.86l-0.56,0.06l-1.67,2.06l-2.7,1.56l-2.03,1.88l-3.4,0.83l-1.93,1.4l-1.15,0.34l0.33,-0.7l-0.41,-0.89l1.79,-1.79l0.02,-0.54l-1.32,-1.56l-0.48,-0.1l-2.24,1.09l-2.83,2.06l-1.51,1.83l-2.28,0.13l-1.55,1.49l-0.04,0.5l1.32,1.97l2.0,0.58l0.31,1.35l1.98,0.84l3.0,-1.96l2.0,1.02l1.49,0.11l0.22,0.83l-3.37,0.86l-1.12,1.48l-2.5,1.52l-1.29,1.99l0.14,0.56l2.57,1.48l0.97,2.7l3.17,4.63l-0.03,1.66l-1.35,0.65l-0.2,0.51l0.6,1.47l1.4,0.91l-0.89,3.82l-1.43,0.38l-3.85,6.44l-2.27,3.11l-6.78,4.57l-2.73,0.29l-1.45,1.04l-0.62,-0.61l-0.55,-0.01l-1.36,1.25l-3.39,1.27l-2.61,0.4l-1.1,2.79l-0.81,0.09l-0.49,-1.42l0.5,-0.85l-0.25,-0.59l-3.36,-0.84l-1.3,0.4l-2.31,-0.62l-0.94,-0.84l0.33,-1.28l-0.3,-0.49l-2.19,-0.46l-1.13,-0.93l-0.47,-0.02l-2.06,1.36l-4.29,0.28l-2.76,1.05l-0.28,0.43l0.32,2.53l-0.59,-0.03l-0.19,-1.34l-0.55,-0.34l-1.68,0.7l-2.46,-1.23l0.62,-1.87l-0.26,-0.51l-1.37,-0.44l-0.54,-2.22l-0.45,-0.3l-2.13,0.35l0.24,-2.48l2.39,-2.4l0.03,-4.31l-1.19,-0.92l-0.78,-1.49l-0.41,-0.21l-1.41,0.19l-1.98,-0.3l0.46,-1.07l-1.17,-1.7l-0.55,-0.11l-1.63,1.05l-2.25,-0.57l-2.89,1.73l-2.25,1.98l-1.75,0.29l-1.17,-0.71l-3.31,-0.65l-1.48,0.79l-1.04,1.27l-0.12,-1.17l-0.54,-0.34l-1.44,0.54l-5.55,-0.86l-1.98,-1.16l-1.89,-0.54l-0.99,-1.35l-1.34,-0.37l-2.55,-1.79l-2.01,-0.84l-1.21,0.56l-5.57,-3.45l-0.53,-2.31l1.19,0.25l0.48,-0.37l0.08,-1.42l-0.98,-1.56l0.15,-2.44l-2.69,-3.32l-4.12,-1.23l-0.67,-2.0l-1.92,-1.48l-0.38,-0.7l-0.51,-3.01l-1.52,-0.66l-0.7,0.13l-0.48,-2.05l0.55,-0.51l-0.09,-0.82l2.03,-1.19l1.6,-0.54l2.56,0.38l0.42,-0.22l0.85,-1.7l3.0,-0.33l1.1,-1.26l4.05,-1.77l0.39,-0.91l-0.17,-1.44l1.45,-0.67l0.2,-0.52l-2.07,-4.9l4.51,-1.12l1.37,-0.73l1.89,-5.51l4.98,0.86l1.51,-1.7l0.11,-2.87l1.99,-0.38l1.83,-2.06l0.49,-0.13l0.68,2.08l2.23,1.77l3.44,1.16l1.55,2.29l-0.92,3.49l0.96,1.67l6.54,1.13l2.95,1.87l1.47,0.35l1.06,2.62l1.53,1.91l3.05,0.08l5.14,0.67l3.37,-0.41l2.36,0.43l3.65,1.8l3.06,0.04l1.45,0.88l2.87,-1.59l3.95,-1.02l3.83,-0.14l3.06,-1.14l1.77,-1.6l1.72,-1.01l0.17,-0.49l-1.1,-2.05l1.02,-1.54l4.02,0.8l2.45,-1.61l3.76,-1.19l1.96,-2.13l1.63,-0.83l3.51,-0.4l1.92,0.34l0.46,-0.3l0.17,-1.5l-2.27,-2.22l-2.11,-1.09l-2.18,1.11l-2.32,-0.47l-1.29,0.32l-0.4,-0.82l2.73,-5.16l3.02,1.06l3.53,-2.06l0.18,-1.68l2.16,-3.35l1.49,-1.35l-0.03,-1.85l-1.07,-0.85l1.54,-1.26l2.98,-0.59l3.23,-0.09l3.64,0.99l2.04,1.16l3.29,6.71l0.92,3.19ZM696.92,237.31l-1.87,1.08l-1.63,-0.64l-0.06,-1.79l1.03,-0.98l2.58,-0.69l1.16,0.05l0.3,0.54l-0.98,1.06l-0.53,1.37Z",
      "name": "China"
    },
    "CM": {
      "path": "M457.92,257.49l1.05,1.91l-1.4,0.16l-1.05,-0.23l-0.45,0.22l-0.54,1.19l0.08,0.45l1.48,1.47l1.05,0.45l1.01,2.46l-1.52,2.99l-0.68,0.68l-0.13,3.69l2.38,3.84l1.09,0.8l0.24,2.48l-3.67,-1.14l-11.27,-0.13l0.23,-1.79l-0.98,-1.66l-1.19,-0.54l-0.44,-0.97l-0.6,-0.42l1.71,-4.27l0.75,-0.13l1.38,-1.36l0.65,-0.03l1.71,0.99l1.93,-1.12l1.14,-3.18l1.38,-1.17l2.0,-5.14l2.17,-2.13l0.3,-1.64l-0.86,-0.88l0.03,-0.33l0.94,1.28l0.07,3.22Z",
      "name": "Cameroon"
    },
    "CL": {
      "path": "M246.5,429.18l-3.14,1.83l-0.57,3.16l-0.64,0.05l-2.68,-1.06l-2.82,-2.33l-3.04,-1.89l-0.69,-1.85l0.63,-2.14l-1.21,-2.11l-0.31,-5.37l1.01,-2.91l2.57,-2.38l-0.18,-0.68l-3.16,-0.77l2.05,-2.47l0.77,-4.65l2.32,0.9l0.54,-0.29l1.31,-6.31l-0.22,-0.44l-1.68,-0.8l-0.56,0.28l-0.7,3.36l-0.81,-0.22l1.56,-9.41l1.15,-2.24l-0.71,-2.82l-0.18,-2.84l1.01,-0.33l3.26,-9.14l1.07,-4.22l-0.56,-4.21l0.74,-2.34l-0.29,-3.27l1.46,-3.34l2.04,-16.59l-0.66,-7.76l1.03,-0.53l0.54,-0.9l0.79,1.14l0.32,1.78l1.25,1.16l-0.69,2.55l1.33,2.9l0.97,3.59l0.46,0.29l1.5,-0.3l0.11,0.23l-0.76,2.44l-2.57,1.23l-0.23,0.37l0.08,4.33l-0.46,0.77l0.56,1.21l-1.58,1.51l-1.68,2.62l-0.89,2.47l0.2,2.7l-1.48,2.73l1.12,5.09l0.64,0.61l-0.01,2.29l-1.38,2.68l0.01,2.4l-1.89,2.04l0.02,2.75l0.69,2.57l-1.43,1.13l-1.26,5.68l0.39,3.51l-0.97,0.89l0.58,3.5l1.02,1.14l-0.65,1.02l0.15,0.57l1.0,0.53l0.16,0.69l-1.03,0.85l0.26,1.75l-0.89,4.03l-1.31,2.66l0.24,1.75l-0.71,1.83l-1.99,1.7l0.3,3.67l0.88,1.19l1.58,0.01l0.01,2.21l1.04,1.95l5.98,0.63ZM248.69,430.79l0.0,7.33l0.4,0.4l3.52,0.05l-0.44,0.75l-1.94,0.98l-2.49,-0.37l-1.88,-1.06l-2.55,-0.49l-5.59,-3.71l-2.38,-2.63l4.1,2.48l3.32,1.23l0.45,-0.12l1.29,-1.57l0.83,-2.32l2.05,-1.24l1.31,0.29Z",
      "name": "Chile"
    },
    "XC": {
      "path": "M504.91,192.87l0.34,0.01l0.27,-0.07l-0.29,0.26l-0.31,-0.2Z",
      "name": "N. Cyprus"
    },
    "CA": {
      "path": "M280.06,145.6l-1.67,2.88l0.07,0.49l0.5,0.04l1.46,-0.98l1.0,0.42l-0.56,0.72l0.17,0.62l2.22,0.89l1.35,-0.71l1.95,0.78l-0.66,2.01l0.5,0.51l1.32,-0.42l0.98,3.17l-0.91,2.41l-0.8,0.08l-1.23,-0.45l0.47,-2.25l-0.89,-0.83l-0.48,0.06l-2.78,2.63l-0.34,-0.02l1.02,-0.85l-0.14,-0.69l-2.4,-0.77l-7.4,0.08l-0.17,-0.41l1.3,-0.94l0.02,-0.64l-0.73,-0.58l1.85,-1.74l2.57,-5.16l1.47,-1.79l1.99,-1.05l0.46,0.06l-1.53,2.45ZM68.32,74.16l4.13,0.95l4.02,2.14l2.61,0.4l2.47,-1.89l2.88,-1.31l3.85,0.48l3.71,-1.94l3.82,-1.04l1.56,1.68l0.49,0.08l1.87,-1.04l0.65,-1.98l1.24,0.35l4.16,3.94l0.54,0.01l2.75,-2.49l0.26,2.59l0.49,0.35l3.08,-0.73l1.04,-1.27l2.73,0.23l3.83,1.86l5.86,1.61l3.47,0.75l2.44,-0.26l2.73,1.78l-2.98,1.81l-0.19,0.41l0.31,0.32l4.53,0.92l6.87,-0.5l2.0,-0.69l2.49,2.39l0.53,0.02l2.72,-2.16l-0.02,-0.64l-2.16,-1.54l1.15,-1.06l4.83,-0.61l1.84,0.95l2.48,2.31l3.01,-0.23l4.55,1.92l3.85,-0.67l3.61,0.1l0.41,-0.44l-0.25,-2.36l1.79,-0.61l3.49,1.32l-0.01,3.77l0.31,0.39l0.45,-0.22l1.48,-3.16l1.74,0.1l0.41,-0.3l1.13,-4.37l-2.78,-3.11l-2.8,-1.74l0.19,-4.64l2.71,-3.07l2.98,0.67l2.41,1.95l3.19,4.8l-1.99,1.97l0.21,0.68l4.33,0.84l-0.01,4.15l0.25,0.37l0.44,-0.09l3.07,-3.15l2.54,2.39l-0.61,3.33l2.42,2.88l0.61,0.0l2.61,-3.08l1.88,-3.82l0.17,-4.58l6.72,0.94l3.13,2.04l0.13,1.82l-1.76,2.19l-0.01,0.49l1.66,2.16l-0.26,1.71l-4.68,2.8l-3.28,0.61l-2.47,-1.2l-0.55,0.23l-0.73,2.04l-2.38,3.43l-0.74,1.77l-2.74,2.57l-3.44,0.25l-2.21,1.78l-0.28,2.53l-2.82,0.55l-3.12,3.22l-2.72,4.31l-1.03,3.17l-0.14,4.31l0.33,0.41l3.44,0.57l2.24,5.95l0.45,0.23l3.4,-0.69l4.52,1.51l2.43,1.31l1.91,1.73l3.1,0.96l2.62,1.46l6.6,0.54l-0.35,2.74l0.81,3.53l1.81,3.78l3.83,3.3l0.45,0.04l2.1,-1.28l1.37,-3.69l-1.31,-5.38l-1.45,-1.58l3.57,-1.47l2.84,-2.46l1.52,-2.8l-0.25,-2.55l-1.7,-3.07l-2.85,-2.61l2.8,-3.95l-1.08,-3.37l-0.79,-5.67l1.36,-0.7l6.76,1.41l2.12,-0.96l5.12,3.36l1.05,1.61l4.08,0.26l-0.06,2.87l0.83,4.7l0.3,0.32l2.16,0.54l1.73,2.06l0.5,0.09l3.63,-2.03l2.52,-4.19l1.26,-1.32l7.6,11.72l-0.92,2.04l0.16,0.51l3.3,1.97l2.22,1.98l4.1,0.98l1.43,0.99l0.95,2.79l2.1,0.68l0.84,1.08l0.17,3.45l-3.37,2.26l-4.22,1.24l-3.06,2.63l-4.06,0.51l-5.35,-0.69l-6.39,0.2l-2.3,2.41l-3.26,1.51l-6.47,7.15l-0.06,0.48l0.44,0.19l2.13,-0.52l4.17,-4.24l5.12,-2.62l3.52,-0.3l1.69,1.21l-2.12,2.21l0.81,3.47l1.02,2.61l3.47,1.6l4.14,-0.45l2.15,-2.8l0.26,1.48l1.14,0.8l-2.56,1.69l-5.5,1.82l-2.54,1.27l-2.74,2.15l-1.4,-0.16l-0.07,-2.01l4.14,-2.44l0.18,-0.45l-0.39,-0.29l-6.63,0.45l-1.39,-1.49l-0.14,-4.43l-1.11,-0.91l-1.82,0.39l-0.66,-0.66l-0.6,0.03l-1.91,2.39l-0.82,2.52l-0.8,1.27l-1.67,0.56l-0.46,0.76l-8.31,0.07l-1.21,0.62l-2.35,1.97l-0.71,-0.14l-1.37,0.96l-1.12,-0.48l-4.74,1.26l-0.9,1.17l0.21,0.62l1.73,0.3l-1.81,0.31l-1.85,0.81l-2.11,-0.13l-2.95,1.78l-0.69,-0.09l1.39,-2.1l1.73,-1.21l0.1,-2.29l1.16,-1.99l0.49,0.53l2.03,0.42l1.2,-1.16l0.02,-0.47l-2.66,-3.51l-2.28,-0.61l-5.64,-0.71l-0.4,-0.57l-0.79,0.13l0.2,-0.41l-0.22,-0.55l-0.68,-0.26l0.19,-1.26l-0.78,-0.73l0.31,-0.64l-0.29,-0.57l-2.6,-0.44l-0.75,-1.63l-0.94,-0.66l-4.31,-0.65l-1.13,1.19l-1.48,0.59l-0.85,1.06l-2.83,-0.76l-2.09,0.39l-2.39,-0.97l-4.24,-0.7l-0.57,-0.4l-0.41,-1.63l-0.4,-0.3l-0.85,0.02l-0.39,0.4l-0.01,0.85l-69.13,-0.01l-6.51,-4.52l-4.5,-1.38l-1.26,-2.66l0.33,-1.93l-0.23,-0.43l-3.01,-1.35l-0.55,-2.77l-2.89,-2.38l-0.04,-1.45l1.39,-1.83l-0.28,-2.55l-4.16,-2.2l-4.07,-6.6l-4.02,-3.22l-1.3,-1.88l-0.5,-0.13l-2.51,1.21l-2.23,1.87l-3.85,-3.88l-2.44,-1.04l-2.22,-0.13l0.03,-37.49ZM260.37,148.65l3.04,0.76l2.26,1.2l-3.78,-0.95l-1.53,-1.01ZM249.4,3.81l6.68,0.49l5.32,0.79l4.26,1.57l-0.07,1.1l-5.85,2.53l-6.02,1.21l-2.39,1.39l-0.18,0.45l0.39,0.29l4.01,-0.02l-4.65,2.82l-4.2,1.74l-4.19,4.59l-5.03,0.92l-1.67,1.15l-7.47,0.59l-0.37,0.37l0.32,0.42l2.41,0.49l-0.81,0.47l-0.12,0.59l1.83,2.41l-2.02,1.59l-3.81,1.51l-1.32,2.16l-3.38,1.53l-0.22,0.48l0.35,1.19l0.4,0.29l3.88,-0.18l0.03,0.61l-6.33,2.95l-6.41,-1.4l-7.43,0.79l-3.72,-0.62l-4.4,-0.25l-0.23,-1.83l4.29,-1.11l0.28,-0.51l-1.1,-3.45l1.0,-0.25l6.58,2.28l0.47,-0.16l-0.05,-0.49l-3.41,-3.45l-3.58,-0.98l1.48,-1.55l4.34,-1.29l0.97,-2.19l-0.16,-0.48l-3.42,-2.13l-0.81,-2.26l6.2,0.22l2.24,0.58l3.91,-2.1l0.2,-0.43l-0.35,-0.32l-5.64,-0.67l-8.73,0.36l-4.26,-1.9l-2.12,-2.4l-2.78,-1.66l-0.41,-1.52l3.31,-1.03l2.93,-0.2l4.91,-0.99l3.7,-2.27l2.87,0.3l2.62,1.67l0.56,-0.14l1.82,-3.2l3.13,-0.94l4.44,-0.69l7.53,-0.26l1.48,0.67l7.19,-1.06l10.8,0.79ZM203.85,57.54l0.01,0.42l1.97,2.97l0.68,-0.02l2.24,-3.72l5.95,-1.86l4.01,4.64l-0.35,2.91l0.5,0.43l4.95,-1.36l2.32,-1.8l5.31,2.28l3.27,2.11l0.3,1.84l0.48,0.33l4.42,-0.99l2.64,2.87l5.97,1.77l2.06,1.72l2.11,3.71l-4.19,1.86l-0.01,0.73l5.9,2.83l3.94,0.94l3.78,3.95l3.46,0.25l-0.63,2.37l-4.11,4.47l-2.76,-1.56l-3.9,-3.94l-3.59,0.41l-0.33,0.34l-0.19,2.72l2.63,2.38l3.42,1.89l0.94,0.97l1.55,3.75l-0.7,2.29l-2.74,-0.92l-6.25,-3.15l-0.51,0.13l0.05,0.52l6.07,5.69l0.18,0.59l-6.09,-1.39l-5.31,-2.24l-2.63,-1.66l0.6,-0.77l-0.12,-0.6l-7.39,-4.01l-0.59,0.37l0.03,0.79l-6.73,0.6l-1.69,-1.1l1.36,-2.46l4.51,-0.07l5.15,-0.52l0.31,-0.6l-0.74,-1.3l0.78,-1.84l3.21,-4.05l-0.67,-2.35l-1.11,-1.6l-3.84,-2.1l-4.35,-1.28l0.91,-0.63l0.06,-0.61l-2.65,-2.75l-2.34,-0.36l-1.89,-1.46l-0.53,0.03l-1.24,1.23l-4.36,0.55l-9.04,-0.99l-9.26,-1.98l-1.6,-1.22l2.22,-1.77l0.13,-0.44l-0.38,-0.27l-3.22,-0.02l-0.72,-4.25l1.83,-4.04l2.42,-1.85l5.5,-1.1l-1.39,2.35ZM261.19,159.33l2.07,0.61l1.44,-0.04l-1.15,0.63l-2.94,-1.23l-0.4,-0.68l0.36,-0.37l0.61,1.07ZM230.83,84.39l-2.37,0.18l-0.49,-1.63l0.93,-2.09l1.94,-0.51l1.62,0.99l0.02,1.52l-1.66,1.54ZM229.43,58.25l0.11,0.65l-4.87,-0.21l-2.72,0.62l-3.1,-2.57l0.08,-1.26l0.86,-0.23l5.57,0.51l4.08,2.5ZM222.0,105.02l-0.72,1.49l-0.63,-0.19l-0.48,-0.84l0.81,-0.99l0.65,0.05l0.37,0.46ZM183.74,38.32l2.9,1.7l4.79,-0.01l1.84,1.46l-0.49,1.68l0.23,0.48l2.82,1.14l1.76,1.26l7.01,0.65l4.1,-1.1l5.03,-0.43l3.93,0.35l2.48,1.77l0.46,1.7l-1.3,1.1l-3.56,1.01l-3.23,-0.59l-7.17,0.76l-5.09,0.09l-3.99,-0.6l-6.42,-1.54l-0.79,-2.51l-0.3,-2.49l-2.64,-2.5l-5.32,-0.72l-2.52,-1.4l0.68,-1.57l4.78,0.31ZM207.38,91.35l0.4,1.56l0.56,0.26l1.06,-0.52l1.32,0.96l5.42,2.57l0.2,1.68l0.46,0.35l1.68,-0.28l1.15,0.85l-1.55,0.87l-3.61,-0.88l-1.32,-1.69l-0.57,-0.06l-2.45,2.1l-3.12,1.79l-0.7,-1.87l-0.42,-0.26l-2.16,0.24l1.39,-1.39l0.32,-3.14l0.76,-3.35l1.18,0.22ZM215.49,102.6l-2.67,1.95l-1.4,-0.07l-0.3,-0.58l1.53,-1.48l2.84,0.18ZM202.7,24.12l2.53,1.59l-2.87,1.4l-4.53,4.05l-4.25,0.38l-5.03,-0.68l-2.45,-2.04l0.03,-1.62l1.82,-1.37l0.14,-0.45l-0.38,-0.27l-4.45,0.04l-2.59,-1.76l-1.41,-2.29l1.57,-2.32l1.62,-1.66l2.44,-0.39l0.25,-0.65l-0.6,-0.74l4.86,-0.25l3.24,3.11l8.16,2.3l1.9,3.61ZM187.47,59.2l-2.76,3.49l-2.38,-0.15l-1.44,-3.84l0.04,-2.2l1.19,-1.88l2.3,-1.23l5.07,0.17l4.11,1.02l-3.24,3.72l-2.88,0.89ZM186.07,48.79l-1.08,1.53l-3.34,-0.34l-2.56,-1.1l1.03,-1.75l3.25,-1.23l1.95,1.58l0.75,1.3ZM185.71,35.32l-5.3,-0.2l-0.32,-0.71l4.31,0.07l1.3,0.84ZM180.68,32.48l-3.34,1.0l-1.79,-1.1l-0.98,-1.87l-0.15,-1.73l4.1,0.53l2.67,1.7l-0.51,1.47ZM180.9,76.31l-1.1,1.08l-3.13,-1.23l-2.12,0.43l-2.71,-1.57l1.72,-1.09l1.55,-1.72l3.81,1.9l1.98,2.2ZM169.74,54.87l2.96,0.97l4.17,-0.57l0.41,0.88l-2.14,2.11l0.09,0.64l3.55,1.92l-0.4,3.72l-3.79,1.65l-2.17,-0.35l-1.72,-1.74l-6.02,-3.5l0.03,-0.85l4.68,0.54l0.4,-0.21l-0.05,-0.45l-2.48,-2.81l2.46,-1.95ZM174.45,40.74l1.37,1.73l0.07,2.44l-1.05,3.45l-3.79,0.47l-2.32,-0.69l0.05,-2.64l-0.44,-0.41l-3.68,0.35l-0.12,-3.1l2.45,0.1l3.67,-1.73l3.41,0.29l0.37,-0.26ZM170.05,31.55l0.67,1.56l-3.33,-0.49l-4.22,-1.77l-4.35,-0.16l1.4,-0.94l-0.06,-0.7l-2.81,-1.23l-0.12,-1.39l4.39,0.68l6.62,1.98l1.81,2.47ZM134.5,58.13l-1.02,1.82l0.45,0.58l5.4,-1.39l3.33,2.29l0.49,-0.03l2.6,-2.23l1.94,1.32l2.0,4.5l0.7,0.06l1.3,-2.29l-1.63,-4.46l1.69,-0.54l2.31,0.71l2.65,1.81l2.49,7.92l8.48,4.27l-0.19,1.35l-3.79,0.33l-0.26,0.67l1.4,1.49l-0.58,1.1l-4.23,-0.64l-4.43,-1.19l-3.0,0.28l-4.66,1.47l-10.52,1.04l-1.43,-2.02l-3.42,-1.2l-2.21,0.43l-2.51,-2.86l4.84,-1.05l3.6,0.19l3.27,-0.78l0.31,-0.39l-0.31,-0.39l-4.84,-1.06l-8.79,0.27l-0.85,-1.07l5.26,-1.66l0.27,-0.45l-0.4,-0.34l-3.8,0.06l-3.81,-1.06l1.81,-3.01l1.66,-1.79l6.48,-2.81l1.97,0.71ZM158.7,56.61l-1.7,2.44l-3.2,-2.75l0.37,-0.3l3.11,-0.18l1.42,0.79ZM149.61,42.73l1.01,1.89l0.5,0.18l2.14,-0.82l2.23,0.19l0.36,2.04l-1.33,2.09l-8.28,0.76l-6.35,2.15l-3.41,0.1l-0.19,-0.96l4.9,-2.08l0.23,-0.46l-0.41,-0.31l-11.25,0.59l-2.89,-0.74l3.04,-4.44l2.14,-1.32l6.81,1.69l4.58,3.06l4.37,0.39l0.36,-0.63l-3.36,-4.6l1.85,-1.53l2.18,0.51l0.77,2.26ZM144.76,34.41l-4.36,1.44l-3.0,-1.4l1.46,-1.24l3.47,-0.52l2.96,0.71l-0.52,1.01ZM145.13,29.83l-1.9,0.66l-3.67,-0.0l2.27,-1.61l3.3,0.95ZM118.92,65.79l-6.03,2.02l-1.33,-1.9l-5.38,-2.28l2.59,-5.05l2.16,-3.14l-0.02,-0.48l-1.97,-2.41l7.64,-0.7l3.6,1.02l6.3,0.27l4.42,2.95l-2.53,0.98l-6.24,3.43l-3.1,3.28l-0.11,2.01ZM129.54,35.53l-0.28,3.37l-1.72,1.62l-2.33,0.28l-4.61,2.19l-3.86,0.76l-2.64,-0.87l3.72,-3.4l5.01,-3.34l3.72,0.07l3.0,-0.67ZM111.09,152.69l-0.67,0.24l-3.85,-1.37l-0.83,-1.17l-2.12,-1.07l-0.66,-1.02l-2.4,-0.55l-0.74,-1.71l6.02,1.45l2.0,2.55l2.52,1.39l0.73,1.27ZM87.8,134.64l0.89,0.29l1.86,-0.21l-0.65,3.34l1.69,2.33l-1.31,-1.33l-0.99,-1.62l-1.17,-0.98l-0.33,-1.82Z",
      "name": "Canada"
    },
    "CG": {
      "path": "M466.72,276.48l-0.1,1.03l-1.25,2.97l-0.19,3.62l-0.46,1.78l-0.23,0.63l-1.61,1.19l-1.21,1.39l-1.09,2.43l0.04,2.09l-3.25,3.24l-0.5,-0.24l-0.5,-0.83l-1.36,-0.02l-0.98,0.89l-1.68,-0.99l-1.54,1.24l-1.52,-1.96l1.57,-1.14l0.11,-0.52l-0.77,-1.35l2.1,-0.66l0.39,-0.73l1.05,0.82l2.21,0.11l1.12,-1.37l0.37,-1.81l-0.27,-2.09l-1.13,-1.5l1.0,-2.69l-0.13,-0.45l-0.92,-0.58l-1.6,0.17l-0.51,-0.94l0.1,-0.61l2.75,0.09l3.97,1.24l0.51,-0.33l0.17,-1.28l1.24,-2.21l1.28,-1.14l2.76,0.49Z",
      "name": "Congo"
    },
    "CF": {
      "path": "M461.16,278.2l-0.26,-1.19l-1.09,-0.77l-0.84,-1.17l-0.29,-1.0l-1.04,-1.15l0.08,-3.43l0.58,-0.49l1.16,-2.35l1.85,-0.17l0.61,-0.62l0.97,0.58l3.15,-0.96l2.48,-1.92l0.02,-0.96l2.81,0.02l2.36,-1.17l1.93,-2.85l1.16,-0.93l1.11,-0.3l0.27,0.86l1.34,1.47l-0.39,2.01l0.3,1.01l4.01,2.75l0.17,0.93l2.63,2.31l0.6,1.44l2.08,1.4l-3.84,-0.21l-1.94,0.88l-1.23,-0.49l-2.67,1.2l-1.29,-0.18l-0.51,0.36l-0.6,1.22l-3.35,-0.65l-1.57,-0.91l-2.42,-0.83l-1.45,0.91l-0.97,1.27l-0.26,1.56l-3.22,-0.43l-1.49,1.33l-0.94,1.62Z",
      "name": "Central African Rep."
    },
    "CD": {
      "path": "M487.01,272.38l2.34,-0.14l1.35,1.84l1.34,0.45l0.86,-0.39l1.21,0.12l1.07,-0.41l0.54,0.89l2.04,1.54l-0.14,2.72l0.7,0.54l-1.38,1.13l-1.53,2.54l-0.17,2.05l-0.59,1.08l-0.02,1.72l-0.72,0.84l-0.66,3.01l0.63,1.32l-0.44,4.26l0.64,1.47l-0.37,1.22l0.86,1.8l1.53,1.41l0.3,1.26l0.44,0.5l-4.08,0.75l-0.92,1.81l0.51,1.34l-0.74,5.43l0.17,0.38l2.45,1.46l0.54,-0.1l0.12,1.62l-1.28,-0.01l-1.85,-2.35l-1.94,-0.45l-0.48,-1.13l-0.55,-0.2l-1.41,0.74l-1.71,-0.3l-1.01,-1.18l-2.49,-0.19l-0.44,-0.77l-1.98,-0.21l-2.88,0.36l0.11,-2.41l-0.85,-1.13l-0.16,-1.36l0.32,-1.73l-0.46,-0.89l-0.04,-1.49l-0.4,-0.39l-2.53,0.02l0.1,-0.41l-0.39,-0.49l-1.28,0.01l-0.43,0.45l-1.62,0.32l-0.83,1.79l-1.09,-0.28l-2.4,0.52l-1.37,-1.91l-1.3,-3.3l-0.38,-0.27l-7.39,-0.03l-2.46,0.42l0.5,-0.45l0.37,-1.47l0.66,-0.38l0.92,0.08l0.73,-0.82l0.87,0.02l0.31,0.68l1.4,0.36l3.59,-3.63l0.01,-2.23l1.02,-2.29l2.69,-2.39l0.43,-0.99l0.49,-1.96l0.17,-3.51l1.25,-2.95l0.36,-3.14l0.86,-1.13l1.1,-0.66l3.57,1.73l3.65,0.73l0.46,-0.21l0.8,-1.46l1.24,0.19l2.61,-1.17l0.81,0.44l1.04,-0.03l0.59,-0.66l0.7,-0.16l1.81,0.25Z",
      "name": "Dem. Rep. Congo"
    },
    "CZ": {
      "path": "M458.46,144.88l1.22,1.01l1.47,0.23l0.13,0.93l1.36,0.68l0.54,-0.2l0.24,-0.55l1.15,0.25l0.53,1.09l1.68,0.18l0.6,0.84l-1.04,0.73l-0.96,1.28l-1.6,0.17l-0.55,0.56l-1.04,-0.46l-1.05,0.15l-2.12,-0.96l-1.05,0.34l-1.2,1.12l-1.56,-0.87l-2.57,-2.1l-0.53,-1.88l4.7,-2.52l0.71,0.26l0.9,-0.28Z",
      "name": "Czech Rep."
    },
    "CY": {
      "path": "M504.36,193.47l0.43,0.28l-1.28,0.57l-0.92,-0.28l-0.24,-0.46l2.01,-0.13Z",
      "name": "Cyprus"
    },
    "CR": {
      "path": "M211.34,258.05l0.48,0.99l1.6,1.6l-0.54,0.45l0.29,1.42l-0.25,1.19l-1.09,-0.59l-0.05,-1.25l-2.46,-1.42l-0.28,-0.77l-0.66,-0.45l-0.45,-0.0l-0.11,1.04l-1.32,-0.95l0.31,-1.3l-0.36,-0.6l0.31,-0.27l1.42,0.58l1.29,-0.14l0.56,0.56l0.74,0.17l0.55,-0.27Z",
      "name": "Costa Rica"
    },
    "CU": {
      "path": "M221.21,227.25l1.27,1.02l2.19,-0.28l4.43,3.33l2.08,0.43l-0.1,0.38l0.36,0.5l1.75,0.1l1.48,0.84l-3.11,0.51l-4.15,-0.03l0.77,-0.67l-0.04,-0.64l-1.2,-0.74l-1.49,-0.16l-0.7,-0.61l-0.56,-1.4l-0.4,-0.25l-1.34,0.1l-2.2,-0.66l-0.88,-0.58l-3.18,-0.4l-0.27,-0.16l0.58,-0.74l-0.36,-0.29l-2.72,-0.05l-1.7,1.29l-0.91,0.03l-0.61,0.69l-1.01,0.22l1.11,-1.29l1.01,-0.52l3.69,-1.01l3.98,0.21l2.21,0.84Z",
      "name": "Cuba"
    },
    "SZ": {
      "path": "M500.35,351.36l0.5,2.04l-0.38,0.89l-1.05,0.21l-1.23,-1.2l-0.02,-0.64l0.83,-1.57l1.34,0.27Z",
      "name": "Swaziland"
    },
    "SY": {
      "path": "M511.0,199.79l0.05,-1.33l0.54,-1.36l1.28,-0.99l0.13,-0.45l-0.41,-1.11l-1.14,-0.36l-0.19,-1.74l0.52,-1.0l1.29,-1.21l0.2,-1.18l0.59,0.23l2.62,-0.76l1.36,0.52l2.06,-0.01l2.95,-1.08l3.25,-0.26l-0.67,0.94l-1.28,0.66l-0.21,0.4l0.23,2.01l-0.88,3.19l-10.15,5.73l-2.15,-0.85Z",
      "name": "Syria"
    },
    "KG": {
      "path": "M621.35,172.32l-3.87,1.69l-0.96,1.18l-3.04,0.34l-1.13,1.86l-2.36,-0.35l-1.99,0.63l-2.39,1.4l0.06,0.95l-0.4,0.37l-4.52,0.43l-3.02,-0.93l-2.37,0.17l0.11,-0.79l2.32,0.42l1.13,-0.88l1.99,0.2l3.21,-2.14l-0.03,-0.69l-2.97,-1.57l-1.94,0.65l-1.22,-0.74l1.71,-1.58l-0.12,-0.67l-0.36,-0.15l0.32,-0.77l1.36,-0.35l4.02,1.02l0.49,-0.3l0.35,-1.59l1.09,-0.48l3.42,1.22l1.11,-0.31l7.64,0.39l1.16,1.0l1.23,0.39Z",
      "name": "Kyrgyzstan"
    },
    "KE": {
      "path": "M506.26,284.69l1.87,-2.56l0.93,-2.15l-1.38,-4.08l-1.06,-1.6l2.82,-2.75l0.79,0.26l0.12,1.41l0.86,0.83l1.9,0.11l3.28,2.13l3.57,0.44l1.05,-1.12l1.96,-0.9l0.82,0.68l1.16,0.09l-1.78,2.45l0.03,9.12l1.3,1.94l-1.37,0.78l-0.67,1.03l-1.08,0.46l-0.34,1.67l-0.81,1.07l-0.45,1.55l-0.68,0.56l-3.2,-2.23l-0.35,-1.58l-8.86,-4.98l0.14,-1.6l-0.57,-1.04Z",
      "name": "Kenya"
    },
    "SS": {
      "path": "M481.71,263.34l1.07,-0.72l1.2,-3.18l1.36,-0.26l1.61,1.99l0.87,0.34l1.1,-0.41l1.5,0.07l0.57,0.53l2.49,0.0l0.44,-0.63l1.07,-0.4l0.45,-0.84l0.59,-0.33l1.9,1.33l1.6,-0.2l2.83,-3.33l-0.32,-2.21l1.59,-0.52l-0.24,1.6l0.3,1.83l1.35,1.18l0.2,1.87l0.35,0.41l0.02,1.53l-0.23,0.47l-1.42,0.25l-0.85,1.44l0.3,0.6l1.4,0.16l1.11,1.08l0.59,1.13l1.03,0.53l1.28,2.36l-4.41,3.98l-1.74,0.01l-1.89,0.55l-1.47,-0.52l-1.15,0.57l-2.96,-2.62l-1.3,0.49l-1.06,-0.15l-0.79,0.39l-0.82,-0.22l-1.8,-2.7l-1.91,-1.1l-0.66,-1.5l-2.62,-2.32l-0.18,-0.94l-2.37,-1.6Z",
      "name": "S. Sudan"
    },
    "SR": {
      "path": "M283.12,270.19l2.1,0.53l-1.08,1.95l0.2,1.72l0.93,1.49l-0.59,2.03l-0.43,0.71l-1.12,-0.42l-1.32,0.22l-0.93,-0.2l-0.46,0.26l-0.25,0.73l0.33,0.7l-0.89,-0.13l-1.39,-1.97l-0.31,-1.34l-0.97,-0.31l-0.89,-1.47l0.35,-1.61l1.45,-0.82l0.33,-1.87l2.61,0.44l0.57,-0.47l1.75,-0.16Z",
      "name": "Suriname"
    },
    "KH": {
      "path": "M689.52,249.39l0.49,1.45l-0.28,2.74l-4.0,1.86l-0.16,0.6l0.68,0.95l-2.06,0.17l-2.05,0.97l-1.82,-0.32l-2.12,-3.7l-0.55,-2.85l1.4,-1.85l3.02,-0.45l2.23,0.35l2.01,0.98l0.51,-0.14l0.95,-1.48l1.74,0.74Z",
      "name": "Cambodia"
    },
    "SV": {
      "path": "M195.8,250.13l1.4,-1.19l2.24,1.45l0.98,-0.27l0.44,0.2l-0.27,1.05l-1.14,-0.03l-3.64,-1.21Z",
      "name": "El Salvador"
    },
    "SK": {
      "path": "M476.82,151.17l-1.14,1.9l-2.73,-0.92l-0.82,0.2l-0.74,0.8l-3.46,0.73l-0.47,0.69l-1.76,0.33l-1.88,-1.0l-0.18,-0.81l0.38,-0.75l1.87,-0.32l1.74,-1.89l0.83,0.16l0.79,-0.34l1.51,1.04l1.34,-0.63l1.25,0.3l1.65,-0.42l1.81,0.95Z",
      "name": "Slovakia"
    },
    "KR": {
      "path": "M737.51,185.84l0.98,-0.1l0.87,-1.17l2.69,-0.32l0.33,-0.29l1.76,2.79l0.58,1.76l0.02,3.12l-0.8,1.32l-2.21,0.55l-1.93,1.13l-1.8,0.19l-0.2,-1.1l0.43,-2.28l-0.95,-2.56l1.43,-0.37l0.23,-0.62l-1.43,-2.06Z",
      "name": "Korea"
    },
    "SI": {
      "path": "M456.18,162.07l-0.51,-1.32l0.18,-1.05l1.69,0.2l1.42,-0.71l2.09,-0.07l0.62,-0.51l0.21,0.47l-1.61,0.67l-0.44,1.34l-0.66,0.24l-0.26,0.82l-1.22,-0.49l-0.84,0.46l-0.69,-0.04Z",
      "name": "Slovenia"
    },
    "KP": {
      "path": "M736.77,185.16l-0.92,-0.42l-0.88,0.62l-1.21,-0.88l0.96,-1.15l0.59,-2.59l-0.46,-0.74l-2.09,-0.77l1.64,-1.52l2.72,-1.58l1.58,-1.91l1.11,0.78l2.17,0.11l0.41,-0.5l-0.3,-1.22l3.52,-1.18l0.94,-1.4l0.98,1.08l-2.19,2.18l0.01,2.14l-1.06,0.54l-1.41,1.4l-1.7,0.52l-1.25,1.09l-0.14,1.98l0.94,0.45l1.15,1.04l-0.13,0.26l-2.6,0.29l-1.13,1.29l-1.22,0.08Z",
      "name": "Dem. Rep. Korea"
    },
    "KW": {
      "path": "M540.81,207.91l0.37,0.86l-0.17,0.76l0.6,1.53l-0.95,0.04l-0.82,-1.28l-1.57,-0.18l1.31,-1.88l1.22,0.17Z",
      "name": "Kuwait"
    },
    "SN": {
      "path": "M390.09,248.21l0.12,1.55l0.49,1.46l0.96,0.82l0.05,1.28l-1.26,-0.19l-0.75,0.33l-1.84,-0.61l-5.84,-0.13l-2.54,0.51l-0.22,-1.03l1.77,0.04l2.01,-0.91l1.03,0.48l1.09,0.04l1.29,-0.62l0.14,-0.58l-0.51,-0.74l-1.81,0.25l-1.13,-0.63l-0.79,0.04l-0.72,0.61l-2.31,0.06l-0.92,-1.77l-0.81,-0.64l0.64,-0.35l2.46,-3.74l1.04,0.19l1.38,-0.56l1.19,-0.02l2.72,1.37l3.03,3.48Z",
      "name": "Senegal"
    },
    "SL": {
      "path": "M394.46,264.11l-1.73,1.98l-0.58,1.33l-2.07,-1.06l-1.22,-1.26l-0.65,-2.39l1.16,-0.96l0.67,-1.17l1.21,-0.52l1.66,0.0l1.03,1.64l0.52,2.41Z",
      "name": "Sierra Leone"
    },
    "KZ": {
      "path": "M552.8,172.89l0.46,-1.27l-0.48,-1.05l-2.96,-1.19l-1.06,-2.58l-1.37,-0.87l-0.03,-0.3l1.95,0.23l0.45,-0.38l0.08,-1.96l1.75,-0.41l2.1,0.45l0.48,-0.33l0.45,-3.04l-0.45,-2.09l-0.41,-0.31l-2.42,0.15l-2.36,-0.73l-2.87,1.37l-2.17,0.61l-0.85,-0.34l0.13,-1.61l-1.6,-2.12l-2.02,-0.08l-1.78,-1.82l1.29,-2.18l-0.57,-0.95l1.62,-2.91l2.21,1.63l0.63,-0.27l0.29,-2.22l4.92,-3.43l3.71,-0.08l8.4,3.6l2.92,-1.36l3.77,-0.06l3.11,1.66l0.51,-0.11l0.6,-0.81l3.31,0.13l0.39,-0.25l0.63,-1.57l-0.17,-0.5l-3.5,-1.98l1.87,-1.27l-0.13,-1.03l1.98,-0.72l0.18,-0.62l-1.59,-2.06l0.81,-0.82l9.23,-1.18l1.33,-0.88l6.18,-1.26l2.26,-1.42l4.08,0.68l0.73,3.33l0.51,0.3l2.48,-0.8l2.79,1.02l-0.17,1.56l0.43,0.44l2.55,-0.24l4.89,-2.53l0.03,0.32l3.15,2.61l5.56,8.47l0.65,0.02l1.12,-1.46l3.15,1.74l3.76,-0.78l1.15,0.49l1.14,1.8l1.84,0.76l0.99,1.29l3.35,-0.25l1.02,1.52l-1.6,1.81l-1.93,0.28l-0.34,0.38l-0.11,3.05l-1.13,1.16l-4.75,-1.0l-0.46,0.27l-1.76,5.47l-1.1,0.59l-4.91,1.23l-0.27,0.54l2.1,4.97l-1.37,0.63l-0.23,0.41l0.13,1.13l-0.88,-0.25l-1.42,-1.13l-7.89,-0.4l-0.92,0.31l-3.73,-1.22l-1.42,0.63l-0.53,1.66l-3.72,-0.94l-1.85,0.43l-0.76,1.4l-4.65,2.62l-1.13,2.08l-0.44,0.01l-0.92,-1.4l-2.87,-0.09l-0.45,-2.14l-0.38,-0.32l-0.8,-0.01l0.0,-2.96l-3.0,-2.22l-7.31,0.58l-2.35,-2.68l-6.71,-3.69l-6.45,1.83l-0.29,0.39l0.1,10.85l-0.7,0.08l-1.62,-2.17l-1.83,-0.96l-3.11,0.59l-0.64,0.51Z",
      "name": "Kazakhstan"
    },
    "SA": {
      "path": "M537.53,210.34l2.0,0.24l0.9,1.32l1.49,-0.06l0.87,2.08l1.29,0.76l0.51,0.99l1.56,1.03l-0.1,1.9l0.32,0.9l1.58,2.47l0.76,0.53l0.7,-0.04l1.68,4.23l7.53,1.33l0.51,-0.29l0.77,1.25l-1.55,4.87l-7.29,2.52l-7.3,1.03l-2.34,1.17l-1.88,2.74l-0.76,0.28l-0.82,-0.78l-0.91,0.12l-2.88,-0.51l-3.51,0.25l-0.86,-0.56l-0.57,0.15l-0.66,1.27l0.16,1.11l-0.43,0.32l-0.93,-1.4l-0.33,-1.16l-1.23,-0.88l-1.27,-2.06l-0.78,-2.22l-1.73,-1.79l-1.14,-0.48l-1.54,-2.31l-0.21,-3.41l-1.44,-2.93l-1.27,-1.16l-1.33,-0.57l-1.31,-3.37l-0.77,-0.67l-0.97,-1.97l-2.8,-4.03l-1.06,-0.17l0.37,-1.96l0.2,-0.72l2.74,0.3l1.08,-0.84l0.6,-0.94l1.74,-0.35l0.65,-1.03l0.71,-0.4l0.1,-0.62l-2.06,-2.28l4.39,-1.22l0.48,-0.37l2.77,0.69l3.66,1.9l7.03,5.5l4.87,0.3Z",
      "name": "Saudi Arabia"
    },
    "SE": {
      "path": "M480.22,89.3l-4.03,1.17l-2.43,2.86l0.26,2.57l-8.77,6.64l-1.78,5.79l1.78,2.68l2.22,1.96l-2.07,3.77l-2.72,1.13l-0.95,6.04l-1.29,3.01l-2.74,-0.31l-0.4,0.22l-1.31,2.59l-2.34,0.13l-0.75,-3.09l-2.08,-4.03l-1.83,-4.96l1.0,-1.93l2.14,-2.7l0.83,-4.45l-1.6,-2.17l-0.15,-4.94l1.48,-3.39l2.58,-0.15l0.87,-1.59l-0.78,-1.57l3.76,-5.59l4.04,-7.48l2.17,0.01l0.39,-0.29l0.57,-2.07l4.37,0.64l0.46,-0.34l0.33,-2.56l1.1,-0.13l6.94,4.87l0.06,6.32l0.66,1.36Z",
      "name": "Sweden"
    },
    "SD": {
      "path": "M505.98,259.4l-0.34,-0.77l-1.17,-0.9l-0.26,-1.61l0.29,-1.81l-0.34,-0.46l-1.16,-0.17l-0.54,0.59l-1.23,0.11l-0.28,0.65l0.53,0.65l0.17,1.22l-2.44,3.0l-0.96,0.19l-2.39,-1.4l-0.95,0.52l-0.38,0.78l-1.11,0.41l-0.29,0.5l-1.94,0.0l-0.54,-0.52l-1.81,-0.09l-0.95,0.4l-2.45,-2.35l-2.07,0.54l-0.73,1.26l-0.6,2.1l-1.25,0.58l-0.75,-0.62l0.27,-2.65l-1.48,-1.78l-0.22,-1.48l-0.92,-0.96l-0.02,-1.29l-0.57,-1.16l-0.68,-0.16l0.69,-1.29l-0.18,-1.14l0.65,-0.62l0.03,-0.55l-0.36,-0.41l1.55,-2.97l1.91,0.16l0.43,-0.4l-0.1,-10.94l2.49,-0.01l0.4,-0.4l-0.0,-4.82l29.02,0.0l0.64,2.04l-0.49,0.66l0.36,2.69l0.93,3.16l2.12,1.55l-0.89,1.04l-1.72,0.39l-0.98,0.9l-1.43,5.65l0.24,1.15l-0.38,2.06l-0.96,2.38l-1.53,1.31l-1.32,2.91l-1.22,0.86l-0.37,1.34Z",
      "name": "Sudan"
    },
    "DO": {
      "path": "M241.8,239.2l0.05,-0.65l-0.46,-0.73l0.42,-0.44l0.19,-1.0l-0.09,-1.53l1.66,0.01l1.99,0.63l0.33,0.67l1.28,0.19l0.33,0.76l1.0,0.08l0.8,0.62l-0.45,0.51l-1.13,-0.47l-1.88,-0.01l-1.27,0.59l-0.75,-0.55l-1.01,0.54l-0.79,1.4l-0.23,-0.61Z",
      "name": "Dominican Rep."
    },
    "DJ": {
      "path": "M528.43,256.18l-0.45,0.66l-0.58,-0.25l-1.51,0.13l-0.18,-1.01l1.45,-1.95l0.83,0.17l0.77,-0.44l0.2,1.0l-1.2,0.51l-0.06,0.7l0.73,0.47Z",
      "name": "Djibouti"
    },
    "DK": {
      "path": "M452.28,129.07l-1.19,2.24l-2.13,-1.6l-0.23,-0.95l2.98,-0.95l0.57,1.26ZM447.74,126.31l-0.26,0.57l-0.88,-0.07l-1.8,2.53l0.48,1.69l-1.09,0.36l-1.61,-0.39l-0.89,-1.69l-0.07,-3.43l0.96,-1.73l2.02,-0.2l1.09,-1.07l1.33,-0.67l-0.05,1.06l-0.73,1.41l0.3,1.0l1.2,0.64Z",
      "name": "Denmark"
    },
    "DE": {
      "path": "M453.14,155.55l-0.55,-0.36l-1.2,-0.1l-1.87,0.57l-2.13,-0.13l-0.56,0.63l-0.86,-0.6l-0.96,0.09l-2.57,-0.93l-0.85,0.67l-1.47,-0.02l0.24,-1.75l1.23,-2.14l-0.28,-0.59l-3.52,-0.58l-0.92,-0.66l0.12,-1.2l-0.48,-0.88l0.27,-2.17l-0.37,-3.03l1.41,-0.22l0.63,-1.26l0.66,-3.19l-0.41,-1.18l0.26,-0.39l1.66,-0.15l0.33,0.54l0.62,0.07l1.7,-1.69l-0.54,-3.02l1.37,0.33l1.31,-0.37l0.31,1.18l2.25,0.71l-0.02,0.92l0.5,0.4l2.55,-0.65l1.34,-0.87l2.57,1.24l1.06,0.98l0.48,1.44l-0.57,0.74l-0.0,0.48l0.87,1.15l0.57,1.64l-0.14,1.29l0.82,1.7l-1.5,-0.07l-0.56,0.57l-4.47,2.15l-0.22,0.54l0.68,2.26l2.58,2.16l-0.66,1.11l-0.79,0.36l-0.23,0.43l0.32,1.87Z",
      "name": "Germany"
    },
    "YE": {
      "path": "M528.27,246.72l0.26,-0.42l-0.22,-1.01l0.19,-1.5l0.92,-0.69l-0.07,-1.35l0.39,-0.75l1.01,0.47l3.34,-0.27l3.76,0.41l0.95,0.81l1.36,-0.58l1.74,-2.62l2.18,-1.09l6.86,-0.94l2.48,5.41l-1.64,0.76l-0.56,1.9l-6.23,2.16l-2.29,1.8l-1.93,0.05l-1.41,1.02l-4.24,0.74l-1.72,1.49l-3.28,0.19l-0.52,-1.18l0.02,-1.51l-1.34,-3.29Z",
      "name": "Yemen"
    },
    "DZ": {
      "path": "M441.46,188.44l-0.32,1.07l0.39,2.64l-0.54,2.16l-1.58,1.82l0.37,2.39l1.91,1.55l0.18,0.8l1.42,1.03l1.84,7.23l0.12,1.16l-0.57,5.0l0.2,1.51l-0.87,0.99l-0.02,0.51l1.41,1.86l0.14,1.2l0.89,1.48l0.5,0.16l0.98,-0.41l1.73,1.08l0.82,1.23l-8.22,4.81l-7.23,5.11l-3.43,1.13l-2.3,0.21l-0.28,-1.59l-2.56,-1.09l-0.67,-1.25l-26.12,-17.86l0.01,-3.47l3.77,-1.88l2.44,-0.41l2.12,-0.75l1.08,-1.42l2.81,-1.05l0.35,-2.08l1.33,-0.29l1.04,-0.94l3.47,-0.69l0.46,-1.08l-0.1,-0.45l-0.58,-0.52l-0.82,-2.81l-0.19,-1.83l-0.78,-1.49l2.03,-1.31l2.63,-0.48l1.7,-1.22l2.31,-0.84l8.24,-0.73l1.49,0.38l2.28,-1.1l2.46,-0.02l0.92,0.6l1.35,-0.05Z",
      "name": "Algeria"
    },
    "US": {
      "path": "M892.72,99.2l1.31,0.53l1.41,-0.37l1.89,0.98l1.89,0.42l-1.32,0.58l-2.9,-1.53l-2.08,0.22l-0.26,-0.15l0.07,-0.67ZM183.22,150.47l0.37,1.47l1.12,0.85l4.23,0.7l2.39,0.98l2.17,-0.38l1.85,0.5l-1.55,0.65l-3.49,2.61l-0.16,0.77l0.5,0.39l2.33,-0.61l1.77,1.02l5.15,-2.4l-0.31,0.65l0.25,0.56l1.36,0.38l1.71,1.16l4.7,-0.88l0.67,0.85l1.31,0.21l0.58,0.58l-1.34,0.17l-2.18,-0.32l-3.6,0.89l-2.71,3.25l0.35,0.9l0.59,-0.0l0.55,-0.6l-1.36,4.65l0.29,3.09l0.67,1.58l0.61,0.45l1.77,-0.44l1.6,-1.96l0.14,-2.21l-0.82,-1.96l0.11,-1.13l1.19,-2.37l0.44,-0.33l0.48,0.75l0.4,-0.29l0.4,-1.37l0.6,-0.47l0.24,-0.8l1.69,0.49l1.65,1.08l-0.03,2.37l-1.27,1.13l-0.0,1.13l0.87,0.36l1.66,-1.29l0.5,0.17l0.5,2.6l-2.49,3.75l0.17,0.61l1.54,0.62l1.48,0.17l1.92,-0.44l4.72,-2.15l2.16,-1.8l-0.05,-1.24l0.75,-0.22l3.92,0.36l2.12,-1.05l0.21,-0.4l-0.28,-1.48l3.27,-2.4l8.32,-0.02l0.56,-0.82l1.9,-0.77l0.93,-1.51l0.74,-2.37l1.58,-1.98l0.92,0.62l1.47,-0.47l0.8,0.66l-0.0,4.09l1.96,2.6l-2.34,1.31l-5.37,2.09l-1.83,2.72l0.02,1.79l0.83,1.59l0.54,0.23l-6.19,0.94l-2.2,0.89l-0.23,0.48l0.45,0.29l2.99,-0.46l-2.19,0.56l-1.13,0.0l-0.15,-0.32l-0.48,0.08l-0.76,0.82l0.22,0.67l0.32,0.06l-0.41,1.62l-1.27,1.58l-1.48,-1.07l-0.49,-0.04l-0.16,0.46l0.52,1.58l0.61,0.59l0.03,0.79l-0.95,1.38l-1.21,-1.22l-0.27,-2.27l-0.35,-0.35l-0.42,0.25l-0.48,1.27l0.33,1.41l-0.97,-0.27l-0.48,0.24l0.18,0.5l1.52,0.83l0.1,2.52l0.79,0.51l0.52,3.42l-1.42,1.88l-2.47,0.8l-1.71,1.66l-1.31,0.25l-1.27,1.03l-0.43,0.99l-2.69,1.78l-2.64,3.03l-0.45,2.12l0.45,2.08l0.85,2.38l1.09,1.9l0.04,1.2l1.16,3.06l-0.18,2.69l-0.55,1.43l-0.47,0.21l-0.89,-0.23l-0.49,-1.18l-0.87,-0.56l-2.75,-5.16l0.48,-1.68l-0.72,-1.78l-2.01,-2.38l-1.12,-0.53l-2.72,1.18l-1.47,-1.35l-1.57,-0.68l-2.99,0.31l-2.17,-0.3l-2.0,0.19l-1.15,0.46l-0.19,0.58l0.39,0.63l0.14,1.34l-0.84,-0.2l-0.84,0.46l-1.58,-0.07l-2.08,-1.44l-2.09,0.33l-1.91,-0.62l-3.73,0.84l-2.39,2.07l-2.54,1.22l-1.45,1.41l-0.61,1.38l0.34,3.71l-0.29,0.02l-3.5,-1.33l-1.25,-3.11l-1.44,-1.5l-2.24,-3.56l-1.76,-1.09l-2.27,-0.01l-1.71,2.07l-1.76,-0.69l-1.16,-0.74l-1.52,-2.98l-3.93,-3.16l-4.34,-0.0l-0.4,0.4l-0.0,0.74l-6.5,0.02l-9.02,-3.14l-0.34,-0.71l-5.7,0.49l-0.43,-1.29l-1.62,-1.61l-1.14,-0.38l-0.55,-0.88l-1.28,-0.13l-1.01,-0.77l-2.22,-0.27l-0.43,-0.3l-0.36,-1.58l-2.4,-2.83l-2.01,-3.85l-0.06,-0.9l-2.92,-3.26l-0.33,-2.29l-1.3,-1.66l0.52,-2.37l-0.09,-2.57l-0.78,-2.3l0.95,-2.82l0.61,-5.68l-0.47,-4.27l-1.46,-4.08l3.19,0.79l1.26,2.83l0.69,0.08l0.69,-1.14l-1.1,-4.79l68.76,-0.0l0.4,-0.4l0.14,-0.86ZM32.44,67.52l1.73,1.97l0.55,0.05l0.99,-0.79l3.65,0.24l-0.09,0.62l0.32,0.45l3.83,0.77l2.61,-0.43l5.19,1.4l4.84,0.43l1.89,0.57l3.42,-0.7l6.14,1.87l-0.03,38.06l0.38,0.4l2.39,0.11l2.31,0.98l3.9,3.99l0.55,0.04l2.4,-2.03l2.16,-1.04l1.2,1.71l3.95,3.14l4.09,6.63l4.2,2.29l0.06,1.83l-1.02,1.23l-1.16,-1.08l-2.04,-1.03l-0.67,-2.89l-3.28,-3.03l-1.65,-3.57l-6.35,-0.32l-2.82,-1.01l-5.26,-3.85l-6.77,-2.04l-3.53,0.3l-4.81,-1.69l-3.25,-1.63l-2.78,0.8l-0.28,0.46l0.44,2.21l-3.91,0.96l-2.26,1.27l-2.3,0.65l-0.27,-1.65l1.05,-3.42l2.49,-1.09l0.16,-0.6l-0.69,-0.96l-0.55,-0.1l-3.19,2.12l-1.78,2.56l-3.55,2.61l-0.04,0.61l1.56,1.52l-2.07,2.29l-5.11,2.57l-0.77,1.66l-3.76,1.77l-0.92,1.73l-2.69,1.38l-1.81,-0.22l-6.95,3.32l-3.97,0.91l4.85,-2.5l2.59,-1.86l3.26,-0.52l1.19,-1.4l3.42,-2.1l2.59,-2.27l0.42,-2.68l1.23,-2.1l-0.04,-0.46l-0.45,-0.11l-2.68,1.03l-0.63,-0.49l-0.53,0.03l-1.05,1.04l-1.36,-1.54l-0.66,0.08l-0.32,0.62l-0.58,-1.14l-0.56,-0.16l-2.41,1.42l-1.07,-0.0l-0.17,-1.75l0.3,-1.71l-1.61,-1.33l-3.41,0.59l-1.96,-1.63l-1.57,-0.84l-0.15,-2.21l-1.7,-1.43l0.82,-1.88l1.99,-2.12l0.88,-1.92l1.71,-0.24l2.04,0.51l1.87,-1.77l1.91,0.25l1.91,-1.23l0.17,-0.43l-0.47,-1.82l-1.07,-0.7l1.39,-1.17l0.12,-0.45l-0.39,-0.26l-1.65,0.07l-2.66,0.88l-0.75,0.78l-1.92,-0.8l-3.46,0.44l-3.44,-0.91l-1.06,-1.61l-2.65,-1.99l2.91,-1.43l5.5,-2.0l1.52,0.0l-0.26,1.62l0.41,0.46l5.29,-0.16l0.3,-0.65l-2.03,-2.59l-3.14,-1.68l-1.79,-2.12l-2.4,-1.83l-3.09,-1.24l1.04,-1.69l4.23,-0.14l3.36,-2.07l0.73,-2.27l2.39,-1.99l2.42,-0.52l4.65,-1.97l2.46,0.23l3.71,-2.35l3.5,0.89ZM37.6,123.41l-2.25,1.23l-0.95,-0.69l-0.29,-1.24l3.21,-1.63l1.42,0.21l0.67,0.7l-1.8,1.42ZM31.06,234.03l0.98,0.47l0.74,0.87l-1.77,1.07l-0.44,-1.53l0.49,-0.89ZM29.34,232.07l0.18,0.05l0.08,0.05l-0.16,0.03l-0.11,-0.14ZM25.16,230.17l0.05,-0.03l0.18,0.22l-0.13,-0.01l-0.1,-0.18ZM5.89,113.26l-1.08,0.41l-2.21,-1.12l1.53,-0.4l1.62,0.28l0.14,0.83Z",
      "name": "United States"
    },
    "UY": {
      "path": "M286.85,372.74l-0.92,1.5l-2.59,1.44l-1.69,-0.52l-1.42,0.26l-2.39,-1.19l-1.52,0.08l-1.27,-1.3l0.16,-1.5l0.56,-0.79l-0.02,-2.73l1.21,-4.74l1.19,-0.21l2.37,2.0l1.08,0.03l4.36,3.17l1.22,1.6l-0.96,1.5l0.61,1.4Z",
      "name": "Uruguay"
    },
    "LB": {
      "path": "M510.37,198.01l-0.88,0.51l1.82,-3.54l0.62,0.08l0.22,0.61l-1.13,0.88l-0.65,1.47Z",
      "name": "Lebanon"
    },
    "LA": {
      "path": "M689.54,248.53l-1.76,-0.74l-0.49,0.15l-0.94,1.46l-1.32,-0.64l0.62,-0.98l0.11,-2.17l-2.04,-2.42l-0.25,-2.65l-1.9,-2.1l-2.15,-0.31l-0.78,0.91l-1.12,0.06l-1.05,-0.4l-2.06,1.2l-0.04,-1.59l0.61,-2.68l-0.36,-0.49l-1.35,-0.1l-0.11,-1.23l-0.96,-0.88l1.96,-1.89l0.39,0.36l1.33,0.07l0.42,-0.45l-0.34,-2.66l0.7,-0.21l1.28,1.81l1.11,2.35l0.36,0.23l2.82,0.02l0.71,1.67l-1.39,0.65l-0.72,0.93l0.13,0.6l2.91,1.51l3.6,5.25l1.88,1.78l0.56,1.62l-0.35,1.96Z",
      "name": "Lao PDR"
    },
    "TW": {
      "path": "M724.01,226.68l-0.74,1.48l-0.9,-1.52l-0.25,-1.74l1.38,-2.44l1.73,-1.74l0.64,0.44l-1.85,5.52Z",
      "name": "Taiwan"
    },
    "TT": {
      "path": "M266.64,259.32l0.28,-1.16l1.13,-0.22l-0.06,1.2l-1.35,0.18Z",
      "name": "Trinidad and Tobago"
    },
    "TR": {
      "path": "M513.21,175.47l3.64,1.17l3.05,-0.44l2.1,0.26l3.11,-1.56l2.46,-0.13l2.19,1.33l0.33,0.82l-0.22,1.33l0.25,0.44l2.28,1.13l-1.17,0.57l-0.21,0.45l0.75,3.2l-0.41,1.16l1.13,1.92l-0.55,0.22l-0.9,-0.67l-2.91,-0.37l-1.24,0.46l-4.23,0.41l-2.81,1.05l-1.91,0.01l-1.52,-0.53l-2.58,0.75l-0.66,-0.45l-0.62,0.3l-0.12,1.45l-0.89,0.84l-0.47,-0.67l0.79,-1.3l-0.41,-0.2l-1.43,0.23l-2.0,-0.63l-2.02,1.65l-3.51,0.3l-2.13,-1.53l-2.7,-0.1l-0.86,1.24l-1.38,0.27l-2.29,-1.44l-2.71,-0.01l-1.37,-2.65l-1.68,-1.52l1.07,-1.99l-0.09,-0.49l-1.27,-1.12l2.37,-2.41l3.7,-0.11l1.28,-2.24l4.49,0.37l3.21,-1.97l2.81,-0.82l3.99,-0.06l4.29,2.07ZM488.79,176.72l-1.72,1.31l-0.5,-0.88l1.37,-2.57l-0.7,-0.85l1.7,-0.63l1.8,0.34l0.46,1.17l1.76,0.78l-2.87,0.32l-1.3,1.01Z",
      "name": "Turkey"
    },
    "LK": {
      "path": "M624.16,268.99l-1.82,0.48l-0.99,-1.67l-0.42,-3.46l0.95,-3.43l1.21,0.98l2.26,4.19l-0.34,2.33l-0.85,0.58Z",
      "name": "Sri Lanka"
    },
    "LV": {
      "path": "M489.16,122.85l0.96,0.66l0.22,1.65l0.68,1.76l-3.65,1.7l-2.23,-1.58l-1.29,-0.26l-0.68,-0.77l-2.42,0.34l-4.16,-0.23l-2.47,0.9l0.06,-1.98l1.13,-2.06l1.95,-1.02l2.12,2.58l2.01,-0.07l0.38,-0.33l0.44,-2.52l1.76,-0.53l3.06,1.7l2.15,0.07Z",
      "name": "Latvia"
    },
    "LT": {
      "path": "M486.93,129.3l0.17,1.12l-1.81,0.98l-0.72,2.02l-2.47,1.18l-2.1,-0.02l-0.73,-1.05l-1.06,-0.3l-0.09,-1.87l-3.56,-1.13l-0.43,-2.36l2.48,-0.94l4.12,0.22l2.25,-0.31l0.52,0.69l1.24,0.21l2.19,1.56Z",
      "name": "Lithuania"
    },
    "LU": {
      "path": "M436.08,149.45l-0.48,-0.07l0.3,-1.28l0.27,0.4l-0.09,0.96Z",
      "name": "Luxembourg"
    },
    "LR": {
      "path": "M399.36,265.97l0.18,1.54l-0.48,0.99l0.08,0.47l2.47,1.8l-0.33,2.8l-2.65,-1.13l-5.78,-4.61l0.58,-1.32l2.1,-2.33l0.86,-0.22l0.77,1.14l-0.14,0.85l0.59,0.87l1.0,0.14l0.76,-0.99Z",
      "name": "Liberia"
    },
    "LS": {
      "path": "M491.06,363.48l-0.49,0.15l-1.49,-1.67l1.1,-1.43l2.19,-1.44l1.51,1.27l-0.98,1.82l-1.23,0.38l-0.62,0.93Z",
      "name": "Lesotho"
    },
    "TH": {
      "path": "M670.27,255.86l-1.41,3.87l0.15,2.0l0.38,0.36l1.38,0.07l0.9,2.04l0.55,2.34l1.4,1.44l1.61,0.38l0.96,0.97l-0.5,0.64l-1.1,0.2l-0.34,-1.18l-2.04,-1.1l-0.63,0.23l-0.63,-0.62l-0.48,-1.3l-2.56,-2.63l-0.73,0.41l0.95,-3.89l2.16,-4.22ZM670.67,254.77l-0.92,-2.18l-0.26,-2.61l-2.14,-3.06l0.71,-0.49l0.89,-2.59l-3.61,-5.45l0.87,-0.51l1.05,-2.58l1.74,-0.18l2.6,-1.59l0.76,0.56l0.13,1.39l0.37,0.36l1.23,0.09l-0.51,2.28l0.05,2.42l0.6,0.34l2.43,-1.42l0.77,0.39l1.47,-0.07l0.71,-0.88l1.48,0.14l1.71,1.88l0.25,2.65l1.92,2.11l-0.1,1.89l-0.61,0.86l-2.22,-0.33l-3.5,0.64l-1.6,2.12l0.36,2.58l-1.51,-0.79l-1.84,-0.01l0.28,-1.52l-0.4,-0.47l-2.21,0.01l-0.4,0.37l-0.19,2.74l-0.34,0.93Z",
      "name": "Thailand"
    },
    "TF": {
      "path": "M596.68,420.38l-3.2,0.18l-0.05,-1.26l0.39,-1.41l1.3,0.78l2.08,0.35l-0.52,1.36Z",
      "name": "Fr. S. Antarctic Lands"
    },
    "TG": {
      "path": "M422.7,257.63l-0.09,1.23l1.53,1.52l0.08,1.09l0.5,0.65l-0.11,5.62l0.49,1.47l-1.31,0.35l-1.02,-2.13l-0.18,-1.12l0.53,-2.19l-0.63,-1.16l-0.22,-3.68l-1.01,-1.4l0.07,-0.28l1.37,0.03Z",
      "name": "Togo"
    },
    "TD": {
      "path": "M480.25,235.49l0.12,9.57l-2.1,0.05l-1.14,1.89l-0.69,1.63l0.34,0.73l-0.66,0.91l0.24,0.89l-0.86,1.95l0.45,0.5l0.6,-0.1l0.34,0.64l0.03,1.38l0.9,1.04l-1.45,0.43l-1.27,1.03l-1.83,2.76l-2.16,1.07l-2.31,-0.15l-0.86,0.25l-0.26,0.49l0.17,0.61l-2.11,1.68l-2.85,0.87l-1.09,-0.57l-0.73,0.66l-1.12,0.1l-1.1,-3.12l-1.25,-0.64l-1.22,-1.22l0.29,-0.64l3.01,0.04l0.35,-0.6l-1.3,-2.2l-0.08,-3.31l-0.97,-1.66l0.22,-1.04l-0.38,-0.48l-1.22,-0.04l0.0,-1.25l-0.98,-1.07l0.96,-3.01l3.25,-2.65l0.13,-3.33l0.95,-5.18l0.52,-1.07l-0.1,-0.48l-0.91,-0.78l-0.2,-0.96l-0.8,-0.58l-0.55,-3.65l2.1,-1.2l19.57,9.83Z",
      "name": "Chad"
    },
    "LY": {
      "path": "M483.48,203.15l-0.75,1.1l0.29,1.39l-0.6,1.83l0.73,2.14l0.0,24.12l-2.48,0.01l-0.41,0.85l-19.41,-9.76l-4.41,2.28l-1.37,-1.33l-3.82,-1.1l-1.14,-1.65l-1.98,-1.23l-1.22,0.32l-0.66,-1.11l-0.17,-1.26l-1.28,-1.69l0.87,-1.19l-0.07,-4.34l0.43,-2.27l-0.86,-3.45l1.13,-0.76l0.22,-1.16l-0.2,-1.03l3.48,-2.61l0.29,-1.94l2.45,0.8l1.18,-0.21l1.98,0.44l3.15,1.18l1.37,2.54l5.72,1.67l2.64,1.35l1.61,-0.72l1.29,-1.34l-0.44,-2.34l0.66,-1.13l1.67,-1.21l1.57,-0.35l3.14,0.53l1.08,1.28l3.99,0.78l0.36,0.54Z",
      "name": "Libya"
    },
    "AE": {
      "path": "M550.76,223.97l1.88,-0.4l3.84,0.02l4.78,-4.75l0.19,0.36l0.26,1.58l-0.81,0.01l-0.39,0.35l-0.08,2.04l-0.81,0.63l-0.01,0.96l-0.66,0.99l-0.39,1.41l-7.08,-1.25l-0.7,-1.96Z",
      "name": "United Arab Emirates"
    },
    "VE": {
      "path": "M240.68,256.69l0.53,0.75l-0.02,1.06l-1.07,1.78l0.95,2.0l0.42,0.22l1.4,-0.44l0.56,-1.83l-0.77,-1.17l-0.1,-1.47l2.82,-0.93l0.26,-0.49l-0.28,-0.96l0.3,-0.28l0.66,1.31l1.96,0.26l1.4,1.22l0.08,0.68l0.39,0.35l4.81,-0.22l1.49,1.11l1.92,0.31l1.67,-0.84l0.22,-0.6l3.44,-0.14l-0.17,0.55l0.86,1.19l2.19,0.35l1.67,1.1l0.37,1.86l0.41,0.32l1.55,0.17l-1.66,1.35l-0.22,0.92l0.65,0.97l-1.67,0.54l-0.3,0.4l0.04,0.99l-0.56,0.57l-0.01,0.55l1.85,2.27l-0.66,0.69l-4.47,1.29l-0.72,0.54l-3.69,-0.9l-0.71,0.27l-0.02,0.7l0.91,0.53l-0.08,1.54l0.35,1.58l0.35,0.31l1.66,0.17l-1.3,0.52l-0.48,1.13l-2.68,0.91l-0.6,0.77l-1.57,0.13l-1.17,-1.13l-0.8,-2.52l-1.25,-1.26l1.02,-1.23l-1.29,-2.95l0.18,-1.62l1.0,-2.21l-0.2,-0.49l-1.14,-0.46l-4.02,0.36l-1.82,-2.1l-1.57,-0.33l-2.99,0.22l-1.06,-0.97l0.25,-1.23l-0.2,-1.01l-0.59,-0.69l-0.29,-1.06l-1.08,-0.39l0.78,-2.79l1.9,-2.11Z",
      "name": "Venezuela"
    },
    "AF": {
      "path": "M600.7,188.88l-1.57,1.3l-0.1,0.48l0.8,2.31l-1.09,1.04l-0.03,1.27l-0.48,0.71l-2.16,-0.08l-0.37,0.59l0.78,1.48l-1.38,0.69l-1.06,1.69l0.06,1.7l-0.65,0.52l-0.91,-0.21l-1.91,0.36l-0.48,0.77l-1.88,0.13l-1.4,1.56l-0.18,2.32l-2.91,1.02l-1.65,-0.23l-0.71,0.55l-1.41,-0.3l-2.41,0.39l-3.52,-1.17l1.96,-2.35l-0.21,-1.78l-0.3,-0.34l-1.63,-0.4l-0.19,-1.58l-0.75,-2.03l0.95,-1.36l-0.19,-0.6l-0.73,-0.28l1.47,-4.8l2.14,0.9l2.12,-0.36l0.74,-1.34l1.77,-0.39l1.54,-0.92l0.63,-2.31l1.87,-0.5l0.49,-0.81l0.94,0.56l2.13,0.11l2.55,0.92l1.95,-0.83l0.65,0.43l0.56,-0.13l0.69,-1.12l1.57,-0.08l0.72,-1.66l0.79,-0.74l0.8,0.39l-0.17,0.56l0.71,0.58l-0.08,2.39l1.11,0.95ZM601.37,188.71l1.73,-0.71l1.43,-1.18l4.03,0.35l-2.23,0.74l-4.95,0.8Z",
      "name": "Afghanistan"
    },
    "IQ": {
      "path": "M530.82,187.47l0.79,0.66l1.26,-0.28l1.46,3.08l1.63,0.94l0.14,1.23l-1.22,1.05l-0.53,2.52l1.73,2.67l3.12,1.62l1.15,1.88l-0.38,1.85l0.39,0.48l0.41,-0.0l0.02,1.07l0.76,0.94l-2.47,-0.1l-1.71,2.44l-4.31,-0.2l-7.02,-5.48l-3.73,-1.94l-2.88,-0.73l-0.85,-2.87l5.45,-3.02l0.95,-3.43l-0.19,-1.96l1.27,-0.7l1.22,-1.7l0.87,-0.36l2.69,0.34Z",
      "name": "Iraq"
    },
    "IS": {
      "path": "M384.14,88.06l-0.37,2.61l2.54,2.51l-2.9,2.75l-9.19,3.4l-9.25,-1.66l1.7,-1.22l-0.1,-0.7l-4.05,-1.47l2.96,-0.53l0.33,-0.43l-0.11,-1.2l-0.33,-0.36l-4.67,-0.85l1.28,-2.04l3.45,-0.56l3.77,2.72l0.44,0.02l3.64,-2.16l3.3,1.08l3.98,-2.16l3.58,0.26Z",
      "name": "Iceland"
    },
    "IR": {
      "path": "M533.43,187.16l-1.27,-2.15l0.42,-0.98l-0.71,-3.04l1.03,-0.5l0.33,0.83l1.26,1.35l2.05,0.51l1.11,-0.16l2.89,-2.11l0.62,-0.14l0.39,0.46l-0.72,1.2l0.06,0.49l1.56,1.53l0.65,0.04l0.67,1.81l2.56,0.83l1.87,1.48l3.69,0.49l3.91,-0.76l0.47,-0.73l2.17,-0.6l1.66,-1.54l1.51,0.08l1.18,-0.53l1.59,0.24l2.83,1.48l1.88,0.3l2.77,2.47l1.77,0.18l0.18,1.99l-1.68,5.49l0.24,0.5l0.61,0.23l-0.82,1.48l0.8,2.18l0.19,1.71l0.3,0.34l1.63,0.4l0.15,1.32l-2.15,2.35l-0.01,0.53l2.21,3.03l2.34,1.24l0.06,2.14l1.24,0.72l0.11,0.69l-3.31,1.27l-1.08,3.03l-9.68,-1.68l-0.99,-3.05l-1.43,-0.73l-2.17,0.46l-2.47,1.26l-2.83,-0.82l-2.46,-2.02l-2.41,-0.8l-3.42,-6.06l-0.48,-0.2l-1.18,0.39l-1.44,-0.82l-0.5,0.08l-0.65,0.74l-0.97,-1.01l-0.02,-1.31l-0.71,-0.39l0.26,-1.81l-1.29,-2.11l-3.13,-1.63l-1.58,-2.43l0.5,-1.9l1.31,-1.26l-0.19,-1.66l-1.74,-1.1l-1.57,-3.3Z",
      "name": "Iran"
    },
    "AM": {
      "path": "M536.99,182.33l-0.28,0.03l-1.23,-2.13l-0.93,0.01l-0.62,-0.66l-0.69,-0.07l-0.96,-0.81l-1.56,-0.62l0.19,-1.12l-0.26,-0.79l2.72,-0.36l1.09,1.01l-0.17,0.92l1.02,0.78l-0.47,0.62l0.08,0.56l2.04,1.23l0.04,1.4Z",
      "name": "Armenia"
    },
    "AL": {
      "path": "M470.32,171.8l0.74,0.03l0.92,0.89l-0.17,1.95l0.36,1.28l1.01,0.82l-1.82,2.83l-0.19,-0.61l-1.25,-0.89l-0.18,-1.2l0.53,-2.82l-0.54,-1.47l0.6,-0.83Z",
      "name": "Albania"
    },
    "AO": {
      "path": "M461.55,300.03l1.26,3.15l1.94,2.36l2.47,-0.53l1.25,0.32l0.44,-0.18l0.93,-1.92l1.31,-0.08l0.41,-0.44l0.47,-0.0l-0.1,0.41l0.39,0.49l2.65,-0.02l0.03,1.19l0.48,1.01l-0.34,1.52l0.18,1.55l0.83,1.04l-0.13,2.85l0.54,0.39l3.96,-0.41l-0.1,1.79l0.39,1.05l-0.24,1.43l-4.7,-0.03l-0.4,0.39l-0.12,8.13l2.92,3.49l-3.83,0.88l-5.89,-0.36l-1.88,-1.24l-10.47,0.22l-1.3,-1.01l-1.85,-0.16l-2.4,0.77l-0.15,-1.06l0.33,-2.16l1.0,-3.45l1.35,-3.2l2.24,-2.8l0.33,-2.06l-0.13,-1.53l-0.8,-1.08l-1.21,-2.87l0.87,-1.62l-1.27,-4.12l-1.17,-1.53l2.47,-0.63l7.03,0.03ZM451.71,298.87l-0.47,-1.25l1.25,-1.11l0.32,0.3l-0.99,1.03l-0.12,1.03Z",
      "name": "Angola"
    },
    "AR": {
      "path": "M249.29,428.93l-2.33,-0.52l-5.83,-0.43l-0.89,-1.66l0.05,-2.37l-0.45,-0.4l-1.43,0.18l-0.67,-0.91l-0.2,-3.13l1.88,-1.47l0.79,-2.04l-0.25,-1.7l1.3,-2.68l0.91,-4.15l-0.22,-1.69l0.85,-0.45l0.2,-0.44l-0.27,-1.16l-0.98,-0.68l0.59,-0.92l-0.05,-0.5l-1.04,-1.07l-0.52,-3.1l0.97,-0.86l-0.42,-3.58l1.2,-5.43l1.38,-0.98l0.16,-0.43l-0.75,-2.79l-0.01,-2.43l1.78,-1.75l0.06,-2.57l1.43,-2.85l0.01,-2.58l-0.69,-0.74l-1.09,-4.52l1.47,-2.7l-0.18,-2.79l0.85,-2.35l1.59,-2.46l1.73,-1.64l0.05,-0.52l-0.6,-0.84l0.44,-0.85l-0.07,-4.19l2.7,-1.44l0.86,-2.75l-0.21,-0.71l1.76,-2.01l2.9,0.57l1.38,1.78l0.68,-0.08l0.87,-1.87l2.39,0.09l4.95,4.77l2.17,0.49l3.0,1.92l2.47,1.0l0.25,0.82l-2.37,3.93l0.23,0.59l5.39,1.16l2.12,-0.44l2.45,-2.16l0.5,-2.38l0.76,-0.31l0.98,1.2l-0.04,1.8l-3.67,2.51l-2.85,2.66l-3.43,3.88l-1.3,5.07l0.01,2.72l-0.54,0.73l-0.36,3.28l3.14,2.64l-0.16,2.11l1.4,1.11l-0.1,1.09l-2.29,3.52l-3.55,1.49l-4.92,0.6l-2.71,-0.29l-0.43,0.51l0.5,1.65l-0.49,2.1l0.38,1.42l-1.19,0.83l-2.36,0.38l-2.3,-1.04l-1.38,0.83l0.41,3.64l1.69,0.91l1.4,-0.71l0.36,0.76l-2.04,0.86l-2.01,1.89l-0.97,4.63l-2.34,0.1l-2.09,1.78l-0.61,2.75l2.46,2.31l2.17,0.63l-0.7,2.32l-2.83,1.73l-1.73,3.86l-2.17,1.22l-1.16,1.67l0.75,3.76l1.04,1.28ZM256.71,438.88l-2.0,0.15l-1.4,-1.22l-3.82,-0.1l-0.0,-5.83l1.6,3.05l3.26,2.07l3.08,0.78l-0.71,1.1Z",
      "name": "Argentina"
    },
    "AU": {
      "path": "M705.8,353.26l0.26,0.04l0.17,-0.47l-0.48,-1.42l0.92,1.11l0.45,0.15l0.27,-0.39l-0.1,-1.56l-1.98,-3.63l1.09,-3.31l-0.24,-1.57l0.34,-0.62l0.38,1.06l0.43,-0.19l0.99,-1.7l1.91,-0.83l1.29,-1.15l1.81,-0.91l0.96,-0.17l0.92,0.26l1.92,-0.95l1.47,-0.28l1.03,-0.8l1.43,0.04l2.78,-0.84l1.36,-1.15l0.71,-1.45l1.41,-1.26l0.3,-2.58l1.27,-1.59l0.78,1.65l0.54,0.19l1.07,-0.51l0.15,-0.6l-0.73,-1.0l0.45,-0.71l0.78,0.39l0.58,-0.3l0.28,-1.82l1.87,-2.14l1.12,-0.39l0.28,-0.58l0.62,0.17l0.53,-0.73l1.87,-0.57l1.65,1.05l1.35,1.48l3.39,0.38l0.43,-0.54l-0.46,-1.23l1.05,-1.79l1.04,-0.61l0.14,-0.55l-0.25,-0.41l0.88,-1.17l1.31,-0.77l1.3,0.27l2.1,-0.48l0.31,-0.4l-0.05,-1.3l-0.92,-0.77l1.48,0.56l1.41,1.07l2.11,0.65l0.81,-0.2l1.4,0.7l1.69,-0.66l0.8,0.19l0.64,-0.33l0.71,0.77l-1.33,1.94l-0.71,0.07l-0.35,0.51l0.24,0.86l-1.52,2.35l0.12,1.05l2.15,1.65l1.97,0.85l3.04,2.36l1.97,0.65l0.55,0.88l2.72,0.85l1.84,-1.1l2.07,-5.97l-0.42,-3.59l0.3,-1.73l0.47,-0.87l-0.31,-0.68l1.09,-3.28l0.46,-0.47l0.4,0.71l0.16,1.51l0.65,0.52l0.16,1.04l0.85,1.21l0.12,2.38l0.9,2.0l0.57,0.18l1.3,-0.78l1.69,1.7l-0.2,1.08l0.53,2.2l0.39,1.3l0.68,0.48l0.6,1.95l-0.19,1.48l0.81,1.76l6.01,3.69l-0.11,0.76l1.38,1.58l0.95,2.77l0.58,0.22l0.72,-0.41l0.8,0.9l0.61,0.01l0.46,2.41l4.81,4.71l0.66,2.02l-0.07,3.31l1.14,2.2l-0.13,2.24l-1.1,3.68l0.03,1.64l-0.47,1.89l-1.05,2.4l-1.9,1.47l-1.72,3.51l-2.38,6.09l-0.24,2.82l-1.14,0.8l-2.85,0.15l-2.31,1.19l-2.51,2.25l-3.09,-1.57l0.3,-1.15l-0.54,-0.47l-1.5,0.63l-2.01,1.94l-7.12,-2.18l-1.48,-1.63l-1.14,-3.74l-1.45,-1.26l-1.81,-0.26l0.56,-1.18l-0.61,-2.1l-0.72,-0.1l-1.14,1.82l-0.9,0.21l0.63,-0.82l0.36,-1.55l0.92,-1.31l-0.13,-2.34l-0.7,-0.22l-2.0,2.34l-1.51,0.93l-0.94,2.01l-1.35,-0.81l-0.02,-1.52l-1.57,-2.04l-1.09,-0.88l0.24,-0.33l-0.14,-0.59l-3.21,-1.69l-1.83,-0.12l-2.54,-1.35l-4.58,0.28l-6.02,1.9l-2.53,-0.13l-2.62,1.41l-2.13,0.63l-1.49,2.6l-3.49,0.31l-2.29,-0.5l-3.48,0.43l-1.6,1.47l-0.81,-0.04l-2.37,1.63l-3.26,-0.1l-3.72,-2.21l0.04,-1.05l1.19,-0.46l0.49,-0.89l0.21,-2.97l-0.28,-1.64l-1.34,-2.86l-0.38,-1.47l0.05,-1.72l-0.95,-1.7l-0.18,-0.97l-1.01,-0.99l-0.29,-1.98l-1.13,-1.75ZM784.92,393.44l2.65,1.02l3.23,-0.96l1.09,0.14l0.15,3.06l-0.85,1.13l-0.17,1.63l-0.87,-0.24l-1.57,1.91l-1.68,-0.18l-1.4,-2.36l-0.37,-2.04l-1.39,-2.51l0.04,-0.8l1.15,0.18Z",
      "name": "Australia"
    },
    "AT": {
      "path": "M462.89,152.8l0.04,2.25l-1.07,0.0l-0.33,0.63l0.36,0.51l-1.04,2.13l-2.02,0.07l-1.33,0.7l-5.29,-0.99l-0.47,-0.93l-0.44,-0.21l-2.47,0.55l-0.42,0.51l-3.18,-0.81l0.43,-0.91l1.12,0.78l0.6,-0.17l0.25,-0.58l1.93,0.12l1.86,-0.56l1.0,0.08l0.68,0.57l0.62,-0.15l0.26,-0.77l-0.3,-1.78l0.8,-0.44l0.68,-1.15l1.52,0.85l0.47,-0.06l1.34,-1.25l0.64,-0.17l1.81,0.92l1.28,-0.11l0.7,0.37Z",
      "name": "Austria"
    },
    "IN": {
      "path": "M623.34,207.03l-1.24,1.04l-0.97,2.55l0.22,0.51l8.04,3.87l3.42,0.37l1.57,1.38l4.92,0.88l2.18,-0.04l0.38,-0.3l0.29,-1.24l-0.32,-1.64l0.14,-0.87l0.82,-0.31l0.45,2.48l2.28,1.02l1.77,-0.38l4.14,0.1l0.38,-0.36l0.18,-1.66l-0.5,-0.65l1.37,-0.29l2.25,-1.99l2.7,-1.62l1.93,0.62l1.8,-0.98l0.79,1.14l-0.68,0.91l0.26,0.63l2.42,0.36l0.09,0.47l-0.83,0.75l0.13,1.07l-1.52,-0.29l-3.24,1.86l-0.13,1.78l-1.32,2.14l-0.18,1.39l-0.93,1.82l-1.64,-0.5l-0.52,0.37l-0.09,2.63l-0.56,1.11l0.19,0.81l-0.53,0.27l-1.18,-3.73l-1.08,-0.27l-0.38,0.31l-0.24,1.0l-0.66,-0.66l0.54,-1.06l1.22,-0.34l1.15,-2.25l-0.24,-0.56l-1.57,-0.47l-4.34,-0.28l-0.18,-1.56l-0.35,-0.35l-1.11,-0.12l-1.91,-1.12l-0.56,0.17l-0.88,1.82l0.11,0.49l1.36,1.07l-1.09,0.69l-0.69,1.11l0.18,0.56l1.24,0.57l-0.32,1.54l0.85,1.94l0.36,2.01l-0.22,0.59l-4.58,0.52l-0.33,0.42l0.13,1.8l-1.17,1.36l-3.65,1.81l-2.79,3.03l-4.32,3.28l-0.18,1.27l-4.65,1.79l-0.77,2.16l0.64,5.3l-1.06,2.49l-0.01,3.94l-1.24,0.28l-1.14,1.93l0.39,0.84l-1.68,0.53l-1.04,1.83l-0.65,0.47l-2.06,-2.05l-2.1,-6.02l-2.2,-3.64l-1.05,-4.75l-2.29,-3.57l-1.76,-8.2l0.01,-3.11l-0.49,-2.53l-0.55,-0.29l-3.53,1.52l-1.53,-0.27l-2.86,-2.77l0.85,-0.67l0.08,-0.55l-0.74,-1.03l-2.67,-2.06l1.24,-1.32l5.34,0.01l0.39,-0.49l-0.5,-2.29l-1.42,-1.46l-0.27,-1.93l-1.43,-1.2l2.31,-2.37l3.05,0.06l2.62,-2.85l1.6,-2.81l2.4,-2.73l0.07,-2.04l1.97,-1.48l-0.02,-0.65l-1.93,-1.31l-0.82,-1.78l-0.8,-2.21l0.9,-0.89l3.59,0.65l2.92,-0.42l2.33,-2.19l2.31,2.85l-0.24,2.13l0.99,1.59l-0.05,0.82l-1.34,-0.28l-0.47,0.48l0.7,3.06l2.62,1.99l2.99,1.65Z",
      "name": "India"
    },
    "TZ": {
      "path": "M495.56,296.42l2.8,-3.12l-0.02,-0.81l-0.64,-1.3l0.68,-0.52l0.14,-1.47l-0.76,-1.25l0.31,-0.11l2.26,0.03l-0.51,2.76l0.76,1.3l0.5,0.12l1.05,-0.53l1.19,-0.12l0.61,0.24l1.43,-0.62l0.1,-0.67l-0.71,-0.62l1.57,-1.7l8.65,4.86l0.32,1.53l3.34,2.33l-1.05,2.8l0.13,1.61l1.63,1.12l-0.6,1.76l-0.01,2.33l1.89,4.03l0.57,0.43l-1.46,1.08l-2.61,0.94l-1.43,-0.04l-1.06,0.77l-2.29,0.36l-2.87,-0.68l-0.83,0.07l-0.63,-0.75l-0.31,-2.78l-1.32,-1.35l-3.25,-0.77l-3.96,-1.58l-1.18,-2.41l-0.32,-1.75l-1.76,-1.49l0.42,-1.05l-0.44,-0.89l0.08,-0.96l-0.46,-0.58l0.06,-0.56Z",
      "name": "Tanzania"
    },
    "AZ": {
      "path": "M539.29,175.73l1.33,0.32l1.94,-1.8l2.3,3.34l1.43,0.43l-1.26,0.15l-0.35,0.32l-0.8,3.14l-0.99,0.96l0.05,1.11l-1.26,-1.13l0.7,-1.18l-0.04,-0.47l-0.74,-0.86l-1.48,0.15l-2.34,1.71l-0.03,-1.27l-2.03,-1.35l0.47,-0.62l-0.08,-0.56l-1.03,-0.79l0.29,-0.43l-0.14,-0.58l-1.13,-0.86l1.89,0.68l1.69,0.06l0.37,-0.87l-0.81,-1.37l0.42,0.06l1.63,1.72ZM533.78,180.57l0.61,0.46l0.69,-0.0l0.59,1.15l-0.68,-0.15l-1.21,-1.45Z",
      "name": "Azerbaijan"
    },
    "IE": {
      "path": "M405.08,135.42l0.35,2.06l-1.75,2.78l-4.22,1.88l-2.84,-0.4l1.73,-3.0l-1.18,-3.53l4.6,-3.74l0.32,1.15l-0.49,1.74l0.4,0.51l1.47,-0.04l1.6,0.6Z",
      "name": "Ireland"
    },
    "ID": {
      "path": "M756.47,287.89l0.69,4.01l2.79,1.78l0.51,-0.1l2.04,-2.59l2.71,-1.43l2.05,-0.0l3.9,1.73l2.46,0.45l0.08,15.12l-1.75,-1.54l-2.54,-0.51l-0.88,0.71l-2.32,0.06l0.69,-1.33l1.45,-0.64l0.23,-0.46l-0.65,-2.74l-1.24,-2.21l-5.04,-2.29l-2.09,-0.23l-3.68,-2.27l-0.55,0.13l-0.65,1.07l-0.52,0.12l-0.55,-1.89l-1.21,-0.78l1.84,-0.62l1.72,0.05l0.39,-0.52l-0.21,-0.66l-0.38,-0.28l-3.45,-0.0l-1.13,-1.48l-2.1,-0.43l-0.52,-0.6l2.69,-0.48l1.28,-0.78l3.66,0.94l0.3,0.71ZM757.91,300.34l-0.62,0.82l-0.1,-0.8l0.59,-1.12l0.13,1.1ZM747.38,292.98l0.34,0.72l-1.22,-0.57l-4.68,-0.1l0.27,-0.62l2.78,-0.09l2.52,0.67ZM741.05,285.25l-0.67,-2.88l0.64,-2.01l0.41,0.86l1.21,0.18l0.16,0.7l-0.1,1.68l-0.84,-0.16l-0.46,0.3l-0.34,1.34ZM739.05,293.5l-0.5,0.44l-1.34,-0.36l-0.17,-0.37l1.73,-0.08l0.27,0.36ZM721.45,284.51l-0.19,1.97l2.24,2.23l0.54,0.02l1.27,-1.07l2.75,-0.5l-0.9,1.21l-2.11,0.93l-0.16,0.6l2.22,3.01l-0.3,1.07l1.36,1.74l-2.26,0.85l-0.28,-0.31l0.12,-1.19l-1.64,-1.34l0.17,-2.23l-0.56,-0.39l-1.67,0.76l-0.23,0.39l0.3,6.17l-1.1,0.25l-0.69,-0.47l0.64,-2.21l-0.39,-2.42l-0.39,-0.34l-0.8,-0.01l-0.58,-1.29l0.98,-1.6l0.35,-1.96l1.32,-3.87ZM728.59,296.27l0.38,0.49l-0.02,1.28l-0.88,0.49l-0.53,-0.47l1.04,-1.79ZM729.04,286.98l0.27,-0.05l-0.02,0.13l-0.24,-0.08ZM721.68,284.05l0.16,-0.32l1.89,-1.65l1.83,0.68l3.16,0.35l2.94,-0.1l2.39,-1.66l-1.73,2.13l-1.66,0.43l-2.41,-0.48l-4.17,0.13l-2.39,0.51ZM730.55,310.47l1.11,-1.93l2.03,-0.82l0.08,0.62l-1.45,1.67l-1.77,0.46ZM728.12,305.88l-0.1,0.38l-3.46,0.66l-2.91,-0.27l-0.0,-0.25l1.54,-0.41l1.66,0.73l1.67,-0.19l1.61,-0.65ZM722.9,310.24l-0.64,0.03l-2.26,-1.2l1.11,-0.24l1.78,1.41ZM716.26,305.77l0.88,0.51l1.28,-0.17l0.2,0.35l-4.65,0.73l0.39,-0.67l1.15,-0.02l0.75,-0.73ZM711.66,293.84l-0.38,-0.16l-2.54,1.01l-1.12,-1.44l-1.69,-0.13l-1.16,-0.75l-3.04,0.77l-1.1,-1.15l-3.31,-0.11l-0.35,-3.05l-1.35,-0.95l-1.11,-1.98l-0.33,-2.06l0.27,-2.14l0.9,-1.01l0.37,1.15l2.09,1.49l1.53,-0.48l1.82,0.08l1.38,-1.19l1.0,-0.18l2.28,0.67l2.26,-0.53l1.52,-3.64l1.01,-0.99l0.78,-2.57l4.1,0.3l-1.11,1.77l0.02,0.46l1.7,2.2l-0.23,1.39l2.07,1.71l-2.33,0.42l-0.88,1.9l0.1,2.05l-2.4,1.9l-0.06,2.45l-0.7,2.79ZM692.58,302.03l0.35,0.26l4.8,0.25l0.78,-0.97l4.17,1.09l1.13,1.68l3.69,0.45l2.13,1.04l-1.8,0.6l-2.77,-0.99l-4.8,-0.12l-5.24,-1.41l-1.84,-0.25l-1.11,0.3l-4.26,-0.97l-0.7,-1.14l-1.59,-0.13l1.18,-1.65l2.74,0.13l2.87,1.13l0.26,0.68ZM685.53,299.17l-2.22,0.04l-2.06,-2.03l-3.15,-2.01l-2.93,-3.51l-3.11,-5.33l-2.2,-2.12l-1.64,-4.06l-2.32,-1.69l-1.27,-2.07l-1.96,-1.5l-2.51,-2.65l-0.11,-0.66l4.81,0.53l2.15,2.38l3.31,2.74l2.35,2.66l2.7,0.17l1.95,1.59l1.54,2.17l1.59,0.95l-0.84,1.71l0.15,0.52l1.44,0.87l0.79,0.1l0.4,1.58l0.87,1.4l1.96,0.39l1.0,1.31l-0.6,3.01l-0.09,3.5Z",
      "name": "Indonesia"
    },
    "UA": {
      "path": "M492.5,162.44l1.28,-2.49l1.82,0.19l0.66,-0.23l0.09,-0.71l-0.25,-0.75l-0.79,-0.72l-0.33,-1.21l-0.86,-0.62l-0.02,-1.19l-1.13,-0.86l-1.15,-0.19l-2.04,-1.0l-1.66,0.32l-0.66,0.47l-0.92,-0.0l-0.84,0.78l-2.48,0.7l-1.18,-0.71l-3.07,-0.36l-0.89,0.43l-0.24,-0.55l-1.11,-0.7l0.35,-0.93l1.26,-1.02l-0.54,-1.23l2.04,-2.43l1.4,-0.62l0.25,-1.19l-1.04,-2.39l0.83,-0.13l1.28,-0.84l1.8,-0.07l2.47,0.26l2.86,0.81l1.88,0.06l0.86,0.44l1.04,-0.41l0.77,0.66l2.18,-0.15l0.92,0.3l0.52,-0.34l0.15,-1.53l0.56,-0.54l2.85,-0.05l0.84,-0.72l3.04,-0.18l1.23,1.46l-0.48,0.77l0.21,1.03l0.36,0.32l1.8,0.14l0.93,2.08l3.18,1.15l1.94,-0.45l1.67,1.49l1.4,-0.03l3.35,0.96l0.02,0.54l-0.96,1.59l0.47,1.97l-0.26,0.7l-2.36,0.28l-1.29,0.89l-0.23,1.38l-1.83,0.27l-1.58,0.97l-2.41,0.21l-2.16,1.17l-0.21,0.38l0.34,2.26l1.23,0.75l2.13,-0.08l-0.14,0.31l-2.65,0.53l-3.23,1.69l-0.87,-0.39l0.42,-1.1l-0.25,-0.52l-2.21,-0.73l2.35,-1.06l0.12,-0.65l-0.93,-0.82l-3.62,-0.74l-0.13,-0.89l-0.46,-0.34l-2.61,0.59l-0.91,1.69l-1.71,2.04l-0.86,-0.4l-1.62,0.27Z",
      "name": "Ukraine"
    },
    "QA": {
      "path": "M549.33,221.64l-0.76,-0.23l-0.14,-1.64l0.84,-1.29l0.47,0.52l0.04,1.34l-0.45,1.3Z",
      "name": "Qatar"
    },
    "MZ": {
      "path": "M508.58,318.75l-0.34,-2.57l0.51,-2.05l3.55,0.63l2.5,-0.38l1.02,-0.76l1.49,0.01l2.74,-0.98l1.66,-1.2l0.5,9.24l0.41,1.23l-0.68,1.67l-0.93,1.71l-1.5,1.5l-5.16,2.28l-2.78,2.73l-1.02,0.53l-1.71,1.8l-0.98,0.57l-0.35,2.41l1.16,1.94l0.49,2.17l0.43,0.31l-0.06,2.06l-0.39,1.17l0.5,0.72l-0.25,0.73l-0.92,0.83l-5.12,2.39l-1.22,1.36l0.21,1.13l0.58,0.39l-0.11,0.72l-1.22,-0.01l-0.73,-2.97l0.42,-3.09l-1.78,-5.37l2.49,-2.81l0.69,-1.89l0.44,-0.43l0.28,-1.53l-0.39,-0.93l0.59,-3.65l-0.01,-3.26l-1.49,-1.16l-1.2,-0.22l-1.74,-1.17l-1.92,0.01l-0.29,-2.08l7.06,-1.96l1.28,1.09l0.89,-0.1l0.67,0.44l0.1,0.73l-0.51,1.29l0.19,1.81l1.75,1.83l0.65,-0.13l0.71,-1.65l1.17,-0.86l-0.26,-3.47l-1.05,-1.85l-1.04,-0.94Z",
      "name": "Mozambique"
    }
  },
  "height": 440.7063107441331,
  "projection": {
    "type": "mill",
    "centralMeridian": 11.5
  },
  "width": 900.0
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"switchery.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// client/lib/switchery.js                                                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
;

(function () {
  /**
   * Require the module at `name`.
   *
   * @param {String} name
   * @return {Object} exports
   * @api public
   */
  function require(name) {
    var module = require.modules[name];
    if (!module) throw new Error('failed to require "' + name + '"');

    if (!('exports' in module) && typeof module.definition === 'function') {
      module.client = module.component = true;
      module.definition.call(this, module.exports = {}, module);
      delete module.definition;
    }

    return module.exports;
  }
  /**
   * Meta info, accessible in the global scope unless you use AMD option.
   */


  require.loader = 'component';
  /**
   * Internal helper object, contains a sorting function for semantiv versioning
   */

  require.helper = {};

  require.helper.semVerSort = function (a, b) {
    var aArray = a.version.split('.');
    var bArray = b.version.split('.');

    for (var i = 0; i < aArray.length; ++i) {
      var aInt = parseInt(aArray[i], 10);
      var bInt = parseInt(bArray[i], 10);

      if (aInt === bInt) {
        var aLex = aArray[i].substr(("" + aInt).length);
        var bLex = bArray[i].substr(("" + bInt).length);
        if (aLex === '' && bLex !== '') return 1;
        if (aLex !== '' && bLex === '') return -1;
        if (aLex !== '' && bLex !== '') return aLex > bLex ? 1 : -1;
        continue;
      } else if (aInt > bInt) {
        return 1;
      } else {
        return -1;
      }
    }

    return 0;
  };
  /**
   * Find and require a module which name starts with the provided name.
   * If multiple modules exists, the highest semver is used.
   * This function can only be used for remote dependencies.
    * @param {String} name - module name: `user~repo`
   * @param {Boolean} returnPath - returns the canonical require path if true,
   *                               otherwise it returns the epxorted module
   */


  require.latest = function (name, returnPath) {
    function showError(name) {
      throw new Error('failed to find latest module of "' + name + '"');
    } // only remotes with semvers, ignore local files conataining a '/'


    var versionRegexp = /(.*)~(.*)@v?(\d+\.\d+\.\d+[^\/]*)$/;
    var remoteRegexp = /(.*)~(.*)/;
    if (!remoteRegexp.test(name)) showError(name);
    var moduleNames = Object.keys(require.modules);
    var semVerCandidates = [];
    var otherCandidates = []; // for instance: name of the git branch

    for (var i = 0; i < moduleNames.length; i++) {
      var moduleName = moduleNames[i];

      if (new RegExp(name + '@').test(moduleName)) {
        var version = moduleName.substr(name.length + 1);
        var semVerMatch = versionRegexp.exec(moduleName);

        if (semVerMatch != null) {
          semVerCandidates.push({
            version: version,
            name: moduleName
          });
        } else {
          otherCandidates.push({
            version: version,
            name: moduleName
          });
        }
      }
    }

    if (semVerCandidates.concat(otherCandidates).length === 0) {
      showError(name);
    }

    if (semVerCandidates.length > 0) {
      var module = semVerCandidates.sort(require.helper.semVerSort).pop().name;

      if (returnPath === true) {
        return module;
      }

      return require(module);
    } // if the build contains more than one branch of the same module
    // you should not use this funciton


    var module = otherCandidates.sort(function (a, b) {
      return a.name > b.name;
    })[0].name;

    if (returnPath === true) {
      return module;
    }

    return require(module);
  };
  /**
   * Registered modules.
   */


  require.modules = {};
  /**
   * Register module at `name` with callback `definition`.
   *
   * @param {String} name
   * @param {Function} definition
   * @api private
   */

  require.register = function (name, definition) {
    require.modules[name] = {
      definition: definition
    };
  };
  /**
   * Define a module's exports immediately with `exports`.
   *
   * @param {String} name
   * @param {Generic} exports
   * @api private
   */


  require.define = function (name, exports) {
    require.modules[name] = {
      exports: exports
    };
  };

  require.register("abpetkov-transitionize@0.0.3", function (exports, module) {
    /**
     * Transitionize 0.0.2
     * https://github.com/abpetkov/transitionize
     *
     * Authored by Alexander Petkov
     * https://github.com/abpetkov
     *
     * Copyright 2013, Alexander Petkov
     * License: The MIT License (MIT)
     * http://opensource.org/licenses/MIT
     *
     */

    /**
     * Expose `Transitionize`.
     */
    module.exports = Transitionize;
    /**
     * Initialize new Transitionize.
     *
     * @param {Object} element
     * @param {Object} props
     * @api public
     */

    function Transitionize(element, props) {
      if (!(this instanceof Transitionize)) return new Transitionize(element, props);
      this.element = element;
      this.props = props || {};
      this.init();
    }
    /**
     * Detect if Safari.
     *
     * @returns {Boolean}
     * @api private
     */


    Transitionize.prototype.isSafari = function () {
      return /Safari/.test(navigator.userAgent) && /Apple Computer/.test(navigator.vendor);
    };
    /**
     * Loop though the object and push the keys and values in an array.
     * Apply the CSS3 transition to the element and prefix with -webkit- for Safari.
     *
     * @api private
     */


    Transitionize.prototype.init = function () {
      var transitions = [];

      for (var key in this.props) {
        transitions.push(key + ' ' + this.props[key]);
      }

      this.element.style.transition = transitions.join(', ');
      if (this.isSafari()) this.element.style.webkitTransition = transitions.join(', ');
    };
  });

  require.register("ftlabs-fastclick@v0.6.11", function (exports, module) {
    /**
     * @preserve FastClick: polyfill to remove click delays on browsers with touch UIs.
     *
     * @version 0.6.11
     * @codingstandard ftlabs-jsv2
     * @copyright The Financial Times Limited [All Rights Reserved]
     * @license MIT License (see LICENSE.txt)
     */

    /*jslint browser:true, node:true*/

    /*global define, Event, Node*/

    /**
     * Instantiate fast-clicking listeners on the specificed layer.
     *
     * @constructor
     * @param {Element} layer The layer to listen on
     */
    function FastClick(layer) {
      'use strict';

      var oldOnClick,
          self = this;
      /**
       * Whether a click is currently being tracked.
       *
       * @type boolean
       */

      this.trackingClick = false;
      /**
       * Timestamp for when when click tracking started.
       *
       * @type number
       */

      this.trackingClickStart = 0;
      /**
       * The element being tracked for a click.
       *
       * @type EventTarget
       */

      this.targetElement = null;
      /**
       * X-coordinate of touch start event.
       *
       * @type number
       */

      this.touchStartX = 0;
      /**
       * Y-coordinate of touch start event.
       *
       * @type number
       */

      this.touchStartY = 0;
      /**
       * ID of the last touch, retrieved from Touch.identifier.
       *
       * @type number
       */

      this.lastTouchIdentifier = 0;
      /**
       * Touchmove boundary, beyond which a click will be cancelled.
       *
       * @type number
       */

      this.touchBoundary = 10;
      /**
       * The FastClick layer.
       *
       * @type Element
       */

      this.layer = layer;

      if (!layer || !layer.nodeType) {
        throw new TypeError('Layer must be a document node');
      }
      /** @type function() */


      this.onClick = function () {
        return FastClick.prototype.onClick.apply(self, arguments);
      };
      /** @type function() */


      this.onMouse = function () {
        return FastClick.prototype.onMouse.apply(self, arguments);
      };
      /** @type function() */


      this.onTouchStart = function () {
        return FastClick.prototype.onTouchStart.apply(self, arguments);
      };
      /** @type function() */


      this.onTouchMove = function () {
        return FastClick.prototype.onTouchMove.apply(self, arguments);
      };
      /** @type function() */


      this.onTouchEnd = function () {
        return FastClick.prototype.onTouchEnd.apply(self, arguments);
      };
      /** @type function() */


      this.onTouchCancel = function () {
        return FastClick.prototype.onTouchCancel.apply(self, arguments);
      };

      if (FastClick.notNeeded(layer)) {
        return;
      } // Set up event handlers as required


      if (this.deviceIsAndroid) {
        layer.addEventListener('mouseover', this.onMouse, true);
        layer.addEventListener('mousedown', this.onMouse, true);
        layer.addEventListener('mouseup', this.onMouse, true);
      }

      layer.addEventListener('click', this.onClick, true);
      layer.addEventListener('touchstart', this.onTouchStart, false);
      layer.addEventListener('touchmove', this.onTouchMove, false);
      layer.addEventListener('touchend', this.onTouchEnd, false);
      layer.addEventListener('touchcancel', this.onTouchCancel, false); // Hack is required for browsers that don't support Event#stopImmediatePropagation (e.g. Android 2)
      // which is how FastClick normally stops click events bubbling to callbacks registered on the FastClick
      // layer when they are cancelled.

      if (!Event.prototype.stopImmediatePropagation) {
        layer.removeEventListener = function (type, callback, capture) {
          var rmv = Node.prototype.removeEventListener;

          if (type === 'click') {
            rmv.call(layer, type, callback.hijacked || callback, capture);
          } else {
            rmv.call(layer, type, callback, capture);
          }
        };

        layer.addEventListener = function (type, callback, capture) {
          var adv = Node.prototype.addEventListener;

          if (type === 'click') {
            adv.call(layer, type, callback.hijacked || (callback.hijacked = function (event) {
              if (!event.propagationStopped) {
                callback(event);
              }
            }), capture);
          } else {
            adv.call(layer, type, callback, capture);
          }
        };
      } // If a handler is already declared in the element's onclick attribute, it will be fired before
      // FastClick's onClick handler. Fix this by pulling out the user-defined handler function and
      // adding it as listener.


      if (typeof layer.onclick === 'function') {
        // Android browser on at least 3.2 requires a new reference to the function in layer.onclick
        // - the old one won't work if passed to addEventListener directly.
        oldOnClick = layer.onclick;
        layer.addEventListener('click', function (event) {
          oldOnClick(event);
        }, false);
        layer.onclick = null;
      }
    }
    /**
     * Android requires exceptions.
     *
     * @type boolean
     */


    FastClick.prototype.deviceIsAndroid = navigator.userAgent.indexOf('Android') > 0;
    /**
     * iOS requires exceptions.
     *
     * @type boolean
     */

    FastClick.prototype.deviceIsIOS = /iP(ad|hone|od)/.test(navigator.userAgent);
    /**
     * iOS 4 requires an exception for select elements.
     *
     * @type boolean
     */

    FastClick.prototype.deviceIsIOS4 = FastClick.prototype.deviceIsIOS && /OS 4_\d(_\d)?/.test(navigator.userAgent);
    /**
     * iOS 6.0(+?) requires the target element to be manually derived
     *
     * @type boolean
     */

    FastClick.prototype.deviceIsIOSWithBadTarget = FastClick.prototype.deviceIsIOS && /OS ([6-9]|\d{2})_\d/.test(navigator.userAgent);
    /**
     * Determine whether a given element requires a native click.
     *
     * @param {EventTarget|Element} target Target DOM element
     * @returns {boolean} Returns true if the element needs a native click
     */

    FastClick.prototype.needsClick = function (target) {
      'use strict';

      switch (target.nodeName.toLowerCase()) {
        // Don't send a synthetic click to disabled inputs (issue #62)
        case 'button':
        case 'select':
        case 'textarea':
          if (target.disabled) {
            return true;
          }

          break;

        case 'input':
          // File inputs need real clicks on iOS 6 due to a browser bug (issue #68)
          if (this.deviceIsIOS && target.type === 'file' || target.disabled) {
            return true;
          }

          break;

        case 'label':
        case 'video':
          return true;
      }

      return /\bneedsclick\b/.test(target.className);
    };
    /**
     * Determine whether a given element requires a call to focus to simulate click into element.
     *
     * @param {EventTarget|Element} target Target DOM element
     * @returns {boolean} Returns true if the element requires a call to focus to simulate native click.
     */


    FastClick.prototype.needsFocus = function (target) {
      'use strict';

      switch (target.nodeName.toLowerCase()) {
        case 'textarea':
          return true;

        case 'select':
          return !this.deviceIsAndroid;

        case 'input':
          switch (target.type) {
            case 'button':
            case 'checkbox':
            case 'file':
            case 'image':
            case 'radio':
            case 'submit':
              return false;
          } // No point in attempting to focus disabled inputs


          return !target.disabled && !target.readOnly;

        default:
          return /\bneedsfocus\b/.test(target.className);
      }
    };
    /**
     * Send a click event to the specified element.
     *
     * @param {EventTarget|Element} targetElement
     * @param {Event} event
     */


    FastClick.prototype.sendClick = function (targetElement, event) {
      'use strict';

      var clickEvent, touch; // On some Android devices activeElement needs to be blurred otherwise the synthetic click will have no effect (#24)

      if (document.activeElement && document.activeElement !== targetElement) {
        document.activeElement.blur();
      }

      touch = event.changedTouches[0]; // Synthesise a click event, with an extra attribute so it can be tracked

      clickEvent = document.createEvent('MouseEvents');
      clickEvent.initMouseEvent(this.determineEventType(targetElement), true, true, window, 1, touch.screenX, touch.screenY, touch.clientX, touch.clientY, false, false, false, false, 0, null);
      clickEvent.forwardedTouchEvent = true;
      targetElement.dispatchEvent(clickEvent);
    };

    FastClick.prototype.determineEventType = function (targetElement) {
      'use strict'; //Issue #159: Android Chrome Select Box does not open with a synthetic click event

      if (this.deviceIsAndroid && targetElement.tagName.toLowerCase() === 'select') {
        return 'mousedown';
      }

      return 'click';
    };
    /**
     * @param {EventTarget|Element} targetElement
     */


    FastClick.prototype.focus = function (targetElement) {
      'use strict';

      var length; // Issue #160: on iOS 7, some input elements (e.g. date datetime) throw a vague TypeError on setSelectionRange. These elements don't have an integer value for the selectionStart and selectionEnd properties, but unfortunately that can't be used for detection because accessing the properties also throws a TypeError. Just check the type instead. Filed as Apple bug #15122724.

      if (this.deviceIsIOS && targetElement.setSelectionRange && targetElement.type.indexOf('date') !== 0 && targetElement.type !== 'time') {
        length = targetElement.value.length;
        targetElement.setSelectionRange(length, length);
      } else {
        targetElement.focus();
      }
    };
    /**
     * Check whether the given target element is a child of a scrollable layer and if so, set a flag on it.
     *
     * @param {EventTarget|Element} targetElement
     */


    FastClick.prototype.updateScrollParent = function (targetElement) {
      'use strict';

      var scrollParent, parentElement;
      scrollParent = targetElement.fastClickScrollParent; // Attempt to discover whether the target element is contained within a scrollable layer. Re-check if the
      // target element was moved to another parent.

      if (!scrollParent || !scrollParent.contains(targetElement)) {
        parentElement = targetElement;

        do {
          if (parentElement.scrollHeight > parentElement.offsetHeight) {
            scrollParent = parentElement;
            targetElement.fastClickScrollParent = parentElement;
            break;
          }

          parentElement = parentElement.parentElement;
        } while (parentElement);
      } // Always update the scroll top tracker if possible.


      if (scrollParent) {
        scrollParent.fastClickLastScrollTop = scrollParent.scrollTop;
      }
    };
    /**
     * @param {EventTarget} targetElement
     * @returns {Element|EventTarget}
     */


    FastClick.prototype.getTargetElementFromEventTarget = function (eventTarget) {
      'use strict'; // On some older browsers (notably Safari on iOS 4.1 - see issue #56) the event target may be a text node.

      if (eventTarget.nodeType === Node.TEXT_NODE) {
        return eventTarget.parentNode;
      }

      return eventTarget;
    };
    /**
     * On touch start, record the position and scroll offset.
     *
     * @param {Event} event
     * @returns {boolean}
     */


    FastClick.prototype.onTouchStart = function (event) {
      'use strict';

      var targetElement, touch, selection; // Ignore multiple touches, otherwise pinch-to-zoom is prevented if both fingers are on the FastClick element (issue #111).

      if (event.targetTouches.length > 1) {
        return true;
      }

      targetElement = this.getTargetElementFromEventTarget(event.target);
      touch = event.targetTouches[0];

      if (this.deviceIsIOS) {
        // Only trusted events will deselect text on iOS (issue #49)
        selection = window.getSelection();

        if (selection.rangeCount && !selection.isCollapsed) {
          return true;
        }

        if (!this.deviceIsIOS4) {
          // Weird things happen on iOS when an alert or confirm dialog is opened from a click event callback (issue #23):
          // when the user next taps anywhere else on the page, new touchstart and touchend events are dispatched
          // with the same identifier as the touch event that previously triggered the click that triggered the alert.
          // Sadly, there is an issue on iOS 4 that causes some normal touch events to have the same identifier as an
          // immediately preceeding touch event (issue #52), so this fix is unavailable on that platform.
          if (touch.identifier === this.lastTouchIdentifier) {
            event.preventDefault();
            return false;
          }

          this.lastTouchIdentifier = touch.identifier; // If the target element is a child of a scrollable layer (using -webkit-overflow-scrolling: touch) and:
          // 1) the user does a fling scroll on the scrollable layer
          // 2) the user stops the fling scroll with another tap
          // then the event.target of the last 'touchend' event will be the element that was under the user's finger
          // when the fling scroll was started, causing FastClick to send a click event to that layer - unless a check
          // is made to ensure that a parent layer was not scrolled before sending a synthetic click (issue #42).

          this.updateScrollParent(targetElement);
        }
      }

      this.trackingClick = true;
      this.trackingClickStart = event.timeStamp;
      this.targetElement = targetElement;
      this.touchStartX = touch.pageX;
      this.touchStartY = touch.pageY; // Prevent phantom clicks on fast double-tap (issue #36)

      if (event.timeStamp - this.lastClickTime < 200) {
        event.preventDefault();
      }

      return true;
    };
    /**
     * Based on a touchmove event object, check whether the touch has moved past a boundary since it started.
     *
     * @param {Event} event
     * @returns {boolean}
     */


    FastClick.prototype.touchHasMoved = function (event) {
      'use strict';

      var touch = event.changedTouches[0],
          boundary = this.touchBoundary;

      if (Math.abs(touch.pageX - this.touchStartX) > boundary || Math.abs(touch.pageY - this.touchStartY) > boundary) {
        return true;
      }

      return false;
    };
    /**
     * Update the last position.
     *
     * @param {Event} event
     * @returns {boolean}
     */


    FastClick.prototype.onTouchMove = function (event) {
      'use strict';

      if (!this.trackingClick) {
        return true;
      } // If the touch has moved, cancel the click tracking


      if (this.targetElement !== this.getTargetElementFromEventTarget(event.target) || this.touchHasMoved(event)) {
        this.trackingClick = false;
        this.targetElement = null;
      }

      return true;
    };
    /**
     * Attempt to find the labelled control for the given label element.
     *
     * @param {EventTarget|HTMLLabelElement} labelElement
     * @returns {Element|null}
     */


    FastClick.prototype.findControl = function (labelElement) {
      'use strict'; // Fast path for newer browsers supporting the HTML5 control attribute

      if (labelElement.control !== undefined) {
        return labelElement.control;
      } // All browsers under test that support touch events also support the HTML5 htmlFor attribute


      if (labelElement.htmlFor) {
        return document.getElementById(labelElement.htmlFor);
      } // If no for attribute exists, attempt to retrieve the first labellable descendant element
      // the list of which is defined here: http://www.w3.org/TR/html5/forms.html#category-label


      return labelElement.querySelector('button, input:not([type=hidden]), keygen, meter, output, progress, select, textarea');
    };
    /**
     * On touch end, determine whether to send a click event at once.
     *
     * @param {Event} event
     * @returns {boolean}
     */


    FastClick.prototype.onTouchEnd = function (event) {
      'use strict';

      var forElement,
          trackingClickStart,
          targetTagName,
          scrollParent,
          touch,
          targetElement = this.targetElement;

      if (!this.trackingClick) {
        return true;
      } // Prevent phantom clicks on fast double-tap (issue #36)


      if (event.timeStamp - this.lastClickTime < 200) {
        this.cancelNextClick = true;
        return true;
      } // Reset to prevent wrong click cancel on input (issue #156).


      this.cancelNextClick = false;
      this.lastClickTime = event.timeStamp;
      trackingClickStart = this.trackingClickStart;
      this.trackingClick = false;
      this.trackingClickStart = 0; // On some iOS devices, the targetElement supplied with the event is invalid if the layer
      // is performing a transition or scroll, and has to be re-detected manually. Note that
      // for this to function correctly, it must be called *after* the event target is checked!
      // See issue #57; also filed as rdar://13048589 .

      if (this.deviceIsIOSWithBadTarget) {
        touch = event.changedTouches[0]; // In certain cases arguments of elementFromPoint can be negative, so prevent setting targetElement to null

        targetElement = document.elementFromPoint(touch.pageX - window.pageXOffset, touch.pageY - window.pageYOffset) || targetElement;
        targetElement.fastClickScrollParent = this.targetElement.fastClickScrollParent;
      }

      targetTagName = targetElement.tagName.toLowerCase();

      if (targetTagName === 'label') {
        forElement = this.findControl(targetElement);

        if (forElement) {
          this.focus(targetElement);

          if (this.deviceIsAndroid) {
            return false;
          }

          targetElement = forElement;
        }
      } else if (this.needsFocus(targetElement)) {
        // Case 1: If the touch started a while ago (best guess is 100ms based on tests for issue #36) then focus will be triggered anyway. Return early and unset the target element reference so that the subsequent click will be allowed through.
        // Case 2: Without this exception for input elements tapped when the document is contained in an iframe, then any inputted text won't be visible even though the value attribute is updated as the user types (issue #37).
        if (event.timeStamp - trackingClickStart > 100 || this.deviceIsIOS && window.top !== window && targetTagName === 'input') {
          this.targetElement = null;
          return false;
        }

        this.focus(targetElement); // Select elements need the event to go through on iOS 4, otherwise the selector menu won't open.

        if (!this.deviceIsIOS4 || targetTagName !== 'select') {
          this.targetElement = null;
          event.preventDefault();
        }

        return false;
      }

      if (this.deviceIsIOS && !this.deviceIsIOS4) {
        // Don't send a synthetic click event if the target element is contained within a parent layer that was scrolled
        // and this tap is being used to stop the scrolling (usually initiated by a fling - issue #42).
        scrollParent = targetElement.fastClickScrollParent;

        if (scrollParent && scrollParent.fastClickLastScrollTop !== scrollParent.scrollTop) {
          return true;
        }
      } // Prevent the actual click from going though - unless the target node is marked as requiring
      // real clicks or if it is in the whitelist in which case only non-programmatic clicks are permitted.


      if (!this.needsClick(targetElement)) {
        event.preventDefault();
        this.sendClick(targetElement, event);
      }

      return false;
    };
    /**
     * On touch cancel, stop tracking the click.
     *
     * @returns {void}
     */


    FastClick.prototype.onTouchCancel = function () {
      'use strict';

      this.trackingClick = false;
      this.targetElement = null;
    };
    /**
     * Determine mouse events which should be permitted.
     *
     * @param {Event} event
     * @returns {boolean}
     */


    FastClick.prototype.onMouse = function (event) {
      'use strict'; // If a target element was never set (because a touch event was never fired) allow the event

      if (!this.targetElement) {
        return true;
      }

      if (event.forwardedTouchEvent) {
        return true;
      } // Programmatically generated events targeting a specific element should be permitted


      if (!event.cancelable) {
        return true;
      } // Derive and check the target element to see whether the mouse event needs to be permitted;
      // unless explicitly enabled, prevent non-touch click events from triggering actions,
      // to prevent ghost/doubleclicks.


      if (!this.needsClick(this.targetElement) || this.cancelNextClick) {
        // Prevent any user-added listeners declared on FastClick element from being fired.
        if (event.stopImmediatePropagation) {
          event.stopImmediatePropagation();
        } else {
          // Part of the hack for browsers that don't support Event#stopImmediatePropagation (e.g. Android 2)
          event.propagationStopped = true;
        } // Cancel the event


        event.stopPropagation();
        event.preventDefault();
        return false;
      } // If the mouse event is permitted, return true for the action to go through.


      return true;
    };
    /**
     * On actual clicks, determine whether this is a touch-generated click, a click action occurring
     * naturally after a delay after a touch (which needs to be cancelled to avoid duplication), or
     * an actual click which should be permitted.
     *
     * @param {Event} event
     * @returns {boolean}
     */


    FastClick.prototype.onClick = function (event) {
      'use strict';

      var permitted; // It's possible for another FastClick-like library delivered with third-party code to fire a click event before FastClick does (issue #44). In that case, set the click-tracking flag back to false and return early. This will cause onTouchEnd to return early.

      if (this.trackingClick) {
        this.targetElement = null;
        this.trackingClick = false;
        return true;
      } // Very odd behaviour on iOS (issue #18): if a submit element is present inside a form and the user hits enter in the iOS simulator or clicks the Go button on the pop-up OS keyboard the a kind of 'fake' click event will be triggered with the submit-type input element as the target.


      if (event.target.type === 'submit' && event.detail === 0) {
        return true;
      }

      permitted = this.onMouse(event); // Only unset targetElement if the click is not permitted. This will ensure that the check for !targetElement in onMouse fails and the browser's click doesn't go through.

      if (!permitted) {
        this.targetElement = null;
      } // If clicks are permitted, return true for the action to go through.


      return permitted;
    };
    /**
     * Remove all FastClick's event listeners.
     *
     * @returns {void}
     */


    FastClick.prototype.destroy = function () {
      'use strict';

      var layer = this.layer;

      if (this.deviceIsAndroid) {
        layer.removeEventListener('mouseover', this.onMouse, true);
        layer.removeEventListener('mousedown', this.onMouse, true);
        layer.removeEventListener('mouseup', this.onMouse, true);
      }

      layer.removeEventListener('click', this.onClick, true);
      layer.removeEventListener('touchstart', this.onTouchStart, false);
      layer.removeEventListener('touchmove', this.onTouchMove, false);
      layer.removeEventListener('touchend', this.onTouchEnd, false);
      layer.removeEventListener('touchcancel', this.onTouchCancel, false);
    };
    /**
     * Check whether FastClick is needed.
     *
     * @param {Element} layer The layer to listen on
     */


    FastClick.notNeeded = function (layer) {
      'use strict';

      var metaViewport;
      var chromeVersion; // Devices that don't support touch don't need FastClick

      if (typeof window.ontouchstart === 'undefined') {
        return true;
      } // Chrome version - zero for other browsers


      chromeVersion = +(/Chrome\/([0-9]+)/.exec(navigator.userAgent) || [, 0])[1];

      if (chromeVersion) {
        if (FastClick.prototype.deviceIsAndroid) {
          metaViewport = document.querySelector('meta[name=viewport]');

          if (metaViewport) {
            // Chrome on Android with user-scalable="no" doesn't need FastClick (issue #89)
            if (metaViewport.content.indexOf('user-scalable=no') !== -1) {
              return true;
            } // Chrome 32 and above with width=device-width or less don't need FastClick


            if (chromeVersion > 31 && window.innerWidth <= window.screen.width) {
              return true;
            }
          } // Chrome desktop doesn't need FastClick (issue #15)

        } else {
          return true;
        }
      } // IE10 with -ms-touch-action: none, which disables double-tap-to-zoom (issue #97)


      if (layer.style.msTouchAction === 'none') {
        return true;
      }

      return false;
    };
    /**
     * Factory method for creating a FastClick object
     *
     * @param {Element} layer The layer to listen on
     */


    FastClick.attach = function (layer) {
      'use strict';

      return new FastClick(layer);
    };

    if (typeof define !== 'undefined' && define.amd) {
      // AMD. Register as an anonymous module.
      define(function () {
        'use strict';

        return FastClick;
      });
    } else if (typeof module !== 'undefined' && module.exports) {
      module.exports = FastClick.attach;
      module.exports.FastClick = FastClick;
    } else {
      window.FastClick = FastClick;
    }
  });

  require.register("component-indexof@0.0.3", function (exports, module) {
    module.exports = function (arr, obj) {
      if (arr.indexOf) return arr.indexOf(obj);

      for (var i = 0; i < arr.length; ++i) {
        if (arr[i] === obj) return i;
      }

      return -1;
    };
  });

  require.register("component-classes@1.2.1", function (exports, module) {
    /**
     * Module dependencies.
     */
    var index = require('component-indexof@0.0.3');
    /**
     * Whitespace regexp.
     */


    var re = /\s+/;
    /**
     * toString reference.
     */

    var toString = Object.prototype.toString;
    /**
     * Wrap `el` in a `ClassList`.
     *
     * @param {Element} el
     * @return {ClassList}
     * @api public
     */

    module.exports = function (el) {
      return new ClassList(el);
    };
    /**
     * Initialize a new ClassList for `el`.
     *
     * @param {Element} el
     * @api private
     */


    function ClassList(el) {
      if (!el) throw new Error('A DOM element reference is required');
      this.el = el;
      this.list = el.classList;
    }
    /**
     * Add class `name` if not already present.
     *
     * @param {String} name
     * @return {ClassList}
     * @api public
     */


    ClassList.prototype.add = function (name) {
      // classList
      if (this.list) {
        this.list.add(name);
        return this;
      } // fallback


      var arr = this.array();
      var i = index(arr, name);
      if (!~i) arr.push(name);
      this.el.className = arr.join(' ');
      return this;
    };
    /**
     * Remove class `name` when present, or
     * pass a regular expression to remove
     * any which match.
     *
     * @param {String|RegExp} name
     * @return {ClassList}
     * @api public
     */


    ClassList.prototype.remove = function (name) {
      if ('[object RegExp]' == toString.call(name)) {
        return this.removeMatching(name);
      } // classList


      if (this.list) {
        this.list.remove(name);
        return this;
      } // fallback


      var arr = this.array();
      var i = index(arr, name);
      if (~i) arr.splice(i, 1);
      this.el.className = arr.join(' ');
      return this;
    };
    /**
     * Remove all classes matching `re`.
     *
     * @param {RegExp} re
     * @return {ClassList}
     * @api private
     */


    ClassList.prototype.removeMatching = function (re) {
      var arr = this.array();

      for (var i = 0; i < arr.length; i++) {
        if (re.test(arr[i])) {
          this.remove(arr[i]);
        }
      }

      return this;
    };
    /**
     * Toggle class `name`, can force state via `force`.
     *
     * For browsers that support classList, but do not support `force` yet,
     * the mistake will be detected and corrected.
     *
     * @param {String} name
     * @param {Boolean} force
     * @return {ClassList}
     * @api public
     */


    ClassList.prototype.toggle = function (name, force) {
      // classList
      if (this.list) {
        if ("undefined" !== typeof force) {
          if (force !== this.list.toggle(name, force)) {
            this.list.toggle(name); // toggle again to correct
          }
        } else {
          this.list.toggle(name);
        }

        return this;
      } // fallback


      if ("undefined" !== typeof force) {
        if (!force) {
          this.remove(name);
        } else {
          this.add(name);
        }
      } else {
        if (this.has(name)) {
          this.remove(name);
        } else {
          this.add(name);
        }
      }

      return this;
    };
    /**
     * Return an array of classes.
     *
     * @return {Array}
     * @api public
     */


    ClassList.prototype.array = function () {
      var str = this.el.className.replace(/^\s+|\s+$/g, '');
      var arr = str.split(re);
      if ('' === arr[0]) arr.shift();
      return arr;
    };
    /**
     * Check if class `name` is present.
     *
     * @param {String} name
     * @return {ClassList}
     * @api public
     */


    ClassList.prototype.has = ClassList.prototype.contains = function (name) {
      return this.list ? this.list.contains(name) : !!~index(this.array(), name);
    };
  });

  require.register("component-event@0.1.4", function (exports, module) {
    var bind = window.addEventListener ? 'addEventListener' : 'attachEvent',
        unbind = window.removeEventListener ? 'removeEventListener' : 'detachEvent',
        prefix = bind !== 'addEventListener' ? 'on' : '';
    /**
     * Bind `el` event `type` to `fn`.
     *
     * @param {Element} el
     * @param {String} type
     * @param {Function} fn
     * @param {Boolean} capture
     * @return {Function}
     * @api public
     */

    exports.bind = function (el, type, fn, capture) {
      el[bind](prefix + type, fn, capture || false);
      return fn;
    };
    /**
     * Unbind `el` event `type`'s callback `fn`.
     *
     * @param {Element} el
     * @param {String} type
     * @param {Function} fn
     * @param {Boolean} capture
     * @return {Function}
     * @api public
     */


    exports.unbind = function (el, type, fn, capture) {
      el[unbind](prefix + type, fn, capture || false);
      return fn;
    };
  });

  require.register("component-query@0.0.3", function (exports, module) {
    function one(selector, el) {
      return el.querySelector(selector);
    }

    exports = module.exports = function (selector, el) {
      el = el || document;
      return one(selector, el);
    };

    exports.all = function (selector, el) {
      el = el || document;
      return el.querySelectorAll(selector);
    };

    exports.engine = function (obj) {
      if (!obj.one) throw new Error('.one callback required');
      if (!obj.all) throw new Error('.all callback required');
      one = obj.one;
      exports.all = obj.all;
      return exports;
    };
  });

  require.register("component-matches-selector@0.1.5", function (exports, module) {
    /**
     * Module dependencies.
     */
    var query = require('component-query@0.0.3');
    /**
     * Element prototype.
     */


    var proto = Element.prototype;
    /**
     * Vendor function.
     */

    var vendor = proto.matches || proto.webkitMatchesSelector || proto.mozMatchesSelector || proto.msMatchesSelector || proto.oMatchesSelector;
    /**
     * Expose `match()`.
     */

    module.exports = match;
    /**
     * Match `el` to `selector`.
     *
     * @param {Element} el
     * @param {String} selector
     * @return {Boolean}
     * @api public
     */

    function match(el, selector) {
      if (!el || el.nodeType !== 1) return false;
      if (vendor) return vendor.call(el, selector);
      var nodes = query.all(selector, el.parentNode);

      for (var i = 0; i < nodes.length; ++i) {
        if (nodes[i] == el) return true;
      }

      return false;
    }
  });

  require.register("component-closest@0.1.4", function (exports, module) {
    var matches = require('component-matches-selector@0.1.5');

    module.exports = function (element, selector, checkYoSelf, root) {
      element = checkYoSelf ? {
        parentNode: element
      } : element;
      root = root || document; // Make sure `element !== document` and `element != null`
      // otherwise we get an illegal invocation

      while ((element = element.parentNode) && element !== document) {
        if (matches(element, selector)) return element; // After `matches` on the edge case that
        // the selector matches the root
        // (when the root is not the document)

        if (element === root) return;
      }
    };
  });

  require.register("component-delegate@0.2.3", function (exports, module) {
    /**
     * Module dependencies.
     */
    var closest = require('component-closest@0.1.4'),
        event = require('component-event@0.1.4');
    /**
     * Delegate event `type` to `selector`
     * and invoke `fn(e)`. A callback function
     * is returned which may be passed to `.unbind()`.
     *
     * @param {Element} el
     * @param {String} selector
     * @param {String} type
     * @param {Function} fn
     * @param {Boolean} capture
     * @return {Function}
     * @api public
     */


    exports.bind = function (el, selector, type, fn, capture) {
      return event.bind(el, type, function (e) {
        var target = e.target || e.srcElement;
        e.delegateTarget = closest(target, selector, true, el);
        if (e.delegateTarget) fn.call(el, e);
      }, capture);
    };
    /**
     * Unbind event `type`'s callback `fn`.
     *
     * @param {Element} el
     * @param {String} type
     * @param {Function} fn
     * @param {Boolean} capture
     * @api public
     */


    exports.unbind = function (el, type, fn, capture) {
      event.unbind(el, type, fn, capture);
    };
  });

  require.register("component-events@1.0.9", function (exports, module) {
    /**
     * Module dependencies.
     */
    var events = require('component-event@0.1.4');

    var delegate = require('component-delegate@0.2.3');
    /**
     * Expose `Events`.
     */


    module.exports = Events;
    /**
     * Initialize an `Events` with the given
     * `el` object which events will be bound to,
     * and the `obj` which will receive method calls.
     *
     * @param {Object} el
     * @param {Object} obj
     * @api public
     */

    function Events(el, obj) {
      if (!(this instanceof Events)) return new Events(el, obj);
      if (!el) throw new Error('element required');
      if (!obj) throw new Error('object required');
      this.el = el;
      this.obj = obj;
      this._events = {};
    }
    /**
     * Subscription helper.
     */


    Events.prototype.sub = function (event, method, cb) {
      this._events[event] = this._events[event] || {};
      this._events[event][method] = cb;
    };
    /**
     * Bind to `event` with optional `method` name.
     * When `method` is undefined it becomes `event`
     * with the "on" prefix.
     *
     * Examples:
     *
     *  Direct event handling:
     *
     *    events.bind('click') // implies "onclick"
     *    events.bind('click', 'remove')
     *    events.bind('click', 'sort', 'asc')
     *
     *  Delegated event handling:
     *
     *    events.bind('click li > a')
     *    events.bind('click li > a', 'remove')
     *    events.bind('click a.sort-ascending', 'sort', 'asc')
     *    events.bind('click a.sort-descending', 'sort', 'desc')
     *
     * @param {String} event
     * @param {String|function} [method]
     * @return {Function} callback
     * @api public
     */


    Events.prototype.bind = function (event, method) {
      var e = parse(event);
      var el = this.el;
      var obj = this.obj;
      var name = e.name;
      var method = method || 'on' + name;
      var args = [].slice.call(arguments, 2); // callback

      function cb() {
        var a = [].slice.call(arguments).concat(args);
        obj[method].apply(obj, a);
      } // bind


      if (e.selector) {
        cb = delegate.bind(el, e.selector, name, cb);
      } else {
        events.bind(el, name, cb);
      } // subscription for unbinding


      this.sub(name, method, cb);
      return cb;
    };
    /**
     * Unbind a single binding, all bindings for `event`,
     * or all bindings within the manager.
     *
     * Examples:
     *
     *  Unbind direct handlers:
     *
     *     events.unbind('click', 'remove')
     *     events.unbind('click')
     *     events.unbind()
     *
     * Unbind delegate handlers:
     *
     *     events.unbind('click', 'remove')
     *     events.unbind('click')
     *     events.unbind()
     *
     * @param {String|Function} [event]
     * @param {String|Function} [method]
     * @api public
     */


    Events.prototype.unbind = function (event, method) {
      if (0 == arguments.length) return this.unbindAll();
      if (1 == arguments.length) return this.unbindAllOf(event); // no bindings for this event

      var bindings = this._events[event];
      if (!bindings) return; // no bindings for this method

      var cb = bindings[method];
      if (!cb) return;
      events.unbind(this.el, event, cb);
    };
    /**
     * Unbind all events.
     *
     * @api private
     */


    Events.prototype.unbindAll = function () {
      for (var event in this._events) {
        this.unbindAllOf(event);
      }
    };
    /**
     * Unbind all events for `event`.
     *
     * @param {String} event
     * @api private
     */


    Events.prototype.unbindAllOf = function (event) {
      var bindings = this._events[event];
      if (!bindings) return;

      for (var method in bindings) {
        this.unbind(event, method);
      }
    };
    /**
     * Parse `event`.
     *
     * @param {String} event
     * @return {Object}
     * @api private
     */


    function parse(event) {
      var parts = event.split(/ +/);
      return {
        name: parts.shift(),
        selector: parts.join(' ')
      };
    }
  });

  require.register("switchery", function (exports, module) {
    /**
     * Switchery 0.8.1
     * http://abpetkov.github.io/switchery/
     *
     * Authored by Alexander Petkov
     * https://github.com/abpetkov
     *
     * Copyright 2013-2015, Alexander Petkov
     * License: The MIT License (MIT)
     * http://opensource.org/licenses/MIT
     *
     */

    /**
     * External dependencies.
     */
    var transitionize = require('abpetkov-transitionize@0.0.3'),
        fastclick = require('ftlabs-fastclick@v0.6.11'),
        classes = require('component-classes@1.2.1'),
        events = require('component-events@1.0.9');
    /**
     * Expose `Switchery`.
     */


    module.exports = Switchery;
    /**
     * Set Switchery default values.
     *
     * @api public
     */

    var defaults = {
      color: '#64bd63',
      secondaryColor: '#dfdfdf',
      jackColor: '#fff',
      jackSecondaryColor: null,
      className: 'switchery',
      disabled: false,
      disabledOpacity: 0.5,
      speed: '0.4s',
      size: 'default'
    };
    /**
     * Create Switchery object.
     *
     * @param {Object} element
     * @param {Object} options
     * @api public
     */

    function Switchery(element, options) {
      if (!(this instanceof Switchery)) return new Switchery(element, options);
      this.element = element;
      this.options = options || {};

      for (var i in defaults) {
        if (this.options[i] == null) {
          this.options[i] = defaults[i];
        }
      }

      if (this.element != null && this.element.type == 'checkbox') this.init();
      if (this.isDisabled() === true) this.disable();
    }
    /**
     * Hide the target element.
     *
     * @api private
     */


    Switchery.prototype.hide = function () {
      this.element.style.display = 'none';
    };
    /**
     * Show custom switch after the target element.
     *
     * @api private
     */


    Switchery.prototype.show = function () {
      var switcher = this.create();
      this.insertAfter(this.element, switcher);
    };
    /**
     * Create custom switch.
     *
     * @returns {Object} this.switcher
     * @api private
     */


    Switchery.prototype.create = function () {
      this.switcher = document.createElement('span');
      this.jack = document.createElement('small');
      this.switcher.appendChild(this.jack);
      this.switcher.className = this.options.className;
      this.events = events(this.switcher, this);
      return this.switcher;
    };
    /**
     * Insert after element after another element.
     *
     * @param {Object} reference
     * @param {Object} target
     * @api private
     */


    Switchery.prototype.insertAfter = function (reference, target) {
      reference.parentNode.insertBefore(target, reference.nextSibling);
    };
    /**
     * Set switch jack proper position.
     *
     * @param {Boolean} clicked - we need this in order to uncheck the input when the switch is clicked
     * @api private
     */


    Switchery.prototype.setPosition = function (clicked) {
      var checked = this.isChecked(),
          switcher = this.switcher,
          jack = this.jack;
      if (clicked && checked) checked = false;else if (clicked && !checked) checked = true;

      if (checked === true) {
        this.element.checked = true;
        if (window.getComputedStyle) jack.style.left = parseInt(window.getComputedStyle(switcher).width) - parseInt(window.getComputedStyle(jack).width) + 'px';else jack.style.left = parseInt(switcher.currentStyle['width']) - parseInt(jack.currentStyle['width']) + 'px';
        if (this.options.color) this.colorize();
        this.setSpeed();
      } else {
        jack.style.left = 0;
        this.element.checked = false;
        this.switcher.style.boxShadow = 'inset 0 0 0 0 ' + this.options.secondaryColor;
        this.switcher.style.borderColor = this.options.secondaryColor;
        this.switcher.style.backgroundColor = this.options.secondaryColor !== defaults.secondaryColor ? this.options.secondaryColor : '#fff';
        this.jack.style.backgroundColor = this.options.jackSecondaryColor !== this.options.jackColor ? this.options.jackSecondaryColor : this.options.jackColor;
        this.setSpeed();
      }
    };
    /**
     * Set speed.
     *
     * @api private
     */


    Switchery.prototype.setSpeed = function () {
      var switcherProp = {},
          jackProp = {
        'background-color': this.options.speed,
        'left': this.options.speed.replace(/[a-z]/, '') / 2 + 's'
      };

      if (this.isChecked()) {
        switcherProp = {
          'border': this.options.speed,
          'box-shadow': this.options.speed,
          'background-color': this.options.speed.replace(/[a-z]/, '') * 3 + 's'
        };
      } else {
        switcherProp = {
          'border': this.options.speed,
          'box-shadow': this.options.speed
        };
      }

      transitionize(this.switcher, switcherProp);
      transitionize(this.jack, jackProp);
    };
    /**
     * Set switch size.
     *
     * @api private
     */


    Switchery.prototype.setSize = function () {
      var small = 'switchery-small',
          normal = 'switchery-default',
          large = 'switchery-large';

      switch (this.options.size) {
        case 'small':
          classes(this.switcher).add(small);
          break;

        case 'large':
          classes(this.switcher).add(large);
          break;

        default:
          classes(this.switcher).add(normal);
          break;
      }
    };
    /**
     * Set switch color.
     *
     * @api private
     */


    Switchery.prototype.colorize = function () {
      var switcherHeight = this.switcher.offsetHeight / 2;
      this.switcher.style.backgroundColor = this.options.color;
      this.switcher.style.borderColor = this.options.color;
      this.switcher.style.boxShadow = 'inset 0 0 0 ' + switcherHeight + 'px ' + this.options.color;
      this.jack.style.backgroundColor = this.options.jackColor;
    };
    /**
     * Handle the onchange event.
     *
     * @param {Boolean} state
     * @api private
     */


    Switchery.prototype.handleOnchange = function (state) {
      if (document.dispatchEvent) {
        var event = document.createEvent('HTMLEvents');
        event.initEvent('change', true, true);
        this.element.dispatchEvent(event);
      } else {
        this.element.fireEvent('onchange');
      }
    };
    /**
     * Handle the native input element state change.
     * A `change` event must be fired in order to detect the change.
     *
     * @api private
     */


    Switchery.prototype.handleChange = function () {
      var self = this,
          el = this.element;

      if (el.addEventListener) {
        el.addEventListener('change', function () {
          self.setPosition();
        });
      } else {
        el.attachEvent('onchange', function () {
          self.setPosition();
        });
      }
    };
    /**
     * Handle the switch click event.
     *
     * @api private
     */


    Switchery.prototype.handleClick = function () {
      var switcher = this.switcher;
      fastclick(switcher);
      this.events.bind('click', 'bindClick');
    };
    /**
     * Attach all methods that need to happen on switcher click.
     *
     * @api private
     */


    Switchery.prototype.bindClick = function () {
      var parent = this.element.parentNode.tagName.toLowerCase(),
          labelParent = parent === 'label' ? false : true;
      this.setPosition(labelParent);
      this.handleOnchange(this.element.checked);
    };
    /**
     * Mark an individual switch as already handled.
     *
     * @api private
     */


    Switchery.prototype.markAsSwitched = function () {
      this.element.setAttribute('data-switchery', true);
    };
    /**
     * Check if an individual switch is already handled.
     *
     * @api private
     */


    Switchery.prototype.markedAsSwitched = function () {
      return this.element.getAttribute('data-switchery');
    };
    /**
     * Initialize Switchery.
     *
     * @api private
     */


    Switchery.prototype.init = function () {
      this.hide();
      this.show();
      this.setSize();
      this.setPosition();
      this.markAsSwitched();
      this.handleChange();
      this.handleClick();
    };
    /**
     * See if input is checked.
     *
     * @returns {Boolean}
     * @api public
     */


    Switchery.prototype.isChecked = function () {
      return this.element.checked;
    };
    /**
     * See if switcher should be disabled.
     *
     * @returns {Boolean}
     * @api public
     */


    Switchery.prototype.isDisabled = function () {
      return this.options.disabled || this.element.disabled || this.element.readOnly;
    };
    /**
     * Destroy all event handlers attached to the switch.
     *
     * @api public
     */


    Switchery.prototype.destroy = function () {
      this.events.unbind();
    };
    /**
     * Enable disabled switch element.
     *
     * @api public
     */


    Switchery.prototype.enable = function () {
      if (!this.options.disabled) return;
      if (this.options.disabled) this.options.disabled = false;
      if (this.element.disabled) this.element.disabled = false;
      if (this.element.readOnly) this.element.readOnly = false;
      this.switcher.style.opacity = 1;
      this.events.bind('click', 'bindClick');
    };
    /**
     * Disable switch element.
     *
     * @api public
     */


    Switchery.prototype.disable = function () {
      if (this.options.disabled) return;
      if (!this.options.disabled) this.options.disabled = true;
      if (!this.element.disabled) this.element.disabled = true;
      if (!this.element.readOnly) this.element.readOnly = true;
      this.switcher.style.opacity = this.options.disabledOpacity;
      this.destroy();
    };
  });

  window["Switchery"] = require("switchery");

  if (typeof exports == "object") {
    module.exports = require("switchery");
  } else if (typeof define == "function" && define.amd) {
    define("Switchery", [], function () {
      return require("switchery");
    });
  } else {
    (this || window)["Switchery"] = require("switchery");
  }
})();
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"startup.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// client/startup.jsx                                                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let Meteor;
module.watch(require("meteor/meteor"), {
  Meteor(v) {
    Meteor = v;
  }

}, 0);
Meteor.startup(function () {
  //return;
  //console.clear();
  console.log(" ");
  console.log('%c IBOL Viralizing \n', 'background:url("https://s3.amazonaws.com/ibol-app-media/logo-alt.png") #2e2e2e;  ' + 'color: rgba(0,0,0,0); ' + 'font-weight: bold; width: 100%; ' + 'padding:20px 9px 10px 40px; ' + 'background-size: 78px; background-position: 40px 10px; ' + 'background-repeat:no-repeat; ' + 'font-size: 18px; ' + '-webkit-font-smoothing: antialiased;');
  console.log('%c IBOL Viralizing ', 'background:#2e2e2e;  ' + 'color: #fff; ' + 'font-family: \'Raleway\', sans-serif;' + 'width: 100%; ' + 'padding:15px 37.5px 20px 40px; ' + 'margin: -5px 0; ' + 'text-transform: uppercase; ' + 'font-size: 18px; ' + '-webkit-font-smoothing: antialiased;');
  console.log('%c All Rights Reserved © 2017', 'background:#2e2e2e;  ' + 'color: #c28c58; ' + 'font-family: \'Raleway\', sans-serif;' + ' width: 500px;' + ' padding:10px 40px 20px 40px; ' + 'text-transform: uppercase; ' + 'font-size: 10px; ' + 'font-weight: 500; ' + '-webkit-font-smoothing: antialiased;');
  console.log(" ");
  console.log('%cThis is a browser feature intended for developers. If someone told you to copy-paste something here to enable a feature or "hack" on your account, it is a scam and will give them access to your account.', ' font-size: large');
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"main.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// client/main.jsx                                                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Meteor;
module.watch(require("meteor/meteor"), {
  Meteor(v) {
    Meteor = v;
  }

}, 1);
let render;
module.watch(require("react-dom"), {
  render(v) {
    render = v;
  }

}, 2);
let Buffer;
module.watch(require("buffer"), {
  default(v) {
    Buffer = v;
  }

}, 3);
module.watch(require("switchery"));
let Router, Route, IndexRoute, browserHistory;
module.watch(require("react-router"), {
  Router(v) {
    Router = v;
  },

  Route(v) {
    Route = v;
  },

  IndexRoute(v) {
    IndexRoute = v;
  },

  browserHistory(v) {
    browserHistory = v;
  }

}, 4);
let Provider;
module.watch(require("react-redux"), {
  Provider(v) {
    Provider = v;
  }

}, 5);
let ApolloProvider;
module.watch(require("react-apollo"), {
  ApolloProvider(v) {
    ApolloProvider = v;
  }

}, 6);
let store, history, apollo;
module.watch(require("../imports/store"), {
  default(v) {
    store = v;
  },

  history(v) {
    history = v;
  },

  apollo(v) {
    apollo = v;
  }

}, 7);
let apolloClient;
module.watch(require("../imports/reducers"), {
  apolloClient(v) {
    apolloClient = v;
  }

}, 8);
module.watch(require("react-select/dist/react-select.css"));
module.watch(require("react-datepicker/dist/react-datepicker.css"));
let Routes;
module.watch(require("../imports/modules/core/client/routes"), {
  Routes(v) {
    Routes = v;
  }

}, 9);
global.Buffer = global.Buffer || Buffer;
Buffer = global.Buffer; // Router Dependencies

//Create Router
const router = React.createElement(ApolloProvider, {
  store: store,
  client: apolloClient
}, React.createElement(Router, {
  history: history
}, Routes));
Meteor.startup(() => {
  render(router, document.getElementById('root'));
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"imports":{"modules":{"campaigns":{"ui":{"components":{"invites":{"list-view":{"action":{"actions":{"actions.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/invites/list-view/action/actions/actions.jsx                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/objectSpread"));

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let ActionPost;
module.watch(require("./post"), {
  default(v) {
    ActionPost = v;
  }

}, 1);
let ActionFileUpload;
module.watch(require("./file-upload"), {
  default(v) {
    ActionFileUpload = v;
  }

}, 2);
let ActionShare;
module.watch(require("./share"), {
  default(v) {
    ActionShare = v;
  }

}, 3);
let ActionTimeWithout;
module.watch(require("./time-without"), {
  default(v) {
    ActionTimeWithout = v;
  }

}, 4);
let PostTimeDate;
module.watch(require("../../../../../../../agenda/ui/components/post-create/time-date"), {
  default(v) {
    PostTimeDate = v;
  }

}, 5);
let PostLocation;
module.watch(require("../../../../../../../agenda/ui/components/post-create/location"), {
  default(v) {
    PostLocation = v;
  }

}, 6);
let InputFileUpload;
module.watch(require("../../../../../../../core/ui/components/forms/input-file-upload"), {
  default(v) {
    InputFileUpload = v;
  }

}, 7);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 8);

class Actions extends React.Component {
  constructor() {
    super();
    this.state = {
      view: "action",
      action: {
        message: "",
        media: null,
        date: null,
        quantity: null,
        location: null
      }
    };
    this.toggleTime = this.toggleTime.bind(this);
    this.toggleLocation = this.toggleLocation.bind(this);
    this.updateActionValue = this.updateActionValue.bind(this);
    this.saveOption = this.saveOption.bind(this);
  }

  updateActionValue(key) {
    let component = this;
    return function (e) {
      let val = e;

      if (e.target) {
        val = e.target.value;
      }

      let newState = (0, _objectSpread2.default)({}, component.state);
      newState.action[key] = val;
      component.setState(newState);
    };
  }

  toggleTime() {
    let nextView = this.state.view === "action" ? "date" : "action"; //console.log("TOGGLE_TIME",this.state.view,"=>",nextView);

    let component = this;
    setTimeout(function () {
      component.setState({
        view: nextView
      });
    }, 50);
  }

  toggleLocation() {
    let nextView = this.state.view === "action" ? "location" : "action"; //console.log("TOGGLE_TIME",this.state.view,"=>",nextView);

    let component = this;
    setTimeout(function () {
      component.setState({
        view: nextView
      });
    }, 50);
  }

  getView(type, action, updateActionValue) {
    switch (type) {
      case "post":
        return React.createElement(ActionPost, {
          updateActionValue: updateActionValue,
          action: action
        });

      case "profile":
        return React.createElement(ActionFileUpload, {
          updateActionValue: updateActionValue,
          action: action
        });

      case "cover":
        return React.createElement(ActionFileUpload, {
          updateActionValue: updateActionValue,
          action: action
        });

      case "hourNoPost":
        return React.createElement(ActionTimeWithout, {
          updateActionValue: updateActionValue,
          action: action,
          type: type
        });

      case "dayNoPost":
        return React.createElement(ActionTimeWithout, {
          updateActionValue: updateActionValue,
          action: action,
          type: type
        });

      case "share":
        return React.createElement(ActionShare, {
          updateActionValue: updateActionValue,
          action: action
        });
    }
  }

  saveOption() {
    this.props.addInviteOption(this.state.action);
    this.setState({
      action: {
        message: "",
        media: null,
        date: null,
        quantity: null
      }
    });
  }

  render() {
    let getTranslation = key => {
      return "Campaigns.edit.tabs.invites.edit.form.action." + key;
    };

    let {
      type
    } = this.props;
    let {
      action
    } = this.state;
    let hasImage = type === "post";
    return React.createElement("div", {
      className: "action-form"
    }, this.state.view === "action" && React.createElement("div", null, this.getView(type, action, this.updateActionValue), React.createElement("div", {
      className: "row",
      style: {
        position: "inherit"
      }
    }, React.createElement("div", {
      className: "col-md-9",
      style: {
        position: "inherit"
      }
    }, React.createElement("ul", {
      className: "controls"
    }, hasImage && React.createElement("li", null, React.createElement(InputFileUpload, {
      content: React.createElement("i", {
        className: "icon fa-photo",
        "aria-hidden": "true"
      }),
      settings: {
        multiple: false,
        maxSize: 3 * 1024 * 1024,
        className: "icon-drop-zone",
        activeClassName: "icon-drop-zone-active",
        accept: "image/png, image/jpeg, image/gif"
      },
      uploader: "campaign-image-upload",
      callback: () => {},
      input: {
        onChange: this.updateActionValue("media"),
        value: null
      }
    })), React.createElement("li", null, React.createElement("i", {
      className: "icon fa-calendar",
      "aria-hidden": "true",
      onClick: this.toggleTime
    })), React.createElement("li", null, React.createElement("i", {
      className: "icon fa-location-arrow",
      "aria-hidden": "true",
      onClick: this.toggleLocation
    })))), React.createElement("div", {
      className: "col-md-3"
    }, React.createElement("a", {
      className: "btn btn-default pull-right",
      onClick: this.saveOption
    }, React.createElement(Translate, {
      value: getTranslation("save")
    }))))), this.state.view === "date" && React.createElement(PostTimeDate, {
      input: {
        onChange: this.updateActionValue("date"),
        value: new Date()
      },
      open: this.state.view,
      close: this.toggleTime
    }), this.state.view === "location" && React.createElement(PostLocation, {
      input: {
        onChange: this.updateActionValue("location"),
        value: ""
      },
      open: this.state.view,
      close: this.toggleLocation
    }));
  }

}

module.exportDefault(Actions);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"file-upload.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/invites/list-view/action/actions/file-upload.jsx                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let InputFileUpload;
module.watch(require("../../../../../../../core/ui/components/forms/input-file-upload"), {
  default(v) {
    InputFileUpload = v;
  }

}, 1);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 2);

class ActionFileUpload extends React.Component {
  render() {
    let getTranslation = key => {
      return "Campaigns.edit.tabs.invites.edit.form.actions.fileUpload." + key;
    };

    let dropZone = React.createElement("div", {
      className: "drop-zone"
    }, React.createElement("i", {
      className: "icon fa-photo",
      "aria-hidden": "true"
    }), React.createElement("span", null, React.createElement(Translate, {
      value: getTranslation("label")
    })));
    let {
      updateActionValue
    } = this.props;
    return React.createElement("div", null, React.createElement(InputFileUpload, {
      content: dropZone,
      settings: {
        multiple: false,
        maxSize: 3 * 1024 * 1024,
        className: "icon-drop-zone",
        activeClassName: "icon-drop-zone-active",
        accept: "image/png, image/jpeg, image/gif"
      },
      uploader: "campaign-image-upload",
      callback: () => {},
      input: {
        onChange: updateActionValue("media"),
        value: null
      }
    }));
  }

}

module.exportDefault(ActionFileUpload);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"post.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/invites/list-view/action/actions/post.jsx                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let I18n;
module.watch(require("react-redux-i18n"), {
  I18n(v) {
    I18n = v;
  }

}, 1);

class ActionPost extends React.Component {
  render() {
    let getTranslation = key => {
      return "Campaigns.edit.tabs.invites.edit.form.actions.post." + key;
    };

    let {
      action,
      updateActionValue
    } = this.props;
    return React.createElement("div", {
      className: "action-post"
    }, React.createElement("textarea", {
      onChange: updateActionValue("message"),
      placeholder: I18n.t(getTranslation("placeholder")),
      value: action.message || ""
    }), action.media && React.createElement("div", {
      className: "media"
    }, React.createElement("img", {
      src: action.media,
      alt: ""
    })));
  }

}

module.exportDefault(ActionPost);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"share.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/invites/list-view/action/actions/share.jsx                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 1);

class ActionShare extends React.Component {
  render() {
    let getTranslation = key => {
      return "Campaigns.edit.tabs.invites.edit.form.actions.share." + key;
    };

    return React.createElement("div", null, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("label")
    })), React.createElement("input", {
      type: "text",
      className: "form-control"
    })));
  }

}

module.exportDefault(ActionShare);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"time-without.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/invites/list-view/action/actions/time-without.jsx                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 1);

class ActionTimeWithout extends React.Component {
  render() {
    let getTranslation = key => {
      return "Campaigns.edit.tabs.invites.edit.form.actions.time." + key;
    };

    let {
      action,
      updateActionValue,
      type
    } = this.props;
    let helper = "hours";

    if (type === "dayNoPost") {
      helper = "days";
    }

    return React.createElement("div", null, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("label")
    })), React.createElement("div", {
      className: "input-group"
    }, React.createElement("input", {
      type: "text",
      className: "form-control",
      onChange: updateActionValue("quantity"),
      value: action.quantity || ""
    }), React.createElement("div", {
      className: "input-group-addon"
    }, React.createElement(Translate, {
      value: getTranslation("helpers." + helper)
    })))));
  }

}

module.exportDefault(ActionTimeWithout);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"action-form.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/invites/list-view/action/action-form.jsx                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 1);
let Switch;
module.watch(require("react-switchery"), {
  default(v) {
    Switch = v;
  }

}, 2);
let Field;
module.watch(require("redux-form"), {
  Field(v) {
    Field = v;
  }

}, 3);
let Actions;
module.watch(require("./actions/actions"), {
  default(v) {
    Actions = v;
  }

}, 4);

class ActionForm extends React.Component {
  render() {
    let getTranslation = key => {
      return "Campaigns.edit.tabs.invites.edit." + key;
    };

    let {
      currentInvite,
      updateInviteValue,
      addInviteOption
    } = this.props;
    let disabled = currentInvite.options.length > 0;
    return React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-body container-fluid"
    }, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("form.action.label")
    })), React.createElement("select", {
      className: "form-control",
      onChange: updateInviteValue("type"),
      value: currentInvite.type,
      disabled: disabled
    }, React.createElement("option", {
      value: "post"
    }, I18n.t(getTranslation("form.action.values.post"))), React.createElement("option", {
      value: "profile"
    }, I18n.t(getTranslation("form.action.values.profilePicture"))), React.createElement("option", {
      value: "cover"
    }, I18n.t(getTranslation("form.action.values.coverPhoto"))), React.createElement("option", {
      value: "hourNoPost"
    }, I18n.t(getTranslation("form.action.values.noPost.hour"))), React.createElement("option", {
      value: "dayNoPost"
    }, I18n.t(getTranslation("form.action.values.noPost.day"))), React.createElement("option", {
      value: "share"
    }, I18n.t(getTranslation("form.action.values.share")))))), React.createElement("div", {
      className: "col-md-4 col-md-offset-4"
    }, React.createElement("div", {
      className: "checkbox-custom checkbox-primary pull-xs-right margin-right-20"
    }, React.createElement("input", {
      type: "checkbox",
      id: "inviteAll",
      onChange: e => updateInviteValue("useHashtag")(e.target.checked),
      checked: currentInvite.useHashtag
    }), React.createElement("label", {
      htmlFor: "inviteAll"
    }, React.createElement(Translate, {
      value: getTranslation("form.useHashtag")
    }))))), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-12"
    }, React.createElement(Actions, {
      type: currentInvite.type,
      addInviteOption: addInviteOption
    })))));
  }

}

module.exportDefault(ActionForm);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"action-navigation.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/invites/list-view/action/action-navigation.jsx                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 1);

class ActionFooter extends React.Component {
  render() {
    let getTranslation = key => {
      return "Campaigns.edit.tabs.invites.edit.form.footer." + key;
    };

    let {
      invites,
      goToAction,
      createInvite,
      actionIndex
    } = this.props;
    return React.createElement("div", {
      className: "row margin-bottom-25"
    }, React.createElement("div", {
      className: "col-md-8"
    }, React.createElement("div", {
      className: "form-inline"
    }, React.createElement(Translate, {
      value: getTranslation("pagination.action")
    }), "    \xA0", React.createElement("div", {
      className: "form-group"
    }, React.createElement("select", {
      className: "form-control",
      value: actionIndex,
      onChange: goToAction("goTo")
    }, invites.map((invite, i) => React.createElement("option", {
      key: i,
      value: i
    }, i + 1)))), React.createElement(Translate, {
      value: getTranslation("pagination.of")
    }), "    \xA0 \xA0", invites.length, React.createElement("div", {
      className: "btn-group pull-right",
      role: "group"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-icon btn-default",
      onClick: goToAction("previous")
    }, React.createElement("i", {
      className: "fa fa-angle-left",
      "aria-hidden": "true"
    })), React.createElement("button", {
      type: "button",
      className: "btn btn-icon btn-default",
      onClick: goToAction("next")
    }, React.createElement("i", {
      className: "fa fa-angle-right",
      "aria-hidden": "true"
    }))))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("a", {
      className: "btn btn-default pull-right",
      onClick: createInvite
    }, React.createElement(Translate, {
      value: getTranslation("new")
    }))));
  }

}

module.exportDefault(ActionFooter);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"action-specs.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/invites/list-view/action/action-specs.jsx                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 1);
let BootstrapTable, TableHeaderColumn;
module.watch(require("react-bootstrap-table"), {
  BootstrapTable(v) {
    BootstrapTable = v;
  },

  TableHeaderColumn(v) {
    TableHeaderColumn = v;
  }

}, 2);

let _;

module.watch(require("lodash"), {
  default(v) {
    _ = v;
  }

}, 3);
let SocialAvatar;
module.watch(require("../../../../../../core/ui/components/social-avatar"), {
  default(v) {
    SocialAvatar = v;
  }

}, 4);
let swal;
module.watch(require("sweetalert2"), {
  default(v) {
    swal = v;
  }

}, 5);

const renderNetworks = function (cell, row) {
  // String example
  let teamAttackMembers = [].concat.apply([], row.teamAttacks.map(t => t.members));
  return React.createElement("div", null, _.uniq([...teamAttackMembers, ...row.influencers].map(m => m.network)).map((a, i) => React.createElement("div", {
    className: "icon",
    key: i
  }, React.createElement("i", {
    className: "social-icon " + a
  }))));
};

const renderStatus = function (cell, row) {
  return React.createElement("span", {
    className: "ibol-label ".concat(cell)
  });
};

const renderMembers = function (cell, row) {
  let teamAttackMembers = [].concat.apply([], row.teamAttacks.map(t => t.members));
  return React.createElement("div", null, _.slice([...teamAttackMembers, ...row.influencers], 0, 3).map((a, i) => React.createElement("div", {
    className: "icon",
    key: i
  }, React.createElement(SocialAvatar, {
    avatar: a.information.avatar,
    network: a.network,
    name: a.information.name,
    size: "75",
    type: a.information.type
  }))));
};

const renderIndex = function (cell, row) {
  // String example
  return React.createElement("div", null, "1");
};

const renderText = function (cell, row) {
  // String example
  return React.createElement("div", null, cell || "-");
};

const renderDate = function (cell, row) {
  // String example
  return moment(new Date(cell)).format("DD/MM/YY");
};

const renderHashtag = function (cell, row) {
  // String example
  return React.createElement("i", {
    className: "icon circle brand " + (cell ? "wb-check" : "wb-close not"),
    "aria-hidden": "true"
  });
};

class ActionSpecs extends React.Component {
  constructor() {
    super();
    this.confirmDelete = this.confirmDelete.bind(this);
  }

  confirmDelete(row) {
    let component = this;
    return function () {
      let getTranslation = key => {
        return "Campaigns.edit.tabs.invites.edit." + key;
      };

      swal({
        title: I18n.t(getTranslation("delete.main.title")),
        text: I18n.t(getTranslation("delete.main.description")),
        type: "warning",
        showCancelButton: true,
        confirmButtonText: I18n.t(getTranslation("delete.main.confirm")),
        cancelButtonText: I18n.t(getTranslation("delete.main.cancel"))
      }).then(function () {
        swal(I18n.t(getTranslation("delete.done.title")), I18n.t(getTranslation("delete.done.description")), "success");
      });
    };
  }

  render() {
    let getTranslation = key => {
      return "Campaigns.edit.tabs.invites.edit.tables.action." + key;
    };

    let {
      invite,
      actionIndex
    } = this.props;
    let {
      confirmDelete
    } = this;

    const renderDelete = function (cell, row) {
      // String example
      return React.createElement("div", {
        style: {
          color: "red",
          cursor: "pointer"
        },
        onClick: confirmDelete(row)
      }, "-");
    };

    invite.index = 1;
    let list = [invite];
    return React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-body"
    }, React.createElement("div", {
      className: "action-specs"
    }, React.createElement("h4", null, React.createElement(Translate, {
      value: getTranslation("table.title")
    })), React.createElement("div", {
      className: "ibol-table"
    }, React.createElement(BootstrapTable, {
      data: list
    }, React.createElement(TableHeaderColumn, {
      dataField: "_id",
      dataFormat: renderDelete,
      dataAlign: "center",
      width: "60px"
    }, React.createElement("i", {
      className: "fa fa-trash",
      "aria-hidden": "true"
    })), React.createElement(TableHeaderColumn, {
      isKey: true,
      dataField: "index",
      dataAlign: "center",
      width: "60px",
      dataFormat: renderIndex
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.index")
    })), React.createElement(TableHeaderColumn, {
      dataField: "status",
      dataFormat: renderStatus,
      dataAlign: "center",
      width: "80px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.status")
    })), React.createElement(TableHeaderColumn, {
      dataField: "members",
      dataAlign: "center",
      width: "200px",
      dataFormat: renderNetworks
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.networks")
    })), React.createElement(TableHeaderColumn, {
      dataField: "members",
      dataAlign: "center",
      width: "200px",
      dataFormat: renderMembers
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.members")
    })), React.createElement(TableHeaderColumn, {
      dataField: "invitesAvailable",
      dataAlign: "center",
      width: "100px",
      dataFormat: renderText
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.vacants")
    })), React.createElement(TableHeaderColumn, {
      dataField: "confirmed",
      dataAlign: "center",
      width: "140px",
      dataFormat: renderText
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.confirmed")
    })), React.createElement(TableHeaderColumn, {
      dataField: "type",
      dataAlign: "center",
      width: "200px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.type")
    })), React.createElement(TableHeaderColumn, {
      dataField: "deadline",
      dataAlign: "center",
      width: "200px",
      dataFormat: renderDate
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.deadline")
    })), React.createElement(TableHeaderColumn, {
      dataField: "useHashtag",
      dataAlign: "center",
      width: "200px",
      dataFormat: renderHashtag
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.useHashtag")
    })), React.createElement(TableHeaderColumn, {
      dataField: "budget",
      dataAlign: "center",
      width: "150px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.budget")
    })))))));
  }

}

module.exportDefault(ActionSpecs);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"container.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/invites/list-view/action/container.jsx                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let ActionForm;
module.watch(require("./action-form"), {
  default(v) {
    ActionForm = v;
  }

}, 1);
let OptionList;
module.watch(require("./option-list"), {
  default(v) {
    OptionList = v;
  }

}, 2);
let Navigation;
module.watch(require("./action-navigation"), {
  default(v) {
    Navigation = v;
  }

}, 3);
let ActionSpecs;
module.watch(require("./action-specs"), {
  default(v) {
    ActionSpecs = v;
  }

}, 4);

class CampaignListViewAction extends React.Component {
  render() {
    let {
      invites,
      currentInvite,
      actionIndex,
      deleteInviteOption,
      updateInviteValue,
      addInviteOption,
      goToAction,
      createInvite
    } = this.props;
    return React.createElement("div", {
      className: "col-md-9"
    }, React.createElement(ActionForm, {
      updateInviteValue: updateInviteValue,
      addInviteOption: addInviteOption,
      currentInvite: currentInvite
    }), React.createElement(ActionSpecs, {
      invite: currentInvite
    }), React.createElement(Navigation, {
      invites: invites,
      goToAction: goToAction,
      createInvite: createInvite,
      actionIndex: actionIndex
    }), React.createElement(OptionList, {
      invite: currentInvite,
      deleteInviteOption: deleteInviteOption,
      actionIndex: actionIndex
    }));
  }

}

module.exportDefault(CampaignListViewAction);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"option-list.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/invites/list-view/action/option-list.jsx                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let ListEmpty;
module.watch(require("../../../../../../core/ui/components/list-empty"), {
  default(v) {
    ListEmpty = v;
  }

}, 1);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 2);
let BootstrapTable, TableHeaderColumn;
module.watch(require("react-bootstrap-table"), {
  BootstrapTable(v) {
    BootstrapTable = v;
  },

  TableHeaderColumn(v) {
    TableHeaderColumn = v;
  }

}, 3);
let swal;
module.watch(require("sweetalert2"), {
  default(v) {
    swal = v;
  }

}, 4);

const renderDate = function (cell, row) {
  return React.createElement("div", null, moment(new Date(cell)).format("DD/MM/YY"));
};

const renderTime = function (cell, row) {
  return React.createElement("div", null, moment(new Date(cell)).format("HH:MM A"), " - ", moment.tz.guess());
};

const renderMedia = function (cell, row) {
  return React.createElement("div", {
    style: {
      padding: 6
    }
  }, React.createElement("img", {
    src: cell,
    alt: "",
    style: {
      maxHeight: 100,
      maxWidth: "100%"
    }
  }));
};

class OptionList extends React.Component {
  constructor() {
    super();
    this.confirmDelete = this.confirmDelete.bind(this);
  }

  confirmDelete(row) {
    let component = this;
    return function () {
      let getTranslation = key => {
        return "Campaigns.edit.tabs.invites.edit." + key;
      };

      swal({
        title: I18n.t(getTranslation("delete.main.title")),
        text: I18n.t(getTranslation("delete.main.description")),
        type: "warning",
        showCancelButton: true,
        confirmButtonText: I18n.t(getTranslation("delete.main.confirm")),
        cancelButtonText: I18n.t(getTranslation("delete.main.cancel"))
      }).then(function () {
        component.props.deleteInviteOption(row);
        swal(I18n.t(getTranslation("delete.done.title")), I18n.t(getTranslation("delete.done.description")), "success");
      });
    };
  }

  render() {
    let getTranslation = key => {
      return "Campaigns.edit.tabs.invites.edit.tables.options." + key;
    };

    let {
      invite,
      actionIndex
    } = this.props;

    if (invite.options.length === 0) {
      return React.createElement(ListEmpty, {
        message: React.createElement(Translate, {
          value: getTranslation("empty.message")
        })
      });
    }

    let {
      confirmDelete
    } = this;

    const renderDelete = function (cell, row) {
      // String example
      return React.createElement("div", {
        style: {
          color: "red",
          cursor: "pointer"
        },
        onClick: confirmDelete(row)
      }, "-");
    };

    let list = invite.options.map((invite, index) => Object.assign({}, invite, {
      index: index + 1
    }));
    return React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-body"
    }, React.createElement("div", {
      className: "action-list"
    }, React.createElement("h4", null, " ", React.createElement(Translate, {
      value: getTranslation("table.title")
    })), React.createElement("div", {
      className: "ibol-table"
    }, React.createElement(BootstrapTable, {
      data: list
    }, React.createElement(TableHeaderColumn, {
      dataField: "_id",
      dataFormat: renderDelete,
      dataAlign: "center",
      width: "60px"
    }, React.createElement("i", {
      className: "fa fa-trash",
      "aria-hidden": "true"
    })), React.createElement(TableHeaderColumn, {
      isKey: true,
      dataField: "index",
      dataAlign: "center",
      width: "60px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.index")
    })), React.createElement(TableHeaderColumn, {
      dataField: "message",
      width: "350px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.message")
    })), React.createElement(TableHeaderColumn, {
      dataField: "media",
      dataAlign: "center",
      dataFormat: renderMedia,
      width: "200px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.media")
    })), React.createElement(TableHeaderColumn, {
      dataField: "date",
      dataAlign: "center",
      dataFormat: renderDate,
      width: "150px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.date")
    })), React.createElement(TableHeaderColumn, {
      dataField: "date",
      dataAlign: "center",
      dataFormat: renderTime,
      width: "220px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.time")
    })))))));
  }

}

module.exportDefault(OptionList);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"aside":{"action-controls":{"budget.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/invites/list-view/aside/action-controls/budget.jsx                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Switch;
module.watch(require("react-switchery"), {
  default(v) {
    Switch = v;
  }

}, 1);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 2);

class ActionBudget extends React.Component {
  constructor() {
    super();
    this.state = {
      type: "budget"
    };
    this.typeChange = this.typeChange.bind(this);
  }

  typeChange(val) {
    let type = "budget";

    if (val.target) {
      val = val.target.checked;
    }

    if (val) {
      type = "full";
    }

    let {
      updateInviteValue
    } = this.props;
    updateInviteValue("budget")({
      target: {
        value: "full"
      }
    });
    this.setState({
      type
    });
  }

  componentWillReceiveProps() {
    let {
      currentInvite
    } = this.props;
    let {
      type
    } = this.state;

    if (currentInvite && type !== currentInvite.budget) {
      this.setState({
        type: currentInvite.budget === "full" ? "full" : "budget"
      });
    }
  }

  render() {
    let getTranslation = key => {
      return "Campaigns.edit.tabs.invites.edit.form.budget." + key;
    };

    let {
      type
    } = this.state;
    let {
      currentInvite,
      updateInviteValue
    } = this.props;
    return React.createElement("div", null, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement("i", {
      className: "fa fa-angle-up",
      "aria-hidden": "true"
    }), " ", React.createElement(Translate, {
      value: getTranslation("budget")
    })), React.createElement("input", {
      type: "number",
      className: "form-control",
      disabled: type !== "budget",
      onChange: updateInviteValue("budget"),
      value: currentInvite.budget && currentInvite.budget !== "full" ? currentInvite.budget : ""
    })), React.createElement("div", null, React.createElement("div", {
      className: "checkbox-custom checkbox-primary"
    }, React.createElement("input", {
      type: "checkbox",
      id: "directPay",
      onChange: this.typeChange,
      checked: type === "full"
    }), React.createElement("label", {
      htmlFor: "directPay"
    }, React.createElement(Translate, {
      value: getTranslation("direct")
    })))));
  }

}

module.exportDefault(ActionBudget);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"deadline.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/invites/list-view/aside/action-controls/deadline.jsx                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 1);
let InputDateTime;
module.watch(require("../../../../../../../core/ui/components/forms/input-datetime"), {
  default(v) {
    InputDateTime = v;
  }

}, 2);

class ActionControlsDeadline extends React.Component {
  render() {
    let {
      updateInviteValue,
      currentInvite
    } = this.props;

    let getTranslation = key => {
      return "Campaigns.edit.tabs.invites.edit.form." + key;
    };

    return React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-12"
    }, React.createElement("div", {
      className: "form-group no-margin"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("deadline")
    })), React.createElement(InputDateTime, {
      minDate: moment(),
      input: {
        onChange: value => updateInviteValue("deadline")({
          target: {
            value
          }
        }),
        value: currentInvite.deadline
      }
    }))));
  }

}

module.exportDefault(ActionControlsDeadline);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"influencers.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/invites/list-view/aside/action-controls/influencers.jsx                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 1);
let Field;
module.watch(require("redux-form"), {
  Field(v) {
    Field = v;
  }

}, 2);
let AccountSearch;
module.watch(require("../../../../../../../core/ui/components/forms/account-search"), {
  default(v) {
    AccountSearch = v;
  }

}, 3);
let InputTeamAttack;
module.watch(require("../../../form/input-teamAttack"), {
  default(v) {
    InputTeamAttack = v;
  }

}, 4);

class ActionInfluencers extends React.Component {
  constructor() {
    super();
    this.searchChange = this.searchChange.bind(this);
  }

  searchChange(value) {
    //console.log("SEARCH VALUE", value);
    this.props.updateInviteValue("influencers")({
      target: {
        value
      }
    });
  }

  render() {
    let {
      collaborators,
      currentInvite
    } = this.props;

    let getTranslation = key => {
      return "Campaigns.edit.tabs.invites.edit.form." + key;
    };

    return React.createElement("div", null, React.createElement("div", {
      className: "form-group"
    }, React.createElement(InputTeamAttack, {
      input: {
        onChange: this.searchChange,
        value: currentInvite.influencers || []
      },
      name: "influencers",
      label: React.createElement(Translate, {
        value: getTranslation("accounts")
      })
    })));
  }

}

module.exportDefault(ActionInfluencers);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"invited.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/invites/list-view/aside/action-controls/invited.jsx                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Switch;
module.watch(require("react-switchery"), {
  default(v) {
    Switch = v;
  }

}, 1);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 2);

class ActionInvited extends React.Component {
  constructor() {
    super();
    this.state = {
      type: "limited",
      confirmed: "X"
    };
    this.selectAll = this.selectAll.bind(this);
  }

  selectAll(val) {
    if (val.target) {
      val = val.target.checked;
    } //console.log("SELECT_ALL", val);


    let type = "limited";

    if (val) {
      type = "all";
      let {
        currentInvite,
        updateInviteValue
      } = this.props;
      let invited = this.getInvited(currentInvite);
      updateInviteValue("invitesAvailable")({
        target: {
          value: Number(invited)
        }
      });
    }

    this.setState({
      type
    });
  }

  getInvited(currentInvite) {
    console.log("GET_INVITED", currentInvite);
    let teamAttackMembers = [].concat.apply([], currentInvite.teamAttacks.map(t => t.members));
    let list = [...currentInvite.influencers, ...teamAttackMembers];
    let invited = list.filter(a => {
      let network = a.network;
      return currentInvite.networks[network];
    }).length;
    return invited;
  }

  componentWillReceiveProps() {
    let {
      currentInvite
    } = this.props;

    if (currentInvite) {
      let invited = this.getInvited(currentInvite);

      if (Number(currentInvite.invitesAvailable) === invited && Number(currentInvite.invitesAvailable) !== 0) {
        this.setState({
          type: "all"
        });
      } else {
        this.setState({
          type: "limited"
        });
      }
    }
  }

  render() {
    let getTranslation = key => {
      return "Campaigns.edit.tabs.invites.edit.form.invited." + key;
    };

    let {
      currentInvite,
      updateInviteValue
    } = this.props;
    let invited = this.getInvited(currentInvite);
    return React.createElement("div", null, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("invited")
    })), React.createElement("input", {
      type: "number",
      className: "form-control",
      value: invited,
      onChange: () => {},
      disabled: true
    })), React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("available")
    })), React.createElement("input", {
      type: "number",
      disabled: this.state.type !== "limited",
      className: "form-control",
      value: currentInvite.invitesAvailable,
      onChange: updateInviteValue("invitesAvailable")
    })), React.createElement("div", {
      className: "checkbox-custom checkbox-primary"
    }, React.createElement("input", {
      type: "checkbox",
      id: "inviteAll",
      onChange: this.selectAll,
      checked: this.state.type === "all"
    }), React.createElement("label", {
      htmlFor: "inviteAll"
    }, React.createElement(Translate, {
      value: getTranslation("all")
    }))), React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("confirmed")
    })), React.createElement("input", {
      type: "number",
      className: "form-control",
      defaultValue: this.state.confirmed,
      disabled: true
    })));
  }

}

module.exportDefault(ActionInvited);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"networks.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/invites/list-view/aside/action-controls/networks.jsx                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class ActionNetworks extends React.Component {
  render() {
    let {
      toggleNetwork,
      currentInvite
    } = this.props;
    return React.createElement("div", null, React.createElement("ul", {
      className: "profile-list"
    }, React.createElement("li", {
      onClick: toggleNetwork("twitter")
    }, React.createElement("i", {
      className: "social-icon twitter " + (currentInvite.networks.twitter ? "" : "disabled")
    })), React.createElement("li", {
      onClick: toggleNetwork("facebook")
    }, React.createElement("i", {
      className: "social-icon facebook " + (currentInvite.networks.facebook ? "" : "disabled")
    })), React.createElement("li", {
      onClick: toggleNetwork("instagram")
    }, React.createElement("i", {
      className: "social-icon instagram " + (currentInvite.networks.instagram ? "" : "disabled")
    }))));
  }

}

module.exportDefault(ActionNetworks);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"team-attack.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/invites/list-view/aside/action-controls/team-attack.jsx                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 1);
let Field;
module.watch(require("redux-form"), {
  Field(v) {
    Field = v;
  }

}, 2);
let AccountSearch;
module.watch(require("../../../../../../../core/ui/components/forms/account-search"), {
  default(v) {
    AccountSearch = v;
  }

}, 3);
let InputTeamAttack;
module.watch(require("../../../form/input-teamAttack"), {
  default(v) {
    InputTeamAttack = v;
  }

}, 4);

class ActionTeamAttack extends React.Component {
  constructor() {
    super();
    this.state = {
      teamAttack: {
        members: []
      }
    };
    this.updateTeamAttack = this.updateTeamAttack.bind(this);
    this.searchChange = this.searchChange.bind(this);
  }

  updateTeamAttack(e) {
    let {
      updateInviteValue
    } = this.props;
    let options = e.target.options;
    let selected = [];

    for (let i = 0, l = options.length; i < l; i++) {
      if (options[i].selected) {
        selected.push(options[i].value);
      }
    }

    selected = selected.map(s => JSON.parse(s)); //let teamAttack = JSON.parse(val);

    console.log("TEAM_ATTACK_SELECTED", selected);
    updateInviteValue("teamAttacks")({
      target: {
        value: selected
      }
    }); //this.setState({teamAttack: selected});
  }

  searchChange(value) {
    //console.log("TA_SEARCH_CHANGE", value);
    this.props.updateInviteValue("teamAttackMembers")({
      target: {
        value
      }
    });
  }

  render() {
    let {
      teamAttacks,
      updateInviteValue,
      currentInvite
    } = this.props;

    let getTranslation = key => {
      return "Campaigns.edit.tabs.invites.edit.form." + key;
    };

    return React.createElement("div", null, React.createElement("div", {
      className: "form-group no-margin"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("teamAttack.select")
    })), React.createElement("select", {
      multiple: true,
      className: "form-control",
      onChange: this.updateTeamAttack
    }, teamAttacks.map((t, i) => React.createElement("option", {
      value: JSON.stringify(t),
      key: i
    }, t.name)))), React.createElement("div", {
      className: "form-group"
    }));
  }

}

module.exportDefault(ActionTeamAttack);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"action-controls.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/invites/list-view/aside/action-controls.jsx                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Budget;
module.watch(require("./action-controls/budget"), {
  default(v) {
    Budget = v;
  }

}, 1);
let Influencers;
module.watch(require("./action-controls/influencers"), {
  default(v) {
    Influencers = v;
  }

}, 2);
let Invited;
module.watch(require("./action-controls/invited"), {
  default(v) {
    Invited = v;
  }

}, 3);
let Networks;
module.watch(require("./action-controls/networks"), {
  default(v) {
    Networks = v;
  }

}, 4);
let TeamAttack;
module.watch(require("./action-controls/team-attack"), {
  default(v) {
    TeamAttack = v;
  }

}, 5);
let Deadline;
module.watch(require("./action-controls/deadline"), {
  default(v) {
    Deadline = v;
  }

}, 6);

class ActionControls extends React.Component {
  render() {
    let {
      collaborators,
      teamAttacks,
      updateInviteValue,
      networks,
      toggleNetwork,
      currentInvite
    } = this.props;
    return React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-body container-fluid"
    }, React.createElement(Networks, {
      currentInvite: currentInvite,
      toggleNetwork: toggleNetwork
    }), React.createElement(TeamAttack, {
      currentInvite: currentInvite,
      teamAttacks: teamAttacks,
      updateInviteValue: updateInviteValue
    }), React.createElement(Influencers, {
      currentInvite: currentInvite,
      collaborators: collaborators,
      updateInviteValue: updateInviteValue
    }), React.createElement(Invited, {
      updateInviteValue: updateInviteValue,
      currentInvite: currentInvite
    }), React.createElement(Budget, {
      currentInvite: currentInvite,
      updateInviteValue: updateInviteValue
    }), React.createElement(Deadline, {
      currentInvite: currentInvite,
      updateInviteValue: updateInviteValue
    })));
  }

}

module.exportDefault(ActionControls);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"container.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/invites/list-view/aside/container.jsx                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let ActionControls;
module.watch(require("./action-controls"), {
  default(v) {
    ActionControls = v;
  }

}, 1);
let InviteTotal;
module.watch(require("./invite-total"), {
  default(v) {
    InviteTotal = v;
  }

}, 2);

class CampaignListViewAside extends React.Component {
  render() {
    let {
      accounts,
      teamAttacks,
      currentInvite,
      toggleNetwork,
      updateInviteValue
    } = this.props;
    return React.createElement("div", {
      className: "col-md-3"
    }, React.createElement(ActionControls, {
      toggleNetwork: toggleNetwork,
      collaborators: accounts,
      teamAttacks: teamAttacks,
      currentInvite: currentInvite,
      updateInviteValue: updateInviteValue
    }), React.createElement(InviteTotal, {
      currentInvite: currentInvite
    }));
  }

}

module.exportDefault(CampaignListViewAside);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"invite-total.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/invites/list-view/aside/invite-total.jsx                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Localize, Translate;
module.watch(require("react-redux-i18n"), {
  Localize(v) {
    Localize = v;
  },

  Translate(v) {
    Translate = v;
  }

}, 1);
let Modal;
module.watch(require("react-modal"), {
  default(v) {
    Modal = v;
  }

}, 2);
let TotalBreakdown;
module.watch(require("../../total/breakdown"), {
  default(v) {
    TotalBreakdown = v;
  }

}, 3);

class InviteTotal extends React.Component {
  constructor() {
    super();
    this.state = {
      modal: false
    };
    this.openModal = this.openModal.bind(this);
    this.closeModal = this.closeModal.bind(this);
  }

  closeModal() {
    let newState = this.state;
    newState.modal = false;
    this.setState(newState);
  }

  openModal() {
    let newState = this.state;
    newState.modal = true;
    this.setState(newState);
  }

  calculateTotal(invite, hashtagCommission, appCommission) {
    let available = invite.invitesAvailable;
    available = available - invite.influencers.length;
    let res = {
      subtotal: 0,
      total: 0,
      paidInfluencers: []
    };

    let getPrice = function (influencer, invite) {
      if (invite.budget === "full") {
        switch (invite.type) {
          case "post":
            return influencer.pricing.post;

          case "profile":
            return influencer.pricing.profilePicture;

          case "cover":
            return influencer.pricing.coverPhoto;

          case "hourNoPost":
            return influencer.pricing.noPostHour;

          case "dayNoPost":
            return influencer.pricing.noPostDay;

          case "share":
            return influencer.pricing.share;
        }
      } else {
        return Number(invite.budget);
      }
    };

    let teamAttackMembers = [].concat.apply([], invite.teamAttacks.map(t => t.members));

    if (available > 0) {
      for (let i = 0; i < available; i++) {
        let influencer = teamAttackMembers[i];
        res.paidInfluencers.push(influencer);
        res.subtotal += Number(getPrice(influencer, invite));
      }
    }

    res.total = res.subtotal + (invite.useHashtag ? res.subtotal * hashtagCommission : 0) + res.subtotal * appCommission;
    return res;
  }

  render() {
    let getTranslation = key => {
      return "Campaigns.edit.tabs.invites.edit.form.total." + key;
    };

    let hashtagCommission = 0.10;
    let appCommission = 0.18;
    let {
      currentInvite
    } = this.props;
    let values = this.calculateTotal(currentInvite, hashtagCommission, appCommission);
    return React.createElement("div", {
      className: "panel invite-total"
    }, React.createElement("div", {
      className: "panel-heading"
    }, React.createElement("h3", {
      className: "panel-title"
    }, React.createElement(Translate, {
      value: getTranslation("title")
    }), " ", React.createElement("i", {
      className: "fa fa-expand pull-right cursor-pointer",
      onClick: this.openModal,
      "aria-hidden": "true"
    }))), React.createElement("div", {
      className: "panel-body container-fluid"
    }, React.createElement("table", {
      className: "table"
    }, React.createElement("tbody", null, React.createElement("tr", null, React.createElement("td", null, React.createElement(Translate, {
      value: getTranslation("influencers")
    }), ":"), React.createElement("td", null, React.createElement(Localize, {
      value: values.subtotal,
      options: {
        style: 'currency',
        currency: 'USD',
        minimumFractionDigits: 2,
        maximumFractionDigits: 2
      }
    }), " USD")), React.createElement("tr", null, React.createElement("td", null, "#Viralizing (", currentInvite.useHashtag ? "10%" : "0%", ")"), React.createElement("td", null, React.createElement(Localize, {
      value: currentInvite.useHashtag ? values.subtotal * 0.1 : 0,
      options: {
        style: 'currency',
        currency: 'USD',
        minimumFractionDigits: 2,
        maximumFractionDigits: 2
      }
    }), " USD")), React.createElement("tr", null, React.createElement("td", null, React.createElement(Translate, {
      value: getTranslation("commission")
    }), " (18%)"), React.createElement("td", null, React.createElement(Localize, {
      value: values.subtotal * 0.18,
      options: {
        style: 'currency',
        currency: 'USD',
        minimumFractionDigits: 2,
        maximumFractionDigits: 2
      }
    }), " USD")), React.createElement("tr", null, React.createElement("td", null, React.createElement(Translate, {
      value: getTranslation("total")
    })), React.createElement("td", null, React.createElement(Localize, {
      value: values.total,
      options: {
        style: 'currency',
        currency: 'USD',
        minimumFractionDigits: 2,
        maximumFractionDigits: 2
      }
    }), " USD"))))), React.createElement(Modal, {
      isOpen: this.state.modal,
      onRequestClose: this.closeModal,
      className: "app-modal",
      contentLabel: "Example Modal"
    }, React.createElement("button", {
      className: "close",
      onClick: this.closeModal
    }, React.createElement("i", {
      className: "icon wb-close-mini",
      "aria-hidden": "true"
    })), React.createElement(TotalBreakdown, {
      currentInvite: currentInvite,
      values: values,
      commissions: {
        appCommission,
        hashtagCommission
      }
    })));
  }

}

module.exportDefault(InviteTotal);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"container.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/invites/list-view/container.jsx                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Aside;
module.watch(require("./aside/container"), {
  default(v) {
    Aside = v;
  }

}, 1);
let Action;
module.watch(require("./action/container"), {
  default(v) {
    Action = v;
  }

}, 2);

let getTranslation = key => {
  return "Campaigns.edit.tabs.invites." + key;
};

class CampaignListView extends React.Component {
  render() {
    let {
      invites,
      accounts,
      teamAttacks,
      currentInvite,
      actionIndex,
      toggleNetwork,
      updateInviteValue,
      addInviteOption,
      goToAction,
      createInvite,
      saveInvites,
      deleteInviteOption
    } = this.props;
    return React.createElement("div", {
      className: "row"
    }, React.createElement(Aside, {
      accounts: accounts,
      teamAttacks: teamAttacks,
      currentInvite: currentInvite,
      toggleNetwork: toggleNetwork,
      updateInviteValue: updateInviteValue
    }), React.createElement(Action, {
      invites: invites,
      currentInvite: currentInvite,
      actionIndex: actionIndex,
      updateInviteValue: updateInviteValue,
      addInviteOption: addInviteOption,
      deleteInviteOption: deleteInviteOption,
      goToAction: goToAction,
      createInvite: createInvite
    }));
  }

}

module.exportDefault(CampaignListView);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"form":{"input-teamAttack.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/invites/form/input-teamAttack.jsx                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Modal;
module.watch(require("react-modal"), {
  default(v) {
    Modal = v;
  }

}, 1);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 2);
let CampaignTeamAttackContainer;
module.watch(require("../../../containers/campaign-team-attack"), {
  default(v) {
    CampaignTeamAttackContainer = v;
  }

}, 3);
let SocialAvatar;
module.watch(require("../../../../../core/ui/components/social-avatar"), {
  default(v) {
    SocialAvatar = v;
  }

}, 4);

class InputTeamAttack extends React.Component {
  constructor() {
    super();
    this.state = {
      modalIsOpen: false
    };
    this.openModal = this.openModal.bind(this);
    this.closeModal = this.closeModal.bind(this);
    this.handleChange = this.handleChange.bind(this);
  }

  openModal() {
    this.setState({
      modalIsOpen: true
    });
  }

  closeModal() {
    if (this.props.input.onBlur) {
      this.props.input.onBlur();
    }

    this.setState({
      modalIsOpen: false
    });
  }

  handleChange(tags) {
    let validatedTags = tags;

    if (this.props.validation) {
      validatedTags = this.props.validation(tags);
    }

    this.props.input.onChange(validatedTags);
  }

  render() {
    let getTranslation = key => {
      return "Campaigns.edit.tabs.invites." + key;
    };

    return React.createElement("div", {
      className: "input-teamAttack",
      onClick: this.openModal
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, this.props.label), React.createElement("div", {
      className: "accounts-list",
      style: {
        marginLeft: 5
      }
    }, this.props.input.value.map(a => React.createElement("div", {
      key: a._id,
      style: {
        padding: "2px 5px",
        display: "inline-block"
      }
    }, React.createElement(SocialAvatar, {
      avatar: a.information.avatar,
      name: a.information.name + " " + a.information.lastName,
      network: a.network,
      size: "50"
    })))), React.createElement(Modal, {
      isOpen: this.state.modalIsOpen,
      onRequestClose: this.closeModal,
      className: "app-modal semifull-screen",
      contentLabel: "Conquer Map"
    }, React.createElement("button", {
      className: "close",
      onClick: this.closeModal
    }, React.createElement("i", {
      className: "icon wb-close-mini",
      "aria-hidden": "true"
    })), React.createElement(CampaignTeamAttackContainer, {
      input: this.props.input
    })));
  }

}

module.exportDefault(InputTeamAttack);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"table-view":{"accounts.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/invites/table-view/accounts.jsx                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 1);
let BootstrapTable, TableHeaderColumn;
module.watch(require("react-bootstrap-table"), {
  BootstrapTable(v) {
    BootstrapTable = v;
  },

  TableHeaderColumn(v) {
    TableHeaderColumn = v;
  }

}, 2);
let SocialAvatar;
module.watch(require("../../../../../core/ui/components/social-avatar"), {
  default(v) {
    SocialAvatar = v;
  }

}, 3);
let InputSocialNetwork;
module.watch(require("../../../../../core/ui/components/forms/input-social-network"), {
  default(v) {
    InputSocialNetwork = v;
  }

}, 4);

let getTranslation = key => {
  return "Campaigns.edit.tabs.invites.edit.form.list." + key;
};

class CampaignTableViewAccounts extends React.Component {
  constructor() {
    super();
    this.state = {
      networks: ["twitter", "facebook", "instagram"]
    };
    this.selectNetwork = this.selectNetwork.bind(this);
  }

  selectNetwork(networks) {
    this.setState({
      networks
    });
  }

  render() {
    let {
      influencers,
      teamAttacks
    } = this.props;
    let teamAttackMembers = [].concat.apply([], teamAttacks.map(t => t.members));
    let list = [...teamAttackMembers, ...influencers];
    let {
      networks
    } = this.state;
    return React.createElement("div", {
      className: "brands-list padding-20"
    }, React.createElement("h4", null, React.createElement(Translate, {
      value: getTranslation("influencers")
    })), React.createElement("div", {
      className: "content"
    }, React.createElement(InputSocialNetwork, {
      input: {
        value: this.state.networks,
        onChange: this.selectNetwork
      }
    }), React.createElement("div", {
      className: "list"
    }, list.filter(b => networks.indexOf(b.network) !== -1).map(b => React.createElement("span", {
      key: b._id,
      style: {
        margin: 10
      }
    }, React.createElement(SocialAvatar, {
      avatar: b.information.avatar,
      network: b.network,
      name: b.information.name,
      size: "50",
      type: b.information.type
    }))))));
  }

}

module.exportDefault(CampaignTableViewAccounts);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"actions.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/invites/table-view/actions.jsx                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 1);
let BootstrapTable, TableHeaderColumn;
module.watch(require("react-bootstrap-table"), {
  BootstrapTable(v) {
    BootstrapTable = v;
  },

  TableHeaderColumn(v) {
    TableHeaderColumn = v;
  }

}, 2);

let _;

module.watch(require("lodash"), {
  default(v) {
    _ = v;
  }

}, 3);
let SocialAvatar;
module.watch(require("../../../../../core/ui/components/social-avatar"), {
  default(v) {
    SocialAvatar = v;
  }

}, 4);

let getTranslation = key => {
  return "Campaigns.edit.tabs.invites.edit.tables.action." + key;
};

const renderNetworks = function (cell, row) {
  // String example
  let teamAttackMembers = [].concat.apply([], row.teamAttacks.map(t => t.members));
  return React.createElement("div", null, _.uniq([...teamAttackMembers, ...row.influencers].map(m => m.network)).map((a, i) => React.createElement("div", {
    className: "icon",
    key: i
  }, React.createElement("i", {
    className: "social-icon " + a
  }))));
};

const renderMembers = function (cell, row) {
  let teamAttackMembers = [].concat.apply([], row.teamAttacks.map(t => t.members));
  return React.createElement("div", null, _.slice([...teamAttackMembers, ...row.influencers], 0, 3).map((a, i) => React.createElement("div", {
    className: "icon",
    key: i
  }, React.createElement(SocialAvatar, {
    avatar: a.information.avatar,
    network: a.network,
    name: a.information.name,
    size: "75",
    type: a.information.type
  }))));
};

const renderIndex = function (cell, row) {
  // String example
  return React.createElement("div", null, "1");
};

const renderText = function (cell, row) {
  // String example
  return React.createElement("div", null, cell || "-");
};

const renderDate = function (cell, row) {
  // String example
  return moment(new Date(cell)).format("DD/MM/YY");
};

const renderHashtag = function (cell, row) {
  // String example
  return React.createElement("i", {
    className: "icon circle brand " + (cell ? "wb-check" : "wb-close not"),
    "aria-hidden": "true"
  });
};

const renderStatus = function (cell, row) {
  return React.createElement("span", {
    className: "ibol-label ".concat(cell)
  });
};

class CampaignTableViewActions extends React.Component {
  render() {
    let {
      invite
    } = this.props;
    invite.index = 1;
    let list = [invite];
    return React.createElement("div", {
      className: "action-specs"
    }, React.createElement("h4", null, React.createElement(Translate, {
      value: getTranslation("table.title")
    })), React.createElement("div", {
      className: "ibol-table"
    }, React.createElement(BootstrapTable, {
      data: list
    }, React.createElement(TableHeaderColumn, {
      isKey: true,
      dataField: "index",
      dataAlign: "center",
      width: "60px",
      dataFormat: renderIndex
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.index")
    })), React.createElement(TableHeaderColumn, {
      dataField: "status",
      dataFormat: renderStatus,
      dataAlign: "center",
      width: "60px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.status")
    })), React.createElement(TableHeaderColumn, {
      dataField: "members",
      dataAlign: "center",
      width: "200px",
      dataFormat: renderNetworks
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.networks")
    })), React.createElement(TableHeaderColumn, {
      dataField: "members",
      dataAlign: "center",
      width: "200px",
      dataFormat: renderMembers
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.members")
    })), React.createElement(TableHeaderColumn, {
      dataField: "invitesAvailable",
      dataAlign: "center",
      width: "100px",
      dataFormat: renderText
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.vacants")
    })), React.createElement(TableHeaderColumn, {
      dataField: "confirmed",
      dataAlign: "center",
      width: "100px",
      dataFormat: renderText
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.confirmed")
    })), React.createElement(TableHeaderColumn, {
      dataField: "type",
      dataAlign: "center",
      width: "200px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.type")
    })), React.createElement(TableHeaderColumn, {
      dataField: "deadline",
      dataAlign: "center",
      width: "200px",
      dataFormat: renderDate
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.deadline")
    })), React.createElement(TableHeaderColumn, {
      dataField: "useHashtag",
      dataAlign: "center",
      width: "100px",
      dataFormat: renderHashtag
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.useHashtag")
    })), React.createElement(TableHeaderColumn, {
      dataField: "budget",
      dataAlign: "center",
      width: "150px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.budget")
    })))));
  }

}

module.exportDefault(CampaignTableViewActions);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"confirmed.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/invites/table-view/confirmed.jsx                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 1);
let ListEmpty;
module.watch(require("../../../../../core/ui/components/list-empty"), {
  default(v) {
    ListEmpty = v;
  }

}, 2);

let getTranslation = key => {
  return "Campaigns.edit.tabs.invites." + key;
};

class CampaignTableViewActionsConfirmed extends React.Component {
  render() {
    let {
      confirmed,
      accounts,
      teamAttacks,
      currentInvite
    } = this.props;
    let conent = React.createElement("div", null, React.createElement("h1", null, "Confirmed"));

    if (confirmed.length === 0) {
      content = React.createElement(ListEmpty, {
        message: React.createElement(Translate, {
          value: getTranslation("empty.messageConfirmed")
        })
      });
    }

    return React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-body"
    }, content));
  }

}

module.exportDefault(CampaignTableViewActionsConfirmed);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"container.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/invites/table-view/container.jsx                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 1);
let ListEmpty;
module.watch(require("../../../../../core/ui/components/list-empty"), {
  default(v) {
    ListEmpty = v;
  }

}, 2);
let Actions;
module.watch(require("./actions"), {
  default(v) {
    Actions = v;
  }

}, 3);
let Options;
module.watch(require("./options"), {
  default(v) {
    Options = v;
  }

}, 4);
let Calendar;
module.watch(require("../../summary/calendar"), {
  default(v) {
    Calendar = v;
  }

}, 5);
let Confirmed;
module.watch(require("./confirmed"), {
  default(v) {
    Confirmed = v;
  }

}, 6);
let Controls;
module.watch(require("./controls"), {
  default(v) {
    Controls = v;
  }

}, 7);
let Total;
module.watch(require("./total"), {
  default(v) {
    Total = v;
  }

}, 8);
let Accounts;
module.watch(require("./accounts"), {
  default(v) {
    Accounts = v;
  }

}, 9);

let getTranslation = key => {
  return "Campaigns.edit.tabs.invites." + key;
};

class CampaignTableView extends React.Component {
  constructor() {
    super();
    this.state = {
      actionIndex: 0
    };
    this.goToAction = this.goToAction.bind(this);
  }

  goToAction(action) {
    let component = this;
    return function (e) {
      let val;

      if (action === "goTo") {
        val = Number(e.target.value);
      }

      if (action === "previous") {
        if (component.state.actionIndex === 0) return;
        val = component.state.actionIndex - 1;
      }

      if (action === "next") {
        if (component.state.actionIndex === component.props.invites.length - 1) return;
        val = component.state.actionIndex + 1;
      }

      component.setState({
        actionIndex: val
      });
    };
  }

  render() {
    let {
      invites,
      campaign,
      hasTotal,
      hasAccounts,
      isSummary
    } = this.props;

    if (invites.length === 0) {
      return React.createElement(ListEmpty, {
        message: React.createElement(Translate, {
          value: getTranslation("empty.message")
        })
      });
    }

    let {
      actionIndex
    } = this.state;
    let currentInvite = invites[actionIndex];
    return React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: !isSummary ? "col-md-6" : "col-md-12"
    }, hasAccounts && React.createElement(Accounts, {
      influencers: currentInvite.influencers,
      teamAttacks: currentInvite.teamAttacks
    }), React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-body"
    }, React.createElement(Actions, {
      invite: currentInvite
    }), React.createElement(Controls, {
      invites: invites,
      goToAction: this.goToAction,
      actionIndex: actionIndex
    }))), React.createElement(Options, {
      invite: currentInvite,
      actionIndex: actionIndex
    }), hasTotal && React.createElement(Total, {
      currentInvite: currentInvite
    })), !isSummary && React.createElement("div", {
      className: "col-md-6"
    }, React.createElement(Confirmed, {
      inviteID: currentInvite._id,
      confirmed: []
    }), React.createElement(Calendar, {
      campaignID: campaign._id
    })));
  }

}

module.exportDefault(CampaignTableView);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"controls.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/invites/table-view/controls.jsx                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 1);

class CampaignTableViewControls extends React.Component {
  render() {
    let getTranslation = key => {
      return "Campaigns.edit.tabs.invites.edit.form.footer." + key;
    };

    let {
      invites,
      goToAction,
      actionIndex
    } = this.props;
    return React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-12"
    }, React.createElement("div", {
      className: "form-inline"
    }, React.createElement(Translate, {
      value: getTranslation("pagination.action")
    }), "    \xA0", React.createElement("div", {
      className: "form-group"
    }, React.createElement("select", {
      className: "form-control",
      value: actionIndex,
      onChange: goToAction("goTo")
    }, invites.map((invite, i) => React.createElement("option", {
      key: i,
      value: i
    }, i + 1)))), React.createElement(Translate, {
      value: getTranslation("pagination.of")
    }), "    \xA0 \xA0", invites.length, React.createElement("div", {
      className: "btn-group pull-right",
      role: "group"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-icon btn-default",
      onClick: goToAction("previous")
    }, React.createElement("i", {
      className: "fa fa-angle-left",
      "aria-hidden": "true"
    })), React.createElement("button", {
      type: "button",
      className: "btn btn-icon btn-default",
      onClick: goToAction("next")
    }, React.createElement("i", {
      className: "fa fa-angle-right",
      "aria-hidden": "true"
    }))))));
  }

}

module.exportDefault(CampaignTableViewControls);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"options.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/invites/table-view/options.jsx                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let ListEmpty;
module.watch(require("../../../../../core/ui/components/list-empty"), {
  default(v) {
    ListEmpty = v;
  }

}, 1);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 2);
let BootstrapTable, TableHeaderColumn;
module.watch(require("react-bootstrap-table"), {
  BootstrapTable(v) {
    BootstrapTable = v;
  },

  TableHeaderColumn(v) {
    TableHeaderColumn = v;
  }

}, 3);

const renderDate = function (cell, row) {
  return moment(new Date(cell)).format("DD/MM/YY");
};

const renderTime = function (cell, row) {
  return moment(new Date(cell)).format("HH:MM A");
};

const renderMedia = function (cell, row) {
  return React.createElement("div", {
    style: {
      padding: 6
    }
  }, React.createElement("img", {
    src: cell,
    alt: "",
    style: {
      maxHeight: 150,
      maxWidth: "100%"
    }
  }));
};

class CampaignTableViewOptions extends React.Component {
  render() {
    let getTranslation = key => {
      return "Campaigns.edit.tabs.invites.edit.tables.options." + key;
    };

    let {
      invite,
      actionIndex
    } = this.props;

    if (invite.options.length === 0) {
      return React.createElement(ListEmpty, {
        message: React.createElement(Translate, {
          value: getTranslation("empty.message")
        })
      });
    }

    let list = invite.options.map((invite, index) => Object.assign({}, invite, {
      index: index + 1
    }));
    return React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-body"
    }, React.createElement("div", {
      className: "action-list"
    }, React.createElement("h4", null, " ", React.createElement(Translate, {
      value: getTranslation("table.title")
    })), React.createElement("div", {
      className: "ibol-table"
    }, React.createElement(BootstrapTable, {
      data: list
    }, React.createElement(TableHeaderColumn, {
      isKey: true,
      dataField: "index",
      dataAlign: "center",
      width: "60px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.index")
    })), React.createElement(TableHeaderColumn, {
      dataField: "message",
      width: "350px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.message")
    })), React.createElement(TableHeaderColumn, {
      dataField: "media",
      dataFormat: renderMedia,
      width: "200px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.media")
    })), React.createElement(TableHeaderColumn, {
      dataField: "date",
      dataFormat: renderDate,
      width: "150px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.date")
    })), React.createElement(TableHeaderColumn, {
      dataField: "date",
      dataFormat: renderTime,
      width: "150px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.time")
    })))))));
  }

}

module.exportDefault(CampaignTableViewOptions);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"total.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/invites/table-view/total.jsx                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, I18n, Localize;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  },

  Localize(v) {
    Localize = v;
  }

}, 1);
let Modal;
module.watch(require("react-modal"), {
  default(v) {
    Modal = v;
  }

}, 2);
let TotalBreakdown;
module.watch(require("../total/breakdown"), {
  default(v) {
    TotalBreakdown = v;
  }

}, 3);

class CampaignTableViewTotal extends React.Component {
  constructor() {
    super();
    this.state = {
      modal: false
    };
    this.openModal = this.openModal.bind(this);
    this.closeModal = this.closeModal.bind(this);
  }

  closeModal() {
    let newState = this.state;
    newState.modal = false;
    this.setState(newState);
  }

  openModal() {
    let newState = this.state;
    newState.modal = true;
    this.setState(newState);
  }

  calculateTotal(invite, hashtagCommission, appCommission) {
    let available = invite.invitesAvailable;
    available = available - invite.influencers.length;
    let res = {
      subtotal: 0,
      total: 0,
      paidInfluencers: []
    };

    let getPrice = function (influencer, invite) {
      if (invite.budget === "full") {
        switch (invite.type) {
          case "post":
            return influencer.pricing.post;

          case "profile":
            return influencer.pricing.profilePicture;

          case "cover":
            return influencer.pricing.coverPhoto;

          case "hourNoPost":
            return influencer.pricing.noPostHour;

          case "dayNoPost":
            return influencer.pricing.noPostDay;

          case "share":
            return influencer.pricing.share;
        }
      } else {
        return Number(invite.budget);
      }
    };

    let teamAttackMembers = [].concat.apply([], invite.teamAttacks.map(t => t.members));

    if (available > 0) {
      for (let i = 0; i < available; i++) {
        let influencer = teamAttackMembers[i];
        res.paidInfluencers.push(influencer);
        res.subtotal += Number(getPrice(influencer, invite));
      }
    }

    res.total = res.subtotal + res.subtotal * hashtagCommission + res.subtotal * appCommission;
    return res;
  }

  render() {
    let getTranslation = key => {
      return "Campaigns.edit.tabs.invites.edit.form.total." + key;
    };

    let hashtagCommission = 0.10;
    let appCommission = 0.18;
    let {
      currentInvite
    } = this.props;
    let values = this.calculateTotal(currentInvite, hashtagCommission, appCommission);
    return React.createElement("div", {
      className: "panel invite-total"
    }, React.createElement("div", {
      className: "panel-heading"
    }, React.createElement("h3", {
      className: "panel-title"
    }, React.createElement(Translate, {
      value: getTranslation("title")
    }), " ", React.createElement("i", {
      className: "fa fa-expand pull-right cursor-pointer",
      onClick: this.openModal,
      "aria-hidden": "true"
    }))), React.createElement("div", {
      className: "panel-body container-fluid"
    }, React.createElement("table", {
      className: "table"
    }, React.createElement("tbody", null, React.createElement("tr", null, React.createElement("td", null, React.createElement(Translate, {
      value: getTranslation("influencers")
    }), ":"), React.createElement("td", null, React.createElement(Localize, {
      value: values.subtotal,
      options: {
        style: 'currency',
        currency: 'USD',
        minimumFractionDigits: 2,
        maximumFractionDigits: 2
      }
    }), " USD")), React.createElement("tr", null, React.createElement("td", null, "#Viralizing"), React.createElement("td", null, "10%")), React.createElement("tr", null, React.createElement("td", null, React.createElement(Translate, {
      value: getTranslation("commission")
    })), React.createElement("td", null, "18%")), React.createElement("tr", null, React.createElement("td", null, React.createElement(Translate, {
      value: getTranslation("total")
    })), React.createElement("td", null, React.createElement(Localize, {
      value: values.total,
      options: {
        style: 'currency',
        currency: 'USD',
        minimumFractionDigits: 2,
        maximumFractionDigits: 2
      }
    }), " USD"))))), React.createElement(Modal, {
      isOpen: this.state.modal,
      onRequestClose: this.closeModal,
      className: "app-modal",
      contentLabel: "Example Modal"
    }, React.createElement("button", {
      className: "close",
      onClick: this.closeModal
    }, React.createElement("i", {
      className: "icon wb-close-mini",
      "aria-hidden": "true"
    })), React.createElement(TotalBreakdown, {
      currentInvite: currentInvite,
      values: values,
      commissions: {
        appCommission,
        hashtagCommission
      }
    })));
  }

}

module.exportDefault(CampaignTableViewTotal);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"total":{"breakdown.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/invites/total/breakdown.jsx                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, I18n, Localize;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  },

  Localize(v) {
    Localize = v;
  }

}, 1);
let SocialAvatar;
module.watch(require("../../../../../core/ui/components/social-avatar"), {
  default(v) {
    SocialAvatar = v;
  }

}, 2);

class TotalBreakdown extends React.Component {
  render() {
    let getTranslation = key => {
      return "Campaigns.edit.tabs.invites.edit.form.total." + key;
    };

    let getPrice = function (influencer, invite) {
      if (invite.budget === "full") {
        switch (invite.type) {
          case "post":
            return influencer.pricing.post;

          case "profile":
            return influencer.pricing.profilePicture;

          case "cover":
            return influencer.pricing.coverPhoto;

          case "hourNoPost":
            return influencer.pricing.noPostHour;

          case "dayNoPost":
            return influencer.pricing.noPostDay;

          case "share":
            return influencer.pricing.share;
        }
      } else {
        return Number(invite.budget);
      }
    };

    let {
      currentInvite,
      values,
      commissions
    } = this.props;
    return React.createElement("div", {
      className: "invite-total"
    }, React.createElement("table", {
      className: "table"
    }, React.createElement("thead", null, React.createElement("tr", null, React.createElement("th", null, React.createElement(Translate, {
      value: getTranslation("breakdown.table.headers.concept")
    })), React.createElement("th", null, React.createElement(Translate, {
      value: getTranslation("breakdown.table.headers.amount")
    })))), React.createElement("tbody", null, values.paidInfluencers.map((influencer, i) => React.createElement("tr", {
      key: i
    }, React.createElement("td", null, React.createElement(SocialAvatar, {
      avatar: influencer.information.avatar,
      network: influencer.network,
      name: (influencer.information.name || "") + " " + (influencer.information.lastName || ""),
      size: "50"
    }), (influencer.information.name || "") + " " + (influencer.information.lastName || "")), React.createElement("td", null, React.createElement(Localize, {
      value: getPrice(influencer, currentInvite),
      options: {
        style: 'currency',
        currency: 'USD',
        minimumFractionDigits: 2,
        maximumFractionDigits: 2
      }
    }), " USD"))), React.createElement("tr", {
      className: "bold"
    }, React.createElement("td", null, React.createElement("strong", null, React.createElement(Translate, {
      value: getTranslation("subtotal")
    }))), React.createElement("td", null, React.createElement(Localize, {
      value: values.subtotal,
      options: {
        style: 'currency',
        currency: 'USD',
        minimumFractionDigits: 2,
        maximumFractionDigits: 2
      }
    }), " USD")), React.createElement("tr", {
      className: "bold"
    }, React.createElement("td", null, React.createElement("strong", null, "#Viralizing:")), React.createElement("td", null, commissions.hashtagCommission * 100, "%")), React.createElement("tr", {
      className: "bold"
    }, React.createElement("td", null, React.createElement("strong", null, React.createElement(Translate, {
      value: getTranslation("commission")
    }))), React.createElement("td", null, commissions.appCommission * 100, "%")), React.createElement("tr", {
      className: "bold"
    }, React.createElement("td", null, React.createElement("strong", null, React.createElement(Translate, {
      value: getTranslation("total")
    }))), React.createElement("td", null, React.createElement(Localize, {
      value: values.total,
      options: {
        style: 'currency',
        currency: 'USD',
        minimumFractionDigits: 2,
        maximumFractionDigits: 2
      }
    }), " USD")))));
  }

}

module.exportDefault(TotalBreakdown);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"edit-modal.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/invites/edit-modal.jsx                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Field, reduxForm;
module.watch(require("redux-form"), {
  Field(v) {
    Field = v;
  },

  reduxForm(v) {
    reduxForm = v;
  }

}, 1);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 2);
let TeamAttackMembers;
module.watch(require("../../../../teamattack/ui/components/edit/members-input"), {
  default(v) {
    TeamAttackMembers = v;
  }

}, 3);

let getTranslation = key => {
  return "Campaigns.edit.tabs.messages.invites.edit." + key;
};

class CampaignInvitesEdit extends React.Component {
  render() {
    let {
      input
    } = this.props;
    return React.createElement("form", {
      className: "campaign-edit-invite"
    }, React.createElement(TeamAttackMembers, {
      input: input
    }));
  }

}

module.exportDefault(CampaignInvitesEdit);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"header.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/invites/header.jsx                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 1);
let SocialAvatar;
module.watch(require("../../../../core/ui/components/social-avatar"), {
  default(v) {
    SocialAvatar = v;
  }

}, 2);

let getTranslation = key => {
  return "Campaigns.edit.tabs.invites." + key;
};

class CampaignInvitesHeader extends React.Component {
  render() {
    let {
      campaign,
      updateViewType
    } = this.props;
    return React.createElement("div", null, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("h1", null, campaign.information.name)), React.createElement("div", {
      className: "col-md-6 controls"
    }, campaign.information.brands && React.createElement("div", {
      className: "pull-right"
    }, React.createElement(SocialAvatar, {
      avatar: campaign.information.brands[0].information.avatar,
      network: campaign.information.brands[0].network,
      name: (campaign.information.brands[0].information.name || "") + " " + (campaign.information.brands[0].information.lastName || ""),
      size: "75"
    }), (campaign.information.brands[0].information.name || "") + " " + (campaign.information.brands[0].information.lastName || "")), React.createElement("ul", {
      className: "pull-right"
    }, React.createElement("li", {
      onClick: updateViewType("table")
    }, React.createElement("i", {
      className: "fa fa-bars",
      "aria-hidden": "true"
    })), React.createElement("li", {
      onClick: updateViewType("list")
    }, React.createElement("i", {
      className: "fa fa-table",
      "aria-hidden": "true"
    }))))));
  }

}

module.exportDefault(CampaignInvitesHeader);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"part-of":{"information":{"objectives.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/part-of/information/objectives.jsx                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 1);
let InputSelect;
module.watch(require("../../../../../core/ui/components/forms/input-checkbox"), {
  default(v) {
    InputSelect = v;
  }

}, 2);

class TargetObjectives extends React.Component {
  render() {
    let objectiveKeys = ["increaseFollowers", "increaseViews", "increaseShares", "increaseEngagement", "increaseLikes", "increaseTrafficHours", "reachNewMarkets", "increaseSpeaking", "increasePlays", "increaseWebsiteTraffic", "positionTarget", "keepTarget", "presence", "positionNewMarkets"];

    let getTranslation = key => {
      return "Campaigns.edit.tabs.information.form.objectives.objectives." + key;
    };

    let {
      objectives,
      readOnly
    } = this.props;
    return React.createElement("div", null, React.createElement("div", {
      className: "row"
    }, objectiveKeys.map((key, i) => React.createElement("div", {
      className: "col-md-4",
      key: i
    }, React.createElement(InputSelect, {
      label: React.createElement(Translate, {
        value: getTranslation(key)
      }),
      readOnly: readOnly,
      input: {
        value: objectives[key],
        onChange: () => {}
      }
    })))));
  }

}

module.exportDefault(TargetObjectives);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"gallery.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/part-of/gallery.jsx                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let InputGallery;
module.watch(require("../../../../core/ui/components/forms/input-gallery"), {
  default(v) {
    InputGallery = v;
  }

}, 1);
let InputVideoGallery;
module.watch(require("../../../../core/ui/components/forms/input-video-gallery"), {
  default(v) {
    InputVideoGallery = v;
  }

}, 2);

class Gallery extends React.Component {
  render() {
    let getTranslationImages = key => {
      return "Campaigns.edit.tabs.gallery.images." + key;
    };

    let getTranslationVideos = key => {
      return "Campaigns.edit.tabs.gallery.videos." + key;
    };

    let {
      campaign
    } = this.props;
    return React.createElement("div", {
      className: "content-padding-30"
    }, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement(InputGallery, {
      getTranslation: getTranslationImages,
      readOnly: true,
      input: {
        value: campaign.gallery.images,
        onChange: () => {}
      }
    })), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement(InputVideoGallery, {
      getTranslation: getTranslationVideos,
      readOnly: true,
      input: {
        value: campaign.gallery.videos,
        onChange: () => {}
      }
    }))));
  }

}

module.exportDefault(Gallery);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"header.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/part-of/header.jsx                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 1);

class Header extends React.Component {
  render() {
    let getTranslation = key => {
      return "Campaigns.edit.tabs.information." + key;
    };

    let {
      campaign
    } = this.props;
    let {
      information
    } = campaign;
    return React.createElement("div", {
      className: "campaign-information"
    }, React.createElement("div", {
      className: "header"
    }, React.createElement("div", {
      className: "cover"
    }, React.createElement("div", {
      className: "back",
      style: {
        background: information.cover ? "url(" + information.cover + ")" : ""
      }
    })), React.createElement("div", {
      className: "profile"
    }, React.createElement("div", {
      className: "back",
      style: {
        background: information.profile ? "url(" + information.profile + ")" : ""
      }
    })), React.createElement("div", {
      className: "name"
    }, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-7"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "campaignName"
    }, React.createElement(Translate, {
      value: getTranslation("form.name")
    })), React.createElement("p", {
      className: "form-control-static"
    }, information.name || "-"))), React.createElement("div", {
      className: "col-md-5 align-center"
    }, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "campaignName"
    }, React.createElement(Translate, {
      value: getTranslation("form.dateStart")
    })), React.createElement("p", {
      className: "form-control-static"
    }, moment(new Date(information.dateStart)).format("DD/MM/YYYY")))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "campaignName"
    }, React.createElement(Translate, {
      value: getTranslation("form.dateEnd")
    })), React.createElement("p", {
      className: "form-control-static"
    }, moment(new Date(information.dateEnd)).format("DD/MM/YYYY"))))))))));
  }

}

module.exportDefault(Header);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"information.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/part-of/information.jsx                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 1);
let Header;
module.watch(require("./header"), {
  default(v) {
    Header = v;
  }

}, 2);
let InputConquer;
module.watch(require("../information/input-conquer"), {
  default(v) {
    InputConquer = v;
  }

}, 3);
let SocialAvatar;
module.watch(require("../../../../core/ui/components/social-avatar"), {
  default(v) {
    SocialAvatar = v;
  }

}, 4);
let TargetObjectives;
module.watch(require("./information/objectives"), {
  default(v) {
    TargetObjectives = v;
  }

}, 5);
let Brands;
module.watch(require("../summary/brands"), {
  default(v) {
    Brands = v;
  }

}, 6);

class Information extends React.Component {
  constructor() {
    super();
    this.handleTags = this.handleTags.bind(this);
  }

  handleTags(tags) {
    return tags.map(tag => tag.split("#").length > 1 ? tag : "#" + tag);
  }

  render() {
    let getTranslation = key => {
      return "Campaigns.edit.tabs.information." + key;
    };

    let {
      campaign
    } = this.props;
    let {
      owner,
      information
    } = campaign;
    return React.createElement("div", null, React.createElement(Header, {
      campaign: campaign
    }), React.createElement("div", {
      className: "content-padding-30"
    }, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "campaignName"
    }, React.createElement(Translate, {
      value: getTranslation("form.name")
    })), React.createElement("input", {
      type: "text",
      className: "form-control",
      defaultValue: information.name,
      readOnly: true
    }))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "campaignName"
    }, React.createElement(Translate, {
      value: getTranslation("form.owner")
    })), React.createElement("div", {
      className: "form-control social-avatar-form"
    }, React.createElement(SocialAvatar, {
      avatar: owner.profile.avatar,
      name: (owner.profile.name || "") + " " + (owner.profile.lastName || "")
    }), React.createElement("span", null, (owner.profile.name || "") + " " + (owner.profile.lastName || ""))))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "campaignName"
    }, React.createElement(Translate, {
      value: getTranslation("form.brand")
    })), React.createElement(Brands, {
      brands: information.brands,
      title: false
    })))), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "campaignName"
    }, React.createElement(Translate, {
      value: getTranslation("form.conquer")
    })), React.createElement(InputConquer, {
      input: {
        value: information.conquer,
        onChange: () => {}
      }
    }))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "campaignName"
    }, React.createElement(Translate, {
      value: getTranslation("form.dateStart")
    })), React.createElement("input", {
      type: "text",
      className: "form-control",
      defaultValue: moment(new Date(information.dateStart)).format("DD/MM/YYYY"),
      readOnly: true
    }))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "campaignName"
    }, React.createElement(Translate, {
      value: getTranslation("form.dateEnd")
    })), React.createElement("input", {
      type: "text",
      className: "form-control",
      defaultValue: moment(new Date(information.dateEnd)).format("DD/MM/YYYY"),
      readOnly: true
    })))), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-8"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "exampleInputEmail1"
    }, React.createElement(Translate, {
      value: getTranslation("form.description.label")
    })), React.createElement("textarea", {
      readOnly: true,
      rows: 3,
      className: "form-control"
    }, information.description))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "campaignName"
    }, React.createElement(Translate, {
      value: getTranslation("form.url")
    })), React.createElement("input", {
      type: "text",
      className: "form-control",
      defaultValue: information.url,
      readOnly: true
    })))), React.createElement("h4", null, React.createElement(Translate, {
      value: getTranslation("form.objectives.title")
    })), React.createElement(TargetObjectives, {
      objectives: information.objectives,
      readOnly: true
    })));
  }

}

module.exportDefault(Information);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"invites.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/part-of/invites.jsx                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 1);
let InvitesSummary;
module.watch(require("../invites/table-view/container"), {
  default(v) {
    InvitesSummary = v;
  }

}, 2);
let Header;
module.watch(require("./header"), {
  default(v) {
    Header = v;
  }

}, 3);

class Invites extends React.Component {
  render() {
    let getTranslation = key => {
      return "Campaigns.edit.tabs.status.soon." + key;
    };

    let {
      invites,
      campaign
    } = this.props;
    return React.createElement("div", null, React.createElement(Header, {
      campaign: campaign
    }), React.createElement("div", {
      className: "content-padding-30"
    }, React.createElement(InvitesSummary, {
      invites: invites,
      hasAccounts: true,
      campaign: campaign
    })));
  }

}

module.exportDefault(Invites);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"list-table.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/part-of/list-table.jsx                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 1);
let BootstrapTable, TableHeaderColumn;
module.watch(require("react-bootstrap-table"), {
  BootstrapTable(v) {
    BootstrapTable = v;
  },

  TableHeaderColumn(v) {
    TableHeaderColumn = v;
  }

}, 2);
let Link;
module.watch(require("react-router"), {
  Link(v) {
    Link = v;
  }

}, 3);
let SocialAvatar;
module.watch(require("../../../../core/ui/components/social-avatar"), {
  default(v) {
    SocialAvatar = v;
  }

}, 4);

let _;

module.watch(require("lodash"), {
  default(v) {
    _ = v;
  }

}, 5);
let Modal;
module.watch(require("react-modal"), {
  default(v) {
    Modal = v;
  }

}, 6);

let getTranslation = key => {
  return "Campaigns.list." + key;
};

const renderLink = function (cell, row) {
  // String example
  return React.createElement(Link, {
    to: "/campaigns/view/" + cell
  }, React.createElement("i", {
    className: "icon wb-edit",
    "aria-hidden": "true"
  }));
};

const renderStatus = function (cell, row) {
  return React.createElement("span", {
    className: "ibol-label ".concat(cell)
  });
};

const renderUser = function (cell, row) {
  // String example
  //console.log("RENDER_USER", cell);
  if (!cell || !cell.profile) return "-";
  return React.createElement(Link, {
    to: "/campaigns/view/" + row._id
  }, React.createElement(SocialAvatar, {
    avatar: cell.profile.avatar,
    name: cell.profile.name,
    size: "50"
  }), React.createElement("div", {
    className: "icon-label"
  }, cell.profile.name + " " + cell.profile.lastName));
};

const renderDate = function (cell, row) {
  // String example
  return moment(new Date(cell)).format("DD/MM/YY");
};

const renderName = function (cell, row) {
  // String example
  return React.createElement(Link, {
    to: "/campaigns/view/" + row._id
  }, cell);
};

const renderActions = function (cell, row) {
  // String example
  return React.createElement("div", null, "-");
};

const renderBudget = function (cell, row) {
  // String example
  return React.createElement("div", null, "-");
};

const renderNetworks = function (cell, row) {
  // String example
  return React.createElement("div", null, _.uniq(cell.map(m => m.network)).map((a, i) => React.createElement("div", {
    className: "icon",
    key: i
  }, React.createElement("i", {
    className: "social-icon " + a
  }))));
};

const renderInfluencers = function (cell, row) {
  // String example
  return React.createElement("div", null, "-");
};

const renderShares = function (cell, row) {
  // String example
  cell = cell || [];

  if (cell.length === 0) {
    return React.createElement("div", null, "-");
  }

  return React.createElement("div", null, cell.map(u => "".concat(u.profile.name, " ").concat(u.profile.lastName)).join(","));
};

class ListTable extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      sortName: undefined,
      sortOrder: undefined,
      modalIsOpen: false,
      list: []
    };
    this.openModal = this.openModal.bind(this);
    this.closeModal = this.closeModal.bind(this);
    this.onSortChange = this.onSortChange.bind(this);
  }

  openModal(list) {
    let component = this;
    return function () {
      component.setState({
        modalIsOpen: true,
        list
      });
    };
  }

  closeModal() {
    this.setState({
      modalIsOpen: false
    });
  }

  onSortChange(sortName, sortOrder) {
    this.setState({
      sortName,
      sortOrder
    });
  }

  render() {
    const options = {
      sortName: this.state.sortName,
      sortOrder: this.state.sortOrder,
      onSortChange: this.onSortChange,
      noDataText: I18n.t(getTranslation("table.empty"))
    };
    let {
      openModal
    } = this;

    const renderList = function (cell, row) {
      return React.createElement("div", {
        onClick: openModal(cell)
      }, cell.map((a, i) => React.createElement("div", {
        className: "icon",
        key: i
      }, React.createElement(SocialAvatar, {
        avatar: a.information.avatar,
        network: a.network,
        name: a.information.name,
        size: "75",
        type: a.information.type
      }))));
    };

    const list = this.props.data.map((c, i) => Object.assign({
      _id: c._id,
      status: c.status,
      manager: c.manager,
      owner: c.owner,
      brands: c.brands
    }, c.information, {
      index: i + 1
    }));
    return React.createElement("div", null, React.createElement("div", {
      className: "ibol-table"
    }, React.createElement(BootstrapTable, {
      data: list,
      options: options,
      pagination: true,
      search: true,
      searchPlaceholder: I18n.t(getTranslation("table.search"))
    }, React.createElement(TableHeaderColumn, {
      isKey: true,
      dataField: "index",
      dataAlign: "center",
      width: "60px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.index")
    })), React.createElement(TableHeaderColumn, {
      dataField: "status",
      dataFormat: renderStatus,
      dataAlign: "center",
      width: "80px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.status")
    })), React.createElement(TableHeaderColumn, {
      dataField: "brands",
      dataFormat: renderNetworks,
      dataSort: true,
      width: "280px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.networks")
    })), React.createElement(TableHeaderColumn, {
      dataField: "name",
      dataFormat: renderName,
      dataSort: true,
      width: "250px"
    }, ">", React.createElement(Translate, {
      value: getTranslation("table.headers.name")
    })), React.createElement(TableHeaderColumn, {
      dataField: "brands",
      dataFormat: renderList,
      dataSort: true,
      width: "250px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.brands")
    })), React.createElement(TableHeaderColumn, {
      dataField: "owner",
      dataFormat: renderUser,
      width: "200px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.owner")
    })), React.createElement(TableHeaderColumn, {
      dataField: "manager",
      dataFormat: renderUser,
      width: "200px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.holder")
    })), React.createElement(TableHeaderColumn, {
      dataField: "name",
      dataFormat: renderInfluencers,
      dataSort: true,
      width: "250px"
    }, ">", React.createElement(Translate, {
      value: getTranslation("table.headers.myAccounts")
    })), React.createElement(TableHeaderColumn, {
      dataField: "name",
      dataFormat: renderActions,
      dataSort: true,
      width: "150px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.myActions")
    })), React.createElement(TableHeaderColumn, {
      dataField: "dateStart",
      dataSort: true,
      dataFormat: renderDate,
      dataAlign: "center",
      width: "180px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.dateStart")
    })), React.createElement(TableHeaderColumn, {
      dataField: "dateEnd",
      dataSort: true,
      dataFormat: renderDate,
      dataAlign: "center",
      width: "180px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.dateEnd")
    })), React.createElement(TableHeaderColumn, {
      dataField: "name",
      dataFormat: renderBudget,
      dataSort: true,
      width: "200px"
    }, ">", React.createElement(Translate, {
      value: getTranslation("table.headers.utility")
    })))), React.createElement(Modal, {
      isOpen: this.state.modalIsOpen,
      onRequestClose: this.closeModal,
      className: "app-modal",
      contentLabel: "Accounts List"
    }, React.createElement("button", {
      className: "close",
      onClick: this.closeModal
    }, React.createElement("i", {
      className: "icon wb-close-mini",
      "aria-hidden": "true"
    })), React.createElement("h3", null, React.createElement(Translate, {
      value: getTranslation("table.headers.brands")
    })), React.createElement("div", {
      style: {
        padding: 20
      }
    }, this.state.list.map((a, i) => React.createElement("div", {
      className: "icon",
      key: i,
      style: {
        margin: 15
      }
    }, React.createElement(SocialAvatar, {
      avatar: a.information.avatar,
      network: a.network,
      name: a.information.name,
      size: "75",
      type: a.information.type
    }))))));
  }

}

module.exportDefault(ListTable);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"summary.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/part-of/summary.jsx                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 1);
let Header;
module.watch(require("./header"), {
  default(v) {
    Header = v;
  }

}, 2);
let People;
module.watch(require("../summary/people"), {
  default(v) {
    People = v;
  }

}, 3);
let Brands;
module.watch(require("../summary/brands"), {
  default(v) {
    Brands = v;
  }

}, 4);
let Conquer;
module.watch(require("../summary/conquer"), {
  default(v) {
    Conquer = v;
  }

}, 5);
let Calendar;
module.watch(require("../summary/calendar"), {
  default(v) {
    Calendar = v;
  }

}, 6);
let TargetObjectives;
module.watch(require("./information/objectives"), {
  default(v) {
    TargetObjectives = v;
  }

}, 7);
let InvitesSummary;
module.watch(require("../invites/table-view/container"), {
  default(v) {
    InvitesSummary = v;
  }

}, 8);

class Summary extends React.Component {
  render() {
    let getTranslation = key => {
      return "Campaigns.edit.tabs.information." + key;
    };

    let {
      campaign,
      invites
    } = this.props;
    let values = campaign;
    let information = values.information;
    return React.createElement("div", {
      className: "campaign-summary"
    }, React.createElement(Header, {
      campaign: campaign
    }), React.createElement("div", {
      className: "content-padding-30"
    }, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-body slim"
    }, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement(People, {
      owner: values.owner,
      manager: values.manager
    })), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement(Brands, {
      brands: information.brands
    }))), React.createElement("div", {
      className: "row description"
    }, React.createElement("div", {
      className: "col-md-12"
    }, React.createElement("h4", null, React.createElement(Translate, {
      value: getTranslation("form.description.label")
    })), React.createElement("div", {
      className: "form-group"
    }, React.createElement("p", {
      className: "form-control-static"
    }, information.description || "-")))), React.createElement(Conquer, {
      title: "Conquer",
      input: {
        value: information.conquer,
        onChange: () => {}
      },
      readOnly: true
    })))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "panel campaign-actions"
    }, React.createElement("div", {
      className: "panel-body slim"
    }, React.createElement(InvitesSummary, {
      invites: invites,
      hasAccounts: true,
      isSummary: true,
      campaign: campaign
    }), React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-body slim"
    }, React.createElement(Calendar, {
      campaignID: campaign._id
    }))))))), React.createElement("div", {
      className: "row padding-20"
    }, React.createElement("h4", null, React.createElement(Translate, {
      value: getTranslation("form.objectives.title")
    })), React.createElement(TargetObjectives, {
      objectives: information.objectives,
      readOnly: true
    }))));
  }

}

module.exportDefault(Summary);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"tabs.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/part-of/tabs.jsx                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Tabs, Tab;
module.watch(require("react-bootstrap"), {
  Tabs(v) {
    Tabs = v;
  },

  Tab(v) {
    Tab = v;
  }

}, 1);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 2);
let CampaignCalendar;
module.watch(require("../../containers/campaign-calendar"), {
  default(v) {
    CampaignCalendar = v;
  }

}, 3);
let Gallery;
module.watch(require("./gallery"), {
  default(v) {
    Gallery = v;
  }

}, 4);
let Information;
module.watch(require("./information"), {
  default(v) {
    Information = v;
  }

}, 5);
let Summary;
module.watch(require("./summary"), {
  default(v) {
    Summary = v;
  }

}, 6);
let CampaignInvites;
module.watch(require("./invites"), {
  default(v) {
    CampaignInvites = v;
  }

}, 7);

class TabsContainer extends React.Component {
  render() {
    let {
      campaign,
      invites
    } = this.props;
    return React.createElement("div", null, React.createElement("div", {
      className: "nav-tabs-horizontal"
    }, React.createElement(Tabs, {
      defaultActiveKey: "summary",
      id: "uncontrolled-tab-example",
      bsStyle: "tabs"
    }, React.createElement(Tab, {
      eventKey: "summary",
      title: React.createElement(Translate, {
        value: "Campaigns.edit.tabs.summary.title"
      })
    }, React.createElement(Summary, {
      campaign: campaign,
      invites: invites
    })), React.createElement(Tab, {
      eventKey: "information",
      title: React.createElement(Translate, {
        value: "Campaigns.edit.tabs.information.title"
      })
    }, React.createElement(Information, {
      campaign: campaign
    })), React.createElement(Tab, {
      eventKey: "invites",
      title: React.createElement(Translate, {
        value: "Campaigns.edit.tabs.invites.title"
      })
    }, React.createElement(CampaignInvites, {
      campaign: campaign,
      invites: invites
    })), React.createElement(Tab, {
      eventKey: "calendar",
      title: React.createElement(Translate, {
        value: "Campaigns.edit.tabs.calendar.title"
      })
    }, React.createElement(CampaignCalendar, {
      campaignID: campaign._id,
      controls: true
    })), React.createElement(Tab, {
      eventKey: "gallery",
      title: React.createElement(Translate, {
        value: "Campaigns.edit.tabs.gallery.title"
      })
    }, React.createElement(Gallery, {
      campaign: campaign
    })))));
  }

}

module.exportDefault(TabsContainer);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"calendar":{"filters.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/calendar/filters.jsx                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 1);

class CalendarFilter extends React.Component {
  constructor() {
    super();
    this.toggleState = this.toggleState.bind(this);
  }

  toggleState(key) {
    return this.props.update(key);
  }

  render() {
    let getTranslation = key => {
      return "Campaigns.edit.tabs.calendar.filters." + key;
    };

    let {
      filters
    } = this.props;
    return React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-body container-fluid"
    }, React.createElement("ul", {
      className: "list-group list-group-full"
    }, Object.keys(filters).map((key, i) => React.createElement("li", {
      key: i,
      className: "list-group-item"
    }, React.createElement("div", {
      className: "checkbox-custom"
    }, React.createElement("input", {
      type: "checkbox",
      name: "inputCheckboxes",
      checked: filters[key],
      onChange: this.toggleState(key)
    }), React.createElement("label", null, React.createElement(Translate, {
      value: getTranslation(key)
    }))))))));
  }

}

module.exportDefault(CalendarFilter);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"information":{"conquer-map.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/information/conquer-map.jsx                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let $;
module.watch(require("jquery"), {
  default(v) {
    $ = v;
  }

}, 1);
let TagsInput;
module.watch(require("../../../../core/ui/components/forms/input-tags"), {
  default(v) {
    TagsInput = v;
  }

}, 2);

class ConquerMap extends React.Component {
  constructor() {
    super();
  }

  componentDidMount() {
    let component = this;
    let {
      countries
    } = this.props;
    let codes = [];

    if (component.props.value && Array.isArray(component.props.value) && typeof component.props.value[0] === "string") {
      codes = component.props.value.map(code => {
        return countries.filter(c => c.name === code)[0].code;
      });
    }

    let domMap = $("#world-map-campaign-information");
    let map = domMap.vectorMap({
      map: 'world_mill',
      regionsSelectable: true,
      selectedRegions: codes,
      regionStyle: {
        initial: {
          fill: '#ccc' //fill: '#5c9dc1'

        },
        selected: {
          fill: '#c28c58'
        }
      },
      onRegionClick: function (e, code, d, f) {
        //console.log("REGION CLICK",code);
        //console.log("MAP_DATA", map, mapObject);
        setTimeout(function () {
          let regions = mapObject.getSelectedRegions();
          let value = regions.map(r => {
            return countries.filter(c => c.code === r)[0].name;
          }); //console.log("MAP VALUES",value);

          component.props.onChange(value);
          setTimeout(() => $(".jvectormap-tip").remove(), 100);
        }, 100); //component.props.close();
      }
    });
    let mapObject = domMap.vectorMap('get', 'mapObject');
  }

  render() {
    return React.createElement("div", null, React.createElement("h3", null, this.props.title), React.createElement("div", {
      id: "world-map-campaign-information",
      className: "vectorMap",
      style: {
        width: " 100%",
        height: " 400px"
      }
    }), React.createElement("a", {
      className: "btn btn-primary pull-right",
      onClick: this.props.close
    }, "Close"));
  }

}

module.exportDefault(ConquerMap);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"input-conquer.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/information/input-conquer.jsx                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Modal;
module.watch(require("react-modal"), {
  default(v) {
    Modal = v;
  }

}, 1);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 2);
let ConquerMap;
module.watch(require("./conquer-map"), {
  default(v) {
    ConquerMap = v;
  }

}, 3);
let countries = [{
  "code": "BD",
  "name": "Bangladesh"
}, {
  "code": "BE",
  "name": "Belgium"
}, {
  "code": "BF",
  "name": "Burkina Faso"
}, {
  "code": "BG",
  "name": "Bulgaria"
}, {
  "code": "BA",
  "name": "Bosnia and Herz."
}, {
  "code": "BN",
  "name": "Brunei"
}, {
  "code": "BO",
  "name": "Bolivia"
}, {
  "code": "JP",
  "name": "Japan"
}, {
  "code": "BI",
  "name": "Burundi"
}, {
  "code": "BJ",
  "name": "Benin"
}, {
  "code": "BT",
  "name": "Bhutan"
}, {
  "code": "JM",
  "name": "Jamaica"
}, {
  "code": "BW",
  "name": "Botswana"
}, {
  "code": "BR",
  "name": "Brazil"
}, {
  "code": "BS",
  "name": "Bahamas"
}, {
  "code": "BY",
  "name": "Belarus"
}, {
  "code": "BZ",
  "name": "Belize"
}, {
  "code": "RU",
  "name": "Russia"
}, {
  "code": "RW",
  "name": "Rwanda"
}, {
  "code": "RS",
  "name": "Serbia"
}, {
  "code": "TL",
  "name": "Timor-Leste"
}, {
  "code": "TM",
  "name": "Turkmenistan"
}, {
  "code": "TJ",
  "name": "Tajikistan"
}, {
  "code": "RO",
  "name": "Romania"
}, {
  "code": "GW",
  "name": "Guinea-Bissau"
}, {
  "code": "GT",
  "name": "Guatemala"
}, {
  "code": "GR",
  "name": "Greece"
}, {
  "code": "GQ",
  "name": "Eq. Guinea"
}, {
  "code": "GY",
  "name": "Guyana"
}, {
  "code": "GE",
  "name": "Georgia"
}, {
  "code": "GB",
  "name": "United Kingdom"
}, {
  "code": "GA",
  "name": "Gabon"
}, {
  "code": "GN",
  "name": "Guinea"
}, {
  "code": "GM",
  "name": "Gambia"
}, {
  "code": "GL",
  "name": "Greenland"
}, {
  "code": "GH",
  "name": "Ghana"
}, {
  "code": "OM",
  "name": "Oman"
}, {
  "code": "TN",
  "name": "Tunisia"
}, {
  "code": "JO",
  "name": "Jordan"
}, {
  "code": "HR",
  "name": "Croatia"
}, {
  "code": "HT",
  "name": "Haiti"
}, {
  "code": "HU",
  "name": "Hungary"
}, {
  "code": "HN",
  "name": "Honduras"
}, {
  "code": "PR",
  "name": "Puerto Rico"
}, {
  "code": "PS",
  "name": "Palestine"
}, {
  "code": "PT",
  "name": "Portugal"
}, {
  "code": "PY",
  "name": "Paraguay"
}, {
  "code": "PA",
  "name": "Panama"
}, {
  "code": "PG",
  "name": "Papua New Guinea"
}, {
  "code": "PE",
  "name": "Peru"
}, {
  "code": "PK",
  "name": "Pakistan"
}, {
  "code": "PH",
  "name": "Philippines"
}, {
  "code": "PL",
  "name": "Poland"
}, {
  "code": "ZM",
  "name": "Zambia"
}, {
  "code": "EH",
  "name": "W. Sahara"
}, {
  "code": "EE",
  "name": "Estonia"
}, {
  "code": "EG",
  "name": "Egypt"
}, {
  "code": "ZA",
  "name": "South Africa"
}, {
  "code": "EC",
  "name": "Ecuador"
}, {
  "code": "IT",
  "name": "Italy"
}, {
  "code": "VN",
  "name": "Vietnam"
}, {
  "code": "SB",
  "name": "Solomon Is."
}, {
  "code": "ET",
  "name": "Ethiopia"
}, {
  "code": "SO",
  "name": "Somalia"
}, {
  "code": "ZW",
  "name": "Zimbabwe"
}, {
  "code": "ES",
  "name": "Spain"
}, {
  "code": "ER",
  "name": "Eritrea"
}, {
  "code": "ME",
  "name": "Montenegro"
}, {
  "code": "MD",
  "name": "Moldova"
}, {
  "code": "MG",
  "name": "Madagascar"
}, {
  "code": "MA",
  "name": "Morocco"
}, {
  "code": "UZ",
  "name": "Uzbekistan"
}, {
  "code": "MM",
  "name": "Myanmar"
}, {
  "code": "ML",
  "name": "Mali"
}, {
  "code": "MN",
  "name": "Mongolia"
}, {
  "code": "MK",
  "name": "Macedonia"
}, {
  "code": "MW",
  "name": "Malawi"
}, {
  "code": "MR",
  "name": "Mauritania"
}, {
  "code": "UG",
  "name": "Uganda"
}, {
  "code": "MY",
  "name": "Malaysia"
}, {
  "code": "MX",
  "name": "Mexico"
}, {
  "code": "IL",
  "name": "Israel"
}, {
  "code": "FR",
  "name": "France"
}, {
  "code": "XS",
  "name": "Somaliland"
}, {
  "code": "FI",
  "name": "Finland"
}, {
  "code": "FJ",
  "name": "Fiji"
}, {
  "code": "FK",
  "name": "Falkland Is."
}, {
  "code": "NI",
  "name": "Nicaragua"
}, {
  "code": "NL",
  "name": "Netherlands"
}, {
  "code": "NO",
  "name": "Norway"
}, {
  "code": "NA",
  "name": "Namibia"
}, {
  "code": "VU",
  "name": "Vanuatu"
}, {
  "code": "NC",
  "name": "New Caledonia"
}, {
  "code": "NE",
  "name": "Niger"
}, {
  "code": "NG",
  "name": "Nigeria"
}, {
  "code": "NZ",
  "name": "New Zealand"
}, {
  "code": "NP",
  "name": "Nepal"
}, {
  "code": "XK",
  "name": "Kosovo"
}, {
  "code": "CI",
  "name": "Côte d'Ivoire"
}, {
  "code": "CH",
  "name": "Switzerland"
}, {
  "code": "CO",
  "name": "Colombia"
}, {
  "code": "CN",
  "name": "China"
}, {
  "code": "CM",
  "name": "Cameroon"
}, {
  "code": "CL",
  "name": "Chile"
}, {
  "code": "XC",
  "name": "N. Cyprus"
}, {
  "code": "CA",
  "name": "Canada"
}, {
  "code": "CG",
  "name": "Congo"
}, {
  "code": "CF",
  "name": "Central African Rep."
}, {
  "code": "CD",
  "name": "Dem. Rep. Congo"
}, {
  "code": "CZ",
  "name": "Czech Rep."
}, {
  "code": "CY",
  "name": "Cyprus"
}, {
  "code": "CR",
  "name": "Costa Rica"
}, {
  "code": "CU",
  "name": "Cuba"
}, {
  "code": "SZ",
  "name": "Swaziland"
}, {
  "code": "SY",
  "name": "Syria"
}, {
  "code": "KG",
  "name": "Kyrgyzstan"
}, {
  "code": "KE",
  "name": "Kenya"
}, {
  "code": "SS",
  "name": "S. Sudan"
}, {
  "code": "SR",
  "name": "Suriname"
}, {
  "code": "KH",
  "name": "Cambodia"
}, {
  "code": "SV",
  "name": "El Salvador"
}, {
  "code": "SK",
  "name": "Slovakia"
}, {
  "code": "KR",
  "name": "Korea"
}, {
  "code": "SI",
  "name": "Slovenia"
}, {
  "code": "KP",
  "name": "Dem. Rep. Korea"
}, {
  "code": "KW",
  "name": "Kuwait"
}, {
  "code": "SN",
  "name": "Senegal"
}, {
  "code": "SL",
  "name": "Sierra Leone"
}, {
  "code": "KZ",
  "name": "Kazakhstan"
}, {
  "code": "SA",
  "name": "Saudi Arabia"
}, {
  "code": "SE",
  "name": "Sweden"
}, {
  "code": "SD",
  "name": "Sudan"
}, {
  "code": "DO",
  "name": "Dominican Rep."
}, {
  "code": "DJ",
  "name": "Djibouti"
}, {
  "code": "DK",
  "name": "Denmark"
}, {
  "code": "DE",
  "name": "Germany"
}, {
  "code": "YE",
  "name": "Yemen"
}, {
  "code": "DZ",
  "name": "Algeria"
}, {
  "code": "US",
  "name": "United States"
}, {
  "code": "UY",
  "name": "Uruguay"
}, {
  "code": "LB",
  "name": "Lebanon"
}, {
  "code": "LA",
  "name": "Lao PDR"
}, {
  "code": "TW",
  "name": "Taiwan"
}, {
  "code": "TT",
  "name": "Trinidad and Tobago"
}, {
  "code": "TR",
  "name": "Turkey"
}, {
  "code": "LK",
  "name": "Sri Lanka"
}, {
  "code": "LV",
  "name": "Latvia"
}, {
  "code": "LT",
  "name": "Lithuania"
}, {
  "code": "LU",
  "name": "Luxembourg"
}, {
  "code": "LR",
  "name": "Liberia"
}, {
  "code": "LS",
  "name": "Lesotho"
}, {
  "code": "TH",
  "name": "Thailand"
}, {
  "code": "TF",
  "name": "Fr. S. Antarctic Lands"
}, {
  "code": "TG",
  "name": "Togo"
}, {
  "code": "TD",
  "name": "Chad"
}, {
  "code": "LY",
  "name": "Libya"
}, {
  "code": "AE",
  "name": "United Arab Emirates"
}, {
  "code": "VE",
  "name": "Venezuela"
}, {
  "code": "AF",
  "name": "Afghanistan"
}, {
  "code": "IQ",
  "name": "Iraq"
}, {
  "code": "IS",
  "name": "Iceland"
}, {
  "code": "IR",
  "name": "Iran"
}, {
  "code": "AM",
  "name": "Armenia"
}, {
  "code": "AL",
  "name": "Albania"
}, {
  "code": "AO",
  "name": "Angola"
}, {
  "code": "AR",
  "name": "Argentina"
}, {
  "code": "AU",
  "name": "Australia"
}, {
  "code": "AT",
  "name": "Austria"
}, {
  "code": "IN",
  "name": "India"
}, {
  "code": "TZ",
  "name": "Tanzania"
}, {
  "code": "AZ",
  "name": "Azerbaijan"
}, {
  "code": "IE",
  "name": "Ireland"
}, {
  "code": "ID",
  "name": "Indonesia"
}, {
  "code": "UA",
  "name": "Ukraine"
}, {
  "code": "QA",
  "name": "Qatar"
}, {
  "code": "MZ",
  "name": "Mozambique"
}];

class InputConquer extends React.Component {
  constructor() {
    super();
    this.state = {
      modalIsOpen: false
    };
    this.openModal = this.openModal.bind(this);
    this.closeModal = this.closeModal.bind(this);
    this.handleChange = this.handleChange.bind(this);
  }

  openModal() {
    this.setState({
      modalIsOpen: true
    });
  }

  closeModal() {
    this.props.input.onBlur();
    this.setState({
      modalIsOpen: false
    });
  }

  handleChange(tags) {
    let validatedTags = tags;

    if (this.props.validation) {
      validatedTags = this.props.validation(tags);
    }

    this.props.input.onChange(validatedTags);
  }

  render() {
    let getTranslation = key => {
      return "Campaigns.edit.tabs.information." + key;
    };

    return React.createElement("div", {
      className: "input-conquer"
    }, React.createElement("input", {
      type: "text",
      className: "form-control",
      onClick: this.openModal,
      value: this.props.input.value ? this.props.input.value.join(", ") : "",
      readOnly: true
    }), React.createElement(Modal, {
      isOpen: this.state.modalIsOpen,
      onRequestClose: this.closeModal,
      className: "app-modal",
      contentLabel: "Conquer Map"
    }, React.createElement("button", {
      className: "close",
      onClick: this.closeModal
    }, React.createElement("i", {
      className: "icon wb-close-mini",
      "aria-hidden": "true"
    })), React.createElement(ConquerMap, {
      close: this.closeModal,
      onChange: this.props.input.onChange,
      value: this.props.input.value,
      countries: countries,
      title: React.createElement(Translate, {
        value: getTranslation("form.conquer")
      })
    })));
  }

}

module.exportDefault(InputConquer);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"objective-proposal.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/information/objective-proposal.jsx                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/objectSpread"));

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 1);
let swal;
module.watch(require("sweetalert2"), {
  default(v) {
    swal = v;
  }

}, 2);

let getTranslation = key => {
  return "Campaigns.edit.tabs.information.form.proposal." + key;
};

class ObjectiveProposal extends React.Component {
  constructor() {
    super();
    this.state = {
      type: "objective",
      objective: ""
    };
    this.submitForm = this.submitForm.bind(this);
    this.updateValue = this.updateValue.bind(this);
  }

  updateValue(key) {
    let component = this;
    return function (e) {
      let val = e.target.value;
      let newState = (0, _objectSpread2.default)({}, component.state);
      newState[key] = val;
      component.setState(newState);
    };
  }

  submitForm() {
    //console.log("FORM_SUBMISSION", this.state);
    let component = this;
    let {
      campaignID
    } = this.props;
    Meteor.call("campaign-objective-proposal", campaignID, this.state, function (err, res) {
      if (err) {
        //console.log("ERROR", err);
        swal(I18n.t(getTranslation("modals.error.title")), I18n.t(getTranslation("modals.error.description")), "error");
        return;
      }

      component.setState({});
      swal(I18n.t(getTranslation("modals.done.title")), I18n.t(getTranslation("modals.done.description")), "success");
    });
  }

  render() {
    return React.createElement("div", {
      className: "form-group"
    }, React.createElement("div", {
      className: "input-group"
    }, React.createElement("input", {
      type: "text",
      className: "form-control",
      value: this.state.objective,
      onChange: this.updateValue("objective"),
      placeholder: I18n.t(getTranslation("objectives.placeholder"))
    }), React.createElement("span", {
      className: "input-group-btn"
    }, React.createElement("button", {
      className: "btn btn-success",
      type: "button",
      onClick: this.submitForm
    }, React.createElement("i", {
      className: "fa fa-check",
      "aria-hidden": "true"
    })))));
  }

}

module.exportDefault(ObjectiveProposal);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"objectives.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/information/objectives.jsx                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 1);
let Field;
module.watch(require("redux-form"), {
  Field(v) {
    Field = v;
  }

}, 2);
let InputSelect;
module.watch(require("../../../../core/ui/components/forms/input-checkbox"), {
  default(v) {
    InputSelect = v;
  }

}, 3);

class TargetObjectives extends React.Component {
  render() {
    let objectiveKeys = ["increaseFollowers", "increaseViews", "increaseShares", "increaseEngagement", "increaseLikes", "increaseTrafficHours", "reachNewMarkets", "increaseSpeaking", "increasePlays", "increaseWebsiteTraffic", "positionTarget", "keepTarget", "presence", "positionNewMarkets"];

    let getTranslation = key => {
      return "Campaigns.edit.tabs.information.form.objectives.objectives." + key;
    };

    return React.createElement("div", null, React.createElement("div", {
      className: "row"
    }, objectiveKeys.map((key, i) => React.createElement("div", {
      className: "col-md-4",
      key: i
    }, React.createElement(Field, {
      component: InputSelect,
      name: key,
      className: "form-control",
      label: React.createElement(Translate, {
        value: getTranslation(key)
      })
    })))));
  }

}

module.exportDefault(TargetObjectives);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"invite":{"invite.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/invite/invite.jsx                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/objectSpread"));

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let swal;
module.watch(require("sweetalert2"), {
  default(v) {
    swal = v;
  }

}, 1);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 2);
let Tooltip, OverlayTrigger;
module.watch(require("react-bootstrap"), {
  Tooltip(v) {
    Tooltip = v;
  },

  OverlayTrigger(v) {
    OverlayTrigger = v;
  }

}, 3);
let SocialAvatar;
module.watch(require("../../../../core/ui/components/social-avatar"), {
  default(v) {
    SocialAvatar = v;
  }

}, 4);
let notie;
module.watch(require("notie"), {
  default(v) {
    notie = v;
  }

}, 5);

let getTranslation = key => {
  return "Accounts.edit.tabs.settings." + key;
};

class AccountInvite extends React.Component {
  constructor() {
    super();
    this.state = {
      form: false,
      email: ""
    };
    this.toggleMagangerForm = this.toggleMagangerForm.bind(this);
    this.updateEmail = this.updateEmail.bind(this);
    this.sendInvite = this.sendInvite.bind(this);
  }

  validateEmail(email) {
    let re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    return re.exec(email) ? true : false;
  }

  sendInvite() {
    let {
      email
    } = this.state;

    if (!this.validateEmail(email)) {
      notie.alert(3, I18n.t(getTranslation("form.invite.error.invalid")), 3);
      return;
    }

    if (email === Meteor.user().emails[0].address) {
      notie.alert(3, I18n.t(getTranslation("form.invite.error.self")), 3);
      return;
    }

    let newInvite = {
      email,
      account: this.props.campaign._id
    };
    let component = this;
    Meteor.call("campaign-invite-create", newInvite, function (err, res) {
      if (err) {
        if (err.error === 500) {
          err.error = I18n.t(getTranslation("form.invite.error.failed"));
        }

        notie.alert(3, err.reason || err.error, 3);
        return;
      }

      component.props.refetch({
        accountID: component.props.campaign._id
      });
      component.setState({
        form: false
      });
      swal(I18n.t(getTranslation("form.invite.success.title")), I18n.t(getTranslation("form.invite.success.description")), "success");
    }); //console.log("SEND_INVITE_TO", email, this.props.campaign);
  }

  updateEmail(e) {
    let val = e.target.value;
    let newState = (0, _objectSpread2.default)({}, this.state);
    newState.email = val;
    this.setState(newState);
  }

  toggleMagangerForm() {
    let newState = (0, _objectSpread2.default)({}, this.state);
    newState.form = !newState.form;
    this.setState(newState);
  }

  tooltipContent(content) {
    return React.createElement(Tooltip, {
      id: "tooltip_content"
    }, content);
  }

  render() {
    let {
      manager,
      hasInvite,
      isOwner
    } = this.props;
    let managerName = (manager.profile.name || "") + " " + (manager.profile.lastName || "");
    return React.createElement("div", null, React.createElement("div", {
      className: "col-md-12"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("form.manager.title")
    })), React.createElement("div", {
      className: "form-avatar"
    }, React.createElement(SocialAvatar, {
      avatar: manager.profile.avatar,
      name: managerName,
      size: "50"
    }), React.createElement("div", {
      className: "title"
    }, this.props.userId === manager._id ? React.createElement(Translate, {
      value: getTranslation("form.manager.youAre")
    }) : managerName === " " ? manager.emails && manager.emails[0] ? manager.emails[0].address : managerName : managerName, hasInvite || !isOwner ? "" : React.createElement(OverlayTrigger, {
      placement: "top",
      overlay: this.tooltipContent(React.createElement(Translate, {
        value: getTranslation("form.manager.edit")
      }))
    }, React.createElement("i", {
      className: "icon wb-edit",
      "aria-hidden": "true",
      onClick: this.toggleMagangerForm
    })))))), this.state.form && React.createElement("div", null, React.createElement("div", {
      className: "col-md-8"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("form.invite.title")
    })), React.createElement("input", {
      type: "text",
      className: "form-control",
      placeholder: I18n.t(getTranslation("form.invite.placeholder")),
      onChange: this.updateEmail
    }))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("a", {
      className: "btn btn-primary",
      style: {
        marginTop: "24px"
      },
      onClick: this.sendInvite
    }, React.createElement(Translate, {
      value: getTranslation("form.invite.send")
    })))));
  }

}

module.exportDefault(AccountInvite);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"share.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/invite/share.jsx                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/objectSpread"));

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let swal;
module.watch(require("sweetalert2"), {
  default(v) {
    swal = v;
  }

}, 1);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 2);
let Tooltip, OverlayTrigger;
module.watch(require("react-bootstrap"), {
  Tooltip(v) {
    Tooltip = v;
  },

  OverlayTrigger(v) {
    OverlayTrigger = v;
  }

}, 3);
let SocialAvatar;
module.watch(require("../../../../core/ui/components/social-avatar"), {
  default(v) {
    SocialAvatar = v;
  }

}, 4);
let notie;
module.watch(require("notie"), {
  default(v) {
    notie = v;
  }

}, 5);

let getTranslation = key => {
  return "Accounts.edit.tabs.settings.form.invite." + key;
};

class AccountShares extends React.Component {
  constructor() {
    super();
    this.state = {
      email: ""
    };
    this.updateEmail = this.updateEmail.bind(this);
    this.sendInvite = this.sendInvite.bind(this);
    this.deleteInvite = this.deleteInvite.bind(this);
    this.removeShare = this.removeShare.bind(this);
  }

  removeShare(share) {
    let component = this;
    return function () {
      swal({
        title: I18n.t(getTranslation("sent.delete.confirm.title")),
        text: I18n.t(getTranslation("sent.delete.confirm.description")),
        type: "warning",
        showCancelButton: true,
        confirmButtonText: I18n.t(getTranslation("sent.delete.confirm.confirm")),
        cancelButtonText: I18n.t(getTranslation("sent.delete.confirm.cancel"))
      }).then(function () {
        let newShares = [...component.props.input.value];
        let indexOf = newShares.indexOf(share);
        newShares.splice(indexOf, 1);
        component.props.input.onChange(newShares);
      });
    };
  }

  updateEmail(e) {
    let val = e.target.value;
    let newState = (0, _objectSpread2.default)({}, this.state);
    newState.email = val;
    this.setState(newState);
  }

  validateEmail(email) {
    let re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    return re.exec(email) ? true : false;
  }

  sendInvite() {
    let {
      email
    } = this.state;

    if (!this.validateEmail(email)) {
      notie.alert(3, I18n.t(getTranslation("error.invalid")), 3);
      return;
    }

    if (email === Meteor.user().emails[0].address) {
      notie.alert(3, I18n.t(getTranslation("error.self")), 3);
      return;
    }

    let newInvite = {
      email,
      account: this.props.account._id,
      type: "share"
    };
    let component = this;
    Meteor.call("account-invite-create", newInvite, function (err, res) {
      if (err) {
        if (err.error === 500) {
          err.error = I18n.t(getTranslation("error.failed"));
        }

        notie.alert(3, err.reason || err.error, 3);
        return;
      }

      component.props.refetch({
        accountID: component.props.account._id
      });
      component.setState({
        form: false,
        email: ''
      });
      swal(I18n.t(getTranslation("success.title")), I18n.t(getTranslation("success.description")), "success");
    });
  }

  deleteInvite(invite) {
    let component = this;
    let {
      campaign
    } = this.props;
    return function () {
      swal({
        title: I18n.t(getTranslation("sent.delete.confirm.title")),
        text: I18n.t(getTranslation("sent.delete.confirm.description")),
        type: "warning",
        showCancelButton: true,
        confirmButtonText: I18n.t(getTranslation("sent.delete.confirm.confirm")),
        cancelButtonText: I18n.t(getTranslation("sent.delete.confirm.cancel"))
      }).then(function () {
        Meteor.call("campaign-invite-delete", invite, campaign._id, function (err, res) {
          if (err) {
            notie.alert(3, I18n.t(getTranslation("sent.error")), 3);
            return;
          }

          component.props.refetch({
            accountID: campaign._id
          });
          notie.alert(1, I18n.t(getTranslation("sent.success")), 3);
        });
      });
    };
  }

  tooltipContent(content) {
    return React.createElement(Tooltip, {
      id: "tooltip_content"
    }, content);
  }

  render() {
    let {
      invites,
      campaign,
      isOwner,
      isManager
    } = this.props;

    if (!isManager && !isOwner) {
      return React.createElement("div", null);
    }

    let shares = this.props.input.value;
    return React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-12"
    }, React.createElement("h5", null, React.createElement(Translate, {
      value: getTranslation("shares.title")
    }))), React.createElement("div", {
      className: "col-md-9"
    }, shares && campaign.shares.length !== 0 && React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "sharedWith"
    }, React.createElement(Translate, {
      value: getTranslation("shares.current")
    })), React.createElement("ul", {
      className: "list-group list-group-full"
    }, shares.map(account => React.createElement("li", {
      className: "list-group-item",
      key: account._id
    }, React.createElement("div", {
      className: "media"
    }, React.createElement("div", {
      className: "media-left"
    }, React.createElement("a", {
      className: "avatar",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      className: "img-fluid",
      src: account.profile.avatar,
      alt: "..."
    }))), React.createElement("div", {
      className: "media-body"
    }, React.createElement("h4", {
      className: "media-heading"
    }, (account.profile.name || "") + " " + (account.profile.lastName || "")), React.createElement("small", null, account.emails ? account.emails[0].address : "-")), React.createElement("div", {
      className: "media-right"
    }, React.createElement(OverlayTrigger, {
      placement: "top",
      overlay: this.tooltipContent(React.createElement(Translate, {
        value: getTranslation("sent.delete.label")
      }))
    }, React.createElement("i", {
      className: "icon wb-trash",
      "aria-hidden": "true",
      onClick: this.removeShare(account)
    })))))))), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-8"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("shares.form.title")
    })), React.createElement("input", {
      type: "text",
      className: "form-control",
      placeholder: I18n.t(getTranslation("placeholder")),
      value: this.state.email,
      onChange: this.updateEmail
    }))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("a", {
      className: "btn btn-primary",
      style: {
        marginTop: "24px"
      },
      onClick: this.sendInvite
    }, React.createElement(Translate, {
      value: getTranslation("send")
    }))))), invites && invites.length > 0 && React.createElement("div", {
      className: "col-md-8"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "sharedWith"
    }, React.createElement(Translate, {
      value: getTranslation("shares.pending")
    })), invites.map(invite => React.createElement("div", {
      className: "input-group",
      key: invite._id,
      style: {
        marginBottom: "25px"
      }
    }, React.createElement("input", {
      type: "text",
      className: "form-control",
      defaultValue: invite.email + " (" + I18n.t(getTranslation("status." + invite.status)) + ")",
      disabled: true
    }), React.createElement("span", {
      className: "input-group-btn"
    }, React.createElement("a", {
      className: "btn btn-primary"
    }, React.createElement(OverlayTrigger, {
      placement: "top",
      overlay: this.tooltipContent(React.createElement(Translate, {
        value: getTranslation("sent.delete.label")
      }))
    }, React.createElement("i", {
      className: "icon wb-trash",
      "aria-hidden": "true",
      onClick: this.deleteInvite(invite)
    })))))))));
  }

}

module.exportDefault(AccountShares);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"status.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/invite/status.jsx                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 1);
let Tooltip, OverlayTrigger;
module.watch(require("react-bootstrap"), {
  Tooltip(v) {
    Tooltip = v;
  },

  OverlayTrigger(v) {
    OverlayTrigger = v;
  }

}, 2);
let SocialAvatar;
module.watch(require("../../../../core/ui/components/social-avatar"), {
  default(v) {
    SocialAvatar = v;
  }

}, 3);
let AccountInvite;
module.watch(require("./invite"), {
  default(v) {
    AccountInvite = v;
  }

}, 4);
let swal;
module.watch(require("sweetalert2"), {
  default(v) {
    swal = v;
  }

}, 5);
let notie;
module.watch(require("notie"), {
  default(v) {
    notie = v;
  }

}, 6);

let getTranslation = key => {
  return "Accounts.edit.tabs.settings.form.invite.sent." + key;
};

class InviteStatus extends React.Component {
  constructor() {
    super();
    this.deleteInvite = this.deleteInvite.bind(this);
  }

  deleteInvite() {
    let component = this;
    let {
      invite,
      campaign
    } = this.props;
    swal({
      title: I18n.t(getTranslation("delete.confirm.title")),
      text: I18n.t(getTranslation("delete.confirm.description")),
      type: "warning",
      showCancelButton: true,
      confirmButtonText: I18n.t(getTranslation("delete.confirm.confirm")),
      cancelButtonText: I18n.t(getTranslation("delete.confirm.cancel"))
    }).then(function () {
      Meteor.call("account-invite-delete", invite, campaign._id, function (err, res) {
        if (err) {
          notie.alert(3, I18n.t(getTranslation("error")), 3);
          return;
        }

        component.props.refetch({
          accountID: campaign._id
        });
        notie.alert(1, I18n.t(getTranslation("success")), 3);
      });
    });
  }

  tooltipContent(content) {
    return React.createElement(Tooltip, {
      id: "tooltip_content"
    }, content);
  }

  render() {
    let {
      manager,
      userId,
      campaign,
      invite,
      refetch,
      isOwner
    } = this.props;
    return React.createElement("div", {
      className: "row"
    }, React.createElement(AccountInvite, {
      manager: manager,
      userId: userId,
      campaign: campaign,
      hasInvite: invite ? true : false,
      refetch: refetch,
      isOwner: isOwner
    }), invite && React.createElement("div", {
      className: "col-md-12"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("label")
    })), React.createElement("div", {
      className: "input-group"
    }, React.createElement("input", {
      type: "text",
      className: "form-control",
      defaultValue: invite.email + " (" + I18n.t(getTranslation("status." + invite.status)) + ")",
      disabled: true
    }), React.createElement("span", {
      className: "input-group-btn"
    }, React.createElement("a", {
      className: "btn btn-primary"
    }, React.createElement(OverlayTrigger, {
      placement: "top",
      overlay: this.tooltipContent(React.createElement(Translate, {
        value: getTranslation("delete.label")
      }))
    }, React.createElement("i", {
      className: "icon wb-trash",
      "aria-hidden": "true",
      onClick: this.deleteInvite
    }))))))));
  }

}

module.exportDefault(InviteStatus);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"summary":{"brands.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/summary/brands.jsx                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 1);
let SocialAvatar;
module.watch(require("../../../../core/ui/components/social-avatar"), {
  default(v) {
    SocialAvatar = v;
  }

}, 2);

class Brands extends React.Component {
  render() {
    let getTranslation = key => {
      return "Campaigns.edit.tabs.summary." + key;
    };

    let {
      brands,
      tilte
    } = this.props;
    return React.createElement("div", {
      className: "brands-list"
    }, tilte === false && React.createElement("h4", null, "Brnads"), React.createElement("div", {
      className: "list"
    }, brands.map(b => React.createElement(SocialAvatar, {
      key: b._id,
      avatar: b.information.avatar,
      network: b.network,
      name: b.information.name,
      size: "50",
      type: b.information.type
    }))));
  }

}

module.exportDefault(Brands);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"calendar.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/summary/calendar.jsx                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 1);
let CalendarContainer;
module.watch(require("../../containers/campaign-calendar"), {
  default(v) {
    CalendarContainer = v;
  }

}, 2);

class Calendar extends React.Component {
  render() {
    let getTranslation = key => {
      return "Campaigns.edit.tabs.summary." + key;
    };

    let {
      campaignID
    } = this.props;
    return React.createElement("div", null, React.createElement(CalendarContainer, {
      campaignID: campaignID,
      controls: false
    }));
  }

}

module.exportDefault(Calendar);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"conquer.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/summary/conquer.jsx                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let $;
module.watch(require("jquery"), {
  default(v) {
    $ = v;
  }

}, 1);
let countries = [{
  "code": "BD",
  "name": "Bangladesh"
}, {
  "code": "BE",
  "name": "Belgium"
}, {
  "code": "BF",
  "name": "Burkina Faso"
}, {
  "code": "BG",
  "name": "Bulgaria"
}, {
  "code": "BA",
  "name": "Bosnia and Herz."
}, {
  "code": "BN",
  "name": "Brunei"
}, {
  "code": "BO",
  "name": "Bolivia"
}, {
  "code": "JP",
  "name": "Japan"
}, {
  "code": "BI",
  "name": "Burundi"
}, {
  "code": "BJ",
  "name": "Benin"
}, {
  "code": "BT",
  "name": "Bhutan"
}, {
  "code": "JM",
  "name": "Jamaica"
}, {
  "code": "BW",
  "name": "Botswana"
}, {
  "code": "BR",
  "name": "Brazil"
}, {
  "code": "BS",
  "name": "Bahamas"
}, {
  "code": "BY",
  "name": "Belarus"
}, {
  "code": "BZ",
  "name": "Belize"
}, {
  "code": "RU",
  "name": "Russia"
}, {
  "code": "RW",
  "name": "Rwanda"
}, {
  "code": "RS",
  "name": "Serbia"
}, {
  "code": "TL",
  "name": "Timor-Leste"
}, {
  "code": "TM",
  "name": "Turkmenistan"
}, {
  "code": "TJ",
  "name": "Tajikistan"
}, {
  "code": "RO",
  "name": "Romania"
}, {
  "code": "GW",
  "name": "Guinea-Bissau"
}, {
  "code": "GT",
  "name": "Guatemala"
}, {
  "code": "GR",
  "name": "Greece"
}, {
  "code": "GQ",
  "name": "Eq. Guinea"
}, {
  "code": "GY",
  "name": "Guyana"
}, {
  "code": "GE",
  "name": "Georgia"
}, {
  "code": "GB",
  "name": "United Kingdom"
}, {
  "code": "GA",
  "name": "Gabon"
}, {
  "code": "GN",
  "name": "Guinea"
}, {
  "code": "GM",
  "name": "Gambia"
}, {
  "code": "GL",
  "name": "Greenland"
}, {
  "code": "GH",
  "name": "Ghana"
}, {
  "code": "OM",
  "name": "Oman"
}, {
  "code": "TN",
  "name": "Tunisia"
}, {
  "code": "JO",
  "name": "Jordan"
}, {
  "code": "HR",
  "name": "Croatia"
}, {
  "code": "HT",
  "name": "Haiti"
}, {
  "code": "HU",
  "name": "Hungary"
}, {
  "code": "HN",
  "name": "Honduras"
}, {
  "code": "PR",
  "name": "Puerto Rico"
}, {
  "code": "PS",
  "name": "Palestine"
}, {
  "code": "PT",
  "name": "Portugal"
}, {
  "code": "PY",
  "name": "Paraguay"
}, {
  "code": "PA",
  "name": "Panama"
}, {
  "code": "PG",
  "name": "Papua New Guinea"
}, {
  "code": "PE",
  "name": "Peru"
}, {
  "code": "PK",
  "name": "Pakistan"
}, {
  "code": "PH",
  "name": "Philippines"
}, {
  "code": "PL",
  "name": "Poland"
}, {
  "code": "ZM",
  "name": "Zambia"
}, {
  "code": "EH",
  "name": "W. Sahara"
}, {
  "code": "EE",
  "name": "Estonia"
}, {
  "code": "EG",
  "name": "Egypt"
}, {
  "code": "ZA",
  "name": "South Africa"
}, {
  "code": "EC",
  "name": "Ecuador"
}, {
  "code": "IT",
  "name": "Italy"
}, {
  "code": "VN",
  "name": "Vietnam"
}, {
  "code": "SB",
  "name": "Solomon Is."
}, {
  "code": "ET",
  "name": "Ethiopia"
}, {
  "code": "SO",
  "name": "Somalia"
}, {
  "code": "ZW",
  "name": "Zimbabwe"
}, {
  "code": "ES",
  "name": "Spain"
}, {
  "code": "ER",
  "name": "Eritrea"
}, {
  "code": "ME",
  "name": "Montenegro"
}, {
  "code": "MD",
  "name": "Moldova"
}, {
  "code": "MG",
  "name": "Madagascar"
}, {
  "code": "MA",
  "name": "Morocco"
}, {
  "code": "UZ",
  "name": "Uzbekistan"
}, {
  "code": "MM",
  "name": "Myanmar"
}, {
  "code": "ML",
  "name": "Mali"
}, {
  "code": "MN",
  "name": "Mongolia"
}, {
  "code": "MK",
  "name": "Macedonia"
}, {
  "code": "MW",
  "name": "Malawi"
}, {
  "code": "MR",
  "name": "Mauritania"
}, {
  "code": "UG",
  "name": "Uganda"
}, {
  "code": "MY",
  "name": "Malaysia"
}, {
  "code": "MX",
  "name": "Mexico"
}, {
  "code": "IL",
  "name": "Israel"
}, {
  "code": "FR",
  "name": "France"
}, {
  "code": "XS",
  "name": "Somaliland"
}, {
  "code": "FI",
  "name": "Finland"
}, {
  "code": "FJ",
  "name": "Fiji"
}, {
  "code": "FK",
  "name": "Falkland Is."
}, {
  "code": "NI",
  "name": "Nicaragua"
}, {
  "code": "NL",
  "name": "Netherlands"
}, {
  "code": "NO",
  "name": "Norway"
}, {
  "code": "NA",
  "name": "Namibia"
}, {
  "code": "VU",
  "name": "Vanuatu"
}, {
  "code": "NC",
  "name": "New Caledonia"
}, {
  "code": "NE",
  "name": "Niger"
}, {
  "code": "NG",
  "name": "Nigeria"
}, {
  "code": "NZ",
  "name": "New Zealand"
}, {
  "code": "NP",
  "name": "Nepal"
}, {
  "code": "XK",
  "name": "Kosovo"
}, {
  "code": "CI",
  "name": "Côte d'Ivoire"
}, {
  "code": "CH",
  "name": "Switzerland"
}, {
  "code": "CO",
  "name": "Colombia"
}, {
  "code": "CN",
  "name": "China"
}, {
  "code": "CM",
  "name": "Cameroon"
}, {
  "code": "CL",
  "name": "Chile"
}, {
  "code": "XC",
  "name": "N. Cyprus"
}, {
  "code": "CA",
  "name": "Canada"
}, {
  "code": "CG",
  "name": "Congo"
}, {
  "code": "CF",
  "name": "Central African Rep."
}, {
  "code": "CD",
  "name": "Dem. Rep. Congo"
}, {
  "code": "CZ",
  "name": "Czech Rep."
}, {
  "code": "CY",
  "name": "Cyprus"
}, {
  "code": "CR",
  "name": "Costa Rica"
}, {
  "code": "CU",
  "name": "Cuba"
}, {
  "code": "SZ",
  "name": "Swaziland"
}, {
  "code": "SY",
  "name": "Syria"
}, {
  "code": "KG",
  "name": "Kyrgyzstan"
}, {
  "code": "KE",
  "name": "Kenya"
}, {
  "code": "SS",
  "name": "S. Sudan"
}, {
  "code": "SR",
  "name": "Suriname"
}, {
  "code": "KH",
  "name": "Cambodia"
}, {
  "code": "SV",
  "name": "El Salvador"
}, {
  "code": "SK",
  "name": "Slovakia"
}, {
  "code": "KR",
  "name": "Korea"
}, {
  "code": "SI",
  "name": "Slovenia"
}, {
  "code": "KP",
  "name": "Dem. Rep. Korea"
}, {
  "code": "KW",
  "name": "Kuwait"
}, {
  "code": "SN",
  "name": "Senegal"
}, {
  "code": "SL",
  "name": "Sierra Leone"
}, {
  "code": "KZ",
  "name": "Kazakhstan"
}, {
  "code": "SA",
  "name": "Saudi Arabia"
}, {
  "code": "SE",
  "name": "Sweden"
}, {
  "code": "SD",
  "name": "Sudan"
}, {
  "code": "DO",
  "name": "Dominican Rep."
}, {
  "code": "DJ",
  "name": "Djibouti"
}, {
  "code": "DK",
  "name": "Denmark"
}, {
  "code": "DE",
  "name": "Germany"
}, {
  "code": "YE",
  "name": "Yemen"
}, {
  "code": "DZ",
  "name": "Algeria"
}, {
  "code": "US",
  "name": "United States"
}, {
  "code": "UY",
  "name": "Uruguay"
}, {
  "code": "LB",
  "name": "Lebanon"
}, {
  "code": "LA",
  "name": "Lao PDR"
}, {
  "code": "TW",
  "name": "Taiwan"
}, {
  "code": "TT",
  "name": "Trinidad and Tobago"
}, {
  "code": "TR",
  "name": "Turkey"
}, {
  "code": "LK",
  "name": "Sri Lanka"
}, {
  "code": "LV",
  "name": "Latvia"
}, {
  "code": "LT",
  "name": "Lithuania"
}, {
  "code": "LU",
  "name": "Luxembourg"
}, {
  "code": "LR",
  "name": "Liberia"
}, {
  "code": "LS",
  "name": "Lesotho"
}, {
  "code": "TH",
  "name": "Thailand"
}, {
  "code": "TF",
  "name": "Fr. S. Antarctic Lands"
}, {
  "code": "TG",
  "name": "Togo"
}, {
  "code": "TD",
  "name": "Chad"
}, {
  "code": "LY",
  "name": "Libya"
}, {
  "code": "AE",
  "name": "United Arab Emirates"
}, {
  "code": "VE",
  "name": "Venezuela"
}, {
  "code": "AF",
  "name": "Afghanistan"
}, {
  "code": "IQ",
  "name": "Iraq"
}, {
  "code": "IS",
  "name": "Iceland"
}, {
  "code": "IR",
  "name": "Iran"
}, {
  "code": "AM",
  "name": "Armenia"
}, {
  "code": "AL",
  "name": "Albania"
}, {
  "code": "AO",
  "name": "Angola"
}, {
  "code": "AR",
  "name": "Argentina"
}, {
  "code": "AU",
  "name": "Australia"
}, {
  "code": "AT",
  "name": "Austria"
}, {
  "code": "IN",
  "name": "India"
}, {
  "code": "TZ",
  "name": "Tanzania"
}, {
  "code": "AZ",
  "name": "Azerbaijan"
}, {
  "code": "IE",
  "name": "Ireland"
}, {
  "code": "ID",
  "name": "Indonesia"
}, {
  "code": "UA",
  "name": "Ukraine"
}, {
  "code": "QA",
  "name": "Qatar"
}, {
  "code": "MZ",
  "name": "Mozambique"
}];

class TargetConquer extends React.Component {
  constructor() {
    super();
    this.state = {
      mounted: false
    };
    this.renderMap = this.renderMap.bind(this);
  }

  renderMap() {
    let component = this;
    let {
      readOnly
    } = this.props;
    let codes = [];

    if (component.props.input.value && Array.isArray(component.props.input.value) && typeof component.props.input.value[0] === "string") {
      codes = component.props.input.value.map(code => {
        return countries.filter(c => c.name === code)[0].code;
      });
    }

    setTimeout(function () {
      let domMap = $("#world-map-campaign-summary");
      let map = domMap.vectorMap({
        map: 'world_mill',
        regionsSelectable: !readOnly,
        selectedRegions: codes,
        regionStyle: {
          initial: {
            fill: '#ccc'
          },
          selected: {
            fill: '#c28c58'
          }
        },
        onRegionClick: function (e, code, d, f) {
          //console.log("REGION CLICK",code);
          //console.log("MAP_DATA", map, mapObject);
          if (!!readOnly) return;
          setTimeout(function () {
            let regions = mapObject.getSelectedRegions();
            let value = regions.map(r => {
              return countries.filter(c => c.code === r)[0].name;
            }); //console.log("MAP VALUES",value);

            component.props.input.onChange(value);
            setTimeout(() => $(".jvectormap-tip").remove(), 100);
          }, 100); //component.props.close();

          let mapObject = domMap.vectorMap('get', 'mapObject');
        }
      });
    }, 1000);
  }

  componentDidMount() {
    this.renderMap();
  }

  render() {
    return React.createElement("div", null, React.createElement("h4", null, this.props.title), React.createElement("div", {
      id: "world-map-campaign-summary",
      className: "vectorMap",
      style: {
        width: " 100%",
        height: " 400px"
      }
    }));
  }

}

module.exportDefault(TargetConquer);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"people.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/summary/people.jsx                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 1);
let SocialAvatar;
module.watch(require("../../../../core/ui/components/social-avatar"), {
  default(v) {
    SocialAvatar = v;
  }

}, 2);

class People extends React.Component {
  render() {
    let getTranslation = key => {
      return "Campaigns.edit.tabs.summary." + key;
    };

    let {
      owner,
      manager
    } = this.props;
    let titleStyle = {
      width: "70px",
      transform: "translateY(10px)"
    };
    return React.createElement("div", null, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("h4", null, React.createElement(Translate, {
      value: getTranslation("owner")
    })), React.createElement("div", {
      className: "form-avatar"
    }, React.createElement(SocialAvatar, {
      avatar: owner.profile.avatar,
      name: (owner.profile.name || "") + " " + (owner.profile.lastName || ""),
      size: "50"
    }), React.createElement("div", {
      className: "title",
      style: titleStyle
    }, (owner.profile.name || "") + " " + (owner.profile.lastName || "")))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("h4", null, React.createElement(Translate, {
      value: getTranslation("manager")
    })), React.createElement("div", {
      className: "form-avatar"
    }, React.createElement(SocialAvatar, {
      avatar: manager.profile.avatar,
      name: (manager.profile.name || "") + " " + (manager.profile.lastName || ""),
      size: "50"
    }), React.createElement("div", {
      className: "title",
      style: titleStyle
    }, (manager.profile.name || "") + " " + (manager.profile.lastName || ""))))));
  }

}

module.exportDefault(People);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"calendar.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/calendar.jsx                                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 1);
let Calendar;
module.watch(require("../../../agenda/ui/components/calendar"), {
  default(v) {
    Calendar = v;
  }

}, 2);
let CalendarFilter;
module.watch(require("./calendar/filters"), {
  default(v) {
    CalendarFilter = v;
  }

}, 3);

class CampaignCalendar extends React.Component {
  render() {
    let {
      events,
      filters,
      update,
      controls
    } = this.props;

    let getTranslation = key => {
      return "Campaigns.edit.tabs.calendar." + key;
    };

    return React.createElement("div", null, React.createElement("div", null, controls && false && React.createElement("div", null, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-12"
    }, React.createElement("a", {
      className: "btn btn-primary pull-right"
    }, React.createElement(Translate, {
      value: getTranslation("button")
    })))), React.createElement("div", {
      className: "spacer-30"
    })), React.createElement("div", {
      className: "row"
    }, controls && React.createElement("div", {
      className: "col-md-4"
    }, React.createElement(CalendarFilter, {
      filters: filters,
      update: update
    })), React.createElement("div", {
      className: controls !== false ? "col-md-8" : "col-md-12"
    }, React.createElement(Calendar, {
      events: events
    })))));
  }

} //TODO: ADD SCHEDULE POST


module.exportDefault(CampaignCalendar);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"campaign-create.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/campaign-create.jsx                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 1);
let Field, reduxForm;
module.watch(require("redux-form"), {
  Field(v) {
    Field = v;
  },

  reduxForm(v) {
    reduxForm = v;
  }

}, 2);
let AccountSearch;
module.watch(require("../../../core/ui/components/forms/account-search"), {
  default(v) {
    AccountSearch = v;
  }

}, 3);
let InputDate;
module.watch(require("../../../core/ui/components/forms/input-date"), {
  default(v) {
    InputDate = v;
  }

}, 4);

class NewCampaign extends React.Component {
  render() {
    const {
      handleSubmit,
      pristine,
      reset,
      submitting
    } = this.props;

    let getTranslation = key => {
      return "Campaigns.new." + key;
    };

    return React.createElement("form", {
      onSubmit: handleSubmit
    }, React.createElement("h2", null, React.createElement(Translate, {
      value: getTranslation("title")
    })), React.createElement("div", {
      className: "padding-20"
    }, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("name")
    })), React.createElement(Field, {
      component: "input",
      name: "name",
      className: "form-control"
    }))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("brands")
    })), React.createElement(Field, {
      component: AccountSearch,
      name: "brands",
      data: this.props.data,
      multi: true,
      className: "test-class"
    })))), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("dateStart")
    })), React.createElement(Field, {
      component: InputDate,
      name: "dateStart",
      minDate: moment()
    }))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("dateEnd")
    })), React.createElement(Field, {
      component: InputDate,
      name: "dateEnd",
      minDate: moment()
    })))), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-12"
    }, React.createElement("button", {
      type: "submit",
      className: "btn btn-primary pull-right"
    }, React.createElement(Translate, {
      value: getTranslation("button")
    }))))));
  }

}

NewCampaign = reduxForm({
  form: 'campaign-create'
})(NewCampaign);
module.exportDefault(NewCampaign);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"campaign-header.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/campaign-header.jsx                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 1);
let connect;
module.watch(require("react-redux"), {
  connect(v) {
    connect = v;
  }

}, 2);
let Field;
module.watch(require("redux-form"), {
  Field(v) {
    Field = v;
  }

}, 3);
let InputFileUpload;
module.watch(require("../../../core/ui/components/forms/input-file-upload"), {
  default(v) {
    InputFileUpload = v;
  }

}, 4);
let SocialAvatar;
module.watch(require("../../../core/ui/components/social-avatar"), {
  default(v) {
    SocialAvatar = v;
  }

}, 5);

class Header extends React.Component {
  render() {
    let getTranslation = key => {
      return "Campaigns.edit.tabs.information." + key;
    };

    let information = this.props.form.values.information;
    return React.createElement("div", {
      className: "campaign-information"
    }, React.createElement("div", {
      className: "header"
    }, React.createElement(Field, {
      component: InputFileUpload,
      name: "information.cover",
      content: React.createElement("div", {
        className: "back",
        style: {
          background: information.cover ? "url(" + information.cover + ")" : ""
        }
      }, React.createElement("div", {
        className: "add " + (information.cover ? "hidden" : "")
      }, React.createElement("i", {
        className: "icon wb-plus",
        "aria-hidden": "true"
      }))),
      uploader: "campaign-image-upload",
      settings: {
        multiple: false,
        maxSize: 3 * 1024 * 1024,
        className: "cover",
        activeClassName: "drop-in",
        accept: "image/png, image/jpeg, image/gif"
      }
    }), React.createElement(Field, {
      component: InputFileUpload,
      name: "information.profile",
      content: React.createElement("div", {
        className: "back",
        style: {
          background: information.profile ? "url(" + information.profile + ")" : ""
        }
      }, React.createElement("div", {
        className: "add " + (information.profile ? "hidden" : "")
      }, React.createElement("i", {
        className: "icon wb-plus",
        "aria-hidden": "true"
      }))),
      uploader: "campaign-image-upload",
      settings: {
        multiple: false,
        maxSize: 3 * 1024 * 1024,
        className: "profile",
        activeClassName: "drop-in",
        accept: "image/png, image/jpeg, image/gif"
      }
    }), React.createElement("div", {
      className: "name"
    }, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-7"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "campaignName"
    }, React.createElement(Translate, {
      value: getTranslation("form.name")
    })), React.createElement("p", {
      className: "form-control-static"
    }, information.name || "-"))), React.createElement("div", {
      className: "col-md-5 align-center"
    }, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "campaignName"
    }, React.createElement(Translate, {
      value: getTranslation("form.dateStart")
    })), React.createElement("p", {
      className: "form-control-static"
    }, moment(new Date(information.dateStart)).format("DD/MM/YYYY")))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "campaignName"
    }, React.createElement(Translate, {
      value: getTranslation("form.dateEnd")
    })), React.createElement("p", {
      className: "form-control-static"
    }, moment(new Date(information.dateEnd)).format("DD/MM/YYYY"))))))))));
  }

}

module.exportDefault(connect(state => {
  return {
    form: state.form["campaign-edit"]
  };
})(Header));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"campaign-types.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/campaign-types.jsx                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 1);
let ContentSoon;
module.watch(require("../../../core/ui/components/content-soon"), {
  default(v) {
    ContentSoon = v;
  }

}, 2);
let Link;
module.watch(require("react-router"), {
  Link(v) {
    Link = v;
  }

}, 3);

class CampaignTypes extends React.Component {
  render() {
    let getTranslation = key => {
      return "Campaigns.list.types." + key;
    };

    return React.createElement("div", {
      className: "row campaign-types"
    }, React.createElement("div", {
      className: "col-md-12"
    }, React.createElement("div", {
      className: "pull-right"
    }, React.createElement(Link, {
      to: "/campaigns/own",
      activeClassName: "active"
    }, React.createElement(Translate, {
      value: getTranslation("created")
    })), React.createElement(Link, {
      to: "/campaigns/part-of",
      activeClassName: "active"
    }, React.createElement(Translate, {
      value: getTranslation("partOf")
    })))));
  }

}

module.exportDefault(CampaignTypes);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"gallery.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/gallery.jsx                                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let InputGallery;
module.watch(require("../../../core/ui/components/forms/input-gallery"), {
  default(v) {
    InputGallery = v;
  }

}, 1);
let InputVideoGallery;
module.watch(require("../../../core/ui/components/forms/input-video-gallery"), {
  default(v) {
    InputVideoGallery = v;
  }

}, 2);
let Field;
module.watch(require("redux-form"), {
  Field(v) {
    Field = v;
  }

}, 3);

class Gallery extends React.Component {
  render() {
    let getTranslationImages = key => {
      return "Campaigns.edit.tabs.gallery.images." + key;
    };

    let getTranslationVideos = key => {
      return "Campaigns.edit.tabs.gallery.videos." + key;
    };

    return React.createElement("div", {
      className: "content-padding-30"
    }, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement(Field, {
      component: InputGallery,
      value: "gallery",
      getTranslation: getTranslationImages,
      name: "images",
      uploader: "campaign-image-upload"
    })), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement(Field, {
      component: InputVideoGallery,
      value: "gallery",
      getTranslation: getTranslationVideos,
      name: "videos"
    }))));
  }

}

module.exportDefault(Gallery);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"information.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/information.jsx                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Field, FormSection;
module.watch(require("redux-form"), {
  Field(v) {
    Field = v;
  },

  FormSection(v) {
    FormSection = v;
  }

}, 1);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 2);
let AccountSearch;
module.watch(require("../../../core/ui/components/forms/account-search"), {
  default(v) {
    AccountSearch = v;
  }

}, 3);
let InputDate;
module.watch(require("../../../core/ui/components/forms/input-date"), {
  default(v) {
    InputDate = v;
  }

}, 4);
let InputConquer;
module.watch(require("./information/input-conquer"), {
  default(v) {
    InputConquer = v;
  }

}, 5);
let SocialAvatar;
module.watch(require("../../../core/ui/components/social-avatar"), {
  default(v) {
    SocialAvatar = v;
  }

}, 6);
let TargetObjectives;
module.watch(require("./information/objectives"), {
  default(v) {
    TargetObjectives = v;
  }

}, 7);
let ObjectiveProposal;
module.watch(require("./information/objective-proposal"), {
  default(v) {
    ObjectiveProposal = v;
  }

}, 8);
let CampaignHeader;
module.watch(require("./campaign-header"), {
  default(v) {
    CampaignHeader = v;
  }

}, 9);

class Information extends React.Component {
  constructor() {
    super();
    this.handleTags = this.handleTags.bind(this);
  }

  handleTags(tags) {
    return tags.map(tag => tag.split("#").length > 1 ? tag : "#" + tag);
  }

  render() {
    let getTranslation = key => {
      return "Campaigns.edit.tabs.information." + key;
    };

    let {
      owner,
      campaign
    } = this.props;
    return React.createElement("div", null, React.createElement(CampaignHeader, null), React.createElement("div", {
      className: "content-padding-30"
    }, React.createElement("h4", null, React.createElement(Translate, {
      value: getTranslation("instructions")
    })), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "campaignName"
    }, React.createElement(Translate, {
      value: getTranslation("form.name")
    })), React.createElement(Field, {
      component: "input",
      name: "name",
      className: "form-control"
    }))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "campaignName"
    }, React.createElement(Translate, {
      value: getTranslation("form.owner")
    })), React.createElement("div", {
      className: "form-control social-avatar-form"
    }, React.createElement(SocialAvatar, {
      avatar: owner.profile.avatar,
      name: (owner.profile.name || "") + " " + (owner.profile.lastName || "")
    }), React.createElement("span", null, (owner.profile.name || "") + " " + (owner.profile.lastName || ""))))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "campaignName"
    }, React.createElement(Translate, {
      value: getTranslation("form.brand")
    })), React.createElement(Field, {
      component: AccountSearch,
      name: "brands",
      data: this.props.ownAccounts,
      multi: true,
      className: "test-class"
    })))), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "campaignName"
    }, React.createElement(Translate, {
      value: getTranslation("form.conquer")
    })), React.createElement(Field, {
      component: InputConquer,
      name: "conquer",
      className: "form-control"
    }))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "campaignName"
    }, React.createElement(Translate, {
      value: getTranslation("form.dateStart")
    })), React.createElement(Field, {
      component: InputDate,
      name: "dateStart"
    }))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "campaignName"
    }, React.createElement(Translate, {
      value: getTranslation("form.dateEnd")
    })), React.createElement(Field, {
      component: InputDate,
      name: "dateEnd"
    })))), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-8"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "exampleInputEmail1"
    }, React.createElement(Translate, {
      value: getTranslation("form.description.label")
    })), React.createElement(Field, {
      component: "textarea",
      name: "description",
      rows: 3,
      className: "form-control"
    }))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "campaignName"
    }, React.createElement(Translate, {
      value: getTranslation("form.url")
    })), React.createElement(Field, {
      component: "input",
      name: "url",
      className: "form-control"
    })))), React.createElement("h4", null, React.createElement(Translate, {
      value: getTranslation("form.objectives.title")
    })), React.createElement(FormSection, {
      name: "objectives"
    }, React.createElement(TargetObjectives, null))));
  }

}

module.exportDefault(Information);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"invites.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/invites.jsx                                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/objectSpread"));

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let reduxForm;
module.watch(require("redux-form"), {
  reduxForm(v) {
    reduxForm = v;
  }

}, 1);
let connect;
module.watch(require("react-redux"), {
  connect(v) {
    connect = v;
  }

}, 2);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 3);
let Saving;
module.watch(require("../../../core/ui/components/saving"), {
  default(v) {
    Saving = v;
  }

}, 4);
let CampaignInvitesHeader;
module.watch(require("./invites/header"), {
  default(v) {
    CampaignInvitesHeader = v;
  }

}, 5);
let CampaignListView;
module.watch(require("./invites/list-view/container"), {
  default(v) {
    CampaignListView = v;
  }

}, 6);
let CampaignTableView;
module.watch(require("./invites/table-view/container"), {
  default(v) {
    CampaignTableView = v;
  }

}, 7);
let notie;
module.watch(require("notie"), {
  default(v) {
    notie = v;
  }

}, 8);
let ListEmpty;
module.watch(require("../../../core/ui/components/list-empty"), {
  default(v) {
    ListEmpty = v;
  }

}, 9);

let getTranslation = key => {
  return "Campaigns.edit.tabs.invites." + key;
};

class CampaignInvites extends React.Component {
  constructor() {
    super();
    this.state = {
      invites: [],
      actionIndex: 0,
      currentOption: null,
      saving: "saved",
      view: "list"
    };
    this.deleteInvite = this.deleteInvite.bind(this);
    this.createInvite = this.createInvite.bind(this);
    this.updateInvite = this.updateInvite.bind(this);
    this.goToAction = this.goToAction.bind(this);
    this.updateInviteValue = this.updateInviteValue.bind(this);
    this.toggleNetwork = this.toggleNetwork.bind(this);
    this.addInviteOption = this.addInviteOption.bind(this);
    this.saveInvites = this.saveInvites.bind(this);
    this.deleteInviteOption = this.deleteInviteOption.bind(this);
    this.updateViewType = this.updateViewType.bind(this);
  }

  toggleNetwork(network) {
    let component = this;
    return function () {
      let newState = (0, _objectSpread2.default)({}, component.state);
      newState.invites = [...newState.invites];
      let newInvite = (0, _objectSpread2.default)({}, newState.invites[newState.actionIndex]);
      newInvite.networks = (0, _objectSpread2.default)({}, newInvite.networks);
      newInvite.networks[network] = !newInvite.networks[network];
      newState.invites.splice(newState.actionIndex, 1, newInvite);
      component.setState(newState);
    };
  }

  goToAction(action) {
    let component = this;
    return function (e) {
      let val;

      if (action === "goTo") {
        val = Number(e.target.value);
      }

      if (action === "previous") {
        if (component.state.actionIndex === 0) return;
        val = component.state.actionIndex - 1;
      }

      if (action === "next") {
        if (component.state.actionIndex === component.props.invites.length - 1) return;
        val = component.state.actionIndex + 1;
      }

      component.setState({
        actionIndex: val
      });
    };
  }

  updateInviteValue(key) {
    let component = this;
    return function (e) {
      let val = e.target ? e.target.value : e;
      let newState = (0, _objectSpread2.default)({}, component.state);
      let newInvite = (0, _objectSpread2.default)({}, newState.invites[newState.actionIndex]);
      newInvite[key] = val; //console.log("NEW_INVITE",key,val);

      newState.invites = [...newState.invites];
      newState.invites.splice(newState.actionIndex, 1, newInvite); //console.log("updateInviteValue", newState);

      component.setState(newState);
    };
  }

  addInviteOption(option) {
    let newState = (0, _objectSpread2.default)({}, this.state);
    let newInvite = (0, _objectSpread2.default)({}, newState.invites[newState.actionIndex]);
    newInvite.options = [...newInvite.options];
    newInvite.options.push(option);
    newState.invites.splice(newState.actionIndex, 1, newInvite); //console.log("ADD_INVITE_OPTION", newState);

    this.setState(newState);
  }

  deleteInviteOption(option) {
    delete option.index;
    let newState = (0, _objectSpread2.default)({}, this.state);
    let newInvite = (0, _objectSpread2.default)({}, newState.invites[newState.actionIndex]);
    newInvite.options = [...newInvite.options];
    option = newInvite.options.filter(o => o.date === option.date && o.media === option.media && o.message === option.message)[0];
    let indexOfOption = newInvite.options.indexOf(option);
    newInvite.options.splice(indexOfOption, 1);
    console.log("DELETE_OPTION", newInvite, option);
    this.setState(newState);
  }

  createInvite() {
    let component = this;
    let {
      campaign
    } = this.props;
    let data = {
      campaign
    };
    Meteor.call("invite-create", data, function (err, res) {
      if (err) {
        if (err.error === 500) {
          err.error = I18n.t(getTranslation("messages.error"));
        } //console.log("ERROR", err);


        notie.alert(3, err.reason || err.error, 3);
        return;
      }

      notie.alert(1, I18n.t(getTranslation("messages.saved")), 3);
      setTimeout(function () {
        console.log("SERVER_CRETE_INVITE_RESPONSE", res);
        component.props.refetch({
          date: new Date()
        });
      }, 100);
    });
  }

  updateInvite(data) {
    //console.log("CREATE!");
    let component = this;
    Meteor.call("invite-update", data, function (err, res) {
      if (err) {
        if (err.error === 500) {
          err.error = I18n.t(getTranslation("messages.error"));
        } //console.log("ERROR", err);


        notie.alert(3, err.reason || err.error, 3);
        return;
      }

      notie.alert(1, I18n.t(getTranslation("messages.updated")), 3); //component.props.refetch();

      component.closeModal(); //console.log("SERVER_UPDATE_INVITE_RESPONSE", res);
    });
  }

  deleteInvite(element) {
    let component = this;
    return function () {
      swal({
        title: 'Are you sure?',
        text: "You won't be able to revert this!",
        type: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, delete it!'
      }).then(function () {
        let newState = component.state;
        newState.invites = [...newState.invites];
        let indexOfMatch = null;
        let match = newState.invites.filter((t, i) => {
          if (t._id === element._id) {
            indexOfMatch = i;
          }

          return t._id === element._id;
        })[0];

        if (match) {
          newState.invites.splice(indexOfMatch, 1);
          component.setState(newState);
          component.save();
        } else {
          console.error("SOMETHING WENT WRONG");
        }
      });
    };
  }

  saveInvites(silent) {
    let component = this;
    let {
      campaign
    } = this.props;
    let invites = this.state.invites;
    this.saving = true;

    if (silent && typeof silent === "boolean") {
      silent = true;
    } else {
      silent = false;
    }

    if (silent && this.savedData === JSON.stringify(invites)) {
      this.setState({
        saving: "saved"
      });
      return;
    }

    this.setState({
      saving: "saving"
    });
    this.savedData = JSON.stringify(invites);
    Meteor.call("invite-save-multiple", invites, campaign._id, function (err, res) {
      if (err) {
        if (err.error === 500) {
          err.error = I18n.t(getTranslation("messages.error"));
        } //console.log("ERROR", err);


        notie.alert(3, err.reason || err.error, 3);
        return;
      }

      component.setState({
        saving: "saved"
      });

      if (!silent) {
        notie.alert(1, I18n.t(getTranslation("messages.saved")), 3);
      }
      /*
      component.props.refetch({
          "campaignID": component.props.campaign._id
      });
      * */
      //console.log("SERVER_SAVE_INVITE_RESPONSE", res);

    });
  }

  componentWillMount() {
    let {
      invites
    } = this.props; //console.log("WILL_MOINT", invites);

    this.setState({
      invites: [...invites]
    });
  }

  componentWillReceiveProps() {
    let {
      invites
    } = this.props; // this.setState({invites:[...invites]})
  }

  componentDidUpdate() {
    let {
      invites
    } = this.props;

    if (this.state.invites.length === 0 || invites.length > this.state.invites.length || this.saving) {
      //this.setState({invites:[...invites]});
      this.saving = false;
    }
  }

  componentDidMount() {
    this.savedData = JSON.stringify(this.props.invites);
    let component = this;
    this.saveInterval = setInterval(function () {
      if (component.state.invites && component.state.invites.length > 0) {
        component.saveInvites(true);
      }
    }, 5000);
  }

  componentWillUnmount() {
    clearInterval(this.saveInterval);
  }

  updateViewType(view) {
    let component = this;
    return function () {
      component.setState({
        view
      });
    };
  }

  render() {
    let {
      campaign,
      accounts,
      teamAttacks
    } = this.props;
    let {
      invites,
      view,
      actionIndex
    } = this.state;
    let {
      updateViewType,
      toggleNetwork,
      updateInviteValue,
      addInviteOption,
      goToAction,
      createInvite,
      saveInvites,
      deleteInviteOption
    } = this;
    let currentInvite = this.state.invites[actionIndex];

    if (invites.length === 0) {
      return React.createElement(ListEmpty, {
        message: React.createElement(Translate, {
          value: getTranslation("empty.message")
        }),
        button: React.createElement(Translate, {
          value: getTranslation("empty.button")
        }),
        callback: createInvite
      });
    }

    return React.createElement("div", {
      className: "content-padding-30 invite-actions"
    }, React.createElement(CampaignInvitesHeader, {
      campaign: campaign,
      updateViewType: updateViewType
    }), React.createElement("div", {
      className: "spacer-20"
    }), view === "list" ? React.createElement(CampaignListView, {
      invites: invites,
      accounts: accounts,
      teamAttacks: teamAttacks,
      currentInvite: currentInvite,
      actionIndex: actionIndex,
      toggleNetwork: toggleNetwork,
      updateInviteValue: updateInviteValue,
      addInviteOption: addInviteOption,
      deleteInviteOption: deleteInviteOption,
      goToAction: goToAction,
      createInvite: createInvite,
      saveInvites: saveInvites
    }) : React.createElement(CampaignTableView, {
      invites: invites,
      hasTotal: true,
      campaign: campaign
    }), React.createElement(Saving, {
      state: this.state.saving
    }));
  }

}

CampaignInvites = reduxForm({
  form: 'invite-action'
})(CampaignInvites);
module.exportDefault(connect(state => {
  return {
    campaign: state.form["campaign-edit"].values
  };
})(CampaignInvites));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"list-table.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/list-table.jsx                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 1);
let BootstrapTable, TableHeaderColumn;
module.watch(require("react-bootstrap-table"), {
  BootstrapTable(v) {
    BootstrapTable = v;
  },

  TableHeaderColumn(v) {
    TableHeaderColumn = v;
  }

}, 2);
let Link;
module.watch(require("react-router"), {
  Link(v) {
    Link = v;
  }

}, 3);
let SocialAvatar;
module.watch(require("../../../core/ui/components/social-avatar"), {
  default(v) {
    SocialAvatar = v;
  }

}, 4);

let _;

module.watch(require("lodash"), {
  default(v) {
    _ = v;
  }

}, 5);
let Modal;
module.watch(require("react-modal"), {
  default(v) {
    Modal = v;
  }

}, 6);

let getTranslation = key => {
  return "Campaigns.list." + key;
};

const renderLink = function (cell, row) {
  // String example
  return React.createElement(Link, {
    to: "/campaigns/edit/" + cell
  }, React.createElement("i", {
    className: "icon wb-edit",
    "aria-hidden": "true"
  }));
};

const renderStatus = function (cell, row) {
  return React.createElement("span", {
    className: "ibol-label ".concat(cell)
  });
};

const renderUser = function (cell, row) {
  // String example
  //console.log("RENDER_USER", cell);
  if (!cell || !cell.profile) return "-";
  return React.createElement(Link, {
    to: "/campaigns/edit/" + row._id
  }, React.createElement(SocialAvatar, {
    avatar: cell.profile.avatar,
    name: cell.profile.name,
    size: "50"
  }), React.createElement("div", {
    className: "icon-label"
  }, cell.profile.name + " " + cell.profile.lastName));
};

const renderDate = function (cell, row) {
  // String example
  return moment(new Date(cell)).format("DD/MM/YY");
};

const renderActions = function (cell, row) {
  // String example
  return React.createElement("div", null, "-");
};

const renderBudget = function (cell, row) {
  // String example
  return React.createElement("div", null, "-");
};

const renderNetworks = function (cell, row) {
  // String example
  return React.createElement("div", null, _.uniq(cell.map(m => m.network)).map((a, i) => React.createElement("div", {
    className: "icon",
    key: i
  }, React.createElement("i", {
    className: "social-icon " + a
  }))));
};

const renderInfluencers = function (cell, row) {
  // String example
  return React.createElement("div", null, "-");
};

const renderCampaign = function (cell, row) {
  // String example
  return React.createElement(Link, {
    to: "/campaigns/edit/" + row._id
  }, cell);
};

const renderShares = function (cell, row) {
  // String example
  cell = cell || [];

  if (cell.length === 0) {
    return React.createElement("div", null, "-");
  }

  return React.createElement("div", null, cell.map(u => "".concat(u.profile.name, " ").concat(u.profile.lastName)).join(","));
};

class ListTable extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      sortName: undefined,
      sortOrder: undefined,
      modalIsOpen: false,
      list: []
    };
    this.openModal = this.openModal.bind(this);
    this.closeModal = this.closeModal.bind(this);
    this.onSortChange = this.onSortChange.bind(this);
  }

  openModal(list) {
    let component = this;
    return function () {
      component.setState({
        modalIsOpen: true,
        list
      });
    };
  }

  closeModal() {
    this.setState({
      modalIsOpen: false
    });
  }

  onSortChange(sortName, sortOrder) {
    this.setState({
      sortName,
      sortOrder
    });
  }

  render() {
    const options = {
      sortName: this.state.sortName,
      sortOrder: this.state.sortOrder,
      onSortChange: this.onSortChange,
      noDataText: I18n.t(getTranslation("table.empty"))
    };
    let {
      openModal
    } = this;

    const renderList = function (cell, row) {
      return React.createElement("div", {
        onClick: openModal(cell)
      }, cell.map((a, i) => React.createElement("div", {
        className: "icon",
        key: i
      }, React.createElement(SocialAvatar, {
        avatar: a.information.avatar,
        network: a.network,
        name: a.information.name,
        size: "75",
        type: a.information.type
      }))));
    };

    const list = this.props.data.map((c, i) => Object.assign({
      _id: c._id,
      status: c.status,
      manager: c.manager,
      owner: c.owner,
      brands: c.brands
    }, c.information, {
      index: i + 1
    }));
    return React.createElement("div", null, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-12"
    }, React.createElement("button", {
      className: "btn btn-primary table-button",
      onClick: this.props.new
    }, React.createElement(Translate, {
      value: "Campaigns.list.new"
    })))), React.createElement("div", {
      className: "ibol-table"
    }, React.createElement(BootstrapTable, {
      data: list,
      options: options,
      pagination: true,
      search: true,
      searchPlaceholder: I18n.t(getTranslation("table.search"))
    }, React.createElement(TableHeaderColumn, {
      isKey: true,
      dataField: "index",
      dataAlign: "center",
      width: "60px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.index")
    })), React.createElement(TableHeaderColumn, {
      dataField: "status",
      dataFormat: renderStatus,
      dataAlign: "center",
      width: "80px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.status")
    })), React.createElement(TableHeaderColumn, {
      dataField: "brands",
      dataFormat: renderNetworks,
      dataSort: true,
      width: "280px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.networks")
    })), React.createElement(TableHeaderColumn, {
      dataField: "name",
      dataFormat: renderCampaign,
      dataSort: true,
      width: "250px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.campaigns")
    })), React.createElement(TableHeaderColumn, {
      dataField: "brands",
      dataFormat: renderList,
      dataSort: true,
      width: "250px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.brands")
    })), React.createElement(TableHeaderColumn, {
      dataField: "owner",
      dataFormat: renderUser,
      width: "200px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.owner")
    })), React.createElement(TableHeaderColumn, {
      dataField: "manager",
      dataFormat: renderUser,
      width: "200px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.holder")
    })), React.createElement(TableHeaderColumn, {
      dataField: "shares",
      dataFormat: renderShares,
      width: "200px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.shares")
    })), React.createElement(TableHeaderColumn, {
      dataField: "name",
      dataFormat: renderInfluencers,
      dataSort: true,
      width: "250px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.influencers")
    })), React.createElement(TableHeaderColumn, {
      dataField: "name",
      dataFormat: renderActions,
      dataSort: true,
      width: "150px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.myActions")
    })), React.createElement(TableHeaderColumn, {
      dataField: "dateStart",
      dataSort: true,
      dataFormat: renderDate,
      dataAlign: "center",
      width: "180px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.dateStart")
    })), React.createElement(TableHeaderColumn, {
      dataField: "dateEnd",
      dataSort: true,
      dataFormat: renderDate,
      dataAlign: "center",
      width: "180px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.dateEnd")
    })), React.createElement(TableHeaderColumn, {
      dataField: "name",
      dataFormat: renderBudget,
      dataSort: true,
      width: "200px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.budget")
    })))), React.createElement(Modal, {
      isOpen: this.state.modalIsOpen,
      onRequestClose: this.closeModal,
      className: "app-modal",
      contentLabel: "Accounts List"
    }, React.createElement("button", {
      className: "close",
      onClick: this.closeModal
    }, React.createElement("i", {
      className: "icon wb-close-mini",
      "aria-hidden": "true"
    })), React.createElement("h3", null, React.createElement(Translate, {
      value: getTranslation("table.headers.brands")
    })), React.createElement("div", {
      style: {
        padding: 20
      }
    }, this.state.list.map((a, i) => React.createElement("div", {
      className: "icon",
      key: i,
      style: {
        margin: 15
      }
    }, React.createElement(SocialAvatar, {
      avatar: a.information.avatar,
      network: a.network,
      name: a.information.name,
      size: "75",
      type: a.information.type
    }))))));
  }

}

module.exportDefault(ListTable);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"settings.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/settings.jsx                                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let swal;
module.watch(require("sweetalert2"), {
  default(v) {
    swal = v;
  }

}, 1);
let withRouter;
module.watch(require("react-router"), {
  withRouter(v) {
    withRouter = v;
  }

}, 2);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 3);
let CampaignHeader;
module.watch(require("./campaign-header"), {
  default(v) {
    CampaignHeader = v;
  }

}, 4);
let AccountInviteContainer;
module.watch(require("../containers/campaign-user-invite"), {
  default(v) {
    AccountInviteContainer = v;
  }

}, 5);
let PropTypes;
module.watch(require("prop-types"), {
  default(v) {
    PropTypes = v;
  }

}, 6);
let SocialAvatar;
module.watch(require("../../../core/ui/components/social-avatar"), {
  default(v) {
    SocialAvatar = v;
  }

}, 7);
let Field, FormSection;
module.watch(require("redux-form"), {
  Field(v) {
    Field = v;
  },

  FormSection(v) {
    FormSection = v;
  }

}, 8);
let AccountSearch;
module.watch(require("../../../core/ui/components/forms/account-search"), {
  default(v) {
    AccountSearch = v;
  }

}, 9);

let getTranslation = key => {
  return "Campaign.edit.tabs.settings." + key;
};

class CampaignSettings extends React.Component {
  constructor() {
    super();
    this.state = {
      manager: {
        form: false
      }
    };
    this.confirmDelete = this.confirmDelete.bind(this);
  }

  confirmDelete() {
    let component = this;
    swal({
      title: I18n.t(getTranslation("delete.main.title")),
      text: I18n.t(getTranslation("delete.main.description")),
      type: "warning",
      showCancelButton: true,
      confirmButtonText: I18n.t(getTranslation("delete.main.confirm")),
      cancelButtonText: I18n.t(getTranslation("delete.main.cancel"))
    }).then(function () {
      Meteor.call("campaign-mark-delete", component.props.account, function (err, res) {
        //console.log("DELETE_ACCOUNT", err,res);
        if (err) {
          swal(I18n.t(getTranslation("delete.error.title")), I18n.t(getTranslation("delete.error.description")), "error");
          return;
        }

        swal(I18n.t(getTranslation("delete.done.title")), I18n.t(getTranslation("delete.done.description")), "success");
        component.props.router.push("/campaigns");
      });
    });
  }

  render() {
    let manager = this.props.campaign.manager;
    let owner = this.props.campaign.owner;
    let {
      campaign,
      userId
    } = this.props;
    let ownerName = (owner.profile.name || "") + " " + (owner.profile.lastName || "");
    return React.createElement("div", null, React.createElement(CampaignHeader, null), React.createElement("div", {
      className: "content-padding-30 account-settings"
    }, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("h4", null, "Titular"), React.createElement("div", {
      className: "form-avatar"
    }, React.createElement(SocialAvatar, {
      avatar: owner.profile.avatar,
      name: ownerName,
      size: "50"
    }), React.createElement("div", {
      className: "title"
    }, ownerName)), React.createElement("div", {
      className: "spacer-20"
    }), React.createElement(AccountInviteContainer, {
      manager: manager,
      userId: userId,
      campaign: campaign
    })), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement(FormSection, {
      name: "information"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "campaignName"
    }, React.createElement(Translate, {
      value: "Campaigns.edit.tabs.information.form.brand"
    })), React.createElement(Field, {
      component: AccountSearch,
      name: "brands",
      data: this.props.ownAccounts,
      multi: true,
      className: "test-class"
    }))))), React.createElement("div", {
      className: "row margin-top-40"
    }, React.createElement("div", {
      className: "col-md-12"
    }, React.createElement("a", {
      className: "btn btn-danger pull-right",
      onClick: this.confirmDelete
    }, React.createElement(Translate, {
      value: getTranslation("form.deleteAccount")
    }))))));
  }

}

CampaignSettings.propTypes = {
  router: PropTypes.shape({
    push: PropTypes.func.isRequired
  }).isRequired
};
module.exportDefault(withRouter(CampaignSettings));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"status.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/status.jsx                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 1);
let ContentSoon;
module.watch(require("../../../core/ui/components/content-soon"), {
  default(v) {
    ContentSoon = v;
  }

}, 2);

class Status extends React.Component {
  render() {
    let getTranslation = key => {
      return "Campaigns.edit.tabs.status.soon." + key;
    };

    return React.createElement("div", {
      className: "content-padding-30"
    }, React.createElement(ContentSoon, {
      content: React.createElement(Translate, {
        value: getTranslation("title")
      })
    }));
  }

}

module.exportDefault(Status);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"summary.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/summary.jsx                                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 1);
let connect;
module.watch(require("react-redux"), {
  connect(v) {
    connect = v;
  }

}, 2);
let FormSection, Field;
module.watch(require("redux-form"), {
  FormSection(v) {
    FormSection = v;
  },

  Field(v) {
    Field = v;
  }

}, 3);
let TargetObjectives;
module.watch(require("./information/objectives"), {
  default(v) {
    TargetObjectives = v;
  }

}, 4);
let CampaignHeader;
module.watch(require("./campaign-header"), {
  default(v) {
    CampaignHeader = v;
  }

}, 5);
let People;
module.watch(require("../components/summary/people"), {
  default(v) {
    People = v;
  }

}, 6);
let Brands;
module.watch(require("../components/summary/brands"), {
  default(v) {
    Brands = v;
  }

}, 7);
let Conquer;
module.watch(require("../components/summary/conquer"), {
  default(v) {
    Conquer = v;
  }

}, 8);
let Calendar;
module.watch(require("../components/summary/calendar"), {
  default(v) {
    Calendar = v;
  }

}, 9);
let InvitesSummary;
module.watch(require("../components/invites/table-view/container"), {
  default(v) {
    InvitesSummary = v;
  }

}, 10);

class Summary extends React.Component {
  render() {
    let getTranslation = key => {
      return "Campaigns.edit.tabs.information." + key;
    };

    let {
      campaign,
      invites
    } = this.props;
    let campaignID = campaign._id;
    let values = this.props.form.values;
    let information = values.information;
    return React.createElement("div", {
      className: "campaign-summary"
    }, React.createElement(CampaignHeader, null), React.createElement("div", {
      className: "content-padding-30"
    }, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-body slim"
    }, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement(People, {
      owner: values.owner,
      manager: values.manager
    })), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement(Brands, {
      brands: information.brands
    }))), React.createElement("div", {
      className: "row description"
    }, React.createElement("div", {
      className: "col-md-12"
    }, React.createElement("h4", null, React.createElement(Translate, {
      value: getTranslation("form.description.label")
    })), React.createElement("div", {
      className: "form-group"
    }, React.createElement("p", {
      className: "form-control-static"
    }, information.description || "-")))), React.createElement(FormSection, {
      name: "information"
    }, React.createElement(Field, {
      component: Conquer,
      name: "conquer",
      className: "form-control",
      title: "Conquer"
    }))))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "panel campaign-actions"
    }, React.createElement("div", {
      className: "panel-body slim"
    }, React.createElement(InvitesSummary, {
      invites: invites,
      hasAccounts: true,
      isSummary: true,
      campaign: campaign
    }), React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-body slim"
    }, React.createElement(Calendar, {
      campaignID: campaignID
    }))))))), React.createElement("div", {
      className: "row padding-20"
    }, React.createElement("h4", null, React.createElement(Translate, {
      value: getTranslation("form.objectives.title")
    })), React.createElement(FormSection, {
      name: "information"
    }, React.createElement(FormSection, {
      name: "objectives"
    }, React.createElement(TargetObjectives, {
      padding: true
    })))), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-12"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "campaignName"
    }, React.createElement(Translate, {
      value: getTranslation("form.url")
    })), React.createElement(Field, {
      component: "input",
      name: "url",
      className: "form-control"
    }))))));
  }

}

module.exportDefault(connect(state => {
  return {
    form: state.form["campaign-edit"]
  };
})(Summary));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"tabs.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/components/tabs.jsx                                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Tabs, Tab;
module.watch(require("react-bootstrap"), {
  Tabs(v) {
    Tabs = v;
  },

  Tab(v) {
    Tab = v;
  }

}, 1);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 2);
let FormSection, Field;
module.watch(require("redux-form"), {
  FormSection(v) {
    FormSection = v;
  },

  Field(v) {
    Field = v;
  }

}, 3);
let CampaignCalendar;
module.watch(require("../containers/campaign-calendar"), {
  default(v) {
    CampaignCalendar = v;
  }

}, 4);
let Gallery;
module.watch(require("../components/gallery"), {
  default(v) {
    Gallery = v;
  }

}, 5);
let Information;
module.watch(require("../components/information"), {
  default(v) {
    Information = v;
  }

}, 6);
let Status;
module.watch(require("../components/status"), {
  default(v) {
    Status = v;
  }

}, 7);
let Settings;
module.watch(require("../components/settings"), {
  default(v) {
    Settings = v;
  }

}, 8);
let Summary;
module.watch(require("../components/summary"), {
  default(v) {
    Summary = v;
  }

}, 9);
let CampaignInvites;
module.watch(require("../containers/campaign-invites"), {
  default(v) {
    CampaignInvites = v;
  }

}, 10);

class TabsContainer extends React.Component {
  render() {
    const {
      campaign,
      refetch,
      invitesCampaign,
      teamAttacksOwn,
      accounts
    } = this.props;
    return React.createElement("div", null, React.createElement("div", {
      className: "nav-tabs-horizontal"
    }, React.createElement(Tabs, {
      defaultActiveKey: "summary",
      id: "uncontrolled-tab-example",
      bsStyle: "tabs"
    }, React.createElement(Tab, {
      eventKey: "summary",
      title: React.createElement(Translate, {
        value: "Campaigns.edit.tabs.summary.title"
      })
    }, React.createElement(Summary, {
      campaign: campaign,
      invites: invitesCampaign
    })), React.createElement(Tab, {
      eventKey: "settings",
      title: React.createElement(Translate, {
        value: "Campaigns.edit.tabs.settings.title"
      })
    }, React.createElement(Settings, {
      campaign: campaign,
      userId: this.props.userId,
      ownAccounts: this.props.ownAccounts
    })), React.createElement(Tab, {
      eventKey: "information",
      title: React.createElement(Translate, {
        value: "Campaigns.edit.tabs.information.title"
      })
    }, React.createElement(FormSection, {
      name: "information"
    }, React.createElement(Information, {
      campaign: campaign,
      ownAccounts: this.props.ownAccounts,
      owner: this.props.campaign.owner
    }))), React.createElement(Tab, {
      eventKey: "status",
      title: React.createElement(Translate, {
        value: "Campaigns.edit.tabs.status.title"
      })
    }, React.createElement(Status, null)), React.createElement(Tab, {
      eventKey: "invites",
      title: React.createElement(Translate, {
        value: "Campaigns.edit.tabs.invites.title"
      })
    }, React.createElement(CampaignInvites, {
      campaign: campaign
    })), React.createElement(Tab, {
      eventKey: "calendar",
      title: React.createElement(Translate, {
        value: "Campaigns.edit.tabs.calendar.title"
      })
    }, React.createElement(CampaignCalendar, {
      campaignID: this.props.campaignID,
      controls: true
    })), React.createElement(Tab, {
      eventKey: "gallery",
      title: React.createElement(Translate, {
        value: "Campaigns.edit.tabs.gallery.title"
      })
    }, React.createElement(FormSection, {
      name: "gallery"
    }, React.createElement(Gallery, null))))));
  }

}

module.exportDefault(TabsContainer);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"containers":{"campaign-calendar.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/containers/campaign-calendar.jsx                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/taggedTemplateLiteral"));

function _templateObject() {
  const data = (0, _taggedTemplateLiteral2.default)(["\nquery($campaignID: String, $all: Boolean, $draft: Boolean, $pending: Boolean, $sent: Boolean, $accepted: Boolean,  $rejected: Boolean, $scheduled: Boolean, $published: Boolean, $completed: Boolean, $cancelled: Boolean, $suspended: Boolean){\n  eventsCampaign(campaignID: $campaignID, all: $all, draft: $draft, pending: $pending, sent: $sent, accepted: $accepted,  rejected: $rejected, scheduled: $scheduled, published: $published, completed: $completed, cancelled: $cancelled, suspended: $suspended){\n    _id,\n    type,\n    start,\n    end,\n    title,\n    allDay,\n    preview,\n    network\n  }\n}\n"]);

  _templateObject = function () {
    return data;
  };

  return data;
}

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let graphql;
module.watch(require("react-apollo"), {
  graphql(v) {
    graphql = v;
  }

}, 1);
let Loading;
module.watch(require("../../../core/ui/components/loading"), {
  default(v) {
    Loading = v;
  }

}, 2);
let CampaignCalendar;
module.watch(require("../components/calendar"), {
  default(v) {
    CampaignCalendar = v;
  }

}, 3);
let createContainer;
module.watch(require("meteor/react-meteor-data"), {
  createContainer(v) {
    createContainer = v;
  }

}, 4);
let gql;
module.watch(require("graphql-tag"), {
  default(v) {
    gql = v;
  }

}, 5);
let notie;
module.watch(require("notie"), {
  default(v) {
    notie = v;
  }

}, 6);

class CampaignCalendarContainer extends React.Component {
  constructor() {
    super();
    this.state = {
      "all": true,
      "draft": true,
      "pending": true,
      "sent": true,
      "accepted": true,
      "rejected": true,
      "scheduled": true,
      "published": true,
      "completed": true,
      "cancelled": true,
      "suspended": true
    };
    this.filterUpdate = this.filterUpdate.bind(this);
  }

  filterUpdate(key) {
    let component = this;
    return function (e) {
      let newState = component.state;

      if (key === "all" && !newState[key] === true) {
        if (!newState[key]) {
          Object.keys(newState).forEach(oKey => {
            newState[oKey] = true;
          });
        }
      } else {
        newState[key] = !newState[key];
      }

      component.setState(newState);
      component.props.refetch(newState);
    };
  }

  render() {
    return React.createElement("div", {
      className: "content-padding-30"
    }, this.props.loading ? React.createElement(Loading, null) : React.createElement(CampaignCalendar, {
      events: this.props.eventsCampaign,
      refetch: this.props.refetch,
      filters: this.state,
      update: this.filterUpdate,
      controls: this.props.controls
    }));
  }

}

const QUERY = gql(_templateObject());
const withData = graphql(QUERY, {
  props: (_ref) => {
    let {
      data: {
        error,
        loading,
        eventsCampaign,
        refetch
      }
    } = _ref;
    if (loading) return {
      loading: true
    };
    if (error) return {
      hasErrors: true
    };
    return {
      loading,
      eventsCampaign,
      refetch
    };
  },
  options: ownProps => ({
    pollInterval: 150000,
    variables: {
      "campaignID": ownProps.campaignID,
      "all": true,
      "draft": true,
      "pending": true,
      "sent": true,
      "accepted": true,
      "rejected": true,
      "scheduled": true,
      "published": true,
      "completed": true,
      "cancelled": true,
      "suspended": true
    }
  })
});
const CampaignCalendarContainerWithData = withData(CampaignCalendarContainer);
module.exportDefault(CampaignCalendarContainerWithData);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"campaign-create.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/containers/campaign-create.jsx                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/taggedTemplateLiteral"));

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/objectSpread"));

function _templateObject() {
  const data = (0, _taggedTemplateLiteral2.default)(["\n    query {\n      accounts{\n        _id,\n        network,\n        groups,     \n       information{\n          name,\n          lastName,\n          avatar\n        }\n      }\n    }\n"]);

  _templateObject = function () {
    return data;
  };

  return data;
}

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let graphql;
module.watch(require("react-apollo"), {
  graphql(v) {
    graphql = v;
  }

}, 1);
let withRouter;
module.watch(require("react-router"), {
  withRouter(v) {
    withRouter = v;
  }

}, 2);
let Loading;
module.watch(require("../../../core/ui/components/loading"), {
  default(v) {
    Loading = v;
  }

}, 3);
let CampaignCreate;
module.watch(require("../components/campaign-create"), {
  default(v) {
    CampaignCreate = v;
  }

}, 4);
let createContainer;
module.watch(require("meteor/react-meteor-data"), {
  createContainer(v) {
    createContainer = v;
  }

}, 5);
let gql;
module.watch(require("graphql-tag"), {
  default(v) {
    gql = v;
  }

}, 6);
let notie;
module.watch(require("notie"), {
  default(v) {
    notie = v;
  }

}, 7);
let PropTypes;
module.watch(require("prop-types"), {
  default(v) {
    PropTypes = v;
  }

}, 8);

class CampaignCreateContainer extends React.Component {
  constructor() {
    super();
    this.saveCampaign = this.saveCampaign.bind(this);
  }

  saveCampaign(data) {
    //console.log("SAVE_CAMPAIGN",data);
    //TODO: Validate Data
    let component = this;
    data = (0, _objectSpread2.default)({}, data); //data.dateStart=data.dateStart.toDate();
    //data.dateEnd=data.dateEnd.toDate();

    Meteor.call("campaigns-crate", data, function (err, res) {
      if (err) {
        if (err.error === 500) {
          err.error = "Failed to create post.";
        } //console.log("ERROR",err);


        notie.alert(3, err.reason || err.error, 3);
        return;
      }

      component.props.close();
      component.props.reloadCampaigns().then(function () {
        //console.log("SERVER_SAVE_CAMPAIGN_RESPONSE",res,component);
        component.props.router.push("/campaigns/edit/" + res);
      });
    });
  }

  render() {
    return React.createElement("div", null, this.props.loading ? React.createElement(Loading, null) : React.createElement(CampaignCreate, {
      data: this.props.accounts,
      refetch: this.props.refetch,
      onSubmit: this.saveCampaign,
      loading: this.props.loading
    }));
  }

}

const QUERY = gql(_templateObject());
let CampaignCreateContainerWithRouter = withRouter(CampaignCreateContainer);
CampaignCreateContainer.propTypes = {
  router: PropTypes.shape({
    push: PropTypes.func.isRequired
  }).isRequired
};
const withData = graphql(QUERY, {
  props: (_ref) => {
    let {
      data: {
        error,
        loading,
        accounts,
        refetch
      }
    } = _ref;
    if (loading) return {
      loading: true
    };
    if (error) return {
      hasErrors: true
    };
    return {
      loading,
      accounts,
      refetch
    };
  },
  options: ownProps => ({
    pollInterval: 150000,
    variables: {
      query: ""
    }
  })
});
const CampaignCreateContainerWithData = withData(CampaignCreateContainerWithRouter);
module.exportDefault(CampaignCreateContainerWithData);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"campaign-invites.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/containers/campaign-invites.jsx                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/taggedTemplateLiteral"));

function _templateObject() {
  const data = (0, _taggedTemplateLiteral2.default)(["\nquery($campaignID: String!){\ninvitesCampaign(campaignID: $campaignID){\n        _id,\n        type,\n        status,\n        deadline,\n        budget,\n        useHashtag,\n        invitesAvailable,\n        networks{\n            facebook,\n            twitter,\n            instagram\n        }\n        options{\n            message,\n            media,\n            date,\n            quantity\n        },\n        influencers {\n            _id\n            network\n            information{\n                name,\n                lastName,\n                avatar\n            }\n        },\n        teamAttacks{\n          name,\n          _id,\n          members{\n             _id\n            network\n            information{\n                name,\n                lastName,\n                avatar\n            }\n            pricing{\n                post\n                share\n                partnership\n                ambassador,\n                profilePicture,\n                coverPhoto,\n                noPostHour,\n                noPostDay,\n            }\n          }\n        },\n    }\n    accounts{\n        _id,\n        network,\n        information{\n            name,\n            lastName,\n            avatar\n        },\n    }\n    teamAttacksOwn{\n        _id,\n        owner {\n            _id\n        },\n        members {\n            _id,\n            network,\n            information{\n                name,\n                lastName,\n                avatar,\n                birthDate,\n                country,\n                gender\n            }\n            pricing{\n                post\n                share\n                partnership\n                ambassador,\n                profilePicture,\n                coverPhoto,\n                noPostHour,\n                noPostDay,\n            }\n        },\n        name,\n        type\n    }\n}\n"]);

  _templateObject = function () {
    return data;
  };

  return data;
}

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let graphql;
module.watch(require("react-apollo"), {
  graphql(v) {
    graphql = v;
  }

}, 1);
let Loading;
module.watch(require("../../../core/ui/components/loading"), {
  default(v) {
    Loading = v;
  }

}, 2);
let CampaignInvitesList;
module.watch(require("../components/invites"), {
  default(v) {
    CampaignInvitesList = v;
  }

}, 3);
let createContainer;
module.watch(require("meteor/react-meteor-data"), {
  createContainer(v) {
    createContainer = v;
  }

}, 4);
let gql;
module.watch(require("graphql-tag"), {
  default(v) {
    gql = v;
  }

}, 5);

class CampaignInvitesContainer extends React.Component {
  render() {
    let {
      invitesCampaign,
      teamAttacksOwn,
      accounts,
      campaign,
      refetch
    } = this.props;
    return React.createElement("div", null, this.props.loading ? React.createElement(Loading, null) : React.createElement(CampaignInvitesList, {
      invites: invitesCampaign,
      accounts: accounts,
      teamAttacks: teamAttacksOwn,
      campaign: campaign,
      refetch: refetch
    }));
  }

}

const QUERY = gql(_templateObject());
const withData = graphql(QUERY, {
  props: (_ref) => {
    let {
      data: {
        error,
        loading,
        invitesCampaign,
        teamAttacksOwn,
        accounts,
        refetch
      }
    } = _ref;
    if (loading) return {
      loading: true
    };
    if (error) return {
      hasErrors: true
    };
    return {
      loading,
      invitesCampaign,
      accounts,
      teamAttacksOwn,
      refetch
    };
  },
  options: ownProps => ({
    pollInterval: 150000,
    variables: {
      "campaignID": ownProps.campaign._id
    }
  })
});
const CampaignInvitesContainerWithData = withData(CampaignInvitesContainer);
module.exportDefault(CampaignInvitesContainerWithData);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"campaign-team-attack.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/containers/campaign-team-attack.jsx                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/taggedTemplateLiteral"));

function _templateObject() {
  const data = (0, _taggedTemplateLiteral2.default)(["\nquery{\n  teamAttacksOwn{\n    _id,\n    owner {\n      _id\n    },\n    members {\n      _id,\n        network,\n        information{\n          name,\n          lastName,\n          avatar,\n          birthDate,\n          country,\n          gender\n        }\n    },\n    name\n  }\n}\n"]);

  _templateObject = function () {
    return data;
  };

  return data;
}

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let graphql;
module.watch(require("react-apollo"), {
  graphql(v) {
    graphql = v;
  }

}, 1);
let Loading;
module.watch(require("../../../core/ui/components/loading"), {
  default(v) {
    Loading = v;
  }

}, 2);
let InvitesEditModal;
module.watch(require("../components/invites/edit-modal"), {
  default(v) {
    InvitesEditModal = v;
  }

}, 3);
let createContainer;
module.watch(require("meteor/react-meteor-data"), {
  createContainer(v) {
    createContainer = v;
  }

}, 4);
let gql;
module.watch(require("graphql-tag"), {
  default(v) {
    gql = v;
  }

}, 5);

class CampaignTeamAttackContainer extends React.Component {
  render() {
    let {
      input,
      onSubmit,
      setEditType,
      closeModal,
      initialValues,
      campaign,
      teamAttacksOwn,
      refetch
    } = this.props;
    return React.createElement("div", null, this.props.loading ? React.createElement(Loading, null) : React.createElement(InvitesEditModal, {
      teamAttacks: teamAttacksOwn,
      input: input,
      refetch: refetch,
      onSubmit: onSubmit,
      setEditType: setEditType,
      close: closeModal,
      initialValues: initialValues,
      campaign: campaign
    }));
  }

}

const QUERY = gql(_templateObject());
const withData = graphql(QUERY, {
  props: (_ref) => {
    let {
      data: {
        error,
        loading,
        teamAttacksOwn,
        refetch
      }
    } = _ref;
    //console.log("ERROR_TEAMATTACK", error);
    if (loading) return {
      loading: true
    };
    if (error) return {
      hasErrors: true
    };
    return {
      loading,
      teamAttacksOwn,
      refetch
    };
  },
  options: ownProps => ({
    pollInterval: 150000
  })
});
const CampaignTeamAttackContainerWithData = withData(CampaignTeamAttackContainer);
module.exportDefault(CampaignTeamAttackContainerWithData);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"campaign-user-invite.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/containers/campaign-user-invite.jsx                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/taggedTemplateLiteral"));

function _templateObject() {
  const data = (0, _taggedTemplateLiteral2.default)(["\n    query($campaignID:String!){\n        campaignInvites(campaignID:$campaignID){\n            _id,\n            email,\n            sent,\n            status,\n            type,\n            owner {\n                _id,\n                profile{\n                    avatar,\n                    name,\n                    lastName\n                },\n                emails {\n                    address\n                }\n            },\n        }\n    }\n"]);

  _templateObject = function () {
    return data;
  };

  return data;
}

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let graphql;
module.watch(require("react-apollo"), {
  graphql(v) {
    graphql = v;
  }

}, 1);
let Field;
module.watch(require("redux-form"), {
  Field(v) {
    Field = v;
  }

}, 2);
let Loading;
module.watch(require("../../../core/ui/components/loading"), {
  default(v) {
    Loading = v;
  }

}, 3);
let InviteStatus;
module.watch(require("../components/invite/status"), {
  default(v) {
    InviteStatus = v;
  }

}, 4);
let AccountShares;
module.watch(require("../components/invite/share"), {
  default(v) {
    AccountShares = v;
  }

}, 5);
let createContainer;
module.watch(require("meteor/react-meteor-data"), {
  createContainer(v) {
    createContainer = v;
  }

}, 6);
let gql;
module.watch(require("graphql-tag"), {
  default(v) {
    gql = v;
  }

}, 7);
let notie;
module.watch(require("notie"), {
  default(v) {
    notie = v;
  }

}, 8);

class AccountInviteContainer extends React.Component {
  render() {
    let {
      manager,
      userId,
      campaign
    } = this.props;
    let managerInvite = null;
    let shareInvites = [];

    if (this.props.campaignInvites) {
      managerInvite = this.props.campaignInvites.filter(i => i.type === "manager")[0];
      shareInvites = this.props.campaignInvites.filter(i => i.type === "share");
    }

    let isManager = false;
    let isOwner = false;
    let userID = Meteor.userId();

    if (campaign) {
      if (campaign.owner._id === userID) {
        isOwner = true;
      }

      if (campaign.manager._id === userID) {
        isManager = true;
      }
    }

    return React.createElement("div", null, this.props.loading ? React.createElement(Loading, null) : React.createElement("div", null, React.createElement(InviteStatus, {
      invite: managerInvite,
      refetch: this.props.refetch,
      manager: manager,
      userId: userId,
      isOwner: isOwner,
      isManager: isManager,
      campaign: campaign
    }), React.createElement(Field, {
      component: AccountShares,
      name: "shares",
      invites: shareInvites,
      refetch: this.props.refetch,
      manager: manager,
      userId: userId,
      isOwner: isOwner,
      isManager: isManager,
      campaign: campaign
    })));
  }

}

const QUERY = gql(_templateObject());
const withData = graphql(QUERY, {
  props: (_ref) => {
    let {
      data: {
        error,
        loading,
        accountInvites,
        refetch
      }
    } = _ref;
    if (loading) return {
      loading: true
    };
    if (error) return {
      hasErrors: true
    };
    return {
      loading,
      accountInvites,
      refetch
    };
  },
  options: ownProps => ({
    pollInterval: 150000,
    variables: {
      "campaignID": ownProps.campaign._id
    }
  })
});
const AccountInviteContainerWithData = withData(AccountInviteContainer);
module.exportDefault(AccountInviteContainerWithData);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"edit.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/containers/edit.jsx                                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/taggedTemplateLiteral"));

function _templateObject() {
  const data = (0, _taggedTemplateLiteral2.default)(["\n    query ($_id: String!,  $query: String!){\n        campaign(_id:$_id){\n            _id,\n            owner {\n                _id,\n                profile{\n                    name,\n                    lastName,\n                    avatar\n                }\n            },\n            manager {\n                _id,\n                profile{\n                    name,\n                    lastName,\n                    avatar\n                }\n            },\n            shares {\n                _id,\n                profile{\n                    name,\n                    lastName,\n                    avatar\n                }\n            },\n            information {\n                brands{\n                    _id,\n                    network,\n                    information{\n                        name,\n                        lastName,\n                        avatar\n                    }\n                }\n                profile\n                cover\n                name\n                conquer\n                dateStart\n                dateEnd\n                description\n                url\n                objectives {\n                    increaseFollowers,\n                    increaseViews,\n                    increaseShares,\n                    increaseEngagement,\n                    increaseLikes,\n                    increaseTrafficHours,\n                    reachNewMarkets,\n                    increaseSpeaking,\n                    increasePlays,\n                    increaseWebsiteTraffic,\n                    positionTarget,\n                    keepTarget,\n                    presence,\n                    positionNewMarkets,\n                },\n            },\n            messages {\n                _id\n                message\n                hashtags\n                media\n            },\n            gallery {\n                images{\n                    name,\n                    content\n                },\n                videos{\n                    name,\n                    content\n                }\n            }\n        }\n        accountsOwnSearch(query:$query){\n            _id,\n            network,\n            information{\n                name,\n                lastName,\n                avatar,\n                birthDate,\n                country,\n                gender\n            }\n        }\n        invitesCampaign(campaignID: $_id){\n            _id,\n            type,\n            status,\n            deadline,\n            budget,\n            useHashtag,\n            invitesAvailable,\n            networks{\n                facebook,\n                twitter,\n                instagram\n            }\n            options{\n                message,\n                media,\n                date,\n                quantity\n            },\n            influencers {\n                _id\n                network\n                information{\n                    name,\n                    lastName,\n                    avatar\n                }\n            },\n            teamAttacks{\n              name,\n              _id,\n              members{\n                 _id\n                network\n                information{\n                    name,\n                    lastName,\n                    avatar\n                }\n                pricing{\n                    post\n                    share\n                    partnership\n                    ambassador,\n                    profilePicture,\n                    coverPhoto,\n                    noPostHour,\n                    noPostDay,\n                }\n              }\n            }\n        }\n        accounts{\n            _id,\n            network,\n            information{\n                name,\n                lastName,\n                avatar\n            },\n        }\n        teamAttacksOwn{\n            _id,\n            owner {\n                _id\n            },\n            members {\n                _id,\n                network,\n                information{\n                    name,\n                    lastName,\n                    avatar,\n                    birthDate,\n                    country,\n                    gender\n                }\n                pricing{\n                    post\n                    share\n                    partnership\n                    ambassador,\n                    profilePicture,\n                    coverPhoto,\n                    noPostHour,\n                    noPostDay,\n                }\n            },\n            name,\n            type\n        }\n    }\n"]);

  _templateObject = function () {
    return data;
  };

  return data;
}

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let graphql;
module.watch(require("react-apollo"), {
  graphql(v) {
    graphql = v;
  }

}, 1);
let connect;
module.watch(require("react-redux"), {
  connect(v) {
    connect = v;
  }

}, 2);
let Loading;
module.watch(require("../../../core/ui/components/loading"), {
  default(v) {
    Loading = v;
  }

}, 3);
let Saving;
module.watch(require("../../../core/ui/components/saving"), {
  default(v) {
    Saving = v;
  }

}, 4);
let EditCampaign;
module.watch(require("../layouts/edit"), {
  default(v) {
    EditCampaign = v;
  }

}, 5);
let createContainer;
module.watch(require("meteor/react-meteor-data"), {
  createContainer(v) {
    createContainer = v;
  }

}, 6);
let gql;
module.watch(require("graphql-tag"), {
  default(v) {
    gql = v;
  }

}, 7);
let notie;
module.watch(require("notie"), {
  default(v) {
    notie = v;
  }

}, 8);
let I18n;
module.watch(require("react-redux-i18n"), {
  I18n(v) {
    I18n = v;
  }

}, 9);

let getTranslation = key => {
  return "Campaigns.edit.messages." + key;
};

class EditContainer extends React.Component {
  constructor() {
    super();
    this.state = {
      saving: "saved"
    };
    this.saveCampaign = this.saveCampaign.bind(this);
  }

  componentDidMount() {
    this.savedData = JSON.stringify(this.props.account);
    let component = this;
    this.saveInterval = setInterval(function () {
      if (component.props.form && component.props.form.values) {
        component.saveCampaign(component.props.form.values, true);
      }
    }, 5000);
  }

  componentWillUnmount() {
    clearInterval(this.saveInterval);
  }

  saveCampaign(data, silent) {
    if (silent && typeof silent === "boolean") {
      silent = true;
    } else {
      silent = false;
    }

    if (silent && this.savedData === JSON.stringify(data)) {
      this.setState({
        saving: "saved"
      });
      return;
    }

    this.setState({
      saving: "saving"
    });
    this.savedData = JSON.stringify(data);
    let component = this; //TODO: Validate Data

    Meteor.call("campaigns-save", data, function (err, res) {
      if (err) {
        if (err.error === 500) {
          err.error = "Failed to create post.";
        } //console.log("ERROR",err);


        notie.alert(3, err.reason || err.error, 3);
        return;
      }

      component.setState({
        saving: "saved"
      });

      if (!silent) {
        notie.alert(1, I18n.t(getTranslation("saved")), 3);
      } //console.log("SERVER_SAVE_POSTS_RESPONSE",res);

    });
  }

  render() {
    let {
      invitesCampaign,
      teamAttacksOwn,
      accounts,
      history,
      refetch,
      accountsOwnSearch,
      campaign
    } = this.props;
    return React.createElement("div", null, this.props.loading ? React.createElement(Loading, null) : React.createElement(EditCampaign, {
      initialValues: campaign,
      ownAccounts: accountsOwnSearch,
      refetch: refetch,
      history: history,
      invitesCampaign: invitesCampaign,
      teamAttacksOwn: teamAttacksOwn,
      accounts: accounts,
      onSubmit: this.saveCampaign
    }), React.createElement(Saving, {
      state: this.state.saving
    }));
  }

}

const QUERY = gql(_templateObject());
const withData = graphql(QUERY, {
  props: (_ref) => {
    let {
      data: {
        error,
        loading,
        campaign,
        accountsOwnSearch,
        invitesCampaign,
        teamAttacksOwn,
        accounts,
        refetch
      }
    } = _ref;
    //console.log("CAMPAIGN_EDIT_CONTAINER",error,campaign);
    if (loading) return {
      loading: true
    };
    if (error) return {
      hasErrors: true
    };
    return {
      loading,
      campaign,
      accountsOwnSearch,
      invitesCampaign,
      teamAttacksOwn,
      accounts,
      refetch
    };
  },
  options: ownProps => ({
    variables: {
      _id: ownProps.params.campaignID,
      query: ""
    }
  })
});
const EditContainerWithData = withData(EditContainer);
module.exportDefault(connect(state => {
  return {
    form: state.form["campaign-edit"]
  };
})(EditContainerWithData));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"list.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/containers/list.jsx                                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/taggedTemplateLiteral"));

function _templateObject() {
  const data = (0, _taggedTemplateLiteral2.default)(["\n    query{\n        campaignsOwn{\n            _id,\n            status,\n            manager{\n                _id,\n                profile{\n                    name,\n                    lastName,\n                    avatar\n                }\n            }\n            owner{\n                _id,\n                profile{\n                    name,\n                    lastName,\n                    avatar\n                }\n            }\n            information{\n                name,\n                dateStart,\n                dateEnd,\n                brands{\n                    _id,\n                    network,\n                    information{\n                        name,\n                        lastName,\n                        avatar\n                    }\n                }\n            }\n        }\n    }\n"]);

  _templateObject = function () {
    return data;
  };

  return data;
}

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let graphql;
module.watch(require("react-apollo"), {
  graphql(v) {
    graphql = v;
  }

}, 1);
let Loading;
module.watch(require("../../../core/ui/components/loading"), {
  default(v) {
    Loading = v;
  }

}, 2);
let List;
module.watch(require("../layouts/list"), {
  default(v) {
    List = v;
  }

}, 3);
let createContainer;
module.watch(require("meteor/react-meteor-data"), {
  createContainer(v) {
    createContainer = v;
  }

}, 4);
let gql;
module.watch(require("graphql-tag"), {
  default(v) {
    gql = v;
  }

}, 5);

class ListContainer extends React.Component {
  render() {
    return React.createElement("div", null, this.props.loading ? React.createElement(Loading, null) : React.createElement(List, {
      data: this.props.campaignsOwn,
      refetch: this.props.refetch,
      history: this.props.history
    }));
  }

}

const QUERY = gql(_templateObject());
const withData = graphql(QUERY, {
  props: (_ref) => {
    let {
      data: {
        error,
        loading,
        campaignsOwn,
        refetch
      }
    } = _ref;
    if (loading) return {
      loading: true
    };
    if (error) return {
      hasErrors: true
    }; //console.log("CAMPAIGN_WITH_DATA_UPDATE", refetch);

    return {
      loading,
      campaignsOwn,
      refetch
    };
  },
  options: ownProps => ({
    pollInterval: 150000
  })
});
const ListContainerWithData = withData(ListContainer); // This container brings in Tracker-enabled Meteor data

const ListContainerWithUserId = createContainer(() => {
  return {
    userId: Meteor.userId() || ''
  };
}, ListContainerWithData);
module.exportDefault(ListContainerWithUserId);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"part-of.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/containers/part-of.jsx                                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/taggedTemplateLiteral"));

function _templateObject() {
  const data = (0, _taggedTemplateLiteral2.default)(["\n    query{\n        campaignsOwn{\n            _id,\n            status,\n            manager{\n                _id,\n                profile{\n                    name,\n                    lastName,\n                    avatar\n                }\n            }\n            owner{\n                _id,\n                profile{\n                    name,\n                    lastName,\n                    avatar\n                }\n            }\n            information{\n                name,\n                dateStart,\n                dateEnd,\n                brands{\n                    _id,\n                    network,\n                    information{\n                        name,\n                        lastName,\n                        avatar\n                    }\n                }\n            }\n        }\n    }\n"]);

  _templateObject = function () {
    return data;
  };

  return data;
}

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let graphql;
module.watch(require("react-apollo"), {
  graphql(v) {
    graphql = v;
  }

}, 1);
let Loading;
module.watch(require("../../../core/ui/components/loading"), {
  default(v) {
    Loading = v;
  }

}, 2);
let List;
module.watch(require("../layouts/part-of"), {
  default(v) {
    List = v;
  }

}, 3);
let createContainer;
module.watch(require("meteor/react-meteor-data"), {
  createContainer(v) {
    createContainer = v;
  }

}, 4);
let gql;
module.watch(require("graphql-tag"), {
  default(v) {
    gql = v;
  }

}, 5);

class ListContainer extends React.Component {
  render() {
    return React.createElement("div", null, this.props.loading ? React.createElement(Loading, null) : React.createElement(List, {
      data: this.props.campaignsOwn,
      refetch: this.props.refetch,
      history: this.props.history
    }));
  }

}

const QUERY = gql(_templateObject());
const withData = graphql(QUERY, {
  props: (_ref) => {
    let {
      data: {
        error,
        loading,
        campaignsOwn,
        refetch
      }
    } = _ref;
    if (loading) return {
      loading: true
    };
    if (error) return {
      hasErrors: true
    }; //console.log("CAMPAIGN_WITH_DATA_UPDATE", refetch);

    return {
      loading,
      campaignsOwn,
      refetch
    };
  },
  options: ownProps => ({
    pollInterval: 150000
  })
});
const ListContainerWithData = withData(ListContainer); // This container brings in Tracker-enabled Meteor data

const ListContainerWithUserId = createContainer(() => {
  return {
    userId: Meteor.userId() || ''
  };
}, ListContainerWithData);
module.exportDefault(ListContainerWithUserId);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"view.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/containers/view.jsx                                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/taggedTemplateLiteral"));

function _templateObject() {
  const data = (0, _taggedTemplateLiteral2.default)(["\n    query ($_id: String!){\n        campaign(_id:$_id){\n            _id,\n            owner {\n                _id,\n                profile{\n                    name,\n                    lastName,\n                    avatar\n                }\n            },\n            manager {\n                _id,\n                profile{\n                    name,\n                    lastName,\n                    avatar\n                }\n            },\n            information {\n                brands{\n                    _id,\n                    network,\n                    information{\n                        name,\n                        lastName,\n                        avatar\n                    }\n                }\n                profile\n                cover\n                name\n                conquer\n                dateStart\n                dateEnd\n                description\n                url\n                objectives {\n                    increaseFollowers,\n                    increaseViews,\n                    increaseShares,\n                    increaseEngagement,\n                    increaseLikes,\n                    increaseTrafficHours,\n                    reachNewMarkets,\n                    increaseSpeaking,\n                    increasePlays,\n                    increaseWebsiteTraffic,\n                    positionTarget,\n                    keepTarget,\n                    presence,\n                    positionNewMarkets,\n                },\n            },\n            messages {\n                _id\n                message\n                hashtags\n                media\n            },\n            gallery {\n                images{\n                    name,\n                    content\n                },\n                videos{\n                    name,\n                    content\n                }\n            }\n        }\n        invitesCampaign(campaignID: $_id){\n            _id,\n            type,\n            status,\n            deadline,\n            budget,\n            useHashtag,\n            invitesAvailable,\n            networks{\n                facebook,\n                twitter,\n                instagram\n            }\n            options{\n                message,\n                media,\n                date,\n                quantity\n            },\n            influencers {\n                _id\n                network\n                information{\n                    name,\n                    lastName,\n                    avatar\n                }\n            },\n            teamAttack,\n            teamAttackMembers{\n                _id\n                network\n                information{\n                    name,\n                    lastName,\n                    avatar\n                }\n                pricing{\n                    post\n                    share\n                    partnership\n                    ambassador,\n                    profilePicture,\n                    coverPhoto,\n                    noPostHour,\n                    noPostDay,\n                }\n            }\n        }\n    }\n"]);

  _templateObject = function () {
    return data;
  };

  return data;
}

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let graphql;
module.watch(require("react-apollo"), {
  graphql(v) {
    graphql = v;
  }

}, 1);
let connect;
module.watch(require("react-redux"), {
  connect(v) {
    connect = v;
  }

}, 2);
let Loading;
module.watch(require("../../../core/ui/components/loading"), {
  default(v) {
    Loading = v;
  }

}, 3);
let ViewCampaign;
module.watch(require("../layouts/view"), {
  default(v) {
    ViewCampaign = v;
  }

}, 4);
let createContainer;
module.watch(require("meteor/react-meteor-data"), {
  createContainer(v) {
    createContainer = v;
  }

}, 5);
let gql;
module.watch(require("graphql-tag"), {
  default(v) {
    gql = v;
  }

}, 6);

let getTranslation = key => {
  return "Campaigns.edit.messages." + key;
};

class ViewContainer extends React.Component {
  constructor() {
    super();
  }

  render() {
    let {
      invitesCampaign,
      refetch,
      history,
      campaign
    } = this.props;
    return React.createElement("div", null, this.props.loading ? React.createElement(Loading, null) : React.createElement(ViewCampaign, {
      campaign: campaign,
      invitesCampaign: invitesCampaign,
      refetch: refetch,
      history: history
    }));
  }

}

const QUERY = gql(_templateObject());
const withData = graphql(QUERY, {
  props: (_ref) => {
    let {
      data: {
        error,
        loading,
        campaign,
        invitesCampaign,
        refetch
      }
    } = _ref;
    //console.log("CAMPAIGN_ERROR",error,campaign);
    if (loading) return {
      loading: true
    };
    if (error) return {
      hasErrors: true
    };
    return {
      loading,
      campaign,
      invitesCampaign,
      refetch
    };
  },
  options: ownProps => ({
    variables: {
      _id: ownProps.params.campaignID
    }
  })
});
const ViewContainerWithData = withData(ViewContainer);
module.exportDefault(connect(state => {
  return {
    form: state.form["campaign-edit"]
  };
})(ViewContainerWithData));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"layouts":{"campaigns.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/layouts/campaigns.jsx                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class Campaigns extends React.Component {
  render() {
    let filter = obj => {
      let newProps = {};
      let key;

      for (key in obj) {
        if (key !== "children") {
          newProps[key] = obj[key];
        }
      }

      return newProps;
    };

    return React.createElement("div", null, React.cloneElement(this.props.children, filter(this.props)));
  }

}

module.exportDefault(Campaigns);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"edit.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/layouts/edit.jsx                                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Tabs;
module.watch(require("../components/tabs"), {
  default(v) {
    Tabs = v;
  }

}, 1);
let reduxForm;
module.watch(require("redux-form"), {
  reduxForm(v) {
    reduxForm = v;
  }

}, 2);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 3);

class EditCampaign extends React.Component {
  render() {
    const {
      handleSubmit,
      pristine,
      reset,
      submitting,
      ownAccounts,
      initialValues,
      refetch,
      invitesCampaign,
      teamAttacksOwn,
      accounts
    } = this.props;
    return React.createElement("form", {
      onSubmit: handleSubmit
    }, React.createElement(Tabs, {
      campaign: initialValues,
      refetch: refetch,
      invitesCampaign: invitesCampaign,
      teamAttacksOwn: teamAttacksOwn,
      accounts: accounts,
      ownAccounts: ownAccounts
    }));
  }

}

EditCampaign = reduxForm({
  form: 'campaign-edit',
  enableReinitialize: true
})(EditCampaign);
module.exportDefault(EditCampaign);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"list.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/layouts/list.jsx                                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Modal;
module.watch(require("react-modal"), {
  default(v) {
    Modal = v;
  }

}, 1);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 2);
let ListEmpty;
module.watch(require("../../../core/ui/components/list-empty"), {
  default(v) {
    ListEmpty = v;
  }

}, 3);
let ListTable;
module.watch(require("../components/list-table"), {
  default(v) {
    ListTable = v;
  }

}, 4);
let CampaignTypes;
module.watch(require("../components/campaign-types"), {
  default(v) {
    CampaignTypes = v;
  }

}, 5);
let CampaignCreateContainer;
module.watch(require("../containers/campaign-create"), {
  default(v) {
    CampaignCreateContainer = v;
  }

}, 6);

class List extends React.Component {
  constructor() {
    super();
    this.state = {
      modalIsOpen: false
    };
    this.openModal = this.openModal.bind(this);
    this.closeModal = this.closeModal.bind(this);
  }

  openModal() {
    this.setState({
      modalIsOpen: true
    });
  }

  closeModal() {
    this.setState({
      modalIsOpen: false
    });
  }

  render() {
    let getTranslation = key => {
      return "Campaigns." + key;
    };

    return React.createElement("div", {
      className: "page-content container-fluid"
    }, React.createElement(CampaignTypes, null), this.props.data && this.props.data.length ? React.createElement(ListTable, {
      data: this.props.data,
      new: this.openModal
    }) : React.createElement(ListEmpty, {
      message: React.createElement(Translate, {
        value: getTranslation("empty.message")
      }),
      button: React.createElement(Translate, {
        value: getTranslation("empty.button")
      }),
      callback: this.openModal
    }), React.createElement(Modal, {
      isOpen: this.state.modalIsOpen,
      onRequestClose: this.closeModal,
      className: "app-modal",
      contentLabel: "Example Modal"
    }, React.createElement("button", {
      className: "close",
      onClick: this.closeModal
    }, React.createElement("i", {
      className: "icon wb-close-mini",
      "aria-hidden": "true"
    })), React.createElement(CampaignCreateContainer, {
      close: this.closeModal,
      reloadCampaigns: this.props.refetch
    })));
  }

}

module.exportDefault(List);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"part-of.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/layouts/part-of.jsx                                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Modal;
module.watch(require("react-modal"), {
  default(v) {
    Modal = v;
  }

}, 1);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 2);
let ListEmpty;
module.watch(require("../../../core/ui/components/list-empty"), {
  default(v) {
    ListEmpty = v;
  }

}, 3);
let ListTable;
module.watch(require("../components/part-of/list-table"), {
  default(v) {
    ListTable = v;
  }

}, 4);
let CampaignTypes;
module.watch(require("../components/campaign-types"), {
  default(v) {
    CampaignTypes = v;
  }

}, 5);

class PartOfList extends React.Component {
  constructor() {
    super();
    this.state = {
      modalIsOpen: false
    };
  }

  render() {
    let getTranslation = key => {
      return "Campaigns." + key;
    };

    return React.createElement("div", {
      className: "page-content container-fluid"
    }, React.createElement(CampaignTypes, null), this.props.data && this.props.data.length ? React.createElement(ListTable, {
      data: this.props.data
    }) : React.createElement(ListEmpty, {
      message: React.createElement(Translate, {
        value: getTranslation("empty.message")
      }),
      button: React.createElement(Translate, {
        value: getTranslation("empty.button")
      }),
      callback: this.openModal
    }));
  }

}

module.exportDefault(PartOfList);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"view.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/ui/layouts/view.jsx                                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Tabs;
module.watch(require("../components/part-of/tabs"), {
  default(v) {
    Tabs = v;
  }

}, 1);
let reduxForm;
module.watch(require("redux-form"), {
  reduxForm(v) {
    reduxForm = v;
  }

}, 2);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 3);

class ViewCampaign extends React.Component {
  render() {
    const {
      campaign,
      invitesCampaign
    } = this.props;
    return React.createElement("div", null, React.createElement(Tabs, {
      campaign: campaign,
      invites: invitesCampaign
    }));
  }

}

module.exportDefault(ViewCampaign);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"actions":{"bundle.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/actions/bundle.jsx                                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let Actions = {};
module.exportDefault(Actions);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"client":{"bundle.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/client/bundle.jsx                                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let Routes;
module.watch(require("./routes"), {
  default(v) {
    Routes = v;
  }

}, 0);
let Reducers;
module.watch(require("../reducers/bundle"), {
  default(v) {
    Reducers = v;
  }

}, 1);
let Actions;
module.watch(require("../actions/bundle"), {
  default(v) {
    Actions = v;
  }

}, 2);
let Translations;
module.watch(require("./translations"), {
  default(v) {
    Translations = v;
  }

}, 3);
module.exportDefault({
  reducers: Reducers,
  routes: Routes,
  actions: Actions,
  translations: Translations
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"routes.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/client/routes.jsx                                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Route, IndexRoute;
module.watch(require("react-router"), {
  Route(v) {
    Route = v;
  },

  IndexRoute(v) {
    IndexRoute = v;
  }

}, 1);
let Campaigns;
module.watch(require("../ui/layouts/campaigns"), {
  default(v) {
    Campaigns = v;
  }

}, 2);
let List;
module.watch(require("../ui/containers/list"), {
  default(v) {
    List = v;
  }

}, 3);
let Edit;
module.watch(require("../ui/containers/edit"), {
  default(v) {
    Edit = v;
  }

}, 4);
let View;
module.watch(require("../ui/containers/view"), {
  default(v) {
    View = v;
  }

}, 5);
let PartOf;
module.watch(require("../ui/containers/part-of"), {
  default(v) {
    PartOf = v;
  }

}, 6);
module.exportDefault(React.createElement(Route, {
  path: "/campaigns",
  component: Campaigns
}, React.createElement(IndexRoute, {
  component: List
}), React.createElement(Route, {
  path: "own",
  component: List
}), React.createElement(Route, {
  path: "part-of",
  component: PartOf
}), React.createElement(Route, {
  path: "edit/:campaignID",
  component: Edit
}), React.createElement(Route, {
  path: "view/:campaignID",
  component: View
})));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"translations.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/client/translations.jsx                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.exportDefault({
  en: {
    menu: "Viralizing!",
    new: {
      title: "Campaign",
      name: "What's your campaign's name?",
      dateStart: "Start date",
      dateEnd: "End Date",
      holder: "Choose your campaign's holder",
      button: "Create",
      brand: "Brands"
    },
    empty: {
      message: "You don't have campaigns yet",
      button: "New Campaign"
    },
    edit: {
      tabs: {
        gallery: {
          title: "Gallery",
          images: {
            title: "Images",
            newAlbum: {
              title: "Enter your Album Name",
              confirm: "Add Album",
              cancel: "Cancel"
            },
            empty: {
              message: "You have no pictures yet.",
              button: "Upload Picture"
            },
            list: {
              newImage: "Add Picture",
              newAlbum: "Add Album"
            },
            delete: {
              albumHelper: "Delete Album",
              title: "Are you sure?",
              description: "You won't be able to revert this!",
              confirm: "Yes, delete it.",
              cancel: "Cancel"
            }
          },
          videos: {
            title: "Videos",
            newAlbum: {
              title: "Enter your Album Name",
              confirm: "Add Album",
              cancel: "Cancel"
            },
            new: {
              title: "Enter your video URL",
              confirm: "Add Video",
              cancel: "Cancel"
            },
            list: {
              newVideo: "Add Video"
            },
            empty: {
              message: "You have no videos yet.",
              button: "New Video"
            },
            delete: {
              albumHelper: "Delete Album",
              title: "Are you sure?",
              description: "You won't be able to revert this!",
              confirm: "Yes, delete it.",
              cancel: "Cancel"
            }
          }
        },
        information: {
          title: "Information",
          instructions: "Enter the following information.",
          form: {
            profile: "Profile Picture",
            cover: "Cover Photo",
            name: "Campaign Name",
            concept: "Concept",
            owner: "Owner",
            brand: "Brand",
            holder: "Holder",
            sell: "What do you sell?",
            place: "Place",
            language: "Language",
            url: "URL",
            dateStart: "Start Date",
            dateEnd: "End Date",
            message: "Message",
            description: {
              label: "Description",
              placeholder: "Add a brief description of your campaign"
            },
            conquer: "What do you want to conquer?",
            hashtags: {
              main: "Main hashtags",
              secondary: "Secondary hashtags"
            },
            objectives: {
              title: "Objectives",
              objectives: {
                increaseFollowers: "Increase followers",
                increaseViews: "Increase visits",
                increaseShares: "Increase post's shares",
                increaseEngagement: "Increase engagement",
                increaseLikes: "Increase Likes",
                increaseTrafficHours: "Increase hours of traffic to profile",
                reachNewMarkets: "Reach new markets",
                increaseSpeaking: "Increase the number of people that speak about you",
                increasePlays: "Increase video playbacks",
                increaseWebsiteTraffic: "Increase website traffic",
                positionTarget: "Position your brand in target marker",
                keepTarget: "Keep your market position",
                presence: "Have more presence with followers",
                positionNewMarkets: "Position your brand in new markets"
              }
            },
            proposal: {
              objectives: {
                placeholder: "Propose an objective"
              },
              modals: {
                error: {
                  title: "Error",
                  description: "There was an error in your request. Please contact customer support."
                },
                done: {
                  title: "Done!",
                  description: "Thanks for your proposal"
                }
              }
            }
          }
        },
        invites: {
          title: "Invites",
          empty: {
            message: "You have no Invites yet.",
            messageConfirmed: "No confirmed actions yet.",
            button: "New Invite"
          },
          list: {
            new: "New",
            table: {
              headers: {
                more: "More",
                name: "Name",
                deadline: "Deadline",
                list: "Team Attack!",
                delete: "Delete"
              },
              search: "Search",
              empty: "No Results"
            }
          },
          edit: {
            title: "Actions",
            form: {
              name: "Invite Name",
              teamAttack: {
                select: "Choose a TeamAttack",
                members: "TeamAttack Members"
              },
              accounts: "My Influencers",
              invited: {
                invited: "Influencers Invited",
                available: "Available Invites",
                all: "Invite All",
                confirmed: "Influencers Confirmed"
              },
              budget: {
                budget: "Budget per inflencer",
                direct: "Direct Payment"
              },
              action: {
                label: "Action Type",
                values: {
                  post: "Post",
                  profilePicture: "Profile Picture",
                  coverPhoto: "Cover Photo",
                  noPost: {
                    hour: "Hour Without Posting",
                    day: "Day Without Posting"
                  },
                  share: "Share Post",
                  partnership: "Partnership",
                  ambassador: "Brand Ambassador"
                },
                save: "Save"
              },
              actions: {
                fileUpload: {
                  label: "Click here or drag your image to upload"
                },
                post: {
                  placeholder: "Write your message here..."
                },
                share: {
                  label: "Enter the URL of the post to share"
                },
                time: {
                  label: "Enter how long should the influencer not post",
                  helpers: {
                    days: "Days",
                    hours: "Hours"
                  }
                }
              },
              list: {
                empty: {
                  message: "You have no options yet."
                },
                influencers: "Influencers",
                action: "Action",
                option: "Option",
                optionsTitle: "Option's messages per action",
                helpers: {
                  days: "Days",
                  hours: "Hours"
                }
              },
              footer: {
                pagination: {
                  action: "Action",
                  of: "of"
                },
                new: "New Action"
              },
              total: {
                title: "Total",
                influencers: "Influencers",
                commission: "Commission",
                subtotal: "Subtotal",
                total: "Total",
                breakdown: {
                  table: {
                    headers: {
                      concept: "Concept",
                      amount: "Amount"
                    }
                  }
                }
              },
              deadline: "Deadline",
              useHashtag: "Remove #Ibol",
              noSelect: "Not Selected"
            },
            delete: {
              main: {
                title: "Are you sure?",
                description: "This action can't be reverted.",
                confirm: "Yes, delete it!",
                cancel: "Cancel"
              },
              error: {
                title: "Error",
                description: "There was an error in your request. Please contact customer support."
              },
              done: {
                title: "Done!",
                description: "We'll contact you shortly."
              }
            },
            save: "Save",
            launch: "Launch",
            tables: {
              action: {
                table: {
                  title: "Action",
                  headers: {
                    index: "#",
                    status: "Status",
                    networks: "Networks",
                    members: "Members",
                    vacants: "Vacants",
                    confirmed: "Confirmed",
                    type: "Type",
                    deadline: "Deadline",
                    useHashtag: "#Ibol Viralizing",
                    budget: "Budget"
                  }
                }
              },
              options: {
                table: {
                  title: "Options",
                  headers: {
                    index: "#",
                    message: "Message",
                    media: "Media",
                    date: "Date",
                    time: "Time"
                  }
                }
              }
            }
          },
          view: {
            pending: {
              title: "Scheduled",
              description: "Your invite is scheduled and will be sent very soon."
            },
            list: {
              status: {
                pending: "Pending",
                sent: "Sent",
                accepted: "Accepted",
                rejected: "Rejected",
                scheduled: "Scheduled",
                published: "Published",
                completed: "Completed",
                cancelled: "Cancelled",
                suspended: "Suspended"
              }
            }
          },
          messages: {
            saved: "Action Saved",
            updated: "Action Updated",
            error: "Error Saving Action"
          }
        },
        calendar: {
          title: "Calendar",
          button: "Schedule Post",
          filters: {
            all: "All Posts",
            draft: "Draft Posts",
            pending: "Pending Posts",
            sent: "Sent Posts",
            accepted: "Accepted Posts",
            rejected: "Rejected Posts",
            scheduled: "Scheduled Posts",
            published: "Published Posts",
            completed: "Completed Posts",
            cancelled: "Cancelled Posts",
            suspended: "Suspended Posts"
          }
        },
        status: {
          title: "Analytics",
          soon: {
            title: "We are gathering your data."
          }
        },
        summary: {
          title: "Summary"
        },
        settings: {
          "title": "Settings"
        }
      },
      saveButton: "Save",
      messages: {
        saved: "Campaña Guardada"
      }
    },
    list: {
      new: "New Campaign",
      table: {
        headers: {
          index: "#",
          edit: "Edit",
          campaigns: "Campaigns",
          name: "Name",
          brands: "Brands",
          type: "Type",
          dateStart: "Start Date",
          dateEnd: "End Date",
          holder: "Holder",
          owner: "Owner",
          networks: "Networks",
          myAccounts: "My Accounts",
          myActions: "My Actions",
          earnings: "Earnings",
          budget: "Budget",
          status: "Status",
          shares: "Shares",
          utility: "Utility",
          influencers: "Influencers"
        },
        helpers: {
          type: {
            post: "Post",
            profilePicture: "Profile Picture",
            coverPhoto: "Cover Photo",
            noPostHour: "Hour  Without Posting",
            noPostDay: "Day Without Posting",
            share: "Share Post"
          }
        },
        search: "Search",
        empty: "No Results"
      },
      types: {
        created: "Created",
        partOf: "Part Of"
      }
    }
  },
  es: {
    menu: "Viralizing!",
    new: {
      title: "Campaña",
      name: "¿Cuál es el nombre de tu campaña?",
      dateStart: "Inicio de Campaña",
      dateEnd: "Cierre de Campaña",
      holder: "Elige el perfil de tu titular",
      button: "Crear Campaña",
      brand: "Marcas representantes de campaña"
    },
    empty: {
      message: "No tienes campañas aún",
      button: "Crear Campaña"
    },
    edit: {
      tabs: {
        gallery: {
          title: "Galería",
          images: {
            title: "Imágenes",
            newAlbum: {
              title: "¿Como se llama tu album?",
              confirm: "Agregar Album",
              cancel: "Cancelar"
            },
            empty: {
              message: "Aún no tienes imágenes..",
              button: "Subir Imágen"
            },
            list: {
              newImage: "Agregar Imagen",
              newAlbum: "Agregar Album"
            },
            delete: {
              albumHelper: "Borrar Album",
              title: "¿Estás seguro?",
              description: "No podrás revertir esta acción!",
              confirm: "Si, eliminarlos.",
              cancel: "Cancelar"
            }
          },
          videos: {
            title: "Videos",
            newAlbum: {
              title: "¿Como se llama tu album?",
              confirm: "Agregar Album",
              cancel: "Cancelar"
            },
            new: {
              title: "Introduce la URL de tu video",
              confirm: "Agregar Video",
              cancel: "Cancelar"
            },
            list: {
              newVideo: "Agregar Video"
            },
            empty: {
              message: "Aún no tienes videos",
              button: "Nuevo Video"
            },
            delete: {
              title: "¿Estás seguro?",
              description: "No podrás revertir esta acción!",
              confirm: "Si, eliminarlo.",
              cancel: "Cancelar"
            }
          }
        },
        information: {
          title: "Información",
          instructions: "Ingresa los siguientes datos.",
          form: {
            profile: "Foto de Perfil",
            cover: "Foto de Portada",
            name: "Nombre de la campaña",
            concept: "Concepto",
            owner: "Administrador Titular",
            brand: "Marcas representantes de campaña",
            holder: "Titular",
            sell: "¿Qué vendes?",
            place: "Lugar",
            language: "Lenguaje",
            url: "URL",
            dateStart: "Inicio de Campaña",
            dateEnd: "Cierre de Campaña",
            message: "Mensaje",
            description: {
              label: "Brief de campaña",
              placeholder: "Agrega una breve descripción de tu campaña."
            },
            conquer: "¿Que quieres conquistar?",
            hashtags: {
              main: "Hashtags principales",
              secondary: "Hashtags Secundarios"
            },
            objectives: {
              title: "Objetivos",
              objectives: {
                increaseFollowers: "Aumentar tus seguidores",
                increaseViews: "Aumentar tus visitas",
                increaseShares: "Aumentar share en tus post",
                increaseEngagement: "Aumentar tu engagement",
                increaseLikes: "Aumentar tus likes",
                increaseTrafficHours: "Aumentar horas de tráfico en tu perfil",
                reachNewMarkets: "Posicionarte en otras zonas grográficas",
                increaseSpeaking: "Aumentar el número de gente que habla de ti",
                increasePlays: "Aumentar reproduccione en tus videos",
                increaseWebsiteTraffic: "Aumentar el tráfico a tu pagina web",
                positionTarget: "Posicionar en tu target",
                keepTarget: "Mantenimiento de posicionamiento en tu target",
                presence: "Tener mayor presencia y/o presencia constante con mis seguidores",
                positionNewMarkets: "Posicionarte en nuevos mercados"
              }
            },
            proposal: {
              objectives: {
                placeholder: "Sugerir un nuevo objetivo"
              },
              modals: {
                error: {
                  title: "Error",
                  description: "Hubo un error en su solicitud. Por favor comuniquese con soporte."
                },
                done: {
                  title: "Listo!",
                  description: "Gracias por su propuesta"
                }
              }
            }
          }
        },
        invites: {
          title: "Convocatorias",
          empty: {
            message: "Aún no tienes convocatorias.",
            messageConfirmed: "Aún no hay acciones confirmadas.",
            button: "Crear Convocatoria"
          },
          list: {
            new: "Crear",
            table: {
              headers: {
                more: "Ver Más",
                name: "Nombre",
                deadline: "Deadline",
                list: "Team Attack!",
                delete: "Borrar"
              },
              search: "Buscar",
              empty: "No hay resultados"
            }
          },
          edit: {
            title: "Acciones",
            form: {
              name: "Nombre",
              teamAttack: {
                select: "Elije tu TeamAttack",
                members: "Miembros del TeamAttack"
              },
              accounts: "Mis Influencers",
              invited: {
                invited: "Influencers Invitados",
                available: "Invitaciones Disponibles",
                all: "Invitar Todos",
                confirmed: "Influencers Confirmados"
              },
              budget: {
                budget: "Presupuesto por influencer",
                direct: "Pago Directo"
              },
              action: {
                label: "Tipo de Acción",
                values: {
                  post: "Post",
                  profilePicture: "Foto de Perfil",
                  coverPhoto: "Foto de Portada",
                  noPost: {
                    hour: "Hour sin publicar",
                    day: "Día sin publicar"
                  },
                  share: "Compartir Publicación"
                },
                save: "Guardar"
              },
              actions: {
                fileUpload: {
                  label: "Haz click aquí o arrastra tu imagen para subirla."
                },
                post: {
                  placeholder: "Escribe tu mensaje aquí..."
                },
                share: {
                  label: "Ingresa la URL del post que deseas compartir"
                },
                time: {
                  label: "Ingresa cuanto tiempo el influencer no debe postear",
                  helpers: {
                    days: "Dias",
                    hours: "Horas"
                  }
                }
              },
              list: {
                empty: {
                  message: "Aún no tienes opciones."
                },
                influencers: "Influencers",
                action: "Attack!",
                option: "Shoot's",
                optionsTitle: "Shoot's de \"Attack!\"",
                helpers: {
                  days: "Dias",
                  hours: "Horas"
                }
              },
              footer: {
                pagination: {
                  action: "Acción",
                  of: "de"
                },
                new: "Nueva Acción"
              },
              total: {
                title: "Total",
                influencers: "Influencers",
                commission: "Comisión",
                subtotal: "Subtotal",
                total: "Total",
                breakdown: {
                  table: {
                    headers: {
                      concept: "Concepto",
                      amount: "Monto"
                    }
                  }
                }
              },
              deadline: "Deadline",
              useHashtag: "#IbolViralizing Descuento",
              noSelect: "No Seleccionado"
            },
            delete: {
              main: {
                title: "Estas seguro?",
                description: "Esta acción no puede ser revertida.",
                confirm: "Si, eliminar.",
                cancel: "Cancelar"
              },
              error: {
                title: "Error",
                description: "Hubo un error en su solicitud. Por favor comuniquese con soporte."
              },
              done: {
                title: "Listo!",
                description: "En breve estaremos en contacto."
              }
            },
            save: "Programar",
            launch: "Viralizar!",
            tables: {
              action: {
                table: {
                  title: "Attack!",
                  headers: {
                    index: "No",
                    status: "Status",
                    networks: "Red Social",
                    members: "Influencers",
                    vacants: "Vacantes",
                    confirmed: "Confirmados",
                    type: "Tipo",
                    deadline: "Deadline",
                    useHashtag: "#Ibol Viralizing",
                    budget: "Presupuesto"
                  }
                }
              },
              options: {
                table: {
                  title: "Shoot's de \"Attack!\"",
                  headers: {
                    index: "No",
                    message: "Mensaje",
                    media: "Media",
                    date: "Fecha",
                    time: "Hora"
                  }
                }
              }
            }
          },
          view: {
            pending: {
              title: "Programada",
              description: "Tu convocatoria ha sido programada y será enviada muy pronto."
            },
            list: {
              status: {
                pending: "Programado",
                sent: "Enviado",
                accepted: "Aceptado",
                rejected: "Rechazado",
                scheduled: "Programado",
                published: "Publicado",
                completed: "Completado",
                cancelled: "Cancellado",
                suspended: "Suspendido"
              }
            }
          },
          messages: {
            saved: "Acción Guardada",
            updated: "Acción Actualizada",
            error: "Error al Guardar la Acción"
          }
        },
        calendar: {
          title: "Calendario",
          button: "Programar Publicación",
          filters: {
            all: "Todas las Publicaciones",
            draft: "Publicaciones Borradores",
            pending: "Publicaciones Pendientes",
            sent: "Publicaciones Enviadas",
            accepted: "Publicaciones Aceptadas",
            rejected: "Publicaciones Rechazadas",
            scheduled: "Publicaciones Programadas",
            published: "Publicaciones Publicadas",
            completed: "Publicaciones Completadas",
            cancelled: "Publicaciones Canceladas",
            suspended: "Publicaciones Suspendidas"
          }
        },
        status: {
          title: "Analíticas",
          soon: {
            title: "Estamos recopilando tu información."
          }
        },
        summary: {
          title: "Resumen"
        },
        settings: {
          "title": "Configuraciones"
        }
      },
      saveButton: "Guardar",
      messages: {
        saved: "Campaign Saved"
      }
    },
    list: {
      new: "Crear Campaña",
      table: {
        headers: {
          index: "Nº",
          edit: "Editar",
          campaigns: "Campañas",
          name: "Nombre",
          brands: "Marcas",
          type: "Tipo",
          dateStart: "Inicio de Campaña",
          dateEnd: "Cierre de Campaña",
          holder: "Administrador",
          owner: "Titular",
          networks: "Redes Sociales",
          myAccounts: "Mis Participantes",
          myActions: "Shoot's",
          earnings: "Ganancias",
          budget: "Presupuesto Total",
          status: "Status",
          shares: "Colaboradores",
          utility: "Ganancias",
          influencers: "Mis Participantes"
        },
        helpers: {
          type: {
            post: "Post",
            profilePicture: "Foto de Perfil",
            coverPhoto: "Foto de Portada",
            noPostHour: "Hora sin Publicar",
            noPostDay: "Día sin Publicar",
            share: "Compartir Post"
          }
        },
        search: "Buscar",
        empty: "No hay Resultados"
      },
      types: {
        created: "Creadas",
        partOf: "Participantes"
      }
    }
  },
  zz: {
    menu: "測試",
    new: {
      title: "測試",
      name: "測試 測試 測試 測試?",
      dateStart: "測試 測試",
      dateEnd: "測試 測試",
      holder: "測試 測試 測試 測試",
      button: "測試 測試",
      brand: "測試"
    },
    empty: {
      message: "測試 測試 測試 測試 測試",
      button: "測試 測試"
    },
    edit: {
      tabs: {
        gallery: {
          title: "測試",
          images: {
            title: "測試",
            newAlbum: {
              title: "測試 測試 測試 測試",
              confirm: "測試 測試",
              cancel: "測試"
            },
            empty: {
              message: "測試 測試 測試 測試 測試.",
              button: "測試 測試"
            },
            list: {
              newImage: "測試 測試",
              newAlbum: "測試 測試"
            },
            delete: {
              albumHelper: "測試 測試",
              title: "測試 測試 測試?",
              description: "測試 測試 測試 測試 測試 測試 測試!",
              confirm: "測試, 測試 測試.",
              cancel: "測試"
            }
          },
          videos: {
            title: "測試",
            newAlbum: {
              title: "測試 測試 測試 測試",
              confirm: "測試 測試",
              cancel: "測試"
            },
            new: {
              title: "測試 測試 測試 測試",
              confirm: "測試 測試",
              cancel: "測試"
            },
            list: {
              newVideo: "測試 測試"
            },
            empty: {
              message: "測試 測試 測試 測試 測試.",
              button: "測試 測試"
            },
            delete: {
              albumHelper: "測試 測試",
              title: "測試 測試 測試?",
              description: "測試 測試 測試 測試 測試 測試 測試!",
              confirm: "測試, 測試 測試.",
              cancel: "測試"
            }
          }
        },
        information: {
          title: "測試",
          instructions: "測試 測試 測試 測試.",
          form: {
            profile: "測試 測試",
            cover: "測試 測試",
            name: "測試 測試",
            concept: "測試",
            owner: "測試 測試",
            brand: "測試",
            holder: "測試",
            sell: "測試 測試?",
            place: "測試",
            language: "測試",
            url: "測試",
            dateStart: "測試 測試",
            dateEnd: "測試 測試",
            message: "測試",
            description: {
              label: "測試 測試 測試",
              placeholder: "測試 測試 測試 測試 測試 測試 測試."
            },
            conquer: "測試 測試 測試 測試 測試 測試?",
            hashtags: {
              main: "測試 測試",
              secondary: "測試 測試"
            },
            objectives: {
              title: "測試",
              objectives: {
                increaseFollowers: "測試 測試",
                increaseViews: "測試 測試",
                increaseShares: "測試 測試 測試",
                increaseEngagement: "測試 測試",
                increaseLikes: "測試 測試",
                increaseTrafficHours: "測試 測試 測試 測試 測試 測試",
                reachNewMarkets: "測試 測試 測試",
                increaseSpeaking: "測試 測試 測試 測試 測試 測試 測試 測試 測試",
                increasePlays: "測試 測試 測試",
                increaseWebsiteTraffic: "測試 測試 測試",
                positionTarget: "測試 測試 測試 測試 測試 測試",
                keepTarget: "測試 測試 測試 測試",
                presence: "測試 測試 測試 測試 測試",
                positionNewMarkets: "測試 測試 測試 測試 測試 測試"
              }
            },
            proposal: {
              objectives: {
                placeholder: "測試 測試 測試 測試"
              },
              modals: {
                error: {
                  title: "測試",
                  description: "測試 測試 測試 測試 測試 測試. 測試 測試 測試 測試 測試."
                },
                done: {
                  title: "測試!",
                  description: "測試 測試 測試 測試"
                }
              }
            }
          }
        },
        invites: {
          title: "測試",
          empty: {
            message: "測試 測試 測試 測試.",
            messageConfirmed: "測試 測試 測試 測試.",
            button: "測試 測試"
          },
          list: {
            new: "測試",
            table: {
              headers: {
                more: "測試",
                name: "測試",
                deadline: "測試",
                list: "測試 測試",
                delete: "測試"
              },
              search: "測試",
              empty: "測試 測試"
            }
          },
          edit: {
            title: "測試",
            form: {
              name: "測試 測試",
              teamAttack: {
                select: "測試 測試 測試",
                members: "測試 測試"
              },
              accounts: "測試 測試",
              invited: {
                invited: "測試 測試",
                available: "測試 測試",
                all: "測試 測試",
                confirmed: "測試 測試"
              },
              budget: {
                budget: "測試 測試 測試",
                direct: "測試 測試"
              },
              action: {
                label: "測試 測試",
                values: {
                  post: "測試",
                  profilePicture: "測試 測試",
                  coverPhoto: "測試 測試",
                  noPost: {
                    hour: "測試 測試 測試",
                    day: "測試 測試 測試"
                  },
                  share: "測試 測試",
                  partnership: "測試",
                  ambassador: "測試 測試"
                },
                save: "測試"
              },
              actions: {
                fileUpload: {
                  label: "測試 測試 測試 測試 測試 測試 測試 測試"
                },
                post: {
                  placeholder: "測試 測試 測試 測試..."
                },
                share: {
                  label: "測試 測試 測試 測試 測試 測試 測試 測試"
                },
                time: {
                  label: "測試 測試 測試 測試 測試 測試 測試 測試",
                  helpers: {
                    days: "測試",
                    hours: "測試"
                  }
                }
              },
              list: {
                empty: {
                  message: "測試 測試 測試 測試 測試."
                },
                influencers: "測試",
                action: "測試",
                option: "測試",
                optionsTitle: "測試 測試 測試 測試 測試",
                helpers: {
                  days: "測試",
                  hours: "測試"
                }
              },
              footer: {
                pagination: {
                  action: "測試",
                  of: "測試"
                },
                new: "測試 測試"
              },
              total: {
                title: "測試",
                influencers: "測試",
                commission: "測試",
                subtotal: "測試",
                total: "測試",
                breakdown: {
                  table: {
                    headers: {
                      concept: "測試",
                      amount: "測試"
                    }
                  }
                }
              },
              deadline: "測試",
              useHashtag: "測試 #測試",
              noSelect: "測試 測試"
            },
            delete: {
              main: {
                title: "測試 測試 測試?",
                description: "測試 測試 測試 測試 測試 測試 測試 測試 測試' 測試 測試 測試 測試 測試 測試 測試.",
                confirm: "測試, 測試 測試!",
                cancel: "測試"
              },
              error: {
                title: "測試",
                description: "測試 測試 測試 測試 測試 測試 測試. 測試 測試 測試 測試."
              },
              done: {
                title: "測試!",
                description: "測試' 測試 測試 測試."
              }
            },
            save: "測試",
            launch: "測試",
            tables: {
              action: {
                table: {
                  title: "測試",
                  headers: {
                    index: "測",
                    status: "測試",
                    networks: "測試",
                    members: "測試",
                    vacants: "測試",
                    confirmed: "測試",
                    type: "測試",
                    deadline: "測試",
                    useHashtag: "測試 測試",
                    budget: "測試"
                  }
                }
              },
              options: {
                table: {
                  title: "測試 測試 測試",
                  headers: {
                    index: "測試",
                    message: "測試",
                    media: "測試",
                    date: "測試",
                    time: "測試"
                  }
                }
              }
            }
          },
          view: {
            pending: {
              title: "測試",
              description: "測試 測試 測試 測試 測試 測試 測試 測試 測試 測試."
            },
            list: {
              status: {
                pending: "測試",
                sent: "測試",
                accepted: "測試",
                rejected: "測試",
                scheduled: "測試",
                published: "測試",
                completed: "測試",
                cancelled: "測試",
                suspended: "測試"
              }
            }
          },
          messages: {
            saved: "測試 測試",
            updated: "測試 測試",
            error: "測試 測試"
          }
        },
        calendar: {
          title: "測試",
          button: "測試 測試",
          filters: {
            all: "測試",
            draft: "測試",
            pending: "測試",
            sent: "測試",
            accepted: "測試",
            rejected: "測試",
            scheduled: "測試",
            published: "測試",
            completed: "測試",
            cancelled: "測試",
            suspended: "測試"
          }
        },
        status: {
          title: "測試",
          soon: {
            title: "測試 測試 測試 測試 測試."
          }
        },
        summary: {
          title: "測試"
        },
        settings: {
          "title": "測試"
        }
      },
      saveButton: "測試",
      messages: {
        saved: "測試 測試"
      }
    },
    list: {
      new: "測試 測試",
      table: {
        headers: {
          index: "測",
          edit: "測試",
          campaigns: "測試",
          name: "測試",
          brands: "測試",
          type: "測試",
          dateStart: "測試 測試 測試",
          dateEnd: "測試 測試 測試",
          holder: "測試",
          owner: "測試",
          networks: "測試 測試",
          myAccounts: "測試 測試",
          myActions: "測試 測試",
          earnings: "測試",
          budget: "測試",
          status: "測試",
          shares: "測試",
          utility: "測試",
          influencers: "測試"
        },
        helpers: {
          type: {
            post: "測試",
            profilePicture: "測試 測試 測試",
            coverPhoto: "測試 測試 測試",
            noPostHour: "測試 測試 測試",
            noPostDay: "測試 測試 測試",
            share: "測試 測試"
          }
        },
        search: "測試",
        empty: "測試 測試 測試"
      },
      types: {
        created: "測試",
        partOf: "測試 測試"
      }
    }
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"reducers":{"bundle.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/campaigns/reducers/bundle.jsx                                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
const Reducers = {};
module.exportDefault(Reducers);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"advertising":{"ui":{"components":{"facebook":{"ad-sets":{"edit":{"country-select.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/advertising/ui/components/facebook/ad-sets/edit/country-select.jsx                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  default: () => FetchCountries
});
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Select;
module.watch(require("react-select"), {
  default(v) {
    Select = v;
  }

}, 1);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 2);

class FetchCountries extends React.Component {
  constructor() {
    super();
    this.getCountries = this.getCountries.bind(this);
  }

  getCountries(input, callback) {
    console.log(input);
    Meteor.call('fb-marketing-targeting-fields', 'vsRxw2iuDfednsYx8', {
      'type': 'adgeolocation',
      'location_types': ['country'],
      'q': input
    }, (err, res) => {
      if (res) {
        let keyName = {};
        let arr = res.data.map(obj => ({
          key: obj.key,
          name: obj.name
        }));
        callback(err, {
          options: arr
        });
      }
    });
  }

  render() {
    let {
      input: {
        value,
        onChange
      }
    } = this.props;
    const AsyncComponent = Select.Async;

    let getTranslation = key => {
      return "Advertising.edit." + key;
    };

    return React.createElement("div", {
      className: "section"
    }, React.createElement(AsyncComponent, {
      multi: true,
      value: value,
      onChange: onChange,
      valueKey: "key",
      labelKey: "name",
      loadOptions: this.getCountries,
      backspaceRemoves: true,
      placeholder: React.createElement(Translate, {
        value: getTranslation("select")
      })
    }));
  }

}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"form.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/advertising/ui/components/facebook/ad-sets/edit/form.jsx                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let FormSection, Field, reduxForm;
module.watch(require("redux-form"), {
  FormSection(v) {
    FormSection = v;
  },

  Field(v) {
    Field = v;
  },

  reduxForm(v) {
    reduxForm = v;
  }

}, 1);
let InputTags;
module.watch(require("../../../../../../core/ui/components/forms/input-tags"), {
  default(v) {
    InputTags = v;
  }

}, 2);
let InputSelect;
module.watch(require("../../../../../../core/ui/components/forms/input-select"), {
  default(v) {
    InputSelect = v;
  }

}, 3);
let InputDate;
module.watch(require("../../../../../../core/ui/components/forms/input-date"), {
  default(v) {
    InputDate = v;
  }

}, 4);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 5);

class EditForm extends React.Component {
  render() {
    let getTranslation = key => {
      return "Advertising.edit.tabs.settings." + key;
    };

    return React.createElement("div", null, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-12"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("name")
    })), React.createElement(Field, {
      component: "input",
      name: "name",
      className: "form-control"
    }))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationGender"
    }, React.createElement(Translate, {
      value: getTranslation("start_time")
    })), React.createElement(Field, {
      component: InputDate,
      name: "startDate",
      className: "form-control",
      options: [{
        value: "male",
        label: I18n.t(getTranslation("form.gender.values.male"))
      }, {
        value: "female",
        label: I18n.t(getTranslation("form.gender.values.female"))
      }]
    }))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationGender"
    }, React.createElement(Translate, {
      value: getTranslation("end_time")
    })), React.createElement(Field, {
      component: InputDate,
      name: "endDate",
      className: "form-control",
      options: [{
        value: "male",
        label: I18n.t(getTranslation("form.gender.values.male"))
      }, {
        value: "female",
        label: I18n.t(getTranslation("form.gender.values.female"))
      }]
    }))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationCountry"
    }, React.createElement(Translate, {
      value: getTranslation("billing_event")
    })), React.createElement(Field, {
      component: "select",
      name: "billingEvent",
      className: "form-control"
    }, React.createElement("option", {
      value: ""
    }, React.createElement(Translate, {
      value: getTranslation("billing_opt.no_select")
    })), React.createElement("option", {
      value: "APP_INSTALLS"
    }, React.createElement(Translate, {
      value: getTranslation("billing_opt.app_install")
    })), React.createElement("option", {
      value: "IMPRESSIONS"
    }, React.createElement(Translate, {
      value: getTranslation("billing_opt.impressions")
    })), React.createElement("option", {
      value: "LINK_CLICKS"
    }, React.createElement(Translate, {
      value: getTranslation("billing_opt.link_clicks")
    })), React.createElement("option", {
      value: "OFFER_CLAIMS"
    }, React.createElement(Translate, {
      value: getTranslation("billing_opt.offer_claims")
    })), React.createElement("option", {
      value: "PAGE_LIKES"
    }, React.createElement(Translate, {
      value: getTranslation("billing_opt.page_likes")
    })), React.createElement("option", {
      value: "POST_ENGAGEMENT"
    }, React.createElement(Translate, {
      value: getTranslation("billing_opt.post_engagement")
    })), React.createElement("option", {
      value: "VIDEO_VIEWS"
    }, React.createElement(Translate, {
      value: getTranslation("billing_opt.video_views")
    })), React.createElement("option", {
      value: "MRC_VIDEO_VIEWS"
    }, React.createElement(Translate, {
      value: getTranslation("billing_opt.impressions")
    })), React.createElement("option", {
      value: "COMPLETED_VIDEO_VIEWS"
    }, React.createElement(Translate, {
      value: getTranslation("billing_opt.mrc_video_views")
    })), React.createElement("option", {
      value: "VIDEO_VIEWS_15S"
    }, React.createElement(Translate, {
      value: getTranslation("billing_opt.video_views_15s")
    }))))), React.createElement(FormSection, {
      name: "money"
    }, React.createElement(FormSection, {
      name: "budget"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("budget_daily")
    })), React.createElement(Field, {
      component: "input",
      name: "daily",
      className: "form-control"
    }))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("budget_lifetime")
    })), React.createElement(Field, {
      component: "input",
      name: "lifetime",
      className: "form-control"
    }))))), React.createElement("div", {
      className: "col-md-12"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationPoliticalIdeas"
    }, React.createElement(Translate, {
      value: getTranslation("categories")
    })), React.createElement(Field, {
      component: InputTags,
      name: "adlabels",
      className: "form-control"
    })))));
  }

}

module.exportDefault(EditForm);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"publisher-platforms.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/advertising/ui/components/facebook/ad-sets/edit/publisher-platforms.jsx                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  default: () => PublisherFetch
});
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Select;
module.watch(require("react-select"), {
  default(v) {
    Select = v;
  }

}, 1);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 2);
const PLATFORMS = [{
  value: 'facebook',
  label: 'Facebook'
}, {
  value: 'instagram',
  label: 'Instagram'
}, {
  value: 'messenger',
  label: 'Messenger'
}, {
  value: 'audience network',
  label: 'Audience network'
}];

class PublisherFetch extends React.Component {
  constructor() {
    super();
  }

  render() {
    let {
      input: {
        value,
        onChange
      }
    } = this.props;

    let getTranslation = key => {
      return "Advertising.edit." + key;
    };

    return React.createElement("div", {
      className: "section"
    }, React.createElement(Select, {
      multi: true,
      value: value,
      onChange: onChange,
      options: PLATFORMS,
      removeSelected: true,
      placeholder: React.createElement(Translate, {
        value: getTranslation("select")
      })
    }));
  }

}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"targeting.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/advertising/ui/components/facebook/ad-sets/edit/targeting.jsx                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let FormSection, Field, reduxForm;
module.watch(require("redux-form"), {
  FormSection(v) {
    FormSection = v;
  },

  Field(v) {
    Field = v;
  },

  reduxForm(v) {
    reduxForm = v;
  }

}, 1);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 2);
let AudienceSizeWithData;
module.watch(require("../../../../containers/facebook/campaigns/audience"), {
  default(v) {
    AudienceSizeWithData = v;
  }

}, 3);
let DelEstimateSizeWithData;
module.watch(require("../../../../containers/facebook/campaigns/delivery_estimate"), {
  default(v) {
    DelEstimateSizeWithData = v;
  }

}, 4);
let SelectCountry;
module.watch(require("./country-select"), {
  default(v) {
    SelectCountry = v;
  }

}, 5);
let SelectUserOS;
module.watch(require("./user-os-select"), {
  default(v) {
    SelectUserOS = v;
  }

}, 6);
let UserDevFetch;
module.watch(require("./user-device-select"), {
  default(v) {
    UserDevFetch = v;
  }

}, 7);
let PublisherFetch;
module.watch(require("./publisher-platforms"), {
  default(v) {
    PublisherFetch = v;
  }

}, 8);
let connect;
module.watch(require("react-redux"), {
  connect(v) {
    connect = v;
  }

}, 9);

class EditTargeting extends React.Component {
  render() {
    let {
      form
    } = this.props;
    const targeting = form && form.targeting ? form.targeting : {};
    let countries = targeting.countries || [];

    if (targeting && countries) {
      countries = countries.map(c => c.key);
    }

    let getTranslation = key => {
      return "Advertising.edit.tabs.targeting." + key;
    };

    let data = {
      currency: 'USD',
      optimize_for: 'OFFSITE_CONVERSIONS',
      targeting_spec: {
        geo_locations: {
          countries: [...countries]
        },
        age_min: targeting.age_min,
        age_max: targeting.age_max
      }
    };
    let data2 = {
      "targeting_spec": {
        "geo_locations": {
          "country_groups": [...countries]
        },
        "user_device": [targeting.userDev],
        "user_os": [targeting.userOS]
      },
      "optimization_goal": "IMPRESSIONS"
    };
    return React.createElement("div", null, React.createElement(FormSection, {
      name: "targeting"
    }, React.createElement("div", {
      className: "row"
    }, React.createElement("h4", null, React.createElement(Translate, {
      value: getTranslation("geolocation")
    })), React.createElement("div", {
      className: "col-md-12"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("countries")
    })), React.createElement(Field, {
      component: SelectCountry,
      name: "countries",
      className: "form-control"
    }))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("user_os")
    })), React.createElement(Field, {
      component: SelectUserOS,
      name: "user_os",
      className: "form-control"
    }))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("user_device")
    })), React.createElement(Field, {
      component: UserDevFetch,
      name: "user_device",
      className: "form-control"
    }))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("publisher_platforms")
    })), React.createElement(Field, {
      component: PublisherFetch,
      name: "publisher",
      className: "form-control"
    }))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("age")
    })), React.createElement(Field, {
      component: "input",
      name: "age_min",
      type: "number",
      className: "form-control",
      placeholder: "Min"
    }))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, "\xA0"), React.createElement(Field, {
      component: "input",
      name: "age_max",
      type: "number",
      className: "form-control",
      placeholder: "Max"
    })))))), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement(AudienceSizeWithData, {
      data: data,
      adID: 'act_134799713698531',
      socialAccountID: 'vsRxw2iuDfednsYx8'
    })), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement(DelEstimateSizeWithData, {
      data: data2,
      adID: 'act_134799713698531',
      socialAccountID: 'vsRxw2iuDfednsYx8'
    })))));
  }

}

module.exportDefault(connect(state => {
  return {
    form: state.form["adSet-edit"].values
  };
})(EditTargeting));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"user-device-select.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/advertising/ui/components/facebook/ad-sets/edit/user-device-select.jsx                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  default: () => UserDevFetch
});
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Select;
module.watch(require("react-select"), {
  default(v) {
    Select = v;
  }

}, 1);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 2);

class UserDevFetch extends React.Component {
  constructor() {
    super();
    this.getDevices = this.getDevices.bind(this);
  }

  getDevices(input, callback) {
    console.log(input);
    Meteor.call('fb-marketing-targeting-fields', 'vsRxw2iuDfednsYx8', {
      'type': 'adTargetingCategory',
      'class': 'user_device',
      'location_types': ['country'],
      'q': input
    }, (err, res) => {
      if (res) {
        let keyName = {};
        let arr = res.data.map(obj => ({
          key: obj.description,
          name: obj.name
        }));
        callback(err, {
          options: arr
        });
      }
    });
  }

  render() {
    let {
      input: {
        value,
        onChange
      }
    } = this.props;
    const AsyncComponent = Select.Async;

    let getTranslation = key => {
      return "Advertising.edit." + key;
    };

    return React.createElement("div", {
      className: "section"
    }, React.createElement(AsyncComponent, {
      multi: true,
      value: value,
      onChange: onChange,
      valueKey: "key",
      labelKey: "name",
      loadOptions: this.getDevices,
      backspaceRemoves: true,
      placeholder: React.createElement(Translate, {
        value: getTranslation("select")
      })
    }));
  }

}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"user-os-select.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/advertising/ui/components/facebook/ad-sets/edit/user-os-select.jsx                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  default: () => UserOsFetch
});
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Select;
module.watch(require("react-select"), {
  default(v) {
    Select = v;
  }

}, 1);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 2);

class UserOsFetch extends React.Component {
  constructor() {
    super();
    this.getOS = this.getOS.bind(this);
  }

  getOS(input, callback) {
    console.log(input);
    Meteor.call('fb-marketing-targeting-fields', 'vsRxw2iuDfednsYx8', {
      'type': 'adTargetingCategory',
      'class': 'user_os',
      'location_types': ['country'],
      'q': input
    }, (err, res) => {
      if (res) {
        let keyName = {};
        let arr = res.data.map(obj => ({
          key: obj.platform,
          name: obj.platform
        }));
        callback(err, {
          options: arr
        });
      }
    });
  }

  render() {
    let {
      input: {
        value,
        onChange
      }
    } = this.props;
    const AsyncComponent = Select.Async;

    let getTranslation = key => {
      return "Advertising.edit." + key;
    };

    return React.createElement("div", {
      className: "section"
    }, React.createElement(AsyncComponent, {
      multi: true,
      value: value,
      onChange: onChange,
      valueKey: "key",
      labelKey: "name",
      loadOptions: this.getOS,
      backspaceRemoves: true,
      placeholder: React.createElement(Translate, {
        value: getTranslation("select")
      })
    }));
  }

}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"edit.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/advertising/ui/components/facebook/ad-sets/edit.jsx                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let reduxForm;
module.watch(require("redux-form"), {
  reduxForm(v) {
    reduxForm = v;
  }

}, 1);
let Tabs, Tab;
module.watch(require("react-bootstrap"), {
  Tabs(v) {
    Tabs = v;
  },

  Tab(v) {
    Tab = v;
  }

}, 2);
let EditForm;
module.watch(require("./edit/form"), {
  default(v) {
    EditForm = v;
  }

}, 3);
let EditTargeting;
module.watch(require("./edit/targeting"), {
  default(v) {
    EditTargeting = v;
  }

}, 4);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 5);

class AdSetsEdit extends React.Component {
  render() {
    let getTranslation = key => {
      return "Advertising.edit." + key;
    };

    let {
      handleSubmit
    } = this.props;
    return React.createElement("form", {
      onSubmit: handleSubmit
    }, React.createElement("div", {
      className: "title"
    }, React.createElement("h1", null, React.createElement(Translate, {
      value: getTranslation("title_adgroup")
    }))), React.createElement("div", {
      className: "body advertising-tabs"
    }, React.createElement(Tabs, {
      defaultActiveKey: "settings",
      id: "uncontrolled-tab-example",
      bsStyle: "tabs",
      onSelect: this.setTab
    }, React.createElement(Tab, {
      eventKey: "settings",
      title: React.createElement(Translate, {
        value: getTranslation("settings")
      })
    }, React.createElement(EditForm, null)), React.createElement(Tab, {
      eventKey: "targeting",
      title: React.createElement(Translate, {
        value: getTranslation("targeting")
      })
    }, React.createElement(EditTargeting, null))), React.createElement("button", {
      type: "submit",
      className: "btn btn-primary pull-right"
    }, "Save")));
  }

}

AdSetsEdit = reduxForm({
  form: 'adSet-edit',
  enableReinitialize: true
})(AdSetsEdit);
module.exportDefault(AdSetsEdit);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"list-item.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/advertising/ui/components/facebook/ad-sets/list-item.jsx                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, Localize;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  Localize(v) {
    Localize = v;
  }

}, 1);
let OverlayTrigger, Tooltip;
module.watch(require("react-bootstrap"), {
  OverlayTrigger(v) {
    OverlayTrigger = v;
  },

  Tooltip(v) {
    Tooltip = v;
  }

}, 2);

function getToltip(tooltip) {
  return React.createElement(Tooltip, {
    id: String(Number(new Date()))
  }, tooltip);
}

class AdSetsListItem extends React.Component {
  render() {
    function formatDate(date) {
      if (date === "Invalid Date") return "Ongoing";
      return moment(new Date(date)).format("DD/MM/YYYY");
    }

    let {
      adSet,
      setAdSet,
      active,
      select
    } = this.props;
    return React.createElement("div", {
      className: "item " + (active === adSet._id ? "active" : ""),
      onClick: setAdSet(adSet._id)
    }, React.createElement("div", {
      className: "title"
    }, React.createElement("div", {
      className: "name"
    }, adSet.name), React.createElement(OverlayTrigger, {
      placement: "left",
      overlay: getToltip(adSet.status.effective)
    }, React.createElement("div", {
      className: "status " + adSet.status.effective.toLowerCase()
    }))), React.createElement("div", {
      className: "content"
    }, React.createElement("div", {
      className: "row opposite-align"
    }, React.createElement("div", {
      className: "col-md-7"
    }, React.createElement("div", {
      className: "date"
    }, formatDate(adSet.startDate), " - ", formatDate(adSet.endDate))), React.createElement("div", {
      className: "col-md-5"
    }, React.createElement("div", {
      className: "budget"
    }, React.createElement(Localize, {
      value: Number(adSet.money.budget.daily) / 100,
      options: {
        style: 'currency',
        currency: 'USD',
        minimumFractionDigits: 2,
        maximumFractionDigits: 2
      }
    }), " USD"))), React.createElement("div", {
      className: "row align-center"
    }, React.createElement("div", {
      className: "col-md-3"
    }, React.createElement("div", {
      className: "billingEvent"
    }, React.createElement(OverlayTrigger, {
      placement: "top",
      overlay: getToltip(adSet.billingEvent)
    }, React.createElement("i", {
      className: "fa fa-money",
      "aria-hidden": "true"
    })))), React.createElement("div", {
      className: "col-md-3"
    }, React.createElement("div", {
      className: "goal"
    }, React.createElement(OverlayTrigger, {
      placement: "top",
      overlay: getToltip(adSet.goal)
    }, React.createElement("i", {
      className: "fa fa-bullseye",
      "aria-hidden": "true"
    })))), React.createElement("div", {
      className: "col-md-3"
    }, React.createElement("div", {
      className: "impressions"
    }, React.createElement(OverlayTrigger, {
      placement: "top",
      overlay: getToltip(adSet.impressions + " Impressions")
    }, React.createElement("i", {
      className: "fa fa-eye",
      "aria-hidden": "true"
    })))), React.createElement("div", {
      className: "col-md-3"
    }, React.createElement("div", {
      className: "impressions"
    }, React.createElement(OverlayTrigger, {
      placement: "top",
      overlay: getToltip("Edit")
    }, React.createElement("i", {
      className: "fa fa-pencil",
      "aria-hidden": "true",
      onClick: select(adSet)
    })))))));
  }

}

module.exportDefault(AdSetsListItem);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"list.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/advertising/ui/components/facebook/ad-sets/list.jsx                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let AdSetsListItem;
module.watch(require("./list-item"), {
  default(v) {
    AdSetsListItem = v;
  }

}, 1);
let Modal;
module.watch(require("react-modal"), {
  default(v) {
    Modal = v;
  }

}, 2);
let AdSetsEdit;
module.watch(require("./edit"), {
  default(v) {
    AdSetsEdit = v;
  }

}, 3);
let notie;
module.watch(require("notie"), {
  default(v) {
    notie = v;
  }

}, 4);
let moment;
module.watch(require("moment"), {
  default(v) {
    moment = v;
  }

}, 5);

class AdSetsList extends React.Component {
  constructor() {
    super();
    this.state = {
      modalIsOpen: false,
      current: null
    };
    this.openModal = this.openModal.bind(this);
    this.closeModal = this.closeModal.bind(this);
    this.editAdSet = this.editAdSet.bind(this);
    this.formSubmit = this.formSubmit.bind(this);
  }

  openModal() {
    this.setState({
      modalIsOpen: true
    });
  }

  closeModal() {
    this.setState({
      modalIsOpen: false,
      current: null
    });
  }

  editAdSet(adSet) {
    let component = this;
    return function () {
      component.setState({
        modalIsOpen: true,
        current: adSet
      });
    };
  }

  formSubmit(values) {
    let {
      accountID,
      adAccountID,
      campaignID
    } = this.props;
    let {
      name,
      adlabels,
      startDate,
      endDate,
      targeting,
      billingEvent
    } = values;
    let countries_array = targeting.countries.map(c => c.key);
    let user_device_array = targeting.user_device.map(dev => dev.key);
    let user_os_array = targeting.user_os.map(os => os.key);
    console.log(targeting);
    let platforms_array = targeting.publisher.map(pl => pl.value);
    let options = {
      year: '2-digit',
      month: '2-digit',
      day: '2-digit',
      hour: '2-digit',
      minute: '2-digit'
    };
    console.log('type', typeof campaignID);
    let obj = {
      "name": name,
      "adLabels": adlabels,
      "daily_budget": 2000,
      "bid_amount": 2,
      "start_time": moment(startDate).format('DD-MM-YYYY h:mm'),
      "end_time": moment(endDate).format('DD-MM-YYYY h:mm'),
      "billing_event": billingEvent,
      "campaign_id": campaignID,
      "status": "PAUSED",
      "targeting": {
        "user_device": user_device_array,
        "user_os": user_os_array,
        "geo_locations": {
          "countries": countries_array
        },
        "publisher_platforms": platforms_array
      }
    };
    console.log("FORM_SUBMITED", obj);
    Meteor.call('fb-marketing-adsets-create', accountID, adAccountID, obj, function (err, res) {
      console.log('RESPONSE', err, res);

      if (err) {
        notie(3, err.message, 3);
        return;
      } // What to do when success

    });
  }

  render() {
    let {
      adSets,
      setAdSet,
      active
    } = this.props;
    console.log("AdSetsList", adSets);
    return React.createElement("div", null, React.createElement("div", {
      className: "title"
    }, "Ad Groups", React.createElement("button", {
      className: "advertising-button",
      onClick: this.openModal
    }, React.createElement("i", {
      className: "fa fa-plus-circle",
      "aria-hidden": "true"
    }))), React.createElement("div", {
      className: "list"
    }, adSets.map((a, i) => React.createElement(AdSetsListItem, {
      key: i,
      adSet: a,
      setAdSet: setAdSet,
      active: active,
      select: this.editAdSet
    }))), React.createElement(Modal, {
      isOpen: this.state.modalIsOpen,
      onRequestClose: this.closeModal,
      className: "advertising-modal",
      closeTimeoutMS: 800,
      contentLabel: "Example Modal"
    }, React.createElement("button", {
      className: "close",
      onClick: this.closeModal
    }, React.createElement("i", {
      className: "icon wb-close-mini",
      "aria-hidden": "true"
    })), React.createElement(AdSetsEdit, {
      close: this.closeModal,
      onSubmit: this.formSubmit,
      initialValues: this.state.current
    })));
  }

}

module.exportDefault(AdSetsList);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"accounts":{"list.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/advertising/ui/components/facebook/accounts/list.jsx                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Link;
module.watch(require("react-router"), {
  Link(v) {
    Link = v;
  }

}, 1);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 2);
let NoAccounts;
module.watch(require("./no-accounts"), {
  default(v) {
    NoAccounts = v;
  }

}, 3);

class AccountsList extends React.Component {
  constructor() {
    super();
  }

  render() {
    let getTranslation = key => {
      return "Core.loading." + key;
    };

    let {
      accounts,
      socialAccountID
    } = this.props;
    if (accounts.length === 0) return React.createElement(NoAccounts, null);
    return React.createElement("div", {
      className: "advertising-accounts"
    }, React.createElement("div", {
      className: "row pages-list"
    }, accounts.map(a => React.createElement("div", {
      className: "col-md-6 list-group-item",
      key: a._id
    }, React.createElement("div", {
      className: "media"
    }, React.createElement(Link, {
      to: "/advertising/facebook/".concat(socialAccountID, "/act_").concat(a._id)
    }, React.createElement("div", {
      className: "media-left"
    }, React.createElement("a", {
      className: "avatar",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      className: "img-fluid",
      src: "https://s3.amazonaws.com/ibol-app-media/icons/facebook-ad-account.png",
      alt: "..."
    }))), React.createElement("div", {
      className: "media-body"
    }, React.createElement("h4", {
      className: "media-heading"
    }, a.name), React.createElement("small", null, a.endAdvertiser.name ? a.endAdvertiser.name : "-")), React.createElement("div", {
      className: "media-right"
    })))))));
  }

}

module.exportDefault(AccountsList);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"no-accounts.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/advertising/ui/components/facebook/accounts/no-accounts.jsx                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 1);

class NoAccounts extends React.Component {
  render() {
    let getTranslation = key => {
      return "TeamAttack.new.search.results.empty." + key;
    };

    return React.createElement("div", {
      className: "no-results"
    }, React.createElement("div", {
      className: "content"
    }, React.createElement("i", {
      className: "icon wb-alert-circle"
    }), React.createElement("h3", null, React.createElement(Translate, {
      value: getTranslation("message")
    }))));
  }

}

module.exportDefault(NoAccounts);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"ad":{"edit.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/advertising/ui/components/facebook/ad/edit.jsx                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let reduxForm, FormSection, Field;
module.watch(require("redux-form"), {
  reduxForm(v) {
    reduxForm = v;
  },

  FormSection(v) {
    FormSection = v;
  },

  Field(v) {
    Field = v;
  }

}, 1);
let Tabs, Tab;
module.watch(require("react-bootstrap"), {
  Tabs(v) {
    Tabs = v;
  },

  Tab(v) {
    Tab = v;
  }

}, 2);
let InputFileReader;
module.watch(require("../../../../../core/ui/components/forms/input-file-reader"), {
  default(v) {
    InputFileReader = v;
  }

}, 3);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 4);

class AdEdit extends React.Component {
  render() {
    let getTranslation = key => {
      return "Accounts.edit.tabs.information." + key;
    };

    return React.createElement("div", null, React.createElement("div", {
      className: "title"
    }, React.createElement("h1", null, "New Ad")), React.createElement("div", {
      className: "body"
    }, React.createElement(FormSection, {
      name: "ad"
    }, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-12"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("form.name")
    })), React.createElement(Field, {
      component: "input",
      name: "name",
      className: "form-control"
    }))))), React.createElement(FormSection, {
      name: "creative"
    }, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-12"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("form.title")
    })), React.createElement(Field, {
      component: "input",
      name: "title",
      className: "form-control"
    }))), React.createElement("div", {
      className: "col-md-12"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("form.body")
    })), React.createElement(Field, {
      component: "textarea",
      name: "body",
      className: "form-control"
    }))), React.createElement("div", {
      className: "col-md-12"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("form.image")
    })), React.createElement(Field, {
      component: InputFileReader,
      name: "image",
      className: "form-control",
      settings: {
        multiple: false
      },
      uploader: "advertising-image-upload"
    }))), React.createElement("div", {
      className: "col-md-12"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("form.link")
    })), React.createElement(Field, {
      component: "input",
      name: "link",
      className: "form-control"
    }))))), React.createElement("button", {
      className: "btn btn-primary pull-right",
      type: "submit",
      onClick: this.props.submit
    }, "Save")));
  }

}

AdEdit = reduxForm({
  form: 'ad-edit',
  enableReinitialize: true
})(AdEdit);
module.exportDefault(AdEdit);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"list-item.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/advertising/ui/components/facebook/ad/list-item.jsx                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let OverlayTrigger, Tooltip;
module.watch(require("react-bootstrap"), {
  OverlayTrigger(v) {
    OverlayTrigger = v;
  },

  Tooltip(v) {
    Tooltip = v;
  }

}, 1);

function getToltip(tooltip) {
  return React.createElement(Tooltip, {
    id: String(Number(new Date()))
  }, tooltip);
}

class AdListItem extends React.Component {
  render() {
    let {
      ad,
      setAd,
      active
    } = this.props;
    return React.createElement("div", {
      className: "item " + (active === ad._id ? "active" : ""),
      onClick: setAd(ad._id)
    }, React.createElement("div", {
      className: "name"
    }, React.createElement("div", {
      className: "title"
    }, React.createElement("div", {
      className: "name"
    }, ad.name), React.createElement(OverlayTrigger, {
      placement: "left",
      overlay: getToltip(ad.status.effective)
    }, React.createElement("div", {
      className: "status " + ad.status.effective.toLowerCase()
    })))));
  }

}

module.exportDefault(AdListItem);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"list.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/advertising/ui/components/facebook/ad/list.jsx                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let AdsListItem;
module.watch(require("./list-item"), {
  default(v) {
    AdsListItem = v;
  }

}, 1);
let Modal;
module.watch(require("react-modal"), {
  default(v) {
    Modal = v;
  }

}, 2);
let AdEdit;
module.watch(require("./edit"), {
  default(v) {
    AdEdit = v;
  }

}, 3);

class AdList extends React.Component {
  constructor() {
    super();
    this.state = {
      modalIsOpen: false
    };
    this.openModal = this.openModal.bind(this);
    this.closeModal = this.closeModal.bind(this);
    this.formSubmit = this.formSubmit.bind(this);
  }

  openModal() {
    this.setState({
      modalIsOpen: true
    });
  }

  closeModal() {
    this.setState({
      modalIsOpen: false
    });
  }

  formSubmit(data) {
    let component = this;
    let {
      adAccountID,
      accountID,
      adSetID,
      campaignID,
      refetch
    } = this.props;
    let IDs = {
      adAccountID,
      accountID,
      adSetID,
      campaignID
    };
    console.log("AD_SET_SUBMIT", data, IDs);
    Meteor.call("advertising-facebook-create-compound-ad", IDs, data, function (err, res) {
      console.log("AD_CREATE", err, res);
      refetch({});
      component.closeModal();
    });
  }

  render() {
    let {
      ads,
      setAd,
      active
    } = this.props;
    console.log("adsList", ads);
    return React.createElement("div", null, React.createElement("div", {
      className: "title"
    }, "Ads", React.createElement("button", {
      className: "advertising-button",
      onClick: this.openModal
    }, React.createElement("i", {
      className: "fa fa-plus-circle",
      "aria-hidden": "true"
    }))), React.createElement("div", {
      className: "list"
    }, ads.map((a, i) => React.createElement(AdsListItem, {
      key: i,
      ad: a,
      setAd: setAd,
      active: active
    }))), React.createElement(Modal, {
      isOpen: this.state.modalIsOpen,
      onRequestClose: this.closeModal,
      className: "advertising-modal",
      closeTimeoutMS: 800,
      contentLabel: "Ad Modal"
    }, React.createElement("button", {
      className: "close",
      onClick: this.closeModal
    }, React.createElement("i", {
      className: "icon wb-close-mini",
      "aria-hidden": "true"
    })), React.createElement(AdEdit, {
      close: this.closeModal,
      onSubmit: this.formSubmit,
      initialValues: this.state.current
    })));
  }

}

module.exportDefault(AdList);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"view.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/advertising/ui/components/facebook/ad/view.jsx                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let FacebookPreview;
module.watch(require("../../../../../search/ui/components/previews/facebook"), {
  default(v) {
    FacebookPreview = v;
  }

}, 1);
let OverlayTrigger, Tooltip;
module.watch(require("react-bootstrap"), {
  OverlayTrigger(v) {
    OverlayTrigger = v;
  },

  Tooltip(v) {
    Tooltip = v;
  }

}, 2);

function getToltip(tooltip) {
  return React.createElement(Tooltip, {
    id: String(Number(new Date()))
  }, tooltip);
}

function formatDate(date) {
  if (date === "Invalid Date") return "Ongoing";
  return moment(new Date(date)).format("DD/MM/YYYY");
}

class AdView extends React.Component {
  render() {
    let {
      ad,
      socialAccount
    } = this.props;
    if (!ad) return null;
    console.log("ad_VIEW", ad);
    let post = {
      user: {
        avatar: socialAccount.information.avatar,
        name: socialAccount.information.name
      },
      link: ad.creative[0].link,
      date: new Date(),
      description: ad.creative[0].body,
      media: {
        type: "photo",
        url: ad.creative[0].image
      }
    };
    console.log("AD_VIEW_POST", post);
    return React.createElement("div", {
      className: "ad-view"
    }, React.createElement("div", {
      className: "title"
    }, "Ad Preview"), React.createElement("div", {
      className: "name"
    }, React.createElement("div", {
      className: "name"
    }, ad.name), React.createElement(OverlayTrigger, {
      placement: "left",
      overlay: getToltip(ad.status.effective)
    }, React.createElement("div", {
      className: "status " + ad.status.effective.toLowerCase()
    })), React.createElement("div", {
      className: "created"
    }, formatDate(ad.created))), ad.reviewFeedback && React.createElement("blockquote", {
      className: "blockquote custom-blockquote blockquote-danger"
    }, React.createElement("p", {
      className: "mb-0"
    }, ad.reviewFeedback)), React.createElement(FacebookPreview, {
      data: post,
      showBadge: false
    }));
  }

}

module.exportDefault(AdView);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"campaigns":{"list.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/advertising/ui/components/facebook/campaigns/list.jsx                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 1);
let BootstrapTable, TableHeaderColumn;
module.watch(require("react-bootstrap-table"), {
  BootstrapTable(v) {
    BootstrapTable = v;
  },

  TableHeaderColumn(v) {
    TableHeaderColumn = v;
  }

}, 2);
let Link;
module.watch(require("react-router"), {
  Link(v) {
    Link = v;
  }

}, 3);

const renderDate = function (cell, row) {
  // String example
  if (cell === "Invalid Date") return "Ongoing";
  return moment(new Date(cell)).format("DD/MM/YY");
};

class CampaignList extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      sortName: undefined,
      sortOrder: undefined
    };
    this.onSortChange = this.onSortChange.bind(this);
  }

  onSortChange(sortName, sortOrder) {
    this.setState({
      sortName,
      sortOrder
    });
  }

  render() {
    let getTranslation = key => {
      return "Advertising.list." + key;
    };

    let {
      data,
      accountID,
      adAccountID
    } = this.props;
    const options = {
      sortName: this.state.sortName,
      sortOrder: this.state.sortOrder,
      onSortChange: this.onSortChange,
      noDataText: I18n.t(getTranslation("table.empty"))
    };

    const renderLink = function (cell, row) {
      // String example
      return React.createElement(Link, {
        to: "/advertising/facebook/".concat(accountID, "/").concat(adAccountID, "/").concat(row._id)
      }, cell);
    };

    const renderStatus = function (cell, row) {
      // String example
      return React.createElement(Link, {
        to: "/advertising/facebook/".concat(accountID, "/").concat(adAccountID, "/").concat(row._id)
      }, React.createElement("div", {
        className: "status " + cell
      }));
    };

    return React.createElement("div", {
      className: "page-content container-fluid"
    }, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-12"
    }, React.createElement("a", {
      className: "btn btn-primary table-button",
      onClick: this.props.new
    }, React.createElement(Translate, {
      value: getTranslation("new")
    })))), React.createElement("div", {
      className: "spacer-30"
    }), React.createElement("div", {
      className: "ibol-table"
    }, React.createElement(BootstrapTable, {
      data: data,
      options: options,
      pagination: true,
      search: true,
      searchPlaceholder: I18n.t(getTranslation("table.search"))
    }, React.createElement(TableHeaderColumn, {
      isKey: true,
      dataField: "_id",
      dataFormat: renderStatus,
      dataAlign: "center",
      width: "110px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.status")
    })), React.createElement(TableHeaderColumn, {
      dataField: "name",
      dataFormat: renderLink,
      dataSort: true
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.name")
    })), React.createElement(TableHeaderColumn, {
      dataField: "startDate",
      dataFormat: renderDate,
      dataSort: true,
      width: "150px",
      dataAlign: "center"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.startDate")
    })), React.createElement(TableHeaderColumn, {
      dataField: "endDate",
      dataFormat: renderDate,
      width: "150px",
      dataSort: true,
      dataAlign: "center"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.endDate")
    })), React.createElement(TableHeaderColumn, {
      dataField: "objective",
      width: "200px",
      dataSort: true,
      dataAlign: "center"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.objective")
    })))));
  }

}

module.exportDefault(CampaignList);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"new.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/advertising/ui/components/facebook/campaigns/new.jsx                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 1);
let Field, reduxForm;
module.watch(require("redux-form"), {
  Field(v) {
    Field = v;
  },

  reduxForm(v) {
    reduxForm = v;
  }

}, 2);

class NewCampaign extends React.Component {
  render() {
    const {
      handleSubmit,
      pristine,
      reset,
      submitting
    } = this.props;

    let getTranslation = key => {
      return "Campaigns.new." + key;
    };

    return React.createElement("form", {
      onSubmit: handleSubmit
    }, React.createElement("h2", null, React.createElement(Translate, {
      value: getTranslation("title")
    })), React.createElement("div", {
      className: "padding-20"
    }, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("name")
    })), React.createElement(Field, {
      component: "input",
      name: "name",
      className: "form-control"
    }))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("name")
    })), React.createElement(Field, {
      component: "select",
      name: "buyingType",
      className: "form-control"
    }, React.createElement("option", {
      value: ""
    }, "Not Selected"), React.createElement("option", {
      value: "AUCTION"
    }, "AUTCION"))))), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("spend_cap")
    })), React.createElement(Field, {
      component: "input",
      type: "number",
      name: "spendCap",
      className: "form-control"
    }))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("objective")
    })), React.createElement(Field, {
      component: "select",
      name: "objective",
      className: "form-control"
    }, React.createElement("option", {
      value: ""
    }, "Not Selected"), React.createElement("option", {
      value: "APP_INSTALLS"
    }, "APP_INSTALLS"), React.createElement("option", {
      value: "BRAND_AWARENESS"
    }, " BRAND_AWARENESS"), React.createElement("option", {
      value: "CONVERSIONS"
    }, " CONVERSIONS"), React.createElement("option", {
      value: "EVENT_RESPONSES"
    }, " EVENT_RESPONSES"), React.createElement("option", {
      value: "LEAD_GENERATION"
    }, " LEAD_GENERATION"), React.createElement("option", {
      value: "LINK_CLICKS"
    }, " LINK_CLICKS"), React.createElement("option", {
      value: "LOCAL_AWARENESS"
    }, " LOCAL_AWARENESS"), React.createElement("option", {
      value: "OFFER_CLAIMS"
    }, " OFFER_CLAIMS"), React.createElement("option", {
      value: "PAGE_LIKES"
    }, " PAGE_LIKES"), React.createElement("option", {
      value: "POST_ENGAGEMENT"
    }, " POST_ENGAGEMENT"), React.createElement("option", {
      value: "PRODUCT_CATALOG_SALES"
    }, " PRODUCT_CATALOG_SALES"), React.createElement("option", {
      value: "REACH"
    }, " REACH"), React.createElement("option", {
      value: "VIDEO_VIEWS"
    }, " VIDEO_VIEWS"), React.createElement("option", {
      value: "APP_INSTALLS"
    }, "APP_INSTALLS"), React.createElement("option", {
      value: "BRAND_AWARENESS"
    }, " BRAND_AWARENESS"), React.createElement("option", {
      value: "CONVERSIONS"
    }, " CONVERSIONS"), React.createElement("option", {
      value: "EVENT_RESPONSES"
    }, " EVENT_RESPONSES"), React.createElement("option", {
      value: "LEAD_GENERATION"
    }, " LEAD_GENERATION"), React.createElement("option", {
      value: "LINK_CLICKS"
    }, " LINK_CLICKS"), React.createElement("option", {
      value: "LOCAL_AWARENESS"
    }, " LOCAL_AWARENESS"), React.createElement("option", {
      value: "OFFER_CLAIMS"
    }, " OFFER_CLAIMS"), React.createElement("option", {
      value: "PAGE_LIKES"
    }, " PAGE_LIKES"), React.createElement("option", {
      value: "POST_ENGAGEMENT"
    }, " POST_ENGAGEMENT"), React.createElement("option", {
      value: "PRODUCT_CATALOG_SALES"
    }, " PRODUCT_CATALOG_SALES"), React.createElement("option", {
      value: "REACH"
    }, " REACH"), React.createElement("option", {
      value: "VIDEO_VIEWS"
    }, " VIDEO_VIEWS"))))), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-12"
    }, React.createElement("button", {
      type: "submit",
      className: "btn btn-primary pull-right"
    }, React.createElement(Translate, {
      value: getTranslation("button")
    }))))));
  }

}

NewCampaign = reduxForm({
  form: 'facebook-campaign-create'
})(NewCampaign);
module.exportDefault(NewCampaign);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"edit":{"columns.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/advertising/ui/components/facebook/edit/columns.jsx                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let AdSetsList;
module.watch(require("../../../containers/facebook/ad-sets/list"), {
  default(v) {
    AdSetsList = v;
  }

}, 1);
let AdList;
module.watch(require("../../../containers/facebook/ad/list"), {
  default(v) {
    AdList = v;
  }

}, 2);
let AdView;
module.watch(require("../../../containers/facebook/ad/view"), {
  default(v) {
    AdView = v;
  }

}, 3);
let EmptyColumn;
module.watch(require("../../empty-column"), {
  default(v) {
    EmptyColumn = v;
  }

}, 4);

class CampaignColumns extends React.Component {
  render() {
    let {
      active,
      columns,
      setAdSet,
      setAd,
      socialAccount,
      accountID,
      adAccountID,
      campaignID
    } = this.props;
    return React.createElement("div", {
      className: "row campaign-columns"
    }, React.createElement("div", {
      className: "col-md-".concat(columns.groups)
    }, React.createElement(AdSetsList, {
      active: active.adSet,
      setAdSet: setAdSet,
      accountID: accountID,
      adAccountID: adAccountID,
      campaignID: campaignID
    })), React.createElement("div", {
      className: "col-md-".concat(columns.ad)
    }, active.adSet ? React.createElement(AdList, {
      active: active.ad,
      setAd: setAd,
      adSetID: active.adSet,
      accountID: accountID,
      adAccountID: adAccountID,
      campaignID: campaignID
    }) : React.createElement(EmptyColumn, {
      item: "Ad Set"
    })), React.createElement("div", {
      className: "col-md-".concat(columns.preview)
    }, active.ad ? React.createElement(AdView, {
      adID: active.ad,
      socialAccount: socialAccount,
      accountID: accountID,
      adAccountID: adAccountID,
      campaignID: campaignID
    }) : React.createElement(EmptyColumn, {
      item: "Ad"
    })));
  }

}

module.exportDefault(CampaignColumns);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"container.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/advertising/ui/components/facebook/edit/container.jsx                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let CampaignHeader;
module.watch(require("./header"), {
  default(v) {
    CampaignHeader = v;
  }

}, 1);
let CampaignColumns;
module.watch(require("./columns"), {
  default(v) {
    CampaignColumns = v;
  }

}, 2);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 3);

class EditContainer extends React.Component {
  render() {
    let settings = {
      columns: {
        groups: 3,
        ad: 3,
        preview: 6
      }
    };
    let {
      active,
      socialAccount,
      campaign,
      setAdSet,
      setAd,
      accountID,
      adAccountID,
      campaignID
    } = this.props;
    return React.createElement("div", null, React.createElement(CampaignHeader, {
      campaign: campaign,
      socialAccount: socialAccount
    }), React.createElement(CampaignColumns, {
      active: active,
      setAdSet: setAdSet,
      setAd: setAd,
      columns: settings.columns,
      socialAccount: socialAccount,
      accountID: accountID,
      adAccountID: adAccountID,
      campaignID: campaignID
    }));
  }

}

module.exportDefault(EditContainer);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"header.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/advertising/ui/components/facebook/edit/header.jsx                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let SocialAvatar;
module.watch(require("../../../../../core/ui/components/social-avatar"), {
  default(v) {
    SocialAvatar = v;
  }

}, 1);
let Translate, Localize;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  Localize(v) {
    Localize = v;
  }

}, 2);

class CampaignHeader extends React.Component {
  render() {
    let {
      campaign,
      socialAccount
    } = this.props;
    let {
      name,
      buyingType,
      startDate,
      endDate,
      spendCap,
      status
    } = campaign;
    let profile = {
      avatar: socialAccount.information.avatar,
      network: socialAccount.network,
      name: socialAccount.information.name
    };
    return React.createElement("div", {
      className: "row campaign-header"
    }, React.createElement("div", {
      className: "col-md-6 profile"
    }, React.createElement(SocialAvatar, {
      avatar: profile.avatar,
      network: profile.network,
      name: profile.name,
      size: "75"
    }), React.createElement("div", {
      className: "data"
    }, React.createElement("h2", null, name), React.createElement("span", null, buyingType), React.createElement("span", null, status.effective))), React.createElement("div", {
      className: "col-md-6 metrics"
    }, React.createElement("div", {
      className: "spend-cap"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "campaignName"
    }, "Presupuesto"), React.createElement("p", {
      className: "form-control-static"
    }, React.createElement(Localize, {
      value: Number(spendCap) / 100,
      options: {
        style: 'currency',
        currency: 'USD',
        minimumFractionDigits: 2,
        maximumFractionDigits: 2
      }
    }), " USD"))), React.createElement("div", {
      className: "dates row"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "campaignName"
    }, "Fecha de Inicio"), React.createElement("p", {
      className: "form-control-static"
    }, moment(new Date(startDate)).format("DD/MM/YYYY hh:mm A")))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "campaignName"
    }, "Fecha de Fin"), React.createElement("p", {
      className: "form-control-static"
    }, moment(new Date(endDate)).format("DD/MM/YYYY hh:mm A")))))));
  }

}

module.exportDefault(CampaignHeader);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"graphAudience.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/advertising/ui/components/facebook/graphAudience.jsx                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

var ReactHighcharts = require('react-highcharts');

var HighchartsMore = require('highcharts-more');

var SolidGauge = require("highcharts-solid-gauge");

HighchartsMore(ReactHighcharts.Highcharts);
SolidGauge(ReactHighcharts.Highcharts);

class FacebookGraphAudience extends React.Component {
  render() {
    let {
      data
    } = this.props;
    if (!data || !data.users) return;
    const percent = data.users * 65 / 100000000;
    var config = {
      chart: {
        type: 'solidgauge'
      },
      title: null,
      pane: {
        center: ['50%', '50%'],
        size: '50%',
        startAngle: -90,
        endAngle: 90,
        background: {
          backgroundColor: '#EEE',
          innerRadius: '60%',
          outerRadius: '100%',
          shape: 'arc'
        }
      },
      tooltip: {
        enabled: false
      },
      // the value axis
      yAxis: {
        stops: [[0.3, 'red'], // green
        [0.6, 'yellow'], // yellow
        [0.9, 'green'] // red
        ],
        lineWidth: 0,
        minorTickInterval: null,
        tickPixelInterval: 400,
        tickWidth: 0,
        title: {
          text: "Audience ".concat(data.users.toLocaleString()),
          y: 70
        },
        labels: {
          y: 16
        },
        min: 0,
        max: 100
      },
      plotOptions: {
        series: {
          animation: {
            duration: 3000
          }
        },
        solidgauge: {
          dataLabels: {
            y: 5,
            borderWidth: 0,
            useHTML: true
          }
        }
      },
      credits: {
        enabled: false
      },
      series: [{
        dataLabels: {
          enabled: false
        },
        data: [percent]
      }]
    };
    return React.createElement("div", {
      style: {
        width: '100%',
        height: '200px'
      }
    }, React.createElement(ReactHighcharts, {
      config: config
    }));
  }

}

module.exportDefault(FacebookGraphAudience);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"graphDeliveryEstimate.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/advertising/ui/components/facebook/graphDeliveryEstimate.jsx                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

var ReactHighcharts = require('react-highcharts');

var obj_temp = {
  "bid_estimate": {
    "min_bid": 151,
    "median_bid": 246,
    "max_bid": 405
  },
  "daily_outcomes_curve": [{
    "spend": 0,
    "reach": 0,
    "impressions": 0,
    "actions": 0
  }, {
    "spend": 157,
    "reach": 32768.790689652,
    "impressions": 90945.104519826,
    "actions": 90945.104519826
  }, {
    "spend": 239,
    "reach": 35937.659450005,
    "impressions": 126453.01012466,
    "actions": 126453.01012466
  }, {
    "spend": 495,
    "reach": 52682.097382142,
    "impressions": 178817.36771853,
    "actions": 178817.36771853
  }, {
    "spend": 784,
    "reach": 73824.119000859,
    "impressions": 238181.16718764,
    "actions": 238181.16718764
  }, {
    "spend": 995,
    "reach": 84896.098416472,
    "impressions": 284913.48513599,
    "actions": 284913.48513599
  }, {
    "spend": 1409,
    "reach": 105021.37936511,
    "impressions": 383516.13591691,
    "actions": 383516.13591691
  }, {
    "spend": 2192,
    "reach": 144187.27289666,
    "impressions": 554449.16517466,
    "actions": 554449.16517466
  }, {
    "spend": 3405,
    "reach": 200028.06633647,
    "impressions": 768886.60456829,
    "actions": 768886.60456829
  }, {
    "spend": 5176,
    "reach": 286474.30812977,
    "impressions": 1122025.2215611,
    "actions": 1122025.2215611
  }, {
    "spend": 7717,
    "reach": 368454.07803667,
    "impressions": 1516043.0016692,
    "actions": 1516043.0016692
  }, {
    "spend": 11040,
    "reach": 467821.2438251,
    "impressions": 2017614.56879,
    "actions": 2017614.56879
  }, {
    "spend": 14487,
    "reach": 583791.79690754,
    "impressions": 2609299.3390383,
    "actions": 2609299.3390383
  }, {
    "spend": 18446,
    "reach": 661882.34285374,
    "impressions": 3004897.2742216,
    "actions": 3004897.2742216
  }, {
    "spend": 23479,
    "reach": 776076.42806776,
    "impressions": 3983339.4778286,
    "actions": 3983339.4778286
  }, {
    "spend": 30079,
    "reach": 883449.95409317,
    "impressions": 4477834.7148298,
    "actions": 4477834.7148298
  }, {
    "spend": 37823,
    "reach": 1002781.7668052,
    "impressions": 5131066.6021078,
    "actions": 5131066.6021078
  }, {
    "spend": 48495,
    "reach": 1133664.4774062,
    "impressions": 5662779.6833636,
    "actions": 5662779.6833636
  }, {
    "spend": 60534,
    "reach": 1208447.0207231,
    "impressions": 5920593.0757812,
    "actions": 5920593.0757812
  }, {
    "spend": 75941,
    "reach": 1284687.2684552,
    "impressions": 6216435.5646049,
    "actions": 6216435.5646049
  }, {
    "spend": 156616,
    "reach": 1399606.3670815,
    "impressions": 6412678.9102636,
    "actions": 6412678.9102636
  }, {
    "spend": 204992,
    "reach": 1461347.1730711,
    "impressions": 6499518.6337065,
    "actions": 6499518.6337065
  }, {
    "spend": 269435,
    "reach": 1482247.2063049,
    "impressions": 6520418.6669404,
    "actions": 6520418.6669404
  }, {
    "spend": 334335,
    "reach": 1498351.186485,
    "impressions": 6536522.6471204,
    "actions": 6536522.6471204
  }, {
    "spend": 410542,
    "reach": 1498351.186485,
    "impressions": 6536522.6471204,
    "actions": 6536522.6471204
  }, {
    "spend": 498228,
    "reach": 1498351.186485,
    "impressions": 6536522.6471204,
    "actions": 6536522.6471204
  }, {
    "spend": 612353,
    "reach": 1535875.812723,
    "impressions": 6574047.2733585,
    "actions": 6574047.2733585
  }, {
    "spend": 766058,
    "reach": 1592329.3354134,
    "impressions": 6630500.7960488,
    "actions": 6630500.7960488
  }, {
    "spend": 973432,
    "reach": 1792212.5549158,
    "impressions": 6830384.0155512,
    "actions": 6830384.0155512
  }, {
    "spend": 1260897,
    "reach": 1914720.6939837,
    "impressions": 6952892.1546192,
    "actions": 6952892.1546192
  }, {
    "spend": 1666916,
    "reach": 1988511.195193,
    "impressions": 7026682.6558284,
    "actions": 7026682.6558284
  }, {
    "spend": 2249884,
    "reach": 2009881.9619087,
    "impressions": 7048053.4225441,
    "actions": 7048053.4225441
  }, {
    "spend": 3091819,
    "reach": 2009881.9619087,
    "impressions": 7048053.4225441,
    "actions": 7048053.4225441
  }, {
    "spend": 4344956,
    "reach": 2009881.9619087,
    "impressions": 7048053.4225441,
    "actions": 7048053.4225441
  }, {
    "spend": 6191541,
    "reach": 2009881.9619087,
    "impressions": 7048053.4225441,
    "actions": 7048053.4225441
  }, {
    "spend": 8912627,
    "reach": 2009881.9619087,
    "impressions": 7048053.4225441,
    "actions": 7048053.4225441
  }, {
    "spend": 12904828,
    "reach": 2009881.9619087,
    "impressions": 7048053.4225441,
    "actions": 7048053.4225441
  }, {
    "spend": 18740296,
    "reach": 2009881.9619087,
    "impressions": 7048053.4225441,
    "actions": 7048053.4225441
  }, {
    "spend": 27331326,
    "reach": 2009881.9619087,
    "impressions": 7048053.4225441,
    "actions": 7048053.4225441
  }, {
    "spend": 39190583,
    "reach": 2009881.9619087,
    "impressions": 7048053.4225441,
    "actions": 7048053.4225441
  }, {
    "spend": 55862016,
    "reach": 2009881.9619087,
    "impressions": 7048053.4225441,
    "actions": 7048053.4225441
  }, {
    "spend": 57198499,
    "reach": 2009881.9619087,
    "impressions": 7048053.4225441,
    "actions": 7048053.4225441
  }],
  "estimate_dau": 568166399,
  "estimate_mau": 1096000000,
  "estimate_ready": true
};

class FacebookGraphDelivery extends React.Component {
  constructor() {
    super();
    this.state = {
      reach: [],
      spend: []
    };
  }

  componentDidMount() {
    let {
      data
    } = this.props;
    this.setState({
      reach: this.state.reach.concat(obj_temp.daily_outcomes_curve.map(obj => parseFloat(obj.reach.toFixed(2)))),
      spend: this.state.spend.concat(obj_temp.daily_outcomes_curve.map(obj => obj.spend))
    });
  }

  render() {
    console.log('state', this.state);
    var config = {
      chart: {
        type: 'areaspline'
      },
      title: {
        text: 'Delivery Estimate'
      },
      legend: {
        layout: 'vertical',
        align: 'left',
        verticalAlign: 'top',
        x: 150,
        y: 100,
        floating: true,
        borderWidth: 1
      },
      xAxis: {
        categories: [...this.state.spend],
        plotBands: [{
          from: 4.5,
          to: 6.5,
          color: 'rgba(68, 170, 213, .2)'
        }]
      },
      yAxis: {
        title: {
          text: 'Spend'
        }
      },
      tooltip: {
        shared: true
      },
      credits: {
        enabled: false
      },
      plotOptions: {
        areaspline: {
          fillOpacity: 0.5
        }
      },
      series: [{
        name: 'Reach',
        data: [...this.state.reach]
      }]
    };
    return React.createElement("div", {
      style: {
        width: '100%',
        height: '200px'
      }
    }, React.createElement(ReactHighcharts, {
      config: config
    }));
  }

}

module.exportDefault(FacebookGraphDelivery);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"header.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/advertising/ui/components/facebook/header.jsx                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 1);

class FacebookHeader extends React.Component {
  render() {
    return React.createElement("div", null, React.createElement("h5", null, "CampaignHeader"));
  }

}

module.exportDefault(FacebookHeader);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"google":{"accounts":{"list.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/advertising/ui/components/google/accounts/list.jsx                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Link;
module.watch(require("react-router"), {
  Link(v) {
    Link = v;
  }

}, 1);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 2);
let NoAccounts;
module.watch(require("./no-accounts"), {
  default(v) {
    NoAccounts = v;
  }

}, 3);

class AccountsList extends React.Component {
  constructor() {
    super();
  }

  render() {
    let getTranslation = key => {
      return "Core.loading." + key;
    };

    let {
      accounts,
      socialAccountID
    } = this.props;
    if (accounts.length === 0) return React.createElement(NoAccounts, null);
    return React.createElement("div", {
      className: "advertising-accounts"
    }, React.createElement("div", {
      className: "row pages-list"
    }, accounts.map(a => React.createElement("div", {
      className: "col-md-6 list-group-item",
      key: a._id
    }, React.createElement("div", {
      className: "media"
    }, React.createElement(Link, {
      to: "/advertising/google/".concat(socialAccountID, "/").concat(a._id)
    }, React.createElement("div", {
      className: "media-left"
    }, React.createElement("a", {
      className: "avatar",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      className: "img-fluid",
      src: "https://s3.amazonaws.com/ibol-app-media/icons/facebook-ad-account.png",
      alt: "..."
    }))), React.createElement("div", {
      className: "media-body"
    }, React.createElement("h4", {
      className: "media-heading"
    }, a.name), React.createElement("small", null, a.name ? a.name : "-")), React.createElement("div", {
      className: "media-right"
    })))))));
  }

}

module.exportDefault(AccountsList);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"no-accounts.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/advertising/ui/components/google/accounts/no-accounts.jsx                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 1);

class NoAccounts extends React.Component {
  render() {
    let getTranslation = key => {
      return "TeamAttack.new.search.results.empty." + key;
    };

    return React.createElement("div", {
      className: "no-results"
    }, React.createElement("div", {
      className: "content"
    }, React.createElement("i", {
      className: "icon wb-alert-circle"
    }), React.createElement("h3", null, React.createElement(Translate, {
      value: getTranslation("message")
    }))));
  }

}

module.exportDefault(NoAccounts);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"twitter":{"accounts":{"list.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/advertising/ui/components/twitter/accounts/list.jsx                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Link;
module.watch(require("react-router"), {
  Link(v) {
    Link = v;
  }

}, 1);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 2);
let NoAccounts;
module.watch(require("./no-accounts"), {
  default(v) {
    NoAccounts = v;
  }

}, 3);

class AccountsList extends React.Component {
  constructor() {
    super();
  }

  render() {
    let getTranslation = key => {
      return "Core.loading." + key;
    };

    let {
      accounts,
      socialAccountID
    } = this.props;
    if (accounts.length === 0) return React.createElement(NoAccounts, null);
    return React.createElement("div", {
      className: "advertising-accounts"
    }, React.createElement("div", {
      className: "row pages-list"
    }, accounts.map(a => React.createElement("div", {
      className: "col-md-6 list-group-item",
      key: a._id
    }, React.createElement("div", {
      className: "media"
    }, React.createElement(Link, {
      to: "/advertising/facebook/".concat(socialAccountID, "/act_").concat(a._id)
    }, React.createElement("div", {
      className: "media-left"
    }, React.createElement("a", {
      className: "avatar",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      className: "img-fluid",
      src: "https://s3.amazonaws.com/ibol-app-media/icons/facebook-ad-account.png",
      alt: "..."
    }))), React.createElement("div", {
      className: "media-body"
    }, React.createElement("h4", {
      className: "media-heading"
    }, a.name), React.createElement("small", null, a.endAdvertiser.name ? a.endAdvertiser.name : "-")), React.createElement("div", {
      className: "media-right"
    })))))));
  }

}

module.exportDefault(AccountsList);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"no-accounts.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/advertising/ui/components/twitter/accounts/no-accounts.jsx                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 1);

class NoAccounts extends React.Component {
  render() {
    let getTranslation = key => {
      return "TeamAttack.new.search.results.empty." + key;
    };

    return React.createElement("div", {
      className: "no-results"
    }, React.createElement("div", {
      className: "content"
    }, React.createElement("i", {
      className: "icon wb-alert-circle"
    }), React.createElement("h3", null, React.createElement(Translate, {
      value: getTranslation("message")
    }))));
  }

}

module.exportDefault(NoAccounts);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"accounts":{"list-table.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/advertising/ui/components/accounts/list-table.jsx                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 1);
let BootstrapTable, TableHeaderColumn;
module.watch(require("react-bootstrap-table"), {
  BootstrapTable(v) {
    BootstrapTable = v;
  },

  TableHeaderColumn(v) {
    TableHeaderColumn = v;
  }

}, 2);
let Link;
module.watch(require("react-router"), {
  Link(v) {
    Link = v;
  }

}, 3);
let Select2;
module.watch(require("react-select2-wrapper"), {
  default(v) {
    Select2 = v;
  }

}, 4);
let SocialAvatar;
module.watch(require("../../../../core/ui/components/social-avatar"), {
  default(v) {
    SocialAvatar = v;
  }

}, 5);

const renderLink = function (cell, row) {
  // String example
  return React.createElement(Link, {
    to: "/accounts/edit/" + cell
  }, React.createElement("i", {
    className: "icon wb-edit",
    "aria-hidden": "true"
  }));
};

class ListTable extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      sortName: undefined,
      sortOrder: undefined
    };
    this.onSortChange = this.onSortChange.bind(this);
  }

  onSortChange(sortName, sortOrder) {
    this.setState({
      sortName,
      sortOrder
    });
  }

  render() {
    let {
      selectAccount
    } = this.props;

    let getTranslation = key => {
      return "Accounts.list." + key;
    };

    const renderName = function (cell, row) {
      // String example
      return React.createElement("div", {
        onClick: selectAccount(row)
      }, React.createElement(SocialAvatar, {
        avatar: cell.avatar,
        name: cell.name,
        size: "50",
        page: row.type === "page"
      }), React.createElement("div", {
        className: "icon-label"
      }, cell.name + " " + cell.lastName));
    };

    const renderOwner = function (cell, row) {
      // String example
      return React.createElement("div", {
        onClick: selectAccount(row)
      }, React.createElement(SocialAvatar, {
        avatar: cell.profile.avatar,
        name: cell.profile.name,
        size: "50"
      }), React.createElement("div", {
        className: "icon-label"
      }, cell.profile.name + " " + cell.profile.lastName));
    };

    const renderManager = function (cell, row) {
      // String example
      return React.createElement("div", {
        onClick: selectAccount(row)
      }, React.createElement(SocialAvatar, {
        avatar: cell.profile.avatar,
        name: cell.profile.name,
        size: "50"
      }), React.createElement("div", {
        className: "icon-label"
      }, cell.profile.name + " " + cell.profile.lastName));
    };

    const renderNetwork = function (cell, row) {
      // String example
      return React.createElement("div", null, React.createElement("div", {
        className: "icon"
      }, React.createElement("i", {
        className: "social-icon " + cell
      })));
    };

    const renderCampaigns = function (cell, row) {
      // String example
      return React.createElement("div", null, cell || "-");
    };

    const renderTags = function (cell, row) {
      // String example
      const tagsList = function () {
        return cell.map((tag, i) => {
          return React.createElement("div", {
            className: "tag",
            key: i
          }, tag);
        });
      };

      return React.createElement("div", {
        className: "tag-list"
      }, cell.length ? tagsList() : "-");
    };

    const options = {
      sortName: this.state.sortName,
      sortOrder: this.state.sortOrder,
      onSortChange: this.onSortChange,
      noDataText: I18n.t(getTranslation("table.empty"))
    };
    let data = this.props.data.filter(i => i.type === "account" && i.network !== "instagram").map((i, index) => Object.assign({}, i, {
      index: index + 1
    }));
    return React.createElement("div", null, React.createElement("div", {
      className: "ibol-table"
    }, React.createElement(BootstrapTable, {
      data: data,
      options: options,
      pagination: true,
      search: true,
      searchPlaceholder: I18n.t(getTranslation("table.search"))
    }, React.createElement(TableHeaderColumn, {
      isKey: true,
      dataField: "index",
      dataAlign: "center",
      width: "60px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.index")
    })), React.createElement(TableHeaderColumn, {
      dataField: "owner",
      dataFormat: renderOwner,
      dataSort: true
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.owner")
    })), React.createElement(TableHeaderColumn, {
      dataField: "manager",
      dataFormat: renderManager,
      dataSort: true
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.manager")
    })), React.createElement(TableHeaderColumn, {
      dataField: "network",
      dataFormat: renderNetwork,
      dataAlign: "center",
      dataSort: true,
      width: "110px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.network")
    })), React.createElement(TableHeaderColumn, {
      dataField: "information",
      dataFormat: renderName,
      dataSort: true
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.account")
    })), React.createElement(TableHeaderColumn, {
      dataField: "groups",
      dataFormat: renderTags
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.tags")
    })))));
  }

}

module.exportDefault(ListTable);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"empty-column.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/advertising/ui/components/empty-column.jsx                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class EmptyColumn extends React.Component {
  render() {
    let {
      item
    } = this.props;
    return React.createElement("div", {
      className: "empty-column"
    }, React.createElement("img", {
      src: "https://s3.amazonaws.com/ibol-app-media/icons/viralizing.svg",
      alt: "Viralizing"
    }), React.createElement("div", {
      className: "title"
    }, "Por favor selecciona un ", item, "."));
  }

}

module.exportDefault(EmptyColumn);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"new-router.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/advertising/ui/components/new-router.jsx                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 1);
let notie;
module.watch(require("notie"), {
  default(v) {
    notie = v;
  }

}, 2);
let FacebookAccountsListContainer;
module.watch(require("../containers/facebook/accounts/list"), {
  default(v) {
    FacebookAccountsListContainer = v;
  }

}, 3);
let GoogleAccountsListContainer;
module.watch(require("../containers/google/accounts/list"), {
  default(v) {
    GoogleAccountsListContainer = v;
  }

}, 4);
let TwitterAccountsListContainer;
module.watch(require("../containers/twitter/accounts/list"), {
  default(v) {
    TwitterAccountsListContainer = v;
  }

}, 5);

class CampaignAdvertisingNewRouter extends React.Component {
  constructor() {
    super();
    this.getContainer = this.getContainer.bind(this);
  }

  getContainer() {
    let {
      socialAccount
    } = this.props;

    switch (socialAccount.network) {
      case "facebook":
        return React.createElement(FacebookAccountsListContainer, {
          socialAccountID: socialAccount._id
        });

      case "twitter":
        return React.createElement(TwitterAccountsListContainer, {
          socialAccountID: socialAccount._id
        });

      case "google":
        return React.createElement(GoogleAccountsListContainer, {
          socialAccountID: socialAccount._id
        });

      case "instagram":
        return React.createElement(FacebookAccountsListContainer, {
          socialAccountID: socialAccount._id
        });

      default:
        return React.createElement(FacebookAccountsListContainer, {
          socialAccountID: socialAccount._id
        });
    }
  }

  render() {
    let getTranslation = key => {
      return "Advertising.new." + key;
    };

    let {
      socialAccount
    } = this.props;
    return React.createElement("div", null, this.getContainer());
  }

}

module.exportDefault(CampaignAdvertisingNewRouter);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"containers":{"facebook":{"accounts":{"list.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/advertising/ui/containers/facebook/accounts/list.jsx                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/taggedTemplateLiteral"));

function _templateObject() {
  const data = (0, _taggedTemplateLiteral2.default)(["\n    query($socialAccountID: String){\n        facebookAdAccounts(socialAccountID:$socialAccountID){\n            _id,\n            name,\n            business{\n                _id,\n                name\n            },\n            endAdvertiser{\n                _id,\n                name\n            }\n        }\n    }\n"]);

  _templateObject = function () {
    return data;
  };

  return data;
}

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let graphql;
module.watch(require("react-apollo"), {
  graphql(v) {
    graphql = v;
  }

}, 1);
let Loading;
module.watch(require("../../../../../core/ui/components/loading"), {
  default(v) {
    Loading = v;
  }

}, 2);
let AccountsList;
module.watch(require("../../../components/facebook/accounts/list"), {
  default(v) {
    AccountsList = v;
  }

}, 3);
let gql;
module.watch(require("graphql-tag"), {
  default(v) {
    gql = v;
  }

}, 4);

class AccountsListContainer extends React.Component {
  render() {
    let {
      facebookAdAccounts,
      refetch,
      adAccountID,
      socialAccountID
    } = this.props;
    return React.createElement("div", null, this.props.loading ? React.createElement(Loading, null) : React.createElement(AccountsList, {
      accounts: facebookAdAccounts,
      adAccountID: adAccountID,
      socialAccountID: socialAccountID,
      refetch: refetch,
      history: history
    }));
  }

}

const QUERY = gql(_templateObject());
const withData = graphql(QUERY, {
  props: (_ref) => {
    let {
      data: {
        error,
        loading,
        facebookAdAccounts,
        refetch
      }
    } = _ref;
    //console.log("Campaign_ERROR",error,facebookAdAccounts);
    if (loading) return {
      loading: true
    };
    if (error) return {
      hasErrors: true
    };
    return {
      loading,
      facebookAdAccounts,
      refetch
    };
  },
  options: ownProps => ({
    variables: {
      socialAccountID: ownProps.socialAccountID
    }
  })
});
module.exportDefault(withData(AccountsListContainer));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"ad":{"list.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/advertising/ui/containers/facebook/ad/list.jsx                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/taggedTemplateLiteral"));

function _templateObject() {
  const data = (0, _taggedTemplateLiteral2.default)(["\n    query($socialAccountID: String, $adAccountID: String, $campaignID: String, $adSetID: String){\n        facebookAdsCampaignsAdSetAds(socialAccountID:$socialAccountID, adAccountID: $adAccountID, campaignID:$campaignID, adSetID:$adSetID){\n            _id,\n            name,\n            status{\n                configured,\n                effective,\n                status\n            },\n        }\n    }\n"]);

  _templateObject = function () {
    return data;
  };

  return data;
}

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let graphql;
module.watch(require("react-apollo"), {
  graphql(v) {
    graphql = v;
  }

}, 1);
let Loading;
module.watch(require("../../../../../core/ui/components/loading"), {
  default(v) {
    Loading = v;
  }

}, 2);
let AdList;
module.watch(require("../../../components/facebook/ad/list"), {
  default(v) {
    AdList = v;
  }

}, 3);
let gql;
module.watch(require("graphql-tag"), {
  default(v) {
    gql = v;
  }

}, 4);

class AdSetsListContainer extends React.Component {
  render() {
    let {
      facebookAdsCampaignsAdSetAds,
      active,
      refetch,
      history,
      setAd,
      adAccountID,
      accountID,
      adSetID,
      campaignID
    } = this.props;
    return React.createElement("div", null, this.props.loading ? React.createElement(Loading, null) : React.createElement(AdList, {
      setAd: setAd,
      active: active,
      adAccountID: adAccountID,
      accountID: accountID,
      campaignID: campaignID,
      adSetID: adSetID,
      ads: facebookAdsCampaignsAdSetAds,
      refetch: refetch,
      history: history
    }));
  }

}

const QUERY = gql(_templateObject());
const withData = graphql(QUERY, {
  props: (_ref) => {
    let {
      data: {
        error,
        loading,
        facebookAdsCampaignsAdSetAds,
        refetch
      }
    } = _ref;
    console.log("Campaign_ERROR", error, facebookAdsCampaignsAdSetAds);
    if (loading) return {
      loading: true
    };
    if (error) return {
      hasErrors: true
    };
    return {
      loading,
      facebookAdsCampaignsAdSetAds,
      refetch
    };
  },
  options: ownProps => ({
    variables: {
      socialAccountID: ownProps.accountID,
      adAccountID: ownProps.adAccountID,
      campaignID: ownProps.campaignID,
      adSetID: ownProps.adSetID
    }
  })
});
module.exportDefault(withData(AdSetsListContainer));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"view.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/advertising/ui/containers/facebook/ad/view.jsx                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/taggedTemplateLiteral"));

function _templateObject() {
  const data = (0, _taggedTemplateLiteral2.default)(["\n    query($socialAccountID: String, $adAccountID: String, $campaignID: String, $adID: String){\n        facebookAdsCampaignsAdSetAd(socialAccountID:$socialAccountID, adAccountID: $adAccountID, campaignID:$campaignID, adID:$adID){\n            _id,\n            name,\n            status{\n                configured,\n                effective,\n                status\n            },\n            created,\n            updated,\n            creative {\n                _id\n                body\n                image\n                link,\n                ctaType,\n                title\n            },\n            reviewFeedback\n        }\n    }\n"]);

  _templateObject = function () {
    return data;
  };

  return data;
}

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let graphql;
module.watch(require("react-apollo"), {
  graphql(v) {
    graphql = v;
  }

}, 1);
let Loading;
module.watch(require("../../../../../core/ui/components/loading"), {
  default(v) {
    Loading = v;
  }

}, 2);
let AdView;
module.watch(require("../../../components/facebook/ad/view"), {
  default(v) {
    AdView = v;
  }

}, 3);
let gql;
module.watch(require("graphql-tag"), {
  default(v) {
    gql = v;
  }

}, 4);

class AdViewContainer extends React.Component {
  render() {
    let {
      facebookAdsCampaignsAdSetAd,
      refetch,
      history,
      socialAccount
    } = this.props;
    return React.createElement("div", null, this.props.loading ? React.createElement(Loading, null) : React.createElement(AdView, {
      ad: facebookAdsCampaignsAdSetAd,
      socialAccount: socialAccount,
      refetch: refetch,
      history: history
    }));
  }

}

const QUERY = gql(_templateObject());
const withData = graphql(QUERY, {
  props: (_ref) => {
    let {
      data: {
        error,
        loading,
        facebookAdsCampaignsAdSetAd,
        refetch
      }
    } = _ref;
    console.log("Campaign_ERROR", error, facebookAdsCampaignsAdSetAd);
    if (loading) return {
      loading: true
    };
    if (error) return {
      hasErrors: true
    };
    return {
      loading,
      facebookAdsCampaignsAdSetAd,
      refetch
    };
  },
  options: ownProps => ({
    variables: {
      socialAccountID: ownProps.accountID,
      adAccountID: ownProps.adAccountID,
      campaignID: ownProps.campaignID,
      adID: ownProps.adID
    }
  })
});
module.exportDefault(withData(AdViewContainer));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"ad-sets":{"list.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/advertising/ui/containers/facebook/ad-sets/list.jsx                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/taggedTemplateLiteral"));

function _templateObject() {
  const data = (0, _taggedTemplateLiteral2.default)(["\n    query($socialAccountID: String, $adAccountID: String, $campaignID: String){\n        facebookAdsCampaignsAdSets(socialAccountID:$socialAccountID, adAccountID: $adAccountID, campaignID:$campaignID){\n            _id,\n            name,\n            created,\n            updated,\n            status {\n                configured\n                effective\n                status\n            },\n            money {\n                autoBid\n                avgPrizePaceing\n                budget{\n                    daily,\n                    lifetime,\n                    remaining\n                }\n            },\n            billingEvent,\n            goal,\n            startDate,\n            endDate,\n            recommendations {\n                field\n                code\n                confidence\n                importance\n                message\n                title\n            },\n            impressions,\n            promotedObject {\n                type\n                data\n            },\n            targeting {\n                user_os\n                user_device\n                facebook_positions\n                age_max\n                age_min\n                geo_locations {\n                    countries\n                }\n                publisher_platforms\n            }\n        }\n    }\n"]);

  _templateObject = function () {
    return data;
  };

  return data;
}

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let graphql;
module.watch(require("react-apollo"), {
  graphql(v) {
    graphql = v;
  }

}, 1);
let Loading;
module.watch(require("../../../../../core/ui/components/loading"), {
  default(v) {
    Loading = v;
  }

}, 2);
let AdSetsList;
module.watch(require("../../../components/facebook/ad-sets/list"), {
  default(v) {
    AdSetsList = v;
  }

}, 3);
let gql;
module.watch(require("graphql-tag"), {
  default(v) {
    gql = v;
  }

}, 4);

class AdSetsListContainer extends React.Component {
  render() {
    let {
      accountID,
      adAccountID,
      campaignID,
      facebookAdsCampaignsAdSets,
      active,
      refetch,
      history,
      setAdSet
    } = this.props;
    return React.createElement("div", null, this.props.loading ? React.createElement(Loading, null) : React.createElement(AdSetsList, {
      setAdSet: setAdSet,
      active: active,
      adSets: facebookAdsCampaignsAdSets,
      refetch: refetch,
      history: history,
      accountID: accountID,
      adAccountID: adAccountID,
      campaignID: campaignID
    }));
  }

}

const QUERY = gql(_templateObject());
const withData = graphql(QUERY, {
  props: (_ref) => {
    let {
      data: {
        error,
        loading,
        facebookAdsCampaignsAdSets,
        refetch
      }
    } = _ref;
    console.log("Campaign_ADSETS", error, loading, facebookAdsCampaignsAdSets);

    if (loading) {
      setTimeout(function () {
        refetch({
          time: Number(new Date())
        });
        console.log('REFETCH TIMEOUT');
      }, 1500);
      return {
        loading: true,
        refetch
      };
    }

    if (error) return {
      hasErrors: true
    };
    return {
      loading,
      facebookAdsCampaignsAdSets,
      refetch
    };
  },
  options: ownProps => ({
    variables: {
      socialAccountID: ownProps.accountID,
      adAccountID: ownProps.adAccountID,
      campaignID: ownProps.campaignID
    }
  })
});
module.exportDefault(withData(AdSetsListContainer));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"campaigns":{"audience.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/advertising/ui/containers/facebook/campaigns/audience.jsx                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/taggedTemplateLiteral"));

function _templateObject() {
  const data = (0, _taggedTemplateLiteral2.default)(["\n    query($socialAccountID: String, $adID: String, $data: FacebookAdsCampaignsAudienceEstimate){\n    facebookAdsCampaignsAudienceEstimate(socialAccountID: $socialAccountID, adID: $adID, data: $data){\n  \t\tusers    \n    }\n  }\n"]);

  _templateObject = function () {
    return data;
  };

  return data;
}

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let graphql;
module.watch(require("react-apollo"), {
  graphql(v) {
    graphql = v;
  }

}, 1);
let Loading;
module.watch(require("../../../../../core/ui/components/loading"), {
  default(v) {
    Loading = v;
  }

}, 2);
let FacebookGraphAudience;
module.watch(require("../../../components/facebook/graphAudience"), {
  default(v) {
    FacebookGraphAudience = v;
  }

}, 3);
let createContainer;
module.watch(require("meteor/react-meteor-data"), {
  createContainer(v) {
    createContainer = v;
  }

}, 4);
let gql;
module.watch(require("graphql-tag"), {
  default(v) {
    gql = v;
  }

}, 5);

class AudienceView extends React.Component {
  render() {
    let {
      refetch,
      estimate
    } = this.props;
    return React.createElement("div", null, this.props.loading ? React.createElement(Loading, null) : React.createElement(FacebookGraphAudience, {
      data: estimate,
      refetch: refetch
    }));
  }

}

const QUERY = gql(_templateObject());
const withData = graphql(QUERY, {
  props: (_ref) => {
    let {
      data: {
        error,
        loading,
        facebookAdsCampaignsAudienceEstimate,
        refetch
      }
    } = _ref;

    /*console.log("facebookAdsCampaignsAudienceEstimate",error,facebookAdsCampaignsAudienceEstimate);*/
    if (loading) return {
      loading: true
    };
    if (error) return {
      hasErrors: true
    };
    return {
      loading,
      refetch,
      estimate: facebookAdsCampaignsAudienceEstimate
    };
  },
  options: ownProps => ({
    variables: {
      adID: ownProps.adID,
      socialAccountID: ownProps.socialAccountID,
      data: ownProps.data
    }
  })
});
const AudienceSizeWithData = withData(AudienceView);
module.exportDefault(AudienceSizeWithData);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"delivery_estimate.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/advertising/ui/containers/facebook/campaigns/delivery_estimate.jsx                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/taggedTemplateLiteral"));

function _templateObject() {
  const data = (0, _taggedTemplateLiteral2.default)(["\n    query($socialAccountID: String, $adID: String, $data: FacebookAdsCampaignsDeliveryEstimate){\n    facebookAdsCampaignsDeliveryEstimate(socialAccountID: $socialAccountID, adID: $adID, data: $data){\n      bid_estimate {\n            min_bid\n            median_bid\n            max_bid\n            }\n            estimate_dau\n            estimate_mau\n            estimate_ready\n            daily_outcomes_curve {\n              spend\n              reach\n              impressions\n              actions\n            }\n        }\n    }\n"]);

  _templateObject = function () {
    return data;
  };

  return data;
}

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let graphql;
module.watch(require("react-apollo"), {
  graphql(v) {
    graphql = v;
  }

}, 1);
let Loading;
module.watch(require("../../../../../core/ui/components/loading"), {
  default(v) {
    Loading = v;
  }

}, 2);
let FacebookGraphDelivery;
module.watch(require("../../../components/facebook/graphDeliveryEstimate"), {
  default(v) {
    FacebookGraphDelivery = v;
  }

}, 3);
let createContainer;
module.watch(require("meteor/react-meteor-data"), {
  createContainer(v) {
    createContainer = v;
  }

}, 4);
let gql;
module.watch(require("graphql-tag"), {
  default(v) {
    gql = v;
  }

}, 5);

class DelEstimateView extends React.Component {
  render() {
    let {
      refetch,
      delivery_es
    } = this.props;
    return React.createElement("div", null, this.props.loading ? React.createElement(Loading, null) : React.createElement(FacebookGraphDelivery, {
      data: delivery_es,
      refetch: refetch
    }));
  }

}

const QUERY = gql(_templateObject());
const withData = graphql(QUERY, {
  props: (_ref) => {
    let {
      data: {
        error,
        loading,
        facebookAdsCampaignsDeliveryEstimate,
        refetch
      }
    } = _ref;

    /*console.log("facebookAdsCampaignsDeliveryEstimate",error,facebookAdsCampaignsDeliveryEstimate);*/
    if (loading) return {
      loading: true
    };
    if (error) return {
      hasErrors: true
    };
    return {
      loading,
      refetch,
      delivery_es: facebookAdsCampaignsDeliveryEstimate
    };
  },
  options: ownProps => ({
    variables: {
      adID: ownProps.adID,
      socialAccountID: ownProps.socialAccountID,
      data: ownProps.data
    }
  })
});
const DelEstimateSizeWithData = withData(DelEstimateView);
module.exportDefault(DelEstimateSizeWithData);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"list.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/advertising/ui/containers/facebook/campaigns/list.jsx                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/taggedTemplateLiteral"));

function _templateObject() {
  const data = (0, _taggedTemplateLiteral2.default)(["\n    query($socialAccountID: String, $adAccountID: String){\n        facebookAdsCampaigns(socialAccountID: $socialAccountID, adAccountID: $adAccountID){\n            _id,\n            name,\n            buyingType,\n            objective,\n            status {\n                configured\n                effective\n                status\n            },\n            created,\n            updated,\n            spendCap,\n            startDate,\n            endDate\n        }\n    }\n"]);

  _templateObject = function () {
    return data;
  };

  return data;
}

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let graphql;
module.watch(require("react-apollo"), {
  graphql(v) {
    graphql = v;
  }

}, 1);
let Loading;
module.watch(require("../../../../../core/ui/components/loading"), {
  default(v) {
    Loading = v;
  }

}, 2);
let CampaignsList;
module.watch(require("../../../layouts/facebook/campaigns"), {
  default(v) {
    CampaignsList = v;
  }

}, 3);
let createContainer;
module.watch(require("meteor/react-meteor-data"), {
  createContainer(v) {
    createContainer = v;
  }

}, 4);
let gql;
module.watch(require("graphql-tag"), {
  default(v) {
    gql = v;
  }

}, 5);

class CampaignsView extends React.Component {
  render() {
    let {
      facebookAdsCampaigns,
      refetch,
      history,
      router
    } = this.props;
    let {
      accountID,
      adAccountID,
      campaignID
    } = this.props.params;
    return React.createElement("div", null, this.props.loading ? React.createElement(Loading, null) : React.createElement(CampaignsList, {
      data: [],
      refetch: refetch,
      router: router,
      history: history,
      accountID: accountID,
      adAccountID: adAccountID,
      campaignID: campaignID
    }));
  }

}

const QUERY = gql(_templateObject());
const withData = graphql(QUERY, {
  props: (_ref) => {
    let {
      data: {
        error,
        loading,
        facebookAdsCampaigns,
        refetch
      }
    } = _ref;
    //console.log("Campaign_ERROR",error,facebookAdsCampaign);
    if (loading) return {
      loading: true
    };
    if (error) return {
      hasErrors: true
    };
    return {
      loading,
      facebookAdsCampaigns,
      refetch
    };
  },
  options: ownProps => ({
    variables: {
      socialAccountID: ownProps.params.accountID,
      adAccountID: ownProps.params.adAccountID
    }
  })
});
const CampaignsViewWithData = withData(CampaignsView);
module.exportDefault(CampaignsViewWithData);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"view.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/advertising/ui/containers/facebook/campaigns/view.jsx                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/taggedTemplateLiteral"));

function _templateObject() {
  const data = (0, _taggedTemplateLiteral2.default)(["\nquery($socialAccountID: String, $adAccountID: String, $campaignID: String){\n  facebookAdsCampaign(socialAccountID:$socialAccountID, adAccountID: $adAccountID, campaignID:$campaignID){\n    _id,\n    name,\n    buyingType,\n    objective,\n    status{\n      configured,\n      effective,\n      status\n    },\n    created,\n    updated,\n    spendCap,\n    startDate,\n    endDate\n  }\n    account(_id:$socialAccountID){\n        _id,\n        network,\n        information {\n            name\n            lastName\n            avatar\n        }\n    }\n}\n"]);

  _templateObject = function () {
    return data;
  };

  return data;
}

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let graphql;
module.watch(require("react-apollo"), {
  graphql(v) {
    graphql = v;
  }

}, 1);
let Loading;
module.watch(require("../../../../../core/ui/components/loading"), {
  default(v) {
    Loading = v;
  }

}, 2);
let EditCampaign;
module.watch(require("../../../layouts/facebook/edit"), {
  default(v) {
    EditCampaign = v;
  }

}, 3);
let createContainer;
module.watch(require("meteor/react-meteor-data"), {
  createContainer(v) {
    createContainer = v;
  }

}, 4);
let gql;
module.watch(require("graphql-tag"), {
  default(v) {
    gql = v;
  }

}, 5);

class CampaignsView extends React.Component {
  render() {
    let {
      facebookAdsCampaign,
      account,
      refetch,
      history,
      params
    } = this.props;
    let {
      accountID,
      adAccountID,
      campaignID
    } = this.props.params;
    return React.createElement("div", null, this.props.loading ? React.createElement(Loading, null) : React.createElement(EditCampaign, {
      socialAccount: account,
      campaign: facebookAdsCampaign,
      refetch: refetch,
      history: history,
      accountID: accountID,
      adAccountID: adAccountID,
      campaignID: campaignID
    }));
  }

}

const QUERY = gql(_templateObject());
const withData = graphql(QUERY, {
  props: (_ref) => {
    let {
      data: {
        error,
        loading,
        facebookAdsCampaign,
        account,
        refetch
      }
    } = _ref;
    //console.log("Campaign_ERROR",error,facebookAdsCampaign);
    if (loading) return {
      loading: true
    };
    if (error) return {
      hasErrors: true
    };
    return {
      loading,
      facebookAdsCampaign,
      account,
      refetch
    };
  },
  options: ownProps => ({
    variables: {
      socialAccountID: ownProps.params.accountID,
      adAccountID: ownProps.params.adAccountID,
      campaignID: ownProps.params.campaignID
    }
  })
});
const CampaignsViewWithData = withData(CampaignsView);
module.exportDefault(CampaignsViewWithData);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"google":{"accounts":{"list.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/advertising/ui/containers/google/accounts/list.jsx                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/taggedTemplateLiteral"));

function _templateObject() {
  const data = (0, _taggedTemplateLiteral2.default)(["\n    query($socialAccountID: String){\n        facebookAdAccounts(socialAccountID:$socialAccountID){\n            _id,\n            name,\n            business{\n                _id,\n                name\n            },\n            endAdvertiser{\n                _id,\n                name\n            }\n        }\n    }\n"]);

  _templateObject = function () {
    return data;
  };

  return data;
}

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let graphql;
module.watch(require("react-apollo"), {
  graphql(v) {
    graphql = v;
  }

}, 1);
let Loading;
module.watch(require("../../../../../core/ui/components/loading"), {
  default(v) {
    Loading = v;
  }

}, 2);
let AccountsList;
module.watch(require("../../../components/google/accounts/list"), {
  default(v) {
    AccountsList = v;
  }

}, 3);
let gql;
module.watch(require("graphql-tag"), {
  default(v) {
    gql = v;
  }

}, 4);

class AccountsListContainer extends React.Component {
  render() {
    let {
      facebookAdAccounts,
      refetch,
      adAccountID,
      socialAccountID
    } = this.props;
    return React.createElement("div", null, this.props.loading ? React.createElement(Loading, null) : React.createElement(AccountsList, {
      accounts: [{
        _id: "856-177-2452",
        name: "Test Account"
      }],
      adAccountID: adAccountID,
      socialAccountID: socialAccountID,
      refetch: refetch,
      history: history
    }));
  }

}

const QUERY = gql(_templateObject());
const withData = graphql(QUERY, {
  props: (_ref) => {
    let {
      data: {
        error,
        loading,
        facebookAdAccounts,
        refetch
      }
    } = _ref;
    console.log("Campaign_ERROR", error, facebookAdAccounts);
    if (loading) return {
      loading: true
    };
    if (error) return {
      hasErrors: true
    };
    return {
      loading,
      facebookAdAccounts,
      refetch
    };
  },
  options: ownProps => ({
    variables: {
      test: console.log("AD_ACCOUNTS_LIST", ownProps),
      socialAccountID: ownProps.socialAccountID
    }
  })
});
module.exportDefault(withData(AccountsListContainer));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"twitter":{"accounts":{"list.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/advertising/ui/containers/twitter/accounts/list.jsx                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/taggedTemplateLiteral"));

function _templateObject() {
  const data = (0, _taggedTemplateLiteral2.default)(["\n    query($socialAccountID: String){\n        facebookAdAccounts(socialAccountID:$socialAccountID){\n            _id,\n            name,\n            business{\n                _id,\n                name\n            },\n            endAdvertiser{\n                _id,\n                name\n            }\n        }\n    }\n"]);

  _templateObject = function () {
    return data;
  };

  return data;
}

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let graphql;
module.watch(require("react-apollo"), {
  graphql(v) {
    graphql = v;
  }

}, 1);
let Loading;
module.watch(require("../../../../../core/ui/components/loading"), {
  default(v) {
    Loading = v;
  }

}, 2);
let AccountsList;
module.watch(require("../../../components/twitter/accounts/list"), {
  default(v) {
    AccountsList = v;
  }

}, 3);
let gql;
module.watch(require("graphql-tag"), {
  default(v) {
    gql = v;
  }

}, 4);

class AccountsListContainer extends React.Component {
  render() {
    let {
      facebookAdAccounts,
      refetch,
      adAccountID,
      socialAccountID
    } = this.props;
    return React.createElement("div", null, this.props.loading ? React.createElement(Loading, null) : React.createElement(AccountsList, {
      accounts: [],
      adAccountID: adAccountID,
      socialAccountID: socialAccountID,
      refetch: refetch,
      history: history
    }));
  }

}

const QUERY = gql(_templateObject());
const withData = graphql(QUERY, {
  props: (_ref) => {
    let {
      data: {
        error,
        loading,
        facebookAdAccounts,
        refetch
      }
    } = _ref;
    console.log("Campaign_ERROR", error, facebookAdAccounts);
    if (loading) return {
      loading: true
    };
    if (error) return {
      hasErrors: true
    };
    return {
      loading,
      facebookAdAccounts,
      refetch
    };
  },
  options: ownProps => ({
    variables: {
      test: console.log("AD_ACCOUNTS_LIST", ownProps),
      socialAccountID: ownProps.socialAccountID
    }
  })
});
module.exportDefault(withData(AccountsListContainer));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"accounts.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/advertising/ui/containers/accounts.jsx                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/taggedTemplateLiteral"));

function _templateObject() {
  const data = (0, _taggedTemplateLiteral2.default)(["\n    query {\n        accounts{\n            _id,\n            network,\n            type,\n            groups,\n            owner {\n                _id,\n                profile{\n                    name,\n                    lastName,\n                    avatar\n                }\n            },\n            manager {\n                _id,\n                profile{\n                    name,\n                    lastName,\n                    avatar\n                }\n            },\n            information{\n                name,\n                lastName,\n                avatar\n            }\n        }\n    }\n"]);

  _templateObject = function () {
    return data;
  };

  return data;
}

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let graphql;
module.watch(require("react-apollo"), {
  graphql(v) {
    graphql = v;
  }

}, 1);
let Loading;
module.watch(require("../../../core/ui/components/loading"), {
  default(v) {
    Loading = v;
  }

}, 2);
let List;
module.watch(require("../layouts/facebook/accounts"), {
  default(v) {
    List = v;
  }

}, 3);
let createContainer;
module.watch(require("meteor/react-meteor-data"), {
  createContainer(v) {
    createContainer = v;
  }

}, 4);
let gql;
module.watch(require("graphql-tag"), {
  default(v) {
    gql = v;
  }

}, 5);

class ListContainer extends React.Component {
  render() {
    return React.createElement("div", null, this.props.loading ? React.createElement(Loading, null) : React.createElement(List, {
      data: this.props.accounts,
      refetch: this.props.refetch,
      history: this.props.history
    }));
  }

}

const QUERY = gql(_templateObject());
const withData = graphql(QUERY, {
  props: (_ref) => {
    let {
      data: {
        error,
        loading,
        accounts,
        refetch
      }
    } = _ref;
    if (loading) return {
      loading: true
    };
    if (error) return {
      hasErrors: true
    };
    return {
      loading,
      accounts,
      refetch
    };
  },
  options: ownProps => ({
    pollInterval: 3000
  })
});
const ListContainerWithData = withData(ListContainer);
module.exportDefault(ListContainerWithData);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"layouts":{"facebook":{"accounts.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/advertising/ui/layouts/facebook/accounts.jsx                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Modal;
module.watch(require("react-modal"), {
  default(v) {
    Modal = v;
  }

}, 1);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 2);
let ListTable;
module.watch(require("../../components/accounts/list-table"), {
  default(v) {
    ListTable = v;
  }

}, 3);
let ListEmpty;
module.watch(require("../../../../core/ui/components/list-empty"), {
  default(v) {
    ListEmpty = v;
  }

}, 4);
let CampaignAdvertisingNewRouter;
module.watch(require("../../components/new-router"), {
  default(v) {
    CampaignAdvertisingNewRouter = v;
  }

}, 5);

class Accounts extends React.Component {
  constructor() {
    super();
    this.state = {
      modalIsOpen: false,
      current: null
    };
    this.openModal = this.openModal.bind(this);
    this.closeModal = this.closeModal.bind(this);
    this.selectAccount = this.selectAccount.bind(this);
  }

  openModal() {
    this.setState({
      modalIsOpen: true
    });
  }

  closeModal() {
    this.setState({
      modalIsOpen: false
    });
  }

  selectAccount(account) {
    let component = this;
    return function () {
      component.setState({
        current: account,
        modalIsOpen: true
      });
    };
  }

  render() {
    let getTranslation = key => {
      return "Accounts." + key;
    };

    console.log("LIST_CONTAINER", this.props.refetch);
    let {
      current
    } = this.state;
    return React.createElement("div", {
      className: "page-content container-fluid"
    }, this.props.data && this.props.data.length ? React.createElement(ListTable, {
      data: this.props.data,
      new: this.openModal,
      selectAccount: this.selectAccount
    }) : React.createElement(ListEmpty, {
      message: React.createElement(Translate, {
        value: getTranslation("empty.message")
      }),
      button: React.createElement(Translate, {
        value: getTranslation("empty.button")
      }),
      callback: this.openModal
    }), React.createElement(Modal, {
      isOpen: this.state.modalIsOpen,
      onRequestClose: this.closeModal,
      className: "app-modal",
      contentLabel: "Example Modal"
    }, React.createElement("button", {
      className: "close",
      onClick: this.closeModal
    }, React.createElement("i", {
      className: "icon wb-close-mini",
      "aria-hidden": "true"
    })), current && React.createElement(CampaignAdvertisingNewRouter, {
      socialAccount: current
    })));
  }

}

module.exportDefault(Accounts);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"campaigns.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/advertising/ui/layouts/facebook/campaigns.jsx                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Modal;
module.watch(require("react-modal"), {
  default(v) {
    Modal = v;
  }

}, 1);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 2);
let ListTable;
module.watch(require("../../components/facebook/campaigns/list"), {
  default(v) {
    ListTable = v;
  }

}, 3);
let ListEmpty;
module.watch(require("../../../../core/ui/components/list-empty"), {
  default(v) {
    ListEmpty = v;
  }

}, 4);
let CampaignNew;
module.watch(require("../../components/facebook/campaigns/new"), {
  default(v) {
    CampaignNew = v;
  }

}, 5);
let notie;
module.watch(require("notie"), {
  default(v) {
    notie = v;
  }

}, 6);

class CamppaignsList extends React.Component {
  constructor() {
    super();
    this.state = {
      modalIsOpen: false,
      current: null
    };
    this.openModal = this.openModal.bind(this);
    this.closeModal = this.closeModal.bind(this);
    this.formSubmit = this.formSubmit.bind(this);
  }

  openModal() {
    this.setState({
      modalIsOpen: true
    });
  }

  closeModal() {
    this.setState({
      modalIsOpen: false
    });
  }

  formSubmit(data) {
    let component = this;
    let {
      accountID,
      adAccountID
    } = this.props;
    console.log("NEW_CAMPAIGN", data);
    Meteor.call("fb-marketing-campaign-create", accountID, adAccountID, data, function (err, res) {
      console.log("fb-marketing-campaign-create", err, res);

      if (err || res && res.error) {
        let message = "";

        if (err && err.error === 500) {
          err.error = "Failed to create post.";
          message = err.reason || err.error;
        }

        if (res) {
          message = res.error;
        }

        console.log("ERROR", err);
        notie.alert(3, message, 3);
        return;
      }

      component.closeModal();
      component.props.refetch({}).then(function () {
        console.log("SERVER_SAVE_CAMPAIGN_RESPONSE", res);
        component.props.router.push("/advertising/facebook/".concat(accountID, "/").concat(adAccountID, "/").concat(res.id));
      });
    });
  }

  render() {
    let getTranslation = key => {
      return "Accounts." + key;
    };

    let {
      accountID,
      adAccountID
    } = this.props;
    return React.createElement("div", {
      className: "page-content container-fluid"
    }, this.props.data && this.props.data.length ? React.createElement(ListTable, {
      data: this.props.data,
      new: this.openModal,
      accountID: accountID,
      adAccountID: adAccountID
    }) : React.createElement(ListEmpty, {
      message: React.createElement(Translate, {
        value: getTranslation("empty.message")
      }),
      button: React.createElement(Translate, {
        value: getTranslation("empty.button")
      }),
      callback: this.openModal
    }), React.createElement(Modal, {
      isOpen: this.state.modalIsOpen,
      onRequestClose: this.closeModal,
      className: "app-modal",
      contentLabel: "Example Modal"
    }, React.createElement("button", {
      className: "close",
      onClick: this.closeModal
    }, React.createElement("i", {
      className: "icon wb-close-mini",
      "aria-hidden": "true"
    })), React.createElement(CampaignNew, {
      close: this.closeModal,
      onSubmit: this.formSubmit,
      accountID: accountID,
      adAccountID: adAccountID
    })));
  }

}

module.exportDefault(CamppaignsList);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"edit.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/advertising/ui/layouts/facebook/edit.jsx                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/objectSpread"));

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let EditContainer;
module.watch(require("../../components/facebook/edit/container"), {
  default(v) {
    EditContainer = v;
  }

}, 1);
let FacebookHeader;
module.watch(require("../../components/facebook/header"), {
  default(v) {
    FacebookHeader = v;
  }

}, 2);

class CampaignEdit extends React.Component {
  constructor() {
    super();
    this.state = {
      active: {
        ad: null,
        adSet: null
      }
    };
    this.setAdSet = this.setAdSet.bind(this);
    this.setAd = this.setAd.bind(this);
  }

  setAd(ad) {
    let component = this;
    return function () {
      let newState = (0, _objectSpread2.default)({}, component.state);
      newState.active.ad = ad;
      component.setState(newState);
    };
  }

  setAdSet(adSet) {
    let component = this;
    return function () {
      let newState = (0, _objectSpread2.default)({}, component.state);
      newState.active.adSet = adSet;
      component.setState(newState);
    };
  }

  render() {
    let {
      active
    } = this.state;
    let {
      campaign,
      socialAccount,
      refetch,
      history,
      params,
      accountID,
      adAccountID,
      campaignID
    } = this.props;
    return React.createElement(EditContainer, {
      socialAccount: socialAccount,
      active: active,
      setAdSet: this.setAdSet,
      setAd: this.setAd,
      campaign: campaign,
      accountID: accountID,
      adAccountID: adAccountID,
      campaignID: campaignID
    });
  }

}

module.exportDefault(CampaignEdit);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"advertising.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/advertising/ui/layouts/advertising.jsx                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class Advertising extends React.Component {
  render() {
    let filter = obj => {
      let newProps = {};
      let key;

      for (key in obj) {
        if (key !== "children") {
          newProps[key] = obj[key];
        }
      }

      return newProps;
    };

    return React.createElement("div", {
      className: "advertising"
    }, React.cloneElement(this.props.children, filter(this.props)));
  }

}

module.exportDefault(Advertising);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"facebook.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/advertising/ui/layouts/facebook.jsx                                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class Facebook extends React.Component {
  render() {
    let filter = obj => {
      let newProps = {};
      let key;

      for (key in obj) {
        if (key !== "children") {
          newProps[key] = obj[key];
        }
      }

      return newProps;
    };

    return React.createElement("div", null, React.cloneElement(this.props.children, filter(this.props)));
  }

}

module.exportDefault(Facebook);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"google.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/advertising/ui/layouts/google.jsx                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class Google extends React.Component {
  render() {
    let filter = obj => {
      let newProps = {};
      let key;

      for (key in obj) {
        if (key !== "children") {
          newProps[key] = obj[key];
        }
      }

      return newProps;
    };

    return React.createElement("div", null, React.cloneElement(this.props.children, filter(this.props)));
  }

}

module.exportDefault(Google);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"actions":{"bundle.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/advertising/actions/bundle.jsx                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let Actions = {};
module.exportDefault(Actions);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"client":{"bundle.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/advertising/client/bundle.jsx                                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let Routes;
module.watch(require("./routes"), {
  default(v) {
    Routes = v;
  }

}, 0);
let Reducers;
module.watch(require("../reducers/bundle"), {
  default(v) {
    Reducers = v;
  }

}, 1);
let Actions;
module.watch(require("../actions/bundle"), {
  default(v) {
    Actions = v;
  }

}, 2);
let Translations;
module.watch(require("./translations"), {
  default(v) {
    Translations = v;
  }

}, 3);
module.exportDefault({
  reducers: Reducers,
  routes: Routes,
  actions: Actions,
  translations: Translations
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"routes.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/advertising/client/routes.jsx                                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Route, IndexRoute;
module.watch(require("react-router"), {
  Route(v) {
    Route = v;
  },

  IndexRoute(v) {
    IndexRoute = v;
  }

}, 1);
let Advertising;
module.watch(require("../ui/layouts/advertising"), {
  default(v) {
    Advertising = v;
  }

}, 2);
let Facebook;
module.watch(require("../ui/layouts/facebook"), {
  default(v) {
    Facebook = v;
  }

}, 3);
let Google;
module.watch(require("../ui/layouts/google"), {
  default(v) {
    Google = v;
  }

}, 4);
let AccountsList;
module.watch(require("../ui/containers/accounts"), {
  default(v) {
    AccountsList = v;
  }

}, 5);
let FacebookCampaignsList;
module.watch(require("../ui/containers/facebook/campaigns/list"), {
  default(v) {
    FacebookCampaignsList = v;
  }

}, 6);
let FacebookCampaignsView;
module.watch(require("../ui/containers/facebook/campaigns/view"), {
  default(v) {
    FacebookCampaignsView = v;
  }

}, 7);
let GoogleCampaignsList;
module.watch(require("../ui/containers/facebook/campaigns/list"), {
  default(v) {
    GoogleCampaignsList = v;
  }

}, 8);
let GoogleCampaignsView;
module.watch(require("../ui/containers/facebook/campaigns/view"), {
  default(v) {
    GoogleCampaignsView = v;
  }

}, 9);
module.exportDefault(React.createElement(Route, {
  path: "/advertising",
  component: Advertising
}, React.createElement(IndexRoute, {
  component: AccountsList
}), React.createElement(Route, {
  path: "/advertising/facebook",
  component: Facebook
}, React.createElement(Route, {
  path: "/advertising/facebook/:accountID/:adAccountID",
  component: FacebookCampaignsList
}), React.createElement(Route, {
  path: "/advertising/facebook/:accountID/:adAccountID/:campaignID",
  component: FacebookCampaignsView
})), React.createElement(Route, {
  path: "/advertising/google",
  component: Google
}, React.createElement(Route, {
  path: "/advertising/google/:accountID/:adAccountID",
  component: GoogleCampaignsList
}), React.createElement(Route, {
  path: "/advertising/google/:accountID/:adAccountID/:campaignID",
  component: GoogleCampaignsView
}))));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"translations.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/advertising/client/translations.jsx                                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.exportDefault({
  en: {
    menu: "Advertising",
    empty: {
      message: "You have no Advertising yet.",
      button: "New Advertising"
    },
    list: {
      new: "New",
      table: {
        headers: {
          more: "More",
          message: "Message",
          network: "Network",
          budget: "Budget"
        },
        search: "Search",
        empty: "No Results"
      }
    },
    edit: {
      settings: "Settings",
      targeting: "Targeting",
      select: "Select",
      title_adgroup: "New Ad Group",
      tabs: {
        settings: {
          billing_opt: {
            no_select: "No selected",
            app_install: "Install app",
            impressions: "Impressions",
            link_clicks: "Link clicks",
            offer_claims: "Offer claims",
            page_likes: "Page likes",
            post_engagement: "Post engagement",
            video_views: "Video views",
            mrc_video_views: "MRC Video views",
            video_views_15s: "Video views 15s"
          },
          name: "Name",
          start_time: "Start time",
          end_time: "End time",
          billing_event: "Billing event",
          budget_daily: "Budget daily",
          budget_lifetime: "Budget lifetime",
          categories: "Categories"
        },
        targeting: {
          search: "Search",
          geolocation: "Geolocation",
          countries: "Countries",
          user_os: "User OS",
          user_device: "User device",
          publisher_platforms: "Publisher platforms",
          age: "Age"
        }
      }
    },
    new: {
      form: {
        title: "Where do you want to do advertising?"
      }
    }
  },
  es: {
    menu: "Publicidad S.M.",
    empty: {
      message: "Aún no tienes publicidad.",
      button: "Crear Publicidad."
    },
    edit: {
      settings: "Opciones",
      targeting: "Objetivo",
      select: "Seleccionar",
      title_adgroup: "Nuevo grupo de anuncios",
      tabs: {
        settings: {
          billing_opt: {
            no_select: "No seleccionado",
            app_install: "Instalación de aplicación",
            impressions: "Impresiones",
            link_clicks: "Clicks a links",
            offer_claims: "Ofrecer reclamos",
            page_likes: "Likes a paginas",
            post_engagement: "Post compromisos",
            video_views: "Vistas de video",
            mrc_video_views: "MRC Vistas de video",
            video_views_15s: "Vistas de video 15s"
          },
          name: "Nombre",
          start_time: "Fecha inicio",
          end_time: "Fecha final",
          billing_event: "Evento de facturación",
          budget_daily: "Presupuesto diario",
          budget_lifetime: "Presupuesto de por vida",
          categories: "Categorias"
        },
        targeting: {
          search: "Buscar",
          geolocation: "Geolocalización",
          countries: "Paises",
          user_os: "Sistema operativo",
          user_device: "Dispositivo",
          publisher_platforms: "Plataformas editoriales",
          age: "Edad"
        }
      }
    },
    list: {
      new: "Crear",
      table: {
        headers: {
          more: "Ver Más",
          message: "Mensaje",
          network: "Red Social",
          budget: "Presupuesto"
        },
        search: "Buscar",
        empty: "No hay resultados"
      }
    },
    new: {
      form: {
        title: "¿Donde quieres hacer publicidad?"
      }
    }
  },
  zz: {
    menu: "測試",
    empty: {
      message: "測試 測試 測試 測試 測試.",
      button: "測試 測試"
    },
    edit: {
      settings: "測試 測試",
      targeting: "測試 測試",
      select: "測試",
      title_adgroup: "測試 測試",
      tabs: {
        settings: {
          billing_opt: {
            no_select: "測試 測試",
            app_install: "測試 測試",
            impressions: "測試 測試",
            link_clicks: "測試 測試",
            offer_claims: "測試 測試",
            page_likes: "測試 測試",
            post_engagement: "測試 測試測試 測試",
            video_views: "測試 測試",
            mrc_video_views: "測試 測試",
            video_views_15s: "測試 測試測試 測試"
          },
          name: "測試 測試",
          start_time: "測試 測試",
          end_time: "測試 測試",
          billing_event: "測試 測試",
          budget_daily: "測試 測試",
          budget_lifetime: "測試 測試",
          categories: "測試 測試"
        },
        targeting: {
          search: "測試",
          geolocation: "測試 測試",
          countries: "測試 測試",
          user_os: "測試 測試",
          user_device: "測試 測試",
          publisher_platforms: "測試 測試",
          age: "測試 測試"
        }
      }
    },
    list: {
      new: "測試",
      table: {
        headers: {
          more: "測試",
          message: "測試",
          network: "測試 測試",
          budget: "測試"
        },
        search: "測試",
        empty: "測試 測試"
      }
    },
    new: {
      form: {
        title: "測試 測試 測試 測試?"
      }
    }
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"reducers":{"bundle.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/advertising/reducers/bundle.jsx                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
const Reducers = {};
module.exportDefault(Reducers);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"core":{"ui":{"components":{"home":{"promoted-accounts":{"block":{"container.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/core/ui/components/home/promoted-accounts/block/container.jsx                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let SocialAvatar;
module.watch(require("../../../social-avatar"), {
  default(v) {
    SocialAvatar = v;
  }

}, 1);

class PromotedBlock extends React.Component {
  render() {
    let getTranslation = key => {
      return "Core." + key;
    };

    let {
      accounts,
      title
    } = this.props;
    return React.createElement("div", {
      className: "promoted-block"
    }, React.createElement("div", {
      className: "list"
    }, accounts.map(a => React.createElement("div", {
      className: "avatar-wrapper",
      key: a._id
    }, React.createElement(SocialAvatar, {
      avatar: a.information.avatar,
      network: a.network,
      name: a.information.name,
      size: "75",
      type: a.information.type
    })))), React.createElement("div", {
      className: "title"
    }, title));
  }

}

module.exportDefault(PromotedBlock);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"container.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/core/ui/components/home/promoted-accounts/container.jsx                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/extends"));

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Block;
module.watch(require("./block/container"), {
  default(v) {
    Block = v;
  }

}, 1);
let Slider;
module.watch(require("react-slick"), {
  default(v) {
    Slider = v;
  }

}, 2);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 3);

let _;

module.watch(require("lodash"), {
  default(v) {
    _ = v;
  }

}, 4);

class LeftNavButton extends React.Component {
  render() {
    let {
      className,
      onClick,
      style
    } = this.props;
    return React.createElement("div", {
      className: className,
      onClick: onClick,
      style: style
    }, React.createElement("i", {
      className: "icon fa-chevron-left",
      "aria-hidden": "true"
    }));
  }

}

class RightNavButton extends React.Component {
  render() {
    let {
      className,
      onClick,
      style
    } = this.props;
    return React.createElement("div", {
      className: className,
      onClick: onClick,
      style: style
    }, React.createElement("i", {
      className: "icon fa-chevron-right",
      "aria-hidden": "true"
    }));
  }

}

class PromotedAccounts extends React.Component {
  render() {
    let getTranslation = key => {
      return "Core.home.influencers." + key;
    };

    let settings = {
      dots: false,
      infinite: true,
      speed: 500,
      slidesToShow: 3,
      slidesToScroll: 1,
      nextArrow: React.createElement(RightNavButton, null),
      prevArrow: React.createElement(LeftNavButton, null)
    };
    let {
      data
    } = this.props;

    let accounts1 = _.sampleSize(data, 3);

    let accounts2 = _.sampleSize(data, 3);

    let accounts3 = _.sampleSize(data, 3);

    return React.createElement("div", {
      className: "panel promoted-accounts-slider"
    }, React.createElement("div", {
      className: "panel-body container-fluid"
    }, React.createElement("h3", {
      className: "panel-title"
    }, React.createElement(Translate, {
      value: getTranslation("title")
    })), React.createElement(Slider, (0, _extends2.default)({}, settings, {
      className: "news-slider"
    }), React.createElement("div", {
      className: "block"
    }, React.createElement(Block, {
      accounts: accounts1,
      title: "".concat(I18n.t(getTranslation("section.for")), " Deporte")
    })), React.createElement("div", {
      className: "block"
    }, React.createElement(Block, {
      accounts: accounts2,
      title: "".concat(I18n.t(getTranslation("section.for")), " Comida")
    })), React.createElement("div", {
      className: "block"
    }, React.createElement(Block, {
      accounts: accounts3,
      title: "".concat(I18n.t(getTranslation("section.for")), " M\xFAsica")
    })))));
  }

}

module.exportDefault(PromotedAccounts);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"news-list.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/core/ui/components/home/news-list.jsx                                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/extends"));

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Slider;
module.watch(require("react-slick"), {
  default(v) {
    Slider = v;
  }

}, 1);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 2);

class LeftNavButton extends React.Component {
  render() {
    let {
      className,
      onClick,
      style
    } = this.props;
    return React.createElement("div", {
      className: className,
      onClick: onClick,
      style: style
    }, React.createElement("i", {
      className: "icon fa-chevron-left",
      "aria-hidden": "true"
    }));
  }

}

class RightNavButton extends React.Component {
  render() {
    let {
      className,
      onClick,
      style
    } = this.props;
    return React.createElement("div", {
      className: className,
      onClick: onClick,
      style: style
    }, React.createElement("i", {
      className: "icon fa-chevron-right",
      "aria-hidden": "true"
    }));
  }

}

class NewsList extends React.Component {
  render() {
    let getTranslation = key => {
      return "Core.home.news." + key;
    };

    let settings = {
      dots: true,
      infinite: true,
      speed: 500,
      slidesToShow: 3,
      slidesToScroll: 1,
      nextArrow: React.createElement(RightNavButton, null),
      prevArrow: React.createElement(LeftNavButton, null)
    };
    let {
      data
    } = this.props;
    return React.createElement("div", null, React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-body container-fluid"
    }, React.createElement("h3", {
      className: "panel-title"
    }, React.createElement(Translate, {
      value: getTranslation("news")
    })), React.createElement(Slider, (0, _extends2.default)({}, settings, {
      className: "news-slider"
    }), data.map((article, i) => React.createElement("div", {
      className: "news-article",
      key: i
    }, React.createElement("div", {
      className: "overlay",
      style: {
        background: "url(http://viralizing.me" + article.image + ")"
      }
    }, React.createElement("div", {
      className: "content"
    }, React.createElement("div", {
      className: "title"
    }, article.title), React.createElement("div", {
      className: "author"
    }, React.createElement(Translate, {
      value: getTranslation("article.by")
    }), " ", React.createElement("span", {
      className: "author"
    }, article.author)), React.createElement("div", {
      className: "read-more"
    }, React.createElement("a", {
      href: article.link,
      target: "_blank"
    }, React.createElement(Translate, {
      value: getTranslation("article.more")
    }), React.createElement("i", {
      className: "icon wb-chevron-right",
      "aria-hidden": "true"
    })))))))))));
  }

}

module.exportDefault(NewsList);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"forms":{"account-search.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/core/ui/components/forms/account-search.jsx                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Select;
module.watch(require("react-select"), {
  default(v) {
    Select = v;
  }

}, 1);
let Gravatar;
module.watch(require("react-gravatar"), {
  default(v) {
    Gravatar = v;
  }

}, 2);
let SocialAvatar;
module.watch(require("../social-avatar"), {
  default(v) {
    SocialAvatar = v;
  }

}, 3);
let createReactClass;
module.watch(require("create-react-class"), {
  default(v) {
    createReactClass = v;
  }

}, 4);
let PropTypes;
module.watch(require("prop-types"), {
  default(v) {
    PropTypes = v;
  }

}, 5);
const SocialAvatarOption = createReactClass({
  displayName: "SocialAvatarOption",
  propTypes: {
    children: PropTypes.node,
    className: PropTypes.string,
    isDisabled: PropTypes.bool,
    isFocused: PropTypes.bool,
    isSelected: PropTypes.bool,
    onFocus: PropTypes.func,
    onSelect: PropTypes.func,
    option: PropTypes.object.isRequired
  },

  handleMouseDown(event) {
    event.preventDefault();
    event.stopPropagation();
    this.props.onSelect(this.props.option, event);
  },

  handleMouseEnter(event) {
    this.props.onFocus(this.props.option, event);
  },

  handleMouseMove(event) {
    if (this.props.isFocused) return;
    this.props.onFocus(this.props.option, event);
  },

  render() {
    let {
      name,
      lastName,
      avatar
    } = this.props.option.information;
    return React.createElement("div", {
      className: this.props.className,
      onMouseDown: this.handleMouseDown,
      onMouseEnter: this.handleMouseEnter,
      onMouseMove: this.handleMouseMove,
      title: this.props.option.title
    }, React.createElement(SocialAvatar, {
      avatar: avatar,
      name: name + " " + lastName,
      network: this.props.option.network,
      size: "50"
    }), React.createElement("span", {
      className: "title"
    }, name + " " + lastName));
  }

});
const SocialAvatarValue = createReactClass({
  displayName: "SocialAvatarValue",
  propTypes: {
    children: PropTypes.node,
    placeholder: PropTypes.string,
    value: PropTypes.object
  },

  render() {
    let {
      name,
      lastName,
      avatar
    } = this.props.value.information;
    return React.createElement("div", {
      className: "Select-value",
      title: this.props.value.information.name
    }, React.createElement("span", {
      className: "Select-value-label"
    }, React.createElement(SocialAvatar, {
      avatar: avatar,
      name: name + " " + lastName,
      network: this.props.value.network,
      size: "50"
    }), React.createElement("span", {
      className: "title"
    }, name + " " + lastName)));
  }

});

function arrowRenderer() {
  return React.createElement("span", null);
}

class AccountSearch extends React.Component {
  constructor() {
    super();
    this.setValue = this.setValue.bind(this);
    this.filterOptions = this.filterOptions.bind(this);
  }

  setValue(value) {
    this.props.input.onChange(value);
  }

  filterOptions(options, filter, current) {
    return options.filter(o => {
      let {
        name,
        lastName
      } = o.information;

      if (current) {
        let match = current.filter(c => c._id === o._id)[0];

        if (match) {
          return false;
        }
      }

      let regEx = new RegExp(filter.toLowerCase());
      return name.toLowerCase().match(regEx) || lastName.toLowerCase().match(regEx) || o.network.toLowerCase().match(regEx);
    });
  }

  render() {
    const {
      input: {
        value,
        onChange
      },
      className
    } = this.props;
    return React.createElement("div", null, React.createElement(Select, {
      arrowRenderer: arrowRenderer,
      onChange: onChange,
      filterOptions: this.filterOptions,
      multi: this.props.multi,
      className: "social-select " + (className ? className : ""),
      optionComponent: SocialAvatarOption,
      options: this.props.data,
      placeholder: this.props.placeholder || "",
      value: value,
      valueComponent: SocialAvatarValue
    }));
  }

}

module.exportDefault(AccountSearch);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"input-checkbox.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/core/ui/components/forms/input-checkbox.jsx                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class InputSelect extends React.Component {
  constructor() {
    super();
    this.change = this.change.bind(this);
  }

  change(e) {
    this.props.input.onChange(e.target.checked);
  }

  render() {
    const {
      input: {
        value
      },
      label,
      readOnly
    } = this.props;
    return React.createElement("div", {
      className: "checkbox-custom checkbox-primary"
    }, React.createElement("input", {
      type: "checkbox",
      disabled: !!readOnly,
      id: "inputChecked",
      onChange: this.change,
      value: value || "",
      checked: value
    }), React.createElement("label", {
      htmlFor: "inputChecked"
    }, label));
  }

}

module.exportDefault(InputSelect);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"input-date.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/core/ui/components/forms/input-date.jsx                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let DatePicker;
module.watch(require("react-datepicker"), {
  default(v) {
    DatePicker = v;
  }

}, 1);

class InputDate extends React.Component {
  constructor() {
    super();
    this.change = this.change.bind(this);
  }

  change(val) {
    this.props.input.onChange(moment(val).toDate());
  }

  render() {
    const {
      input: {
        value
      }
    } = this.props;
    return React.createElement(DatePicker, {
      selected: value ? moment(new Date(value)) : null,
      onChange: this.change,
      minDate: this.props.minDate || moment("1900-01-01"),
      className: "form-control",
      placeholderText: this.props.placeholder || ""
    });
  }

}

module.exportDefault(InputDate);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"input-datetime.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/core/ui/components/forms/input-datetime.jsx                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let DateTime;
module.watch(require("react-datetime"), {
  default(v) {
    DateTime = v;
  }

}, 1);

class InputDateTime extends React.Component {
  constructor() {
    super();
    this.change = this.change.bind(this);
  }

  change(val) {
    this.props.input.onChange(moment(val).toDate());
  }

  render() {
    const {
      input: {
        value
      }
    } = this.props;
    return React.createElement(DateTime, {
      value: value ? moment(new Date(value)) : null,
      onChange: this.change,
      minDate: this.props.minDate || moment("1900-01-01"),
      inputProps: {
        placeholder: this.props.placeholder || "",
        className: "form-control"
      }
    });
  }

}

module.exportDefault(InputDateTime);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"input-file-reader.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/core/ui/components/forms/input-file-reader.jsx                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Dropzone;
module.watch(require("react-dropzone"), {
  default(v) {
    Dropzone = v;
  }

}, 1);
let notie;
module.watch(require("notie"), {
  default(v) {
    notie = v;
  }

}, 2);

class InputFileReader extends React.Component {
  constructor() {
    super();
    this.state = {
      files: []
    };
    this.onDrop = this.onDrop.bind(this);
  }

  onDrop(acceptedFiles) {
    let files = [];
    let component = this;
    acceptedFiles.forEach(function (file) {
      window.demoFile = file;
      let reader = new FileReader();

      reader.onloadend = function () {
        component.props.input.onChange(reader.result);

        if (component.props.callback) {
          component.props.callback(reader.result);
        }
      };

      reader.readAsDataURL(file, "UTF8");
    });
    this.setState({
      files: files
    });
  }

  render() {
    let {
      multiple,
      maxSize,
      className,
      activeClassName,
      accept
    } = this.props.settings;
    return React.createElement("div", null, React.createElement(Dropzone, {
      onDrop: this.onDrop,
      multiple: multiple || false,
      maxSize: maxSize || 15 * 1024 * 1024,
      className: className,
      activeClassName: activeClassName,
      accept: accept || "image/png, image/jpeg, image/gif"
    }, this.props.content || "Drop zone", this.state.files.length > 0 ? React.createElement("div", {
      className: "upload-progress"
    }, this.state.files.map((file, i) => React.createElement("div", {
      className: "progress-bar " + (file.progressVal === 100 ? "done" : ""),
      key: i
    }, React.createElement("div", {
      className: "bar",
      style: {
        width: file.progressVal + "%"
      }
    })))) : null));
  }

}

module.exportDefault(InputFileReader);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"input-file-upload.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/core/ui/components/forms/input-file-upload.jsx                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Dropzone;
module.watch(require("react-dropzone"), {
  default(v) {
    Dropzone = v;
  }

}, 1);
let notie;
module.watch(require("notie"), {
  default(v) {
    notie = v;
  }

}, 2);

class InputFileUpload extends React.Component {
  constructor() {
    super();
    this.state = {
      files: []
    };
    this.onDrop = this.onDrop.bind(this);
  }

  onDrop(acceptedFiles) {
    let files = [];
    let component = this;
    acceptedFiles.forEach(function (file) {
      let uploader = new Slingshot.Upload(component.props.uploader);
      uploader.send(file, function (error, downloadUrl) {
        if (error) {
          // Log service detailed response
          notie.alert(3, "Error uploading image.", 3);
          console.error('Error uploading', error);
        } else {
          component.props.input.onChange(downloadUrl);

          if (component.props.callback) {
            component.props.callback(downloadUrl);
          }
        }
      });
      uploader.progressVal = 0;
      Tracker.autorun(function () {
        let progress = uploader.progress();

        if (progress) {
          let uploaderPosition = component.state.files.indexOf(uploader);

          if (uploaderPosition !== -1) {
            let newFiles = [...component.state.files];
            newFiles[uploaderPosition].progressVal = progress * 100;
            component.setState({
              files: newFiles
            });
          }
        }
      });
      files.push(uploader);
    });
    this.setState({
      files: files
    });
  }

  render() {
    let {
      multiple,
      maxSize,
      className,
      activeClassName,
      accept
    } = this.props.settings;
    return React.createElement("div", null, React.createElement(Dropzone, {
      onDrop: this.onDrop,
      multiple: multiple || false,
      maxSize: maxSize || 15 * 1024 * 1024,
      className: className,
      activeClassName: activeClassName,
      accept: accept || "image/png, image/jpeg, image/gif"
    }, this.props.content || "Drop zone", this.state.files.length > 0 ? React.createElement("div", {
      className: "upload-progress"
    }, this.state.files.map((file, i) => React.createElement("div", {
      className: "progress-bar " + (file.progressVal === 100 ? "done" : ""),
      key: i
    }, React.createElement("div", {
      className: "bar",
      style: {
        width: file.progressVal + "%"
      }
    })))) : null));
  }

}

module.exportDefault(InputFileUpload);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"input-gallery.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/core/ui/components/forms/input-gallery.jsx                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/objectSpread"));

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Lightbox;
module.watch(require("react-images"), {
  default(v) {
    Lightbox = v;
  }

}, 1);
let I18n, Translate;
module.watch(require("react-redux-i18n"), {
  I18n(v) {
    I18n = v;
  },

  Translate(v) {
    Translate = v;
  }

}, 2);
let ListEmpty;
module.watch(require("../list-empty"), {
  default(v) {
    ListEmpty = v;
  }

}, 3);
let swal;
module.watch(require("sweetalert2"), {
  default(v) {
    swal = v;
  }

}, 4);
let InputFileUpload;
module.watch(require("./input-file-upload"), {
  default(v) {
    InputFileUpload = v;
  }

}, 5);
let Button, ButtonGroup, DropdownButton, MenuItem, OverlayTrigger, Tooltip;
module.watch(require("react-bootstrap"), {
  Button(v) {
    Button = v;
  },

  ButtonGroup(v) {
    ButtonGroup = v;
  },

  DropdownButton(v) {
    DropdownButton = v;
  },

  MenuItem(v) {
    MenuItem = v;
  },

  OverlayTrigger(v) {
    OverlayTrigger = v;
  },

  Tooltip(v) {
    Tooltip = v;
  }

}, 6);

const crateTooltip = message => {
  return React.createElement(Tooltip, {
    id: Number(new Date()) * Math.random() * 1000
  }, message);
};

class InputGallery extends React.Component {
  constructor() {
    super();
    this.state = {
      lightboxIsOpen: false,
      currentImage: 0,
      currentAlbum: 0
    };
    this.closeLightbox = this.closeLightbox.bind(this);
    this.gotoNext = this.gotoNext.bind(this);
    this.gotoPrevious = this.gotoPrevious.bind(this);
    this.gotoImage = this.gotoImage.bind(this);
    this.handleClickImage = this.handleClickImage.bind(this);
    this.openLightbox = this.openLightbox.bind(this);
    this.addImage = this.addImage.bind(this);
    this.deleteImage = this.deleteImage.bind(this);
    this.addAlbum = this.addAlbum.bind(this);
    this.deleteAlbum = this.deleteAlbum.bind(this);
    this.updateCurrentAlbum = this.updateCurrentAlbum.bind(this);
  }

  openLightbox(index, event) {
    event.preventDefault();
    this.setState({
      currentImage: index,
      lightboxIsOpen: true
    });
  }

  closeLightbox() {
    this.setState({
      currentImage: 0,
      lightboxIsOpen: false
    });
  }

  gotoPrevious() {
    this.setState({
      currentImage: this.state.currentImage - 1
    });
  }

  gotoNext() {
    this.setState({
      currentImage: this.state.currentImage + 1
    });
  }

  gotoImage(index) {
    this.setState({
      currentImage: index
    });
  }

  handleClickImage() {
    if (this.state.currentImage === this.props.images.length - 1) return;
    this.gotoNext();
  }

  renderGallery() {
    const {
      getTranslation,
      readOnly,
      input: {
        value
      }
    } = this.props;
    const albums = value;
    const {
      currentAlbum
    } = this.state;
    const album = albums[currentAlbum];
    if (!album || album.content.length === 0) return React.createElement(ListEmpty, {
      message: React.createElement(Translate, {
        value: getTranslation("empty.message")
      }),
      button: false,
      callback: this.openModal
    });
    const gallery = album.content.map((image, i) => {
      return React.createElement("li", {
        key: i
      }, React.createElement("div", {
        className: "widget widget-shadow"
      }, React.createElement("figure", {
        className: "widget-header overlay-hover overlay"
      }, React.createElement("div", {
        className: "overlay-figure overlay-scale",
        style: {
          background: "url(" + image + ")",
          backgroundSize: "cover",
          backgroundPosition: "center",
          minHeight: "320px"
        },
        alt: "..."
      }), React.createElement("figcaption", {
        className: "overlay-panel overlay-background overlay-fade overlay-icon"
      }, React.createElement("a", {
        className: "icon wb-search",
        href: image,
        onClick: e => this.openLightbox(i, e)
      }), !readOnly && React.createElement("a", {
        className: "icon wb-trash",
        href: image,
        onClick: e => this.deleteImage(i, e)
      })))));
    });
    return React.createElement("ul", {
      className: "blocks blocks-100 blocks-xlg-3 blocks-md-2 blocks-sm-3 margin-top-20"
    }, gallery);
  }

  deleteImage(index, event) {
    event.preventDefault();
    const {
      getTranslation,
      input: {
        value,
        onChange
      }
    } = this.props;
    const albums = [...value];
    const {
      currentAlbum
    } = this.state;
    swal({
      title: I18n.t(getTranslation("delete.title")),
      text: I18n.t(getTranslation("delete.title")),
      type: 'warning',
      showCancelButton: true,
      cancelButtonText: I18n.t(getTranslation("delete.cancel")),
      confirmButtonText: I18n.t(getTranslation("delete.confirm"))
    }).then(function () {
      albums[currentAlbum] = (0, _objectSpread2.default)({}, albums[currentAlbum]);
      albums[currentAlbum].content = albums[currentAlbum].content.filter((a, i) => i !== index);
      onChange(albums);
    });
  }

  addImage(image) {
    const {
      input: {
        value,
        onChange
      }
    } = this.props;
    const {
      currentAlbum
    } = this.state;
    const albums = [...value];
    albums[currentAlbum] = (0, _objectSpread2.default)({}, albums[currentAlbum]);
    albums[currentAlbum].content = [...albums[currentAlbum].content, image];
    onChange(albums);
  }

  addAlbum() {
    const {
      getTranslation,
      input: {
        value,
        onChange
      }
    } = this.props;
    const albums = [...value];
    swal({
      title: I18n.t(getTranslation("newAlbum.title")),
      input: 'text',
      showCancelButton: true,
      confirmButtonText: I18n.t(getTranslation("newAlbum.confirm")),
      cancelButtonText: I18n.t(getTranslation("newAlbum.cancel"))
    }).then(function (name) {
      let newAlbum = {
        name,
        content: []
      };
      onChange([...albums, newAlbum]);
    });
  }

  deleteAlbum() {
    event.preventDefault();
    const {
      getTranslation,
      input: {
        value,
        onChange
      }
    } = this.props;
    const albums = [...value];
    const {
      currentAlbum
    } = this.state;
    let component = this;
    swal({
      title: I18n.t(getTranslation("delete.title")),
      text: I18n.t(getTranslation("delete.title")),
      type: 'warning',
      showCancelButton: true,
      cancelButtonText: I18n.t(getTranslation("delete.cancel")),
      confirmButtonText: I18n.t(getTranslation("delete.confirm"))
    }).then(function () {
      albums.splice(currentAlbum, 1);
      component.setState({
        currentAlbum: component.state.currentAlbum - 1
      }, function () {
        onChange(albums);
      });
      onChange(albums);
    });
  }

  updateCurrentAlbum(currentAlbum) {
    let component = this;
    return function () {
      component.setState({
        currentAlbum
      });
    };
  }

  render() {
    const {
      getTranslation,
      readOnly,
      input: {
        value
      }
    } = this.props;
    const albums = value;
    const {
      lightboxIsOpen,
      currentImage,
      currentAlbum
    } = this.state;
    const album = albums[currentAlbum];
    return React.createElement("div", null, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("h4", null, React.createElement(Translate, {
      value: getTranslation("title")
    }))), !readOnly && React.createElement("div", {
      className: "col-md-8"
    }, React.createElement(ButtonGroup, {
      bsClass: "pull-right"
    }, React.createElement(OverlayTrigger, {
      placement: "top",
      overlay: crateTooltip(React.createElement(Translate, {
        value: getTranslation("list.newImage")
      }))
    }, React.createElement(Button, {
      bsStyle: "primary"
    }, React.createElement(InputFileUpload, {
      content: React.createElement("i", {
        className: "fa fa-cloud-upload",
        "aria-hidden": "true"
      }),
      uploader: this.props.uploader,
      input: {
        onChange: this.addImage
      },
      settings: {
        multiple: false,
        maxSize: 3 * 1024 * 1024,
        className: "button-drop-zone pull-right",
        activeClassName: "button-drop-zone-active",
        accept: "image/png, image/jpeg, image/gif"
      }
    }))), React.createElement(OverlayTrigger, {
      placement: "top",
      overlay: crateTooltip(React.createElement(Translate, {
        value: getTranslation("delete.albumHelper")
      }))
    }, React.createElement(Button, {
      bsStyle: "primary",
      onClick: this.deleteAlbum
    }, React.createElement("i", {
      className: "fa fa-trash-o",
      "aria-hidden": "true"
    }))), albums[currentAlbum] ? React.createElement(DropdownButton, {
      bsStyle: "primary",
      title: albums[currentAlbum] ? albums[currentAlbum].name : React.createElement(Translate, {
        value: getTranslation("list.newAlbum")
      }),
      id: "bg-nested-dropdown"
    }, albums.map((a, i) => React.createElement(MenuItem, {
      key: i,
      eventKey: i,
      className: "dropdown-item",
      onClick: this.updateCurrentAlbum(i)
    }, a.name)), React.createElement(MenuItem, {
      eventKey: "new",
      className: "dropdown-item",
      onClick: this.addAlbum
    }, React.createElement("i", {
      className: "fa fa-plus-circle",
      style: {
        marginRight: 5
      },
      "aria-hidden": "true"
    }), React.createElement(Translate, {
      value: getTranslation("list.newAlbum")
    }))) : React.createElement(Button, {
      bsStyle: "primary",
      onClick: this.addAlbum
    }, React.createElement("i", {
      className: "fa fa-plus-circle",
      style: {
        marginRight: 5
      },
      "aria-hidden": "true"
    }), React.createElement(Translate, {
      value: getTranslation("list.newAlbum")
    }))))), React.createElement("div", {
      className: "spacer-20"
    }), React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-body container-fluid"
    }, this.renderGallery())), album && React.createElement(Lightbox, {
      currentImage: currentImage,
      images: album.content.map(i => ({
        src: i
      })),
      isOpen: lightboxIsOpen,
      onClickImage: this.handleClickImage,
      onClickNext: this.gotoNext,
      onClickPrev: this.gotoPrevious,
      onClickThumbnail: this.gotoImage,
      onClose: this.closeLightbox
    }));
  }

}

module.exportDefault(InputGallery);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"input-geolocation.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/core/ui/components/forms/input-geolocation.jsx                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React, Component;
module.watch(require("react"), {
  default(v) {
    React = v;
  },

  Component(v) {
    Component = v;
  }

}, 0);
let Geosuggest;
module.watch(require("react-geosuggest"), {
  default(v) {
    Geosuggest = v;
  }

}, 1);

class InputGeolocation extends Component {
  /**
   * When a suggest got selected
   * @param  {Object} suggest The suggest
   */
  onSuggestSelect(suggest, onChange) {
    let val = {
      label: suggest.label,
      location: suggest.location
    };
    this.props.input.onChange(val);
  }

  render() {
    const {
      input: {
        value,
        onChange
      }
    } = this.props;
    let geoLabel = this.props.input.value ? this.props.input.value.label : "Enter Location";
    return React.createElement("div", null, React.createElement(Geosuggest, {
      placeholder: geoLabel,
      types: this.props.types,
      onSuggestSelect: val => {
        onChange({
          label: val.label,
          geolocation: val.location
        });
      }
    }));
  }

}

module.exportDefault(InputGeolocation);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"input-label-checkbox.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/core/ui/components/forms/input-label-checkbox.jsx                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let uuid;
module.watch(require("uuid"), {
  default(v) {
    uuid = v;
  }

}, 1);

class InputLabelCheckbox extends React.Component {
  render() {
    let {
      value,
      onChange
    } = this.props.input;
    let {
      iconChecked,
      iconUnchecked,
      className
    } = this.props;
    let inputID = uuid.v4();
    return React.createElement("label", {
      className: "label-checkbox " + (value ? "checked" : "") + " " + (className ? className : ""),
      htmlFor: inputID
    }, React.createElement("input", {
      type: "checkbox",
      id: inputID,
      value: value,
      onChange: onChange
    }), React.createElement("i", {
      className: value ? iconChecked : iconUnchecked
    }), React.createElement("div", {
      className: "label"
    }, this.props.label || ""));
  }

}

module.exportDefault(InputLabelCheckbox);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"input-masked-number.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/core/ui/components/forms/input-masked-number.jsx                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let NumberFormat;
module.watch(require("react-number-format"), {
  default(v) {
    NumberFormat = v;
  }

}, 1);

class InputMaskedNumber extends React.Component {
  constructor() {
    super();
    this.handleChange = this.handleChange.bind(this);
  }

  handleChange(number) {
    const {
      input: {
        onChange
      }
    } = this.props;
    console.log("VALUE", number);
    let value = number.floatValue;
    onChange(value);
  }

  render() {
    const {
      input: {
        value
      },
      className
    } = this.props;
    return React.createElement("div", null, React.createElement(NumberFormat, {
      value: value,
      className: className || "",
      onValueChange: this.handleChange,
      thousandSeparator: true
    }));
  }

}

module.exportDefault(InputMaskedNumber);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"input-number-interval.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/core/ui/components/forms/input-number-interval.jsx                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/objectSpread"));

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class InputNumberIntervat extends React.Component {
  constructor() {
    super();
    this.state = {
      min: 0,
      max: 100
    };
    this.updateInput = this.updateInput.bind(this);
  }

  updateInput(key) {
    let component = this;
    return function (e) {
      let val = e.target.value;
      let newState = (0, _objectSpread2.default)({}, component.state);
      newState[key] = Number(val);
      component.setState(newState);
      component.props.input.onChange(newState);
    };
  }

  componentWillMount() {
    this.setState(this.props.input.value);
  }

  render() {
    let {
      value,
      onChange
    } = this.props;
    return React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-xs-6"
    }, React.createElement("input", {
      className: "form-control",
      type: "text",
      onChange: this.updateInput("min"),
      value: this.state.min
    })), React.createElement("div", {
      className: "col-xs-6"
    }, React.createElement("input", {
      className: "form-control",
      type: "text",
      onChange: this.updateInput("max"),
      value: this.state.max
    })));
  }

}

module.exportDefault(InputNumberIntervat);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"input-phone.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/core/ui/components/forms/input-phone.jsx                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let ReactPhoneInput;
module.watch(require("react-phone-input"), {
  default(v) {
    ReactPhoneInput = v;
  }

}, 1);

class InputPhone extends React.Component {
  constructor() {
    super();
    this.handleChange = this.handleChange.bind(this);
  }

  handleChange(phone) {
    this.props.input.onChange(phone);
  }

  render() {
    return React.createElement("div", null, React.createElement(ReactPhoneInput, {
      defaultCountry: 'us',
      onChange: this.handleChange
    }));
  }

}

module.exportDefault(InputPhone);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"input-radio.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/core/ui/components/forms/input-radio.jsx                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class InputRadio extends React.Component {
  render() {
    const {
      input: {
        value,
        onChange
      }
    } = this.props;
    return React.createElement("div", {
      value: value,
      onChange: onChange,
      className: this.props.className ? this.props.className : ""
    }, this.props.options.map((c, i) => {
      let {
        label,
        value
      } = c;

      if (typeof c === "string") {
        label = c;
        value = c;
      }

      return React.createElement("span", null, React.createElement("input", {
        type: "radio",
        name: "gender",
        value: value
      }), label);
    }));
  }

}

module.exportDefault(InputRadio);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"input-select-multiple.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/core/ui/components/forms/input-select-multiple.jsx                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Select;
module.watch(require("react-select"), {
  default(v) {
    Select = v;
  }

}, 1);

class InputSelectMultiple extends React.Component {
  constructor() {
    super();
    this.onChange = this.onChange.bind(this);
  }

  onChange(val) {
    const {
      input: {
        onChange
      }
    } = this.props;
    let value = val.map(v => v.value);
    onChange(value);
  }

  render() {
    const {
      input: {
        value,
        onChange
      },
      options
    } = this.props;
    return React.createElement(Select, {
      name: "form-field-name",
      value: value,
      options: options,
      onChange: this.onChange,
      multi: true
    });
  }

}

module.exportDefault(InputSelectMultiple);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"input-select.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/core/ui/components/forms/input-select.jsx                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class InputSelect extends React.Component {
  render() {
    const {
      input: {
        value,
        onChange
      }
    } = this.props;
    return React.createElement("select", {
      value: value,
      onChange: onChange,
      className: this.props.className ? this.props.className : ""
    }, this.props.options.map((c, i) => {
      let {
        label,
        value
      } = c;

      if (typeof c === "string") {
        label = c;
        value = c;
      }

      return React.createElement("option", {
        value: value,
        key: i
      }, label);
    }));
  }

}

module.exportDefault(InputSelect);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"input-social-network.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/core/ui/components/forms/input-social-network.jsx                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class InputSocialNetwork extends React.Component {
  constructor() {
    super();
    this.change = this.change.bind(this);
  }

  change(network) {
    let {
      input: {
        onChange,
        value
      }
    } = this.props;
    return function () {
      let newVal = [...value];
      let indexOf = value.indexOf(network); //console.log("SOCIAL_NETWORK_CHANGE", value, newVal);

      if (indexOf === -1) {
        newVal.push(network);
      } else {
        newVal.splice(indexOf, 1);
      }

      onChange(newVal);
    };
  }

  render() {
    const {
      input: {
        value
      }
    } = this.props;
    return React.createElement("div", {
      className: "social-networks-input"
    }, React.createElement("ul", {
      className: "profile-list"
    }, React.createElement("li", {
      onClick: this.change("facebook"),
      className: value.indexOf("facebook") !== -1 ? "active" : ""
    }, React.createElement("div", {
      className: "selected"
    }, React.createElement("i", {
      className: "icon wb-check"
    })), React.createElement("i", {
      className: "social-icon facebook"
    })), React.createElement("li", {
      onClick: this.change("twitter"),
      className: value.indexOf("twitter") !== -1 ? "active" : ""
    }, React.createElement("div", {
      className: "selected"
    }, React.createElement("i", {
      className: "icon wb-check"
    })), React.createElement("i", {
      className: "social-icon twitter"
    })), React.createElement("li", {
      onClick: this.change("instagram"),
      className: value.indexOf("instagram") !== -1 ? "active" : ""
    }, React.createElement("div", {
      className: "selected"
    }, React.createElement("i", {
      className: "icon wb-check"
    })), React.createElement("i", {
      className: "social-icon instagram"
    }))));
  }

}

module.exportDefault(InputSocialNetwork);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"input-tags.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/core/ui/components/forms/input-tags.jsx                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let TagsInput;
module.watch(require("react-tagsinput"), {
  default(v) {
    TagsInput = v;
  }

}, 1);

class InputTags extends React.Component {
  constructor() {
    super();
    this.handleChange = this.handleChange.bind(this);
  }

  componentWillReceiveProps() {
    if (this.props.input.value && !Array.isArray(this.props.input.value)) {
      this.props.input.onChange([]);
    }
  }

  handleChange(tags) {
    let validatedTags = tags;

    if (this.props.validation) {
      validatedTags = this.props.validation(tags);
    }

    this.props.input.onChange(validatedTags);
  }

  render() {
    return React.createElement("div", null, React.createElement(TagsInput, {
      value: this.props.input.value || [],
      onChange: this.handleChange,
      inputProps: {
        placeholder: this.props.placeholder || ""
      }
    }));
  }

}

module.exportDefault(InputTags);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"input-video-gallery.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/core/ui/components/forms/input-video-gallery.jsx                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/objectSpread"));

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 1);
let ListEmpty;
module.watch(require("../list-empty"), {
  default(v) {
    ListEmpty = v;
  }

}, 2);
let swal;
module.watch(require("sweetalert2"), {
  default(v) {
    swal = v;
  }

}, 3);
let ReactPlayer;
module.watch(require("react-player"), {
  default(v) {
    ReactPlayer = v;
  }

}, 4);
let Button, ButtonGroup, DropdownButton, MenuItem, OverlayTrigger, Tooltip;
module.watch(require("react-bootstrap"), {
  Button(v) {
    Button = v;
  },

  ButtonGroup(v) {
    ButtonGroup = v;
  },

  DropdownButton(v) {
    DropdownButton = v;
  },

  MenuItem(v) {
    MenuItem = v;
  },

  OverlayTrigger(v) {
    OverlayTrigger = v;
  },

  Tooltip(v) {
    Tooltip = v;
  }

}, 5);

const crateTooltip = message => {
  return React.createElement(Tooltip, {
    id: Number(new Date()) * Math.random() * 1000
  }, message);
};

class InputVideoGallery extends React.Component {
  constructor() {
    super();
    this.state = {
      lightboxIsOpen: false,
      currentVideo: null,
      currentAlbum: 0
    };
    this.addVideo = this.addVideo.bind(this);
    this.deleteVideo = this.deleteVideo.bind(this);
    this.togglePlayVideo = this.togglePlayVideo.bind(this);
    this.addAlbum = this.addAlbum.bind(this);
    this.deleteAlbum = this.deleteAlbum.bind(this);
    this.updateCurrentAlbum = this.updateCurrentAlbum.bind(this);
  }

  renderGallery() {
    const {
      getTranslation,
      readOnly,
      input: {
        value
      }
    } = this.props;
    const albums = value;
    const {
      currentAlbum,
      currentVideo
    } = this.state;
    const album = albums[currentAlbum];
    if (!album || album.content.length === 0) return React.createElement(ListEmpty, {
      message: React.createElement(Translate, {
        value: getTranslation("empty.message")
      }),
      button: false,
      callback: this.openModal
    });
    const gallery = album.content.map((video, i) => {
      return React.createElement("li", {
        key: i
      }, React.createElement("div", {
        className: "widget widget-shadow"
      }, React.createElement("figure", {
        className: "widget-header overlay-hover overlay"
      }, React.createElement(ReactPlayer, {
        url: video,
        controls: false,
        playing: currentVideo === i
      }), React.createElement("figcaption", {
        className: "overlay-panel overlay-background overlay-fade overlay-icon"
      }, React.createElement("a", {
        className: "icon " + (currentVideo === i ? "fa-pause" : "fa-play"),
        onClick: e => this.togglePlayVideo(i, e)
      }), readOnly && React.createElement("a", {
        className: "icon wb-trash",
        onClick: e => this.deleteVideo(i, e)
      })))));
    });
    return React.createElement("ul", {
      className: "blocks blocks-100 blocks-xlg-3 blocks-md-2 blocks-sm-2 margin-top-20"
    }, gallery);
  }

  togglePlayVideo(index, event) {
    event.preventDefault();
    let {
      currentVideo
    } = this.state;

    if (typeof currentVideo === "number") {
      index = null;
    }

    this.setState({
      currentVideo: index
    });
  }

  deleteVideo(index, event) {
    event.preventDefault();
    const {
      getTranslation,
      input: {
        value,
        onChange
      }
    } = this.props;
    const albums = [...value];
    const {
      currentAlbum
    } = this.state;
    let component = this;
    swal({
      title: I18n.t(getTranslation("delete.title")),
      text: I18n.t(getTranslation("delete.title")),
      type: 'warning',
      showCancelButton: true,
      cancelButtonText: I18n.t(getTranslation("delete.cancel")),
      confirmButtonText: I18n.t(getTranslation("delete.confirm"))
    }).then(function () {
      component.setState({
        currentVideo: null
      }, function () {
        albums[currentAlbum] = (0, _objectSpread2.default)({}, albums[currentAlbum]);
        albums[currentAlbum].content = albums[currentAlbum].content.filter((a, i) => i !== index);
        onChange(albums);
      });
    });
  }

  addVideo() {
    let component = this;
    swal({
      title: I18n.t(component.props.getTranslation("new.title")),
      input: 'text',
      showCancelButton: true,
      confirmButtonText: I18n.t(component.props.getTranslation("new.confirm")),
      cancelButtonText: I18n.t(component.props.getTranslation("new.cancel"))
    }).then(function (video) {
      const {
        input: {
          value,
          onChange
        }
      } = component.props;
      const {
        currentAlbum
      } = component.state;
      const albums = [...value];
      albums[currentAlbum] = (0, _objectSpread2.default)({}, albums[currentAlbum]);
      albums[currentAlbum].content = [...albums[currentAlbum].content, video];
      onChange(albums);
    });
  }

  addAlbum() {
    const {
      getTranslation,
      input: {
        value,
        onChange
      }
    } = this.props;
    const albums = [...value];
    let component = this;
    swal({
      title: I18n.t(getTranslation("newAlbum.title")),
      input: 'text',
      showCancelButton: true,
      confirmButtonText: I18n.t(getTranslation("newAlbum.confirm")),
      cancelButtonText: I18n.t(getTranslation("newAlbum.cancel"))
    }).then(function (name) {
      let newAlbum = {
        name,
        content: []
      };
      component.setState({
        currentVideo: null
      }, function () {
        onChange([...albums, newAlbum]);
      });
    });
  }

  deleteAlbum() {
    event.preventDefault();
    const {
      getTranslation,
      input: {
        value,
        onChange
      }
    } = this.props;
    const albums = [...value];
    const {
      currentAlbum
    } = this.state;
    let component = this;
    swal({
      title: I18n.t(getTranslation("delete.title")),
      text: I18n.t(getTranslation("delete.title")),
      type: 'warning',
      showCancelButton: true,
      cancelButtonText: I18n.t(getTranslation("delete.cancel")),
      confirmButtonText: I18n.t(getTranslation("delete.confirm"))
    }).then(function () {
      albums.splice(currentAlbum, 1);
      component.setState({
        currentAlbum: component.state.currentAlbum - 1,
        currentVideo: null
      }, function () {
        onChange(albums);
      });
      onChange(albums);
    });
  }

  updateCurrentAlbum(currentAlbum) {
    let component = this;
    return function () {
      component.setState({
        currentAlbum,
        currentVideo: null
      });
    };
  }

  render() {
    const {
      getTranslation,
      readOnly,
      input: {
        value
      }
    } = this.props;
    const albums = value;
    const {
      currentAlbum
    } = this.state;
    return React.createElement("div", null, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("h4", null, React.createElement(Translate, {
      value: getTranslation("title")
    }))), !readOnly && React.createElement("div", {
      className: "col-md-8"
    }, React.createElement(ButtonGroup, {
      bsClass: "pull-right"
    }, React.createElement(OverlayTrigger, {
      placement: "top",
      overlay: crateTooltip(React.createElement(Translate, {
        value: getTranslation("list.newVideo")
      }))
    }, React.createElement(Button, {
      bsStyle: "primary",
      onClick: this.addVideo
    }, React.createElement("i", {
      className: "fa fa-cloud-upload",
      "aria-hidden": "true"
    }))), React.createElement(OverlayTrigger, {
      placement: "top",
      overlay: crateTooltip(React.createElement(Translate, {
        value: getTranslation("delete.albumHelper")
      }))
    }, React.createElement(Button, {
      bsStyle: "primary",
      onClick: this.deleteAlbum
    }, React.createElement("i", {
      className: "fa fa-trash-o",
      "aria-hidden": "true"
    }))), albums[currentAlbum] ? React.createElement(DropdownButton, {
      bsStyle: "primary",
      title: albums[currentAlbum].name,
      id: "bg-nested-dropdown"
    }, albums.map((a, i) => React.createElement(MenuItem, {
      key: i,
      eventKey: i,
      className: "dropdown-item",
      onClick: this.updateCurrentAlbum(i)
    }, a.name)), React.createElement(MenuItem, {
      eventKey: "new",
      className: "dropdown-item",
      onClick: this.addAlbum
    }, React.createElement("i", {
      className: "fa fa-plus-circle",
      style: {
        marginRight: 5
      },
      "aria-hidden": "true"
    }), React.createElement(Translate, {
      value: getTranslation("list.newAlbum")
    }))) : React.createElement(Button, {
      bsStyle: "primary",
      onClick: this.addAlbum
    }, React.createElement("i", {
      className: "fa fa-plus-circle",
      style: {
        marginRight: 5
      },
      "aria-hidden": "true"
    }), React.createElement(Translate, {
      value: getTranslation("list.newAlbum")
    }))))), React.createElement("div", {
      className: "spacer-20"
    }), React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-body container-fluid"
    }, this.renderGallery())));
  }

}

module.exportDefault(InputVideoGallery);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"nav-bar":{"avatar-menu-extended.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/core/ui/components/nav-bar/avatar-menu-extended.jsx                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let withRouter;
module.watch(require("react-router"), {
  withRouter(v) {
    withRouter = v;
  }

}, 1);
let Link;
module.watch(require("react-router"), {
  Link(v) {
    Link = v;
  }

}, 2);
let createContainer;
module.watch(require("meteor/react-meteor-data"), {
  createContainer(v) {
    createContainer = v;
  }

}, 3);
let NavDropdown, MenuItem;
module.watch(require("react-bootstrap"), {
  NavDropdown(v) {
    NavDropdown = v;
  },

  MenuItem(v) {
    MenuItem = v;
  }

}, 4);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 5);
let CookieName;
module.watch(require("../../../settings"), {
  CookieName(v) {
    CookieName = v;
  }

}, 6);
let PropTypes;
module.watch(require("prop-types"), {
  default(v) {
    PropTypes = v;
  }

}, 7);

class AvatarMenuExtended extends React.Component {
  constructor(props) {
    super(props);
    this.logout = this.logout.bind(this);
    this.goTo = this.goTo.bind(this);
  }

  logout() {
    Meteor.logout(() => {
      let path = "/auth/login";

      if (window.localStorage.getItem(CookieName + "_USER_DATA")) {
        path = "/auth/restore";
      }

      this.props.router.push(path);
    });
  }

  goTo() {
    this.props.router.push("/settings/profile");
  }

  render() {
    let {
      user
    } = this.props;
    let profile = user.profile;

    let getTranslation = key => {
      return "Core.navBar.avatarMenu." + key;
    };

    let emailAddress = user.emails && user.emails[0] ? user.emails[0].address : "User";
    let Avatar = React.createElement("div", {
      className: "extended-avatar-menu"
    }, React.createElement("span", {
      className: "avatar avatar-online"
    }, React.createElement("img", {
      src: this.props.user.profile.avatar,
      alt: "..."
    }), React.createElement("i", null)), React.createElement("div", {
      className: "content"
    }, React.createElement("span", {
      className: "label"
    }, profile.profile ? React.createElement(Translate, {
      value: getTranslation("profiles." + profile.profile)
    }) : "User", React.createElement("i", {
      className: "fa fa-angle-down",
      "aria-hidden": "true"
    })), React.createElement("span", {
      className: "name"
    }, profile.name && profile.lastName ? profile.name + " " + profile.lastName : emailAddress)));
    return React.createElement(NavDropdown, {
      eventKey: 3,
      title: Avatar,
      id: "avatar-menu-dropdown",
      className: "nav-item no-caret navbar-avatar slim"
    }, React.createElement(MenuItem, {
      eventKey: 3.1,
      className: "dropdown-item",
      onClick: this.goTo
    }, React.createElement("i", {
      className: "icon wb-user",
      "aria-hidden": "true"
    }), " ", React.createElement(Translate, {
      value: getTranslation("profile")
    })), React.createElement(MenuItem, {
      eventKey: 3.2,
      className: "dropdown-item"
    }, React.createElement("i", {
      className: "icon wb-payment",
      "aria-hidden": "true"
    }), " ", React.createElement(Translate, {
      value: getTranslation("billing")
    })), React.createElement(MenuItem, {
      eventKey: 3.3,
      className: "dropdown-item"
    }, React.createElement("i", {
      className: "icon wb-settings",
      "aria-hidden": "true"
    }), " ", React.createElement(Translate, {
      value: getTranslation("settings")
    })), React.createElement(MenuItem, {
      divider: true
    }), React.createElement(MenuItem, {
      eventKey: 3.3,
      className: "dropdown-item",
      onClick: this.logout
    }, React.createElement("i", {
      className: "icon wb-power",
      "aria-hidden": "true"
    }), " ", React.createElement(Translate, {
      value: getTranslation("logout")
    })));
  }

}

AvatarMenuExtended.propTypes = {
  router: PropTypes.shape({
    push: PropTypes.func.isRequired
  }).isRequired
};
const AvatarMenuExtendedWithUserId = createContainer(() => {
  return {
    user: Meteor.user() || ''
  };
}, withRouter(AvatarMenuExtended));
module.exportDefault(AvatarMenuExtendedWithUserId);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"int-menu.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/core/ui/components/nav-bar/int-menu.jsx                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let NavDropdown, MenuItem;
module.watch(require("react-bootstrap"), {
  NavDropdown(v) {
    NavDropdown = v;
  },

  MenuItem(v) {
    MenuItem = v;
  }

}, 1);
let setLocale;
module.watch(require("react-redux-i18n"), {
  setLocale(v) {
    setLocale = v;
  }

}, 2);
let Store;
module.watch(require("../../../../../store"), {
  default(v) {
    Store = v;
  }

}, 3);
let languages;
module.watch(require("../../../../../translations"), {
  languages(v) {
    languages = v;
  }

}, 4);

/*
 let langs=[];
 Object.keys(isoLangs).forEach((code)=>{langs.push(isoLangs[code])})
 console.log("INT_MENU",languages);
 {langs.map((lang,i) => {
 return (
 <MenuItem eventKey={i} key={i} className="dropdown-item" onClick={()=>{this.selectLanguage(lang.code)}}>
 <span className={"flag-icon "+lang.icon}/> {lang.native}
 </MenuItem>
 )
 })}
 * */
class IntMenu extends React.Component {
  constructor(props) {
    super(props);
    this.selectLanguage = this.selectLanguage.bind(this);
  }

  selectLanguage() {
    let lang = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "en";
    Store.dispatch(setLocale(lang));
    window.localStorage.setItem("APPLICATION_LANGUAGE", lang);
    this.forceUpdate();
  }

  render() {
    let locale = Store.getState().i18n.locale,
        currentLang = languages.filter(lang => lang.code === locale)[0];
    return React.createElement(NavDropdown, {
      eventKey: 3,
      title: React.createElement("span", {
        className: "flag-icon " + (currentLang ? currentLang.icon : "flag-icon-us")
      }),
      id: "int-menu-dropdown",
      className: "nav-item no-caret title-case-dropdown"
    }, languages.map((lang, i) => {
      return React.createElement(MenuItem, {
        eventKey: i,
        key: i,
        className: "dropdown-item",
        onClick: () => {
          this.selectLanguage(lang.code);
        }
      }, React.createElement("span", {
        className: "flag-icon " + lang.icon
      }), " ", lang.native);
    }));
  }

}

module.exportDefault(IntMenu);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"nav-bar-content.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/core/ui/components/nav-bar/nav-bar-content.jsx                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let withRouter;
module.watch(require("react-router"), {
  withRouter(v) {
    withRouter = v;
  }

}, 1);
let IntMenu;
module.watch(require("./int-menu"), {
  default(v) {
    IntMenu = v;
  }

}, 2);
let AvatarMenuExtended;
module.watch(require("./avatar-menu-extended"), {
  default(v) {
    AvatarMenuExtended = v;
  }

}, 3);
let NotificationsMenu;
module.watch(require("./notifications-menu"), {
  default(v) {
    NotificationsMenu = v;
  }

}, 4);
let SearchOverlap;
module.watch(require("./search-overlap"), {
  default(v) {
    SearchOverlap = v;
  }

}, 5);
let NotificationSystem;
module.watch(require("react-notification-system"), {
  default(v) {
    NotificationSystem = v;
  }

}, 6);
let PropTypes;
module.watch(require("prop-types"), {
  default(v) {
    PropTypes = v;
  }

}, 7);
let $;
module.watch(require("jquery"), {
  default(v) {
    $ = v;
  }

}, 8);

class NavBarContent extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      notifications: []
    };
    this.ready = false;
    this._notificationSystem = null;
    this._addNotification = this._addNotification.bind(this);
    this.getNotifications = this.getNotifications.bind(this);
    this.openNotification = this.openNotification.bind(this);
    this.toggleFoldedMenu = this.toggleFoldedMenu.bind(this);
  }

  openNotification(notification) {
    Herald.collection.update(notification._id, {
      $set: {
        read: true
      }
    });

    if (notification.url) {
      let path = notification.url;
      let match = path.split(window.location.origin);

      if (match) {
        path = match[1].substring(1, match[1].length);
      }

      this.props.router.push(path);
    }
  }

  _addNotification(event) {
    event.preventDefault();

    this._notificationSystem.addNotification({
      level: "info",
      position: "br",
      autoDismiss: 0,
      children: React.createElement("div", {
        onClick: () => console.log("Clicked")
      }, React.createElement("div", {
        className: "title"
      }, "Property Taxes"), React.createElement("div", {
        className: "description"
      }, "Invoice 101 is overdue"), React.createElement("div", {
        className: "time"
      }, moment().subtract(15, 'minutes').fromNow()))
    });
  }

  getNotifications() {
    let component = this;
    setTimeout(function () {
      Tracker.autorun(function () {
        if (!Meteor.user()) return;
        let notifications = Herald.getNotifications({
          medium: 'onsite'
        }, {
          sort: {
            timestamp: -1
          }
        }).fetch();
        let lastNotification = notifications[0];

        if (component.state.lastNotification !== lastNotification) {
          component.showNotification(lastNotification);
        }

        component.setState({
          notifications,
          lastNotification
        });
        component.ready = true;
      });
    }, 1000);
  }

  showNotification(notification) {
    if (this.ready && notification) {
      this._notificationSystem.addNotification({
        level: notification.data.type,
        position: "br",
        autoDismiss: 6,
        children: React.createElement("div", {
          onClick: () => {
            this.openNotification(notification);
          }
        }, React.createElement("div", {
          className: "title"
        }, notification.data.title), React.createElement("div", {
          className: "description"
        }, notification.data.description), React.createElement("div", {
          className: "time"
        }, moment(notification.timestamp).fromNow()))
      });
    }
  }

  componentDidMount() {
    this._notificationSystem = this.refs.notificationSystem;
    this.getNotifications();
  }

  toggleFoldedMenu() {
    $("body").toggleClass("site-menubar-fold").toggleClass("site-menubar-unfold");
  }

  render() {
    return React.createElement("div", {
      className: "navbar-container container-fluid"
    }, React.createElement("div", {
      className: "collapse navbar-collapse navbar-collapse-toolbar " + (this.props.NavOpen ? 'in' : '')
    }, React.createElement("ul", {
      className: "nav navbar-toolbar navbar-right navbar-toolbar-right"
    }, React.createElement(IntMenu, null), React.createElement(NotificationsMenu, {
      notifications: this.state.notifications,
      openNotification: this.openNotification
    }), React.createElement(AvatarMenuExtended, null))), React.createElement(SearchOverlap, {
      open: this.props.SearchOpen,
      toggle: this.props.SearchCollapse
    }), React.createElement(NotificationSystem, {
      ref: "notificationSystem"
    }));
  }

}

NavBarContent.propTypes = {
  router: PropTypes.shape({
    push: PropTypes.func.isRequired
  }).isRequired
};
module.exportDefault(withRouter(NavBarContent));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"nav-bar-header.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/core/ui/components/nav-bar/nav-bar-header.jsx                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let AppSettings;
module.watch(require("../../../../../settings"), {
  default(v) {
    AppSettings = v;
  }

}, 1);

class NavBarHeader extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    let imagePath = "";
    return React.createElement("div", {
      className: "navbar-header"
    }, React.createElement("button", {
      type: "button",
      className: "navbar-toggler hamburger hamburger-close navbar-toggler-left hided",
      "data-toggle": "menubar"
    }, React.createElement("span", {
      className: "sr-only"
    }, "Toggle navigation"), React.createElement("span", {
      className: "hamburger-bar"
    })), React.createElement("button", {
      type: "button",
      className: "navbar-toggler collapsed",
      onClick: this.props.NavCollapse
    }, React.createElement("i", {
      className: "icon wb-more-horizontal",
      "aria-hidden": "true"
    })), React.createElement("div", {
      className: "navbar-brand navbar-brand-center site-gridmenu-toggle",
      "data-toggle": "gridmenu"
    }, React.createElement("img", {
      className: "navbar-brand-logo",
      src: AppSettings.logo,
      title: AppSettings.name
    })), React.createElement("button", {
      type: "button",
      className: "navbar-toggler collapsed",
      onClick: this.props.SearchCollapse
    }, React.createElement("span", {
      className: "sr-only"
    }, "Toggle Search"), React.createElement("i", {
      className: "icon wb-search",
      "aria-hidden": "true"
    })));
  }

}

module.exportDefault(NavBarHeader);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"nav-bar.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/core/ui/components/nav-bar/nav-bar.jsx                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let NavBarHeader;
module.watch(require("./nav-bar-header"), {
  default(v) {
    NavBarHeader = v;
  }

}, 1);
let NavBarContent;
module.watch(require("./nav-bar-content"), {
  default(v) {
    NavBarContent = v;
  }

}, 2);

class NavBar extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      search: false,
      navCollapse: false
    };
    this.toggleSearch = this.toggleSearch.bind(this);
    this.toggleNavCollapse = this.toggleNavCollapse.bind(this);
  }

  toggleSearch() {
    this.setState({
      search: !this.state.search
    });
  }

  toggleNavCollapse() {
    this.setState({
      navCollapse: !this.state.navCollapse
    });
  }

  render() {
    return React.createElement("nav", {
      className: "site-navbar navbar navbar-default navbar-fixed-top navbar-mega"
    }, React.createElement(NavBarHeader, {
      NavCollapse: this.toggleNavCollapse,
      SearchCollapse: this.toggleSearch
    }), React.createElement(NavBarContent, {
      NavOpen: this.state.navCollapse,
      SearchOpen: this.state.search,
      SearchCollapse: this.toggleSearch
    }));
  }

}

module.exportDefault(NavBar);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"notifications-menu.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/core/ui/components/nav-bar/notifications-menu.jsx                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let NavDropdown, NavItem;
module.watch(require("react-bootstrap"), {
  NavDropdown(v) {
    NavDropdown = v;
  },

  NavItem(v) {
    NavItem = v;
  }

}, 1);
let withRouter;
module.watch(require("react-router"), {
  withRouter(v) {
    withRouter = v;
  }

}, 2);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 3);
let PropTypes;
module.watch(require("prop-types"), {
  default(v) {
    PropTypes = v;
  }

}, 4);

let MenuContent = props => {
  return React.createElement("div", {
    className: "dropdown-menu-media"
  }, React.createElement("div", {
    className: "dropdown-menu-header"
  }, React.createElement("h5", null, React.createElement(Translate, {
    value: props.getTranslation("title")
  }))), React.createElement("div", {
    className: "dropdown-menu-body list-group"
  }, props.notifications.map(notification => React.createElement("a", {
    className: "list-group-item",
    key: notification._id,
    href: "javascript:void(0)",
    role: "menuitem",
    onClick: () => {
      props.open(notification);
    }
  }, React.createElement("div", {
    className: "media"
  }, React.createElement("div", {
    className: "media-left padding-right-10"
  }, React.createElement("i", {
    className: "icon wb-order bg-red-600 white icon-circle",
    "aria-hidden": "true"
  })), React.createElement("div", {
    className: "media-body"
  }, React.createElement("h5", null, notification.data.title), React.createElement("h6", {
    className: "media-heading"
  }, notification.data.description), React.createElement("time", {
    className: "media-meta",
    dateTime: "2016-06-12T20:50:48+08:00"
  }, moment(notification.timestamp).fromNow())))))));
};

class NotificationsMenu extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    let getTranslation = key => {
      return "Core.navBar.notificationsMenu." + key;
    };

    return React.createElement(NavDropdown, {
      eventKey: 3,
      title: React.createElement("div", null, React.createElement("i", {
        className: "icon wb-bell",
        "aria-hidden": "true"
      }), " ", this.props.notifications.length !== 0 ? React.createElement("span", {
        className: "label label-pill label-ibol up"
      }, this.props.notifications.length) : ""),
      id: "notifications-menu-dropdown",
      className: "nav-item no-caret"
    }, React.createElement(MenuContent, {
      getTranslation: getTranslation,
      notifications: this.props.notifications,
      open: this.props.openNotification
    }));
  }

}

NotificationsMenu.propTypes = {
  router: PropTypes.shape({
    push: PropTypes.func.isRequired
  }).isRequired
};
module.exportDefault(withRouter(NotificationsMenu));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"search-overlap.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/core/ui/components/nav-bar/search-overlap.jsx                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 1);

class SearchOverlap extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    let getTranslation = key => {
      return "Core.navBar.search." + key;
    };

    return React.createElement("div", {
      className: "collapse navbar-search-overlap " + (this.props.open ? "in" : ""),
      id: "site-navbar-search"
    }, React.createElement("form", {
      role: "search"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("div", {
      className: "input-search"
    }, React.createElement("i", {
      className: "input-search-icon wb-search",
      "aria-hidden": "true"
    }), React.createElement("input", {
      type: "text",
      className: "form-control",
      name: "site-search",
      placeholder: I18n.t(getTranslation("placeholder"))
    }), React.createElement("button", {
      type: "button",
      className: "input-search-close icon wb-close",
      onClick: this.props.toggle,
      "aria-label": "Close"
    })))));
  }

}

module.exportDefault(SearchOverlap);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"profile-information":{"form.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/core/ui/components/profile-information/form.jsx                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 1);
let Field, FormSection, reduxForm;
module.watch(require("redux-form"), {
  Field(v) {
    Field = v;
  },

  FormSection(v) {
    FormSection = v;
  },

  reduxForm(v) {
    reduxForm = v;
  }

}, 2);
let InputPhone;
module.watch(require("../forms/input-phone"), {
  default(v) {
    InputPhone = v;
  }

}, 3);
let InputRadio;
module.watch(require("../forms/input-radio"), {
  default(v) {
    InputRadio = v;
  }

}, 4);

class ProfileForm extends React.Component {
  render() {
    const {
      handleSubmit,
      pristine,
      reset,
      submitting
    } = this.props;

    let getTranslation = key => {
      return "Core.modals.profile." + key;
    };

    return React.createElement("form", {
      onSubmit: handleSubmit
    }, React.createElement("h2", null, React.createElement(Translate, {
      value: getTranslation("title")
    })), React.createElement("p", null, React.createElement(Translate, {
      value: getTranslation("description")
    })), React.createElement("div", {
      className: "padding-20"
    }, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("form.name")
    })), React.createElement(Field, {
      component: "input",
      name: "name",
      className: "form-control"
    }))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("form.lastName")
    })), React.createElement(Field, {
      component: "input",
      name: "lastName",
      className: "form-control"
    })))), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("form.phone")
    })), React.createElement(Field, {
      component: InputPhone,
      name: "phone",
      className: "form-control"
    }))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("form.profile.label")
    })), React.createElement(Field, {
      component: "select",
      name: "profile",
      className: "form-control"
    }, React.createElement("option", {
      value: ""
    }, I18n.t(getTranslation("form.profile.values.notSelected"))), React.createElement("option", {
      value: "manager"
    }, I18n.t(getTranslation("form.profile.values.manager"))), React.createElement("option", {
      value: "influencer"
    }, I18n.t(getTranslation("form.profile.values.influencer"))), React.createElement("option", {
      value: "brand"
    }, I18n.t(getTranslation("form.profile.values.brand"))), React.createElement("option", {
      value: "all"
    }, I18n.t(getTranslation("form.profile.values.all"))))))), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("form.mobile")
    })), React.createElement(Field, {
      component: InputPhone,
      name: "mobile",
      className: "form-control"
    }))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("form.gender.label")
    })), React.createElement("div", {
      className: "form-control no-back"
    }, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-6",
      style: {
        width: "auto",
        padding: 0,
        margin: "0 30px 0 0"
      }
    }, React.createElement("div", {
      className: "checkbox"
    }, React.createElement("label", {
      style: {
        padding: 0
      }
    }, React.createElement("span", {
      style: {
        marginRight: 7
      }
    }, React.createElement(Translate, {
      value: getTranslation("form.gender.values.male")
    })), " ", React.createElement(Field, {
      name: "gender",
      component: "input",
      type: "radio",
      value: "male"
    })))), React.createElement("div", {
      className: "col-md-6",
      style: {
        width: "auto",
        padding: 0,
        margin: "0 30px 0 0"
      }
    }, React.createElement("div", {
      className: "checkbox"
    }, React.createElement("label", {
      style: {
        padding: 0
      }
    }, React.createElement("span", {
      style: {
        marginRight: 7
      }
    }, React.createElement(Translate, {
      value: getTranslation("form.gender.values.female")
    })), " ", React.createElement(Field, {
      name: "gender",
      component: "input",
      type: "radio",
      value: "female"
    }))))))))), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-12"
    }, React.createElement("h4", null, React.createElement(Translate, {
      value: getTranslation("form.address.title")
    }))), React.createElement(FormSection, {
      name: "address"
    }, React.createElement("div", {
      className: "col-md-12"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("form.address.address")
    }), " 1"), React.createElement(Field, {
      component: "input",
      name: "address1",
      className: "form-control"
    }))), React.createElement("div", {
      className: "col-md-12"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("form.address.address")
    }), " 2"), React.createElement(Field, {
      component: "input",
      name: "address2",
      className: "form-control"
    }))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("form.address.city")
    })), React.createElement(Field, {
      component: "input",
      name: "city",
      className: "form-control"
    }))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("form.address.state")
    })), React.createElement(Field, {
      component: "input",
      name: "state",
      className: "form-control"
    }))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("form.address.country")
    })), React.createElement(Field, {
      component: "input",
      name: "country",
      className: "form-control"
    }))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("form.address.zipCode")
    })), React.createElement(Field, {
      component: "input",
      name: "zipCode",
      className: "form-control"
    }))))), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-12"
    }, React.createElement("button", {
      type: "submit",
      className: "btn btn-primary pull-right"
    }, React.createElement(Translate, {
      value: getTranslation("form.button")
    }))))));
  }

}

ProfileForm = reduxForm({
  form: 'profile-form'
})(ProfileForm);
module.exportDefault(ProfileForm);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"layout.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/core/ui/components/profile-information/layout.jsx                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let I18n;
module.watch(require("react-redux-i18n"), {
  I18n(v) {
    I18n = v;
  }

}, 1);
let ProfileForm;
module.watch(require("./form"), {
  default(v) {
    ProfileForm = v;
  }

}, 2);
let notie;
module.watch(require("notie"), {
  default(v) {
    notie = v;
  }

}, 3);

let getTranslation = key => {
  return "Core.modals.profile.messages." + key;
};

class ProfileData extends React.Component {
  constructor() {
    super();
    this.submitForm = this.submitForm.bind(this);
  }

  componentWillMount() {//Meteor.call("users-update-flag", "askedProfileData", true);
  }

  submitForm(data) {
    if (data.phone) data.phone = data.phone.split(" ").join("").split("-").join("").split("(").join("").split(")").join("");
    if (data.mobile) data.mobile = data.mobile.split(" ").join("").split("-").join("").split("(").join("").split(")").join(""); //console.log("PROFILE_SUBMIT", data);

    let component = this;
    Meteor.call("users-update-modal-profile", data, function (err, res) {
      if (err) {
        notie.alert(1, I18n.t(getTranslation("error")), 3);
        return;
      }

      Meteor.call("users-update-flag", "askedProfileData", true);
      notie.alert(1, I18n.t(getTranslation("success")), 3);
      component.props.close();
    });
  }

  render() {
    return React.createElement("div", null, React.createElement(ProfileForm, {
      onSubmit: this.submitForm
    }));
  }

}

module.exportDefault(ProfileData);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"auth-form.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/core/ui/components/auth-form.jsx                                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Link;
module.watch(require("react-router"), {
  Link(v) {
    Link = v;
  }

}, 1);
let CookieName;
module.watch(require("../../settings"), {
  CookieName(v) {
    CookieName = v;
  }

}, 2);
let Button;
module.watch(require("react-router-bootstrap"), {
  Button(v) {
    Button = v;
  }

}, 3);
let IconFacebook, IconTwitter, IconGoogle;
module.watch(require("../components/social-icons"), {
  IconFacebook(v) {
    IconFacebook = v;
  },

  IconTwitter(v) {
    IconTwitter = v;
  },

  IconGoogle(v) {
    IconGoogle = v;
  }

}, 4);
let notie;
module.watch(require("notie"), {
  default(v) {
    notie = v;
  }

}, 5);
let AppSettings;
module.watch(require("../../../../settings"), {
  default(v) {
    AppSettings = v;
  }

}, 6);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 7);
let SocialShare;
module.watch(require("../../../core/ui/components/social-share"), {
  SocialShare(v) {
    SocialShare = v;
  }

}, 8);
let AppLogo;
module.watch(require("../../../core/ui/components/logo"), {
  default(v) {
    AppLogo = v;
  }

}, 9);
let IntMenu;
module.watch(require("../components/nav-bar/int-menu"), {
  default(v) {
    IntMenu = v;
  }

}, 10);

let getTranslation = key => {
  return "Core.auth." + key;
};

class AuthForm extends React.Component {
  constructor() {
    super();
    this.state = {
      email: null,
      password: null,
      rememberMe: false
    };
    this.getButtonText = this.getButtonText.bind(this);
    this.getSocialLogin = this.getSocialLogin.bind(this);
    this.accountsRegister = this.accountsRegister.bind(this);
    this.accountsLogin = this.accountsLogin.bind(this);
    this.accountsRestore = this.accountsRestore.bind(this);
    this.handleSubmit = this.handleSubmit.bind(this);
    this.loginWith = this.loginWith.bind(this);
    this.updateValue = this.updateValue.bind(this);
  }

  updateValue(key) {
    let component = this;
    return function (e) {
      let val = e.target.value;
      let newState = Object.assign({}, component.state);
      if (typeof val === 'string') val = val.trim();
      newState[key] = val;
      component.setState(newState);
    };
  }

  getButtonText(action) {
    let value = "";

    switch (action) {
      case "login":
        value = React.createElement(Translate, {
          value: getTranslation(action + ".button")
        });
        break;

      case "restore":
        value = React.createElement(Translate, {
          value: getTranslation(action + ".button")
        });
        break;

      case "register":
        value = React.createElement(Translate, {
          value: getTranslation(action + ".button")
        });
        break;

      case "recover":
        value = React.createElement(Translate, {
          value: getTranslation(action + ".button")
        });
        break;

      default:
        value = React.createElement(Translate, {
          value: getTranslation("login.button")
        });
    }

    return value;
  }

  loginWith(service) {
    return function () {
      //console.log("Login with,",service);
      switch (service) {
        case "facebook":
          Meteor.loginWithFacebook({
            requestPermissions: ['public_profile', 'email']
          }, function (err, res) {
            //console.log(service+" Login",arguments);
            if (err && err.reason && err.reason === "Email already exists.") {
              notie.alert(3, "Account already exists with Email credentials", 5);
              return;
            }

            console.debug("Social Login Res:", res);
          });
          break;

        case "twitter":
          Meteor.loginWithTwitter({}, function (err, res) {
            //console.log(service+" Login",arguments);
            if (err && err.reason && err.reason === "Email already exists.") {
              notie.alert(3, "Account already exists with Email credentials", 5);
              return;
            }

            console.debug("Social Login Res:", res);
          });
          break;

        case "google":
          Meteor.loginWithGoogle({}, function (err, res) {
            // console.log(service+" Login",arguments);
            if (err && err.reason && err.reason === "Email already exists.") {
              notie.alert(3, "Account already exists with Email credentials", 5);
              return;
            }

            console.debug("Social Login Res:", res);
          });
          break;

        case "instagram":
          Meteor.loginWithInstagram({}, function (err, res) {
            //console.log(service+" Login",arguments);
            if (err && err.reason && err.reason === "Email already exists.") {
              notie.alert(3, "Account already exists with Email credentials", 5);
              return;
            }

            console.debug("Social Login Res:", res);
          });
          break;

        default:
          console.error("Login with " + service + " is not available");
      }
    };
  }

  getSocialLogin(action) {
    if (action === "login") {
      //console.log("GET_SOCIAL_LOGIN", this.loginWith);
      return React.createElement("div", {
        className: "social-login"
      }, React.createElement(SocialShare, {
        loginWith: this.loginWith,
        message: React.createElement(Translate, {
          value: getTranslation("labels.or")
        })
      }));
    }

    return "";
  }

  accountsRegister(email, password) {
    //console.log("register");
    let self = this;
    Meteor.call('users_create_account', email, password, "Plan", "Source", function (err, res) {
      if (err && err.reason) {
        notie.alert(3, err.reason, 3);
        return;
      }

      self.accountsLogin(email, password);
    });
  }

  accountsLogin(email, password) {
    //console.log("ACCOUNTS_LOGIN", email, password);
    Meteor.loginWithPassword(email, password, function (err, res) {
      if (err && err.reason) {
        notie.alert(3, I18n.t(getTranslation("errors.login")), 3);
        return;
      }
    });
  }

  accountsRestore(password) {
    if (window.localStorage.getItem(CookieName + "_USER_DATA")) {
      let data = JSON.parse(window.localStorage.getItem(CookieName + "_USER_DATA")); //console.log("ACCOUNT_RESTORE", data.email, password);

      this.accountsLogin(data.email, password);
    }
  }

  handleSubmit(e) {
    const action = this.props.action;
    e.preventDefault();
    let form = this.state;

    if (action !== "restore") {
      if (form.rememberMe) {
        window.localStorage.setItem(CookieName + "_USER_DATA", JSON.stringify({
          active: true,
          email: form.email
        }));
      } else {
        window.localStorage.removeItem(CookieName + "_USER_DATA");
      }
    } //console.log("FORM_SUBMIT_DATA", form);


    switch (action) {
      case "login":
        this.accountsLogin(form.email, form.password);
        break;

      case "register":
        this.accountsRegister(form.email, form.password);
        break;

      case "recover":
        this.accountsRecover(form.email);
        break;

      case "restore":
        this.accountsRestore(form.password);
        break;

      default:
        throw new Error("Wrong Auth State");
    }

    return false;
  }

  render() {
    const {
      action
    } = this.props;
    let user = {
      avatar: null,
      name: null
    };

    if (window.localStorage.getItem(CookieName + "_USER_DATA")) {
      user = JSON.parse(window.localStorage.getItem(CookieName + "_USER_DATA"));
    }

    const emailInput = React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      className: "sr-only",
      htmlFor: "inputEmail"
    }, I18n.t(getTranslation("labels.email"))), React.createElement("input", {
      type: "email",
      className: "form-control",
      id: "inputEmail",
      placeholder: I18n.t(getTranslation("labels.email")),
      onChange: this.updateValue('email'),
      name: "Email"
    }));
    let passwordInput = React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      className: "sr-only",
      htmlFor: "inputPassword"
    }, I18n.t(getTranslation("labels.password"))), React.createElement("input", {
      type: "password",
      className: "form-control",
      id: "inputPassword",
      placeholder: I18n.t(getTranslation("labels.password")),
      onChange: this.updateValue('password'),
      name: "Password"
    }));
    let greetingMessage = React.createElement(Translate, {
      value: getTranslation(action + ".greeting")
    });
    let extra;

    switch (action) {
      case "login":
        extra = React.createElement(Link, {
          to: "/auth/register"
        }, React.createElement(Translate, {
          value: getTranslation("register.button")
        }));
        break;

      case "restore":
        extra = React.createElement(Link, {
          to: "/auth/login"
        }, React.createElement(Translate, {
          value: getTranslation("restore.footer2")
        }));
        break;

      case "register":
        extra = React.createElement(Link, {
          to: "/auth/login"
        }, React.createElement(Translate, {
          value: getTranslation("login.button")
        }));
        break;

      case "recover":
        extra = React.createElement(Link, {
          to: "/auth/login"
        }, React.createElement(Translate, {
          value: getTranslation("login.button")
        }));
        break;

      default:
    }

    let footerMessage = React.createElement("div", null, React.createElement(Translate, {
      value: getTranslation(action + ".footer")
    }), extra);
    let headerImage = React.createElement(AppLogo, {
      alt: true
    });

    if (action === "restore") {
      headerImage = React.createElement("img", {
        src: user.avatar,
        alt: user.name | "...",
        className: "avatar"
      });
      passwordInput = React.createElement("div", {
        className: "input-group"
      }, React.createElement("input", {
        type: "password",
        className: "form-control",
        id: "inputPassword",
        placeholder: I18n.t(getTranslation("labels.password")),
        onChange: this.updateValue('password'),
        name: "password"
      }), React.createElement("span", {
        className: "input-group-btn"
      }, React.createElement("button", {
        type: "submit",
        className: "btn btn-primary"
      }, React.createElement("i", {
        className: "icon wb-unlock",
        "aria-hidden": "true"
      }), React.createElement("span", {
        className: "sr-only"
      }, "unLock"))));
    }

    const loginHelpers = React.createElement("div", {
      className: "form-group clearfix"
    }, React.createElement("div", {
      className: "checkbox-custom checkbox-inline checkbox-primary pull-left"
    }, React.createElement("input", {
      type: "checkbox",
      id: "inputCheckbox",
      name: "remember",
      onChange: this.updateValue('rememberMe')
    }), React.createElement("label", {
      htmlFor: "inputCheckbox"
    }, React.createElement(Translate, {
      value: getTranslation("login.remember")
    }))), React.createElement(Link, {
      className: "pull-right",
      to: "/auth/recover"
    }, React.createElement(Translate, {
      value: getTranslation("recover.link")
    })));
    return React.createElement("div", {
      className: "page-content vertical-align-middle page-login"
    }, React.createElement("div", {
      className: "brand"
    }, headerImage), React.createElement("p", null, greetingMessage), React.createElement("form", {
      className: "auth-form",
      onSubmit: this.handleSubmit
    }, action !== "restore" ? emailInput : "", action !== "recover" ? passwordInput : "", action === "login" ? loginHelpers : "", action !== "restore" ? React.createElement("button", {
      type: "submit",
      className: "btn btn-primary btn-block"
    }, this.getButtonText(action)) : "", this.getSocialLogin(action), React.createElement("div", {
      className: "footer"
    }, footerMessage), React.createElement("div", {
      className: "language"
    }, React.createElement(IntMenu, null), React.createElement(Translate, {
      value: getTranslation("labels.language")
    }))));
  }

}

module.exportDefault(AuthForm);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"content-soon.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/core/ui/components/content-soon.jsx                                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class ContentSoon extends React.Component {
  render() {
    return React.createElement("div", {
      className: "content-soon"
    }, React.createElement("div", {
      className: "content"
    }, React.createElement("i", {
      className: this.props.icon || "icon wb-time",
      "aria-hidden": "true"
    }), React.createElement("h3", null, this.props.content || "Content coming soon.")));
  }

}

module.exportDefault(ContentSoon);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"list-empty.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/core/ui/components/list-empty.jsx                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class ListEmpty extends React.Component {
  render() {
    return React.createElement("div", {
      className: "list-empty"
    }, React.createElement("div", {
      className: "content"
    }, React.createElement("i", {
      className: "icon wb-alert-circle",
      "aria-hidden": "true"
    }), React.createElement("p", null, this.props.message), this.props.button && React.createElement("a", {
      className: "btn btn-primary",
      onClick: this.props.callback
    }, this.props.button)));
  }

}

module.exportDefault(ListEmpty);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"loading.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/core/ui/components/loading.jsx                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 1);

let Loader = require("halogen/PulseLoader");

class Loading extends React.Component {
  render() {
    let getTranslation = key => {
      return "Core.loading." + key;
    };

    return React.createElement("div", {
      className: "loading-screen"
    }, React.createElement("div", {
      className: "content"
    }, React.createElement(Loader, {
      color: "#444",
      size: "16px",
      margin: "4px"
    }), React.createElement("h3", null, React.createElement(Translate, {
      value: getTranslation("title")
    }))));
  }

}

module.exportDefault(Loading);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"logo.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/core/ui/components/logo.jsx                                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let AssetsApp;
module.watch(require("../icons"), {
  AssetsApp(v) {
    AssetsApp = v;
  }

}, 1);
let AppSettings;
module.watch(require("../../../../settings"), {
  default(v) {
    AppSettings = v;
  }

}, 2);

class AppLogo extends React.Component {
  render() {
    return React.createElement("div", {
      className: "appLogo"
    }, React.createElement("img", {
      src: this.props.alt ? AppSettings.altLogo : AppSettings.logo,
      alt: AppSettings.name
    }));
  }

}

module.exportDefault(AppLogo);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"menu-bar-footer.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/core/ui/components/menu-bar-footer.jsx                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class MenuBarFooter extends React.Component {
  render() {
    return null;
    return React.createElement("div", {
      className: "site-menubar-footer"
    }, React.createElement("a", {
      href: void 0,
      className: "fold-show"
    }, React.createElement("span", {
      className: "icon wb-settings"
    })), React.createElement("a", {
      href: void 0,
      className: "fold-show"
    }, React.createElement("span", {
      className: "icon wb-eye-close"
    })), React.createElement("a", {
      href: void 0,
      className: "fold-show"
    }, React.createElement("span", {
      className: "icon wb-power"
    })));
  }

}

module.exportDefault(MenuBarFooter);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"menu-bar.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/core/ui/components/menu-bar.jsx                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Menu;
module.watch(require("./menu"), {
  default(v) {
    Menu = v;
  }

}, 1);
let MenuBarFooter;
module.watch(require("./menu-bar-footer"), {
  default(v) {
    MenuBarFooter = v;
  }

}, 2);

class MenuBar extends React.Component {
  render() {
    return React.createElement("div", {
      className: "site-menubar"
    }, React.createElement("div", {
      className: "site-menubar-body"
    }, React.createElement("div", null, React.createElement("div", null, React.createElement(Menu, {
      path: this.props.path
    })))), React.createElement(MenuBarFooter, null));
  }

}

module.exportDefault(MenuBar);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"menu.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/core/ui/components/menu.jsx                                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Link;
module.watch(require("react-router"), {
  Link(v) {
    Link = v;
  }

}, 1);
let $;
module.watch(require("jquery"), {
  default(v) {
    $ = v;
  }

}, 2);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 3);
let linktoStatement = React.createElement(Link, {
  to: "/statement"
}, "Estado de Cuenta");

class MenuItem extends React.Component {
  constructor() {
    super();
    this.state = {};
  }

  render() {
    return;
  }

}

class Menu extends React.Component {
  constructor() {
    super();
    this.state = {
      data: [{
        "title": "App",
        "items": [{
          "translation": "Core.menu.home",
          "link": "/",
          "icon": "fa-home"
        }, {
          "translation": "Accounts.menu",
          "link": "/accounts",
          "icon": "fa-users"
        }, {
          "translation": "Agenda.menu",
          "link": "/agenda",
          "icon": "fa-calendar-o"
        }, {
          "translation": "Campaigns.menu",
          "link": "/campaigns/own",
          "svg": "https://s3.amazonaws.com/ibol-app-media/icons/viralizing.svg"
        }, {
          "translation": "TeamAttack.menu",
          "link": "/team-attack",
          "svg": "https://s3.amazonaws.com/ibol-app-media/icons/team-attack.svg"
        }, {
          "translation": "Advertising.menu",
          "link": "/advertising",
          "icon": "fa-globe"
        }, {
          "translation": "Reporter.menu",
          "link": "/reporter",
          "icon": "fa-file-text-o"
        }, {
          "translation": "Search.menu",
          "link": "/search",
          "icon": "fa-search"
        }, {
          "translation": "Pricing.menu",
          "link": "/pricing",
          "icon": "fa-tag",
          "styles": {
            marginTop: "60px"
          }
        }, {
          "translation": "Statement.menu",
          "link": "/statement",
          "icon": "fa-credit-card-alt"
        }, {
          "translation": "Code.menu",
          "link": "/code",
          "icon": "fa-barcode"
        }, {
          "translation": "Core.menu.help",
          "link": "http://viralizing.me/help",
          "icon": "fa-question",
          "external": true,
          "styles": {
            marginTop: "60px"
          }
        }, {
          "translation": "Settings.menu",
          "link": "/settings/profile",
          "icon": "fa-cog"
        }, {
          "translation": "Core.menu.logout",
          "link": "/auth/logout",
          "icon": "fa-power-off"
        }]
      }]
    };
    this.toggleFoldedMenu = this.toggleFoldedMenu.bind(this);
  }

  componentDidMount() {
    /*
     $.get(this.getLevel(window.location.pathname, "base") + "src/data/site_menu.json", (data) => {
     if (this.isMounted()) {
     this.setState({
     data: data
     });
      this.init=false;
     }
     });*/
  }

  subMenu(item) {
    return item.children ? React.createElement("ul", {
      className: "site-menu-sub"
    }, " ", this.items(item.children), " ") : "";
  }

  itemContent(item) {
    let icon = item.icon ? React.createElement("i", {
      className: "site-menu-icon " + item.icon,
      "aria-hidden": "true"
    }) : "",
        title = React.createElement("span", {
      className: "site-menu-title"
    }, item.title ? item.title : React.createElement(Translate, {
      value: item.translation
    })),
        badge = item.badge ? React.createElement("div", {
      className: "site-menu-badge"
    }, React.createElement("span", {
      className: "label label-pill " + item.badge.modifier
    }, item.badge.text)) : item.label ? React.createElement("div", {
      className: "site-menu-label"
    }, React.createElement("span", {
      className: "label " + item.label.modifier
    }, item.label.text)) : item.children ? React.createElement("span", {
      className: "site-menu-arrow"
    }) : '';

    if (item.svg) {
      icon = React.createElement("img", {
        src: item.svg,
        alt: item.title,
        className: "site-menu-icon"
      });
    }

    return item.external ? React.createElement("a", {
      className: "animsition-link",
      href: item.link,
      target: "_blank"
    }, icon, title, badge) : item.link ? React.createElement(Link, {
      className: "animsition-link",
      to: item.link,
      activeClassName: item.link === "/" ? "" : "active"
    }, icon, title, badge) : React.createElement("a", {
      href: "javascript:void(0)"
    }, icon, title, badge);
  }

  items(data) {
    let menu = [];

    let subMenuOpen = e => {
      //console.log("SUB_MENU_OPEN", e.target);
      $(e.target).closest('li').toggleClass("open");
    };

    data.forEach(item => {
      if (item.children) {
        menu.push(React.createElement("li", {
          key: item.title || item.translation,
          className: "site-menu-item has-sub " + (this.class ? this.class : ""),
          onClick: subMenuOpen
        }, this.itemContent(item), this.subMenu(item)));
      } else {
        menu.push(React.createElement("li", {
          key: item.title || item.translation,
          className: "site-menu-item " + (this.class ? this.class : ''),
          style: item.styles || {}
        }, this.itemContent(item)));
      }
    });
    return menu;
  }

  componentDidUpdate() {
    if (!this.init) {
      let $item = $("[href*=\"path=".concat(encodeURIComponent(this.props.path), "\"]"));

      if ($item.length === 1) {
        $item.trigger('click.site.menu');
        $item.parents('.has-sub').trigger('open.site.menu');
        this.init = true;
      }
    }
  }

  toggleFoldedMenu() {
    $("body").toggleClass("site-menubar-fold").toggleClass("site-menubar-unfold");
  }

  render() {
    let menu = [];
    this.state.data.forEach(item => {
      menu.push(React.createElement("li", {
        key: item.title || item.translation,
        className: "site-menu-category"
      }));
      menu.push(React.createElement("li", {
        className: "site-menu-item ",
        key: "menu-toggle",
        onClick: this.toggleFoldedMenu
      }, React.createElement("a", {
        className: "animsition-link",
        href: "#"
      }, React.createElement("i", {
        className: "site-menu-icon fa-bars",
        "aria-hidden": "true"
      }))));

      if (item.items) {
        menu.push(this.items(item.items));
      }
    });
    return React.createElement("ul", {
      className: "site-menu",
      "data-plugin": "menu"
    }, menu);
  }

}

module.exportDefault(Menu);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"saving.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/core/ui/components/saving.jsx                                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 1);

class Loading extends React.Component {
  render() {
    let getTranslation = key => {
      return "Core.saving." + key;
    };

    return React.createElement("div", {
      id: "saving",
      className: this.props.state
    }, React.createElement(Translate, {
      value: getTranslation(this.props.state)
    }));
  }

}

module.exportDefault(Loading);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"social-avatar-profile.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/core/ui/components/social-avatar-profile.jsx                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class SocialAvatarProfile extends React.Component {
  render() {
    let size = this.props.size ? "size-" + this.props.size : "";

    if (this.props.type) {
      size += " border " + this.props.type;
    }

    return React.createElement("div", {
      className: "social-profile " + size
    }, React.createElement("img", {
      src: this.props.avatar,
      alt: this.props.name
    }), this.props.network && React.createElement("i", {
      className: "social-icon " + this.props.network
    }), this.props.page && React.createElement("img", {
      className: "fan-page",
      src: "https://s3.amazonaws.com/ibol-app-media/icons/fan-page.svg",
      alt: "Fan Page"
    }));
  }

}

module.exportDefault(SocialAvatarProfile);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"social-avatar.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/core/ui/components/social-avatar.jsx                                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class SocialAvatar extends React.Component {
  render() {
    let size = this.props.size ? "size-" + this.props.size : "";

    if (this.props.type) {
      size += " border " + this.props.type;
    }

    return React.createElement("div", {
      className: "social-avatar " + size
    }, React.createElement("img", {
      src: this.props.avatar,
      alt: this.props.name
    }), this.props.network && React.createElement("i", {
      className: "social-icon " + this.props.network
    }), this.props.page && React.createElement("img", {
      className: "fan-page",
      src: "https://s3.amazonaws.com/ibol-app-media/icons/fan-page.svg",
      alt: "Fan Page"
    }));
  }

}

module.exportDefault(SocialAvatar);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"social-icons.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/core/ui/components/social-icons.jsx                                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  IconFacebook: () => IconFacebook,
  IconGoogle: () => IconGoogle,
  IconTwitter: () => IconTwitter
});
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class IconFacebook extends React.Component {
  render() {
    return React.createElement("div", null, "FB");
  }

}

class IconGoogle extends React.Component {
  render() {
    return React.createElement("div", null, "Google");
  }

}

class IconTwitter extends React.Component {
  render() {
    return React.createElement("div", null, "Twitter");
  }

}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"social-share.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/core/ui/components/social-share.jsx                                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  SocialShare: () => SocialShare
});
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let AssetsSocial;
module.watch(require("../icons"), {
  AssetsSocial(v) {
    AssetsSocial = v;
  }

}, 1);

class SocialShare extends React.Component {
  render() {
    let {
      loginWith,
      styles,
      message
    } = this.props;
    return React.createElement("div", {
      className: "socialShare",
      style: styles ? styles : {}
    }, message ? React.createElement("p", null, message) : '', React.createElement("ul", null, React.createElement("li", {
      onClick: loginWith("facebook")
    }, React.createElement("img", {
      src: AssetsSocial.facebook,
      alt: "Facebook"
    })), React.createElement("li", {
      onClick: loginWith("twitter")
    }, React.createElement("img", {
      src: AssetsSocial.twitter,
      alt: "Twitter"
    })), React.createElement("li", {
      onClick: loginWith("google")
    }, React.createElement("img", {
      src: AssetsSocial.google,
      alt: "Google"
    })), React.createElement("li", {
      onClick: loginWith("instagram")
    }, React.createElement("img", {
      src: AssetsSocial.instagram,
      alt: "Instagram"
    }))));
  }

}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"container":{"news.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/core/ui/container/news.jsx                                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/taggedTemplateLiteral"));

function _templateObject() {
  const data = (0, _taggedTemplateLiteral2.default)(["\nquery($lang:String!){\n  getNews(lang:$lang){\n    title,\n    author,\n    link,\n    type,\n    image\n  }\n}\n"]);

  _templateObject = function () {
    return data;
  };

  return data;
}

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let graphql;
module.watch(require("react-apollo"), {
  graphql(v) {
    graphql = v;
  }

}, 1);
let Loading;
module.watch(require("../../../core/ui/components/loading"), {
  default(v) {
    Loading = v;
  }

}, 2);
let List;
module.watch(require("../components/home/news-list"), {
  default(v) {
    List = v;
  }

}, 3);
let createContainer;
module.watch(require("meteor/react-meteor-data"), {
  createContainer(v) {
    createContainer = v;
  }

}, 4);
let gql;
module.watch(require("graphql-tag"), {
  default(v) {
    gql = v;
  }

}, 5);

class NewsContainer extends React.Component {
  render() {
    let {
      loading,
      getNews,
      refetch,
      history
    } = this.props;
    return React.createElement("div", null, loading ? React.createElement(Loading, null) : React.createElement(List, {
      data: getNews,
      refetch: refetch,
      history: history
    }));
  }

}

const QUERY = gql(_templateObject());
const withData = graphql(QUERY, {
  props: (_ref) => {
    let {
      data: {
        error,
        loading,
        getNews,
        refetch
      }
    } = _ref;
    if (loading) return {
      loading: true
    };
    if (error) return {
      hasErrors: true
    };
    console.log("DATA", data);
    return {
      loading,
      getNews,
      refetch
    };
  },
  options: ownProps => ({
    pollInterval: 150000,
    variables: {
      lang: ownProps.locale
    }
  })
});
const NewsContainerWithData = withData(NewsContainer);
module.exportDefault(NewsContainerWithData);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"promoted-accounts.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/core/ui/container/promoted-accounts.jsx                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/taggedTemplateLiteral"));

function _templateObject() {
  const data = (0, _taggedTemplateLiteral2.default)(["\n    query{\n        accounts{\n            _id,\n            network,\n            information{\n                name,\n                lastName,\n                avatar\n            },\n        }\n    }\n"]);

  _templateObject = function () {
    return data;
  };

  return data;
}

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let graphql;
module.watch(require("react-apollo"), {
  graphql(v) {
    graphql = v;
  }

}, 1);
let Loading;
module.watch(require("../../../core/ui/components/loading"), {
  default(v) {
    Loading = v;
  }

}, 2);
let Content;
module.watch(require("../components/home/promoted-accounts/container"), {
  default(v) {
    Content = v;
  }

}, 3);
let createContainer;
module.watch(require("meteor/react-meteor-data"), {
  createContainer(v) {
    createContainer = v;
  }

}, 4);
let gql;
module.watch(require("graphql-tag"), {
  default(v) {
    gql = v;
  }

}, 5);

class NewsContainer extends React.Component {
  render() {
    return React.createElement("div", null, this.props.loading ? React.createElement(Loading, null) : React.createElement(Content, {
      data: this.props.accounts,
      refetch: this.props.refetch,
      history: this.props.history
    }));
  }

}

const QUERY = gql(_templateObject());
const withData = graphql(QUERY, {
  props: (_ref) => {
    let {
      data: {
        error,
        loading,
        accounts,
        refetch
      }
    } = _ref;
    if (loading) return {
      loading: true
    };
    if (error) return {
      hasErrors: true
    };
    return {
      loading,
      accounts,
      refetch
    };
  },
  options: ownProps => ({
    pollInterval: 150000,
    variables: {}
  })
});
const NewsContainerWithData = withData(NewsContainer);
module.exportDefault(NewsContainerWithData);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"layouts":{"app.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/core/ui/layouts/app.jsx                                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/objectSpread"));

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let LocalStorage;
module.watch(require("../../client/LocalStorage"), {
  default(v) {
    LocalStorage = v;
  }

}, 1);
let Modal;
module.watch(require("react-modal"), {
  default(v) {
    Modal = v;
  }

}, 2);
let CookieName;
module.watch(require("../../settings"), {
  CookieName(v) {
    CookieName = v;
  }

}, 3);
let withRouter;
module.watch(require("react-router"), {
  withRouter(v) {
    withRouter = v;
  }

}, 4);
let NavBar;
module.watch(require("../components/nav-bar/nav-bar"), {
  default(v) {
    NavBar = v;
  }

}, 5);
let MenuBar;
module.watch(require("../components/menu-bar"), {
  default(v) {
    MenuBar = v;
  }

}, 6);
let ProfileData;
module.watch(require("../components/profile-information/layout"), {
  default(v) {
    ProfileData = v;
  }

}, 7);
let browserHistory;
module.watch(require("react-router"), {
  browserHistory(v) {
    browserHistory = v;
  }

}, 8);
let PropTypes;
module.watch(require("prop-types"), {
  default(v) {
    PropTypes = v;
  }

}, 9);
browserHistory.listen(location => {
  const path = location.pathname;

  if (path !== "/auth/login" && path !== "/auth/restore" && path !== "/auth/register" && path !== "/auth/recover") {
    localStorage.setItem("redirect-to", window.location.pathname + window.location.search);
  }
});
const COOKIE_NAME = CookieName + "_USER_DATA";

class App extends React.Component {
  constructor() {
    super();
    this.state = {
      modals: {
        profileData: false
      },
      initialized: false
    };
    this.openModal = this.openModal.bind(this);
    this.closeModal = this.closeModal.bind(this);
    this.checkFlags = this.checkFlags.bind(this);
  }

  openModal(modal) {
    let component = this;
    return function () {
      let newState = (0, _objectSpread2.default)({}, component.state);
      newState.modals[modal] = true;
      component.setState(newState);
    };
  }

  closeModal(modal) {
    let component = this;
    return function () {
      let newState = (0, _objectSpread2.default)({}, component.state);
      newState.modals[modal] = false;
      component.setState(newState);
    };
  }

  isLoggedIn() {
    return Meteor.user() || false;
  }

  isSanctioned() {
    const history = this.props.router;
    let isSanctioned = false;

    if (!isSanctioned) {
      isSanctioned = history.isActive("/auth/login") || history.isActive("/auth/recover") || history.isActive("/auth/register") || history.isActive("/auth/restore");
    }

    return isSanctioned;
  }

  redirectToAuth() {
    let redirect = "/auth/login";

    if (this.isSanctioned()) {
      return;
    }

    if (LocalStorage.getItem(COOKIE_NAME)) {
      redirect = "/auth/restore";
    }

    this.props.router.push(redirect);
  }

  componentWillMount() {
    let component = this;

    let checkAuth = function () {
      if (!Meteor.user()) {
        component.redirectToAuth();
      } else {
        if (window.localStorage.getItem(CookieName + "_USER_DATA")) {
          let user = Meteor.user();

          if (user.emails && user.emails[0]) {
            let userData = {
              _id: user._id,
              email: user.emails[0].address,
              name: user.profile.name,
              avatar: user.profile.avatar
            };
            window.localStorage.setItem(CookieName + "_USER_DATA", JSON.stringify(userData));
          }
        }

        if (!component.state.initialized) {
          component.checkFlags();
          component.setState({
            initialized: true
          });
        }
      }
    };

    checkAuth();
    this.userCheck = setInterval(checkAuth, 5000);
  }

  checkFlags() {
    let component = this;
    Meteor.call("users-get-flags", function (err, res) {
      if (res) {
        if (!res.askedProfileData) {
          component.openModal("profileData")();
        }
      }
    });
  }

  componentWillUnmount() {
    if (this.userCheck) {
      clearInterval(this.userCheck);
    }
  }

  render() {
    let filter = obj => {
      let newProps = {};
      let key;

      for (key in obj) {
        if (key !== "children") {
          newProps[key] = obj[key];
        }
      }

      return newProps;
    };

    return React.createElement("div", null, this.isLoggedIn() ? React.createElement(NavBar, null) : React.createElement("div", null), this.isLoggedIn() ? React.createElement(MenuBar, {
      path: this.props.location.query.path
    }) : React.createElement("div", null), React.createElement("div", {
      id: "container",
      className: this.isLoggedIn() ? "page" : "auth"
    }, React.cloneElement(this.props.children, filter(this.props))), React.createElement(Modal, {
      isOpen: this.state.modals.profileData,
      onRequestClose: this.closeModal("profileData"),
      className: "full-app-modal",
      shouldCloseOnEsc: false,
      contentLabel: "User Profile"
    }, React.createElement(ProfileData, {
      close: this.closeModal("profileData")
    })));
  }

}

App.propTypes = {
  router: PropTypes.shape({
    push: PropTypes.func.isRequired
  }).isRequired
};
module.exportDefault(withRouter(App));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"auth.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/core/ui/layouts/auth.jsx                                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let withRouter;
module.watch(require("react-router"), {
  withRouter(v) {
    withRouter = v;
  }

}, 1);
let CookieName;
module.watch(require("../../settings"), {
  CookieName(v) {
    CookieName = v;
  }

}, 2);
let AuthForm;
module.watch(require("../components/auth-form"), {
  default(v) {
    AuthForm = v;
  }

}, 3);
let LocalStorage;
module.watch(require("../../client/LocalStorage"), {
  default(v) {
    LocalStorage = v;
  }

}, 4);
let AppSettings;
module.watch(require("../../../../settings"), {
  default(v) {
    AppSettings = v;
  }

}, 5);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 6);
let PropTypes;
module.watch(require("prop-types"), {
  default(v) {
    PropTypes = v;
  }

}, 7);

class AuthComponent extends React.Component {
  constructor() {
    super();
    this.isLoggedIn = this.isLoggedIn.bind(this);
    this.redirectToApp = this.redirectToApp.bind(this);
    this.getAction = this.getAction.bind(this);
  }

  isLoggedIn() {
    return Meteor.user() || false;
  }

  redirectToApp() {
    let lsURL = LocalStorage.getItem("redirect-to", window.location.pathname),
        redirectURL = lsURL || "/";

    if (lsURL) {
      LocalStorage.removeItem("redirect-to");
    }

    this.props.router.push(redirectURL);
  }

  componentWillMount() {
    this.userCheck = Tracker.autorun(() => {
      if (this.isLoggedIn()) {
        this.redirectToApp();
      }
    });

    if (window.location.pathname === "/auth/restore" && !window.localStorage.getItem(CookieName + "_USER_DATA")) {
      this.props.router.push("/auth/login");
    }

    if (this.props.params.action === "logout") {
      let component = this;
      Meteor.logout(function () {
        component.props.router.push("/auth/restore");
        window.localStorage.removeItem("redirect-to");
      });
    }
  }

  componentWillUnmount() {
    if (this.userCheck) {
      this.userCheck.stop();
    }
  }

  getAction() {
    return this.props.params.action || "register";
  }

  render() {
    let getTranslation = key => {
      return "Core.auth." + key;
    };

    const currentYear = moment().get('year');
    return React.createElement("div", {
      id: "auth"
    }, React.createElement("div", {
      className: "overlay"
    }, React.createElement(AuthForm, {
      action: this.getAction()
    }), React.createElement("footer", {
      className: "page-copyright page-copyright-inverse"
    }, React.createElement("p", null, AppSettings.name), React.createElement("p", null, "\xA9 ", currentYear, ". ", React.createElement(Translate, {
      value: getTranslation("labels.rightsReserved")
    })))));
  }

}

let Auth = withRouter(AuthComponent);
AuthComponent.propTypes = {
  router: PropTypes.shape({
    push: PropTypes.func.isRequired
  }).isRequired
};
module.exportDefault(Auth);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"core.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/core/ui/layouts/core.jsx                                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let AppBundle;
module.watch(require("../../appBundle"), {
  AppBundle(v) {
    AppBundle = v;
  }

}, 0);
let bindActionCreators;
module.watch(require("redux"), {
  bindActionCreators(v) {
    bindActionCreators = v;
  }

}, 1);
let connect;
module.watch(require("react-redux"), {
  connect(v) {
    connect = v;
  }

}, 2);
let App;
module.watch(require("./app"), {
  default(v) {
    App = v;
  }

}, 3);
let actions = {};
Object.keys(AppBundle).forEach(function (key) {
  let AppModule = AppBundle[key] || {};
  let moduleActions = AppModule.actions || false;

  if (moduleActions) {
    Object.keys(moduleActions).forEach(function (mkey) {
      actions[mkey] = moduleActions[mkey];
    });
  }
});

function mapStateToProps(state) {
  return {
    ui: state.ui,
    forms: state.form
  };
}

function mapDispachToProps(dispatch) {
  return bindActionCreators(actions, dispatch);
}

module.exportDefault(connect(mapStateToProps, mapDispachToProps)(App));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"home.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/core/ui/layouts/home.jsx                                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let connect;
module.watch(require("react-redux"), {
  connect(v) {
    connect = v;
  }

}, 1);
let ListsContainer;
module.watch(require("../container/news"), {
  default(v) {
    ListsContainer = v;
  }

}, 2);
let PromotedAccountsContainer;
module.watch(require("../container/promoted-accounts"), {
  default(v) {
    PromotedAccountsContainer = v;
  }

}, 3);

class Home extends React.Component {
  render() {
    return React.createElement("div", {
      className: "home page-content container-fluid"
    }, React.createElement(ListsContainer, {
      locale: this.props.locale
    }), React.createElement(PromotedAccountsContainer, null));
  }

}

module.exportDefault(connect(state => {
  return {
    locale: state.i18n.locale
  };
})(Home));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"not-found.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/core/ui/layouts/not-found.jsx                                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  NotFound: () => NotFound
});
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Link;
module.watch(require("react-router"), {
  Link(v) {
    Link = v;
  }

}, 1);
let AppSettings;
module.watch(require("../../../../settings"), {
  default(v) {
    AppSettings = v;
  }

}, 2);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 3);

class NotFound extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    const currentYear = moment().get("year");

    let getTranslation = key => {
      return "Core.notFound." + key;
    };

    return React.createElement("div", {
      className: "page-error"
    }, React.createElement("div", {
      className: "page-content vertical-align-middle"
    }, React.createElement("header", null, React.createElement("h1", {
      className: "animation-slide-top"
    }, "404"), React.createElement("p", null, React.createElement(Translate, {
      value: getTranslation("title")
    }))), React.createElement("p", {
      className: "error-advise"
    }, React.createElement(Translate, {
      value: getTranslation("description")
    })), React.createElement(Link, {
      className: "btn btn-primary btn-round",
      to: "/"
    }, React.createElement(Translate, {
      value: getTranslation("button")
    })), React.createElement("footer", {
      className: "page-copyright"
    }, React.createElement("p", null, AppSettings.name), React.createElement("p", null, "\xA9 ", currentYear, ". ", React.createElement(Translate, {
      value: getTranslation("copyright")
    })), React.createElement("div", {
      className: "social"
    }, React.createElement("a", {
      href: "javascript:void(0)"
    }, React.createElement("i", {
      className: "icon bd-twitter",
      "aria-hidden": "true"
    })), React.createElement("a", {
      href: "javascript:void(0)"
    }, React.createElement("i", {
      className: "icon bd-facebook",
      "aria-hidden": "true"
    })), React.createElement("a", {
      href: "javascript:void(0)"
    }, React.createElement("i", {
      className: "icon bd-dribbble",
      "aria-hidden": "true"
    }))))));
  }

}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"icons.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/core/ui/icons.jsx                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  AssetsApp: () => AssetsApp,
  AssetsEditor: () => AssetsEditor,
  AssetsSocial: () => AssetsSocial,
  AssetsLetter: () => AssetsLetter
});
const PATH_NAME = "https://s3.amazonaws.com/ibol-app-media";
const AssetsApp = {
  logo: PATH_NAME + "/app/logo.png",
  alert: PATH_NAME + "/app/alert.png",
  search: PATH_NAME + "/app/search.png",
  edit: PATH_NAME + "/app/edit.png",
  cancel: PATH_NAME + "/app/cancel.png"
},
      AssetsSocial = {
  facebook: PATH_NAME + "/social/facebook.png",
  twitter: PATH_NAME + "/social/twitter.png",
  google: PATH_NAME + "/social/google.png",
  instagram: PATH_NAME + "/social/instagram.png"
},
      AssetsLetter = {};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"actions":{"bundle.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/core/actions/bundle.jsx                                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  Actions: () => Actions
});
let Actions = {};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"client":{"LocalStorage.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/core/client/LocalStorage.jsx                                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
const check = function () {
  try {
    window.localStorage.setItem("test", "test");
    window.localStorage.removeItem("test");
    return window.localStorage;
  } catch (e) {
    let setItem = function () {};

    let getItem, clearItem, clear;
    getItem = clearItem = clear = setItem;
    return {
      getItem,
      clearItem,
      clear,
      setItem
    };
  }
};

module.exportDefault(check());
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"routes.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/core/client/routes.jsx                                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  Routes: () => Routes
});
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Route, IndexRoute;
module.watch(require("react-router"), {
  Route(v) {
    Route = v;
  },

  IndexRoute(v) {
    IndexRoute = v;
  }

}, 1);
let Core;
module.watch(require("../ui/layouts/core"), {
  default(v) {
    Core = v;
  }

}, 2);
let Auth;
module.watch(require("../ui/layouts/auth"), {
  default(v) {
    Auth = v;
  }

}, 3);
let Home;
module.watch(require("../ui/layouts/home"), {
  default(v) {
    Home = v;
  }

}, 4);
let NotFound;
module.watch(require("../ui/layouts/not-found"), {
  NotFound(v) {
    NotFound = v;
  }

}, 5);
let ExampleRoutes;
module.watch(require("../../examples/client/routes"), {
  default(v) {
    ExampleRoutes = v;
  }

}, 6);
let SettingsRoutes;
module.watch(require("../../settings/client/routes"), {
  default(v) {
    SettingsRoutes = v;
  }

}, 7);
let AccountRoutes;
module.watch(require("../../accounts/client/routes"), {
  default(v) {
    AccountRoutes = v;
  }

}, 8);
let CampaignsRoutes;
module.watch(require("../../campaigns/client/routes"), {
  default(v) {
    CampaignsRoutes = v;
  }

}, 9);
let ReporterRoutes;
module.watch(require("../../reporter/client/routes"), {
  default(v) {
    ReporterRoutes = v;
  }

}, 10);
let AgendaRoutes;
module.watch(require("../../agenda/client/routes"), {
  default(v) {
    AgendaRoutes = v;
  }

}, 11);
let SearchRoutes;
module.watch(require("../../search/client/routes"), {
  default(v) {
    SearchRoutes = v;
  }

}, 12);
let CodeRoutes;
module.watch(require("../../code/client/routes"), {
  default(v) {
    CodeRoutes = v;
  }

}, 13);
let StatementRoutes;
module.watch(require("../../statement/client/routes"), {
  default(v) {
    StatementRoutes = v;
  }

}, 14);
let PricingRoutes;
module.watch(require("../../pricing/client/routes"), {
  default(v) {
    PricingRoutes = v;
  }

}, 15);
let TeamAttackRoutes;
module.watch(require("../../teamattack/client/routes"), {
  default(v) {
    TeamAttackRoutes = v;
  }

}, 16);
let AdvertisingRoutes;
module.watch(require("../../advertising/client/routes"), {
  default(v) {
    AdvertisingRoutes = v;
  }

}, 17);

function requireAuth(nextState, replace) {
  if (!Meteor.user()) {
    localStorage.setItem("redirect-to", window.location.pathname);
    replace({
      pathname: '/auth/login',
      state: {
        nextPathname: nextState.location.pathname
      }
    });
  }
}

const Routes = React.createElement(Route, {
  path: "/",
  component: Core
}, React.createElement(IndexRoute, {
  component: Home,
  onEnter: requireAuth
}), React.createElement(Route, {
  path: "auth/:action",
  component: Auth
}), ExampleRoutes, SettingsRoutes, AccountRoutes, CampaignsRoutes, ReporterRoutes, AgendaRoutes, SearchRoutes, CodeRoutes, StatementRoutes, PricingRoutes, TeamAttackRoutes, AdvertisingRoutes, React.createElement(Route, {
  path: "*",
  component: NotFound
}));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"translations.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/core/client/translations.jsx                                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.exportDefault({
  en: {
    navBar: {
      avatarMenu: {
        profile: "Profile",
        billing: "Billing",
        settings: "Settings",
        logout: "Logout",
        profiles: {
          manager: "Manager",
          influencer: "Influencer",
          brand: "Brand",
          all: "User"
        }
      },
      notificationsMenu: {
        title: "Notifications",
        all: "All notifications"
      },
      messagesMenu: {
        title: "Messages",
        all: "All messages"
      },
      search: {
        placeholder: "Search..."
      }
    },
    menu: {
      home: "Home",
      help: "Help",
      logout: "Exit"
    },
    auth: {
      login: {
        button: "Log In",
        remember: "Remember Me",
        greeting: "Sign into your account.",
        footer: "Still no account? Please go to"
      },
      register: {
        button: "Sign Up",
        greeting: "Sign up to find interesting things",
        footer: "Have account already? Please go to"
      },
      recover: {
        link: "Forgot Password?",
        button: "Recover Password",
        greeting: "Don't worry we'll help you.",
        footer: "Remember your password? Please go to"
      },
      restore: {
        button: "Log In",
        greeting: "Welcome back",
        footer: "Enter your password to retrieve your session",
        footer2: "Or sign in as a different user"
      },
      labels: {
        email: "Email",
        password: "Password",
        or: "Or",
        rightsReserved: "All Rights Reserved",
        language: "Language"
      },
      errors: {
        login: "Incorrect Password/Email Combination"
      }
    },
    loading: {
      title: "Loading..."
    },
    saving: {
      saving: "Saving...",
      saved: "Saved"
    },
    home: {
      news: {
        news: "IBOL News",
        blog: "Blog",
        article: {
          by: "By",
          more: "Read more"
        }
      },
      influencers: {
        title: "Our Recommendations",
        section: {
          for: "Influencers for",
          more: "See more",
          categories: {
            fashion: "Fashion & Beauty",
            home: "Home & Family",
            health: "Health & Fitness",
            travel: "Travel & Lifestyle",
            food: "Food & Beverage",
            business: "Business & Tech",
            entertainment: "Entertainment"
          }
        }
      }
    },
    modals: {
      profile: {
        title: "Help us know you",
        description: "We want to know a little more about you so we can be more helpful. Please fill this information.",
        form: {
          name: "Name",
          lastName: "Last Name",
          profile: {
            label: "Profile",
            values: {
              manager: "Manager",
              influencer: "Influencer",
              brand: "Brand",
              all: "All",
              notSelected: "Not Selected"
            }
          },
          phone: "Phone",
          mobile: "Mobile Phone",
          gender: {
            label: "Gender",
            values: {
              male: "Male",
              female: "Female"
            }
          },
          address: {
            title: "Billing Address",
            address: "Address",
            city: "City",
            state: "State",
            country: "Country",
            zipCode: "Zip Code"
          },
          button: "Save"
        },
        messages: {
          success: "Profile updated",
          error: "There was an error saving your profile"
        }
      }
    },
    notFound: {
      title: "Page not found!",
      description: "YOU SEEM TO BE TRYING TO FIND YOUR WAY HOME",
      button: "GO TO HOME",
      copyright: "All RIGHT RESERVED"
    }
  },
  es: {
    navBar: {
      avatarMenu: {
        profile: "Perfil",
        billing: "Facturación",
        settings: "Configuraciones",
        logout: "Cerrar Sesión",
        profiles: {
          manager: "Administrador",
          influencer: "Influencer",
          brand: "Marca",
          all: "Usuario"
        }
      },
      notificationsMenu: {
        title: "Notificaciones",
        all: "Todas las notificaciones"
      },
      messagesMenu: {
        title: "Mensajes",
        all: "Todos los Mensajes"
      },
      search: {
        placeholder: "Buscar..."
      }
    },
    menu: {
      home: "Home",
      help: "Ayuda",
      logout: "Salir"
    },
    auth: {
      login: {
        button: "Iniciar Sesión",
        remember: "Recordarme",
        greeting: "Iniciar sesíon en tu cuenta.",
        footer: "¿Aún no tienes cuenta? Ve a"
      },
      register: {
        button: "Registrarse",
        greeting: "Registrate y conocenos.",
        footer: "Ya tienes cuenta? Ve a"
      },
      recover: {
        link: "Olvidaste tu contraseña?",
        button: "Recuperar Contraseña",
        greeting: "No te preocupes, estamos aquí para ayudar.",
        footer: "Recordaste tu contraseña? Ve a"
      },
      restore: {
        button: "Iniciar Sesión",
        greeting: "Bienvenido de regreso",
        footer: "Introduce tu contraseña para iniciar sesión.",
        footer2: "O inicia sesión como otro usuario."
      },
      labels: {
        email: "Correo",
        password: "Contraseña",
        or: "Ó",
        rightsReserved: "Todos los Derechos Reservados",
        language: "Lenguaje"
      },
      errors: {
        login: "Combinación de Correo/Contraseña Incorrecta"
      }
    },
    loading: {
      title: "Cargando..."
    },
    saving: {
      saving: "Guardando...",
      saved: "Guardado"
    },
    home: {
      news: {
        news: "IBOL News",
        blog: "Blog",
        article: {
          by: "Por",
          more: "Leer más"
        }
      },
      influencers: {
        title: "Nuestras Recomendaciones",
        section: {
          for: "Influencers para",
          more: "Ver más",
          categories: {
            fashion: "Moda & Belleza",
            home: "Hogar & Familia",
            health: "Salud & Ejercicio",
            travel: "Viajes & Estilo de Vida",
            food: "Alimentos & Bebidas",
            business: "Negocios & Tecnología",
            entertainment: "Entretenimiento"
          }
        }
      }
    },
    modals: {
      profile: {
        title: "Ayudanos a conocerte",
        description: "We want to know a little more about you so we can be more helpful. Please fill this information.",
        form: {
          name: "Nombre",
          lastName: "Apellido",
          profile: {
            label: "Perfil",
            values: {
              manager: "Manager",
              influencer: "Influencer",
              brand: "Marca",
              all: "Todos",
              notSelected: "No Seleccionado"
            }
          },
          phone: "Teléfono Fijo",
          mobile: "Móvil",
          gender: {
            label: "Genero",
            values: {
              male: "Masculino",
              female: "Femenino"
            }
          },
          address: {
            title: "Dirección",
            address: "Dirección",
            city: "Ciudad",
            state: "Estado",
            country: "País",
            zipCode: "Código Postal"
          },
          button: "Guardar"
        },
        messages: {
          success: "Perfil actualizado",
          error: "Hubo un error actualizando tu perfil"
        }
      }
    },
    notFound: {
      title: "Pagina no encontrada!",
      description: "PARECES ESTAR BUSCANDO TU REGRESO A CASA",
      button: "IR A INICIO",
      copyright: "TODOS LOS DERECHOS RESERVADOS"
    }
  },
  zz: {
    navBar: {
      avatarMenu: {
        profile: "測試",
        billing: "測試",
        settings: "測試",
        logout: "測試",
        profiles: {
          manager: "測試",
          influencer: "測試",
          brand: "測試",
          all: "測試"
        }
      },
      notificationsMenu: {
        title: "測試",
        all: "測試"
      },
      messagesMenu: {
        title: "測試",
        all: "測試"
      },
      search: {
        placeholder: "測試..."
      }
    },
    menu: {
      home: "測試",
      help: "測試",
      logout: "測試"
    },
    auth: {
      login: {
        button: "測試 測試",
        remember: "測試 測試",
        greeting: "測試 測試 測試 測試.",
        footer: "測試 測試 測試? 測試 測試 測試"
      },
      register: {
        button: "測試 測試",
        greeting: "測試 測試 測試 測試 測試 測試",
        footer: "測試 測試 測試? 測試 測試 測試"
      },
      recover: {
        link: "測試 測試?",
        button: "測試 測試",
        greeting: "測試 測試 測試' 測試 測試.",
        footer: "測試 測試 測試? 測試 測試 測試"
      },
      restore: {
        button: "測試 測試",
        greeting: "測試 測試",
        footer: "測試 測試 測試 測試 測試 測試 測試",
        footer2: "測試 測試 測試 測試 測試"
      },
      labels: {
        email: "測試",
        password: "測試",
        or: "測試",
        rightsReserved: "測試 測試 測試",
        language: "測試"
      },
      errors: {
        login: "測試 測試/測試 測試"
      }
    },
    loading: {
      title: "測試..."
    },
    saving: {
      saving: "測試...",
      saved: "測試"
    },
    home: {
      news: {
        news: "測試 測試",
        blog: "測試",
        article: {
          by: "測試",
          more: "測試 測試"
        }
      },
      influencers: {
        title: "測試 測試",
        section: {
          for: "測試 測試",
          more: "測試 測試",
          categories: {
            fashion: "測試 & 測試",
            home: "測試 & 測試",
            health: "測試 & 測試",
            travel: "測試 & 測試 測試 測試",
            food: "測試 & 測試",
            business: "測試 & 測試",
            entertainment: "測試"
          }
        }
      }
    },
    modals: {
      profile: {
        title: "測試 測試 測試 測試",
        description: "測試 測試 測試 測試 測試 測試 測試 測試 測試 測試 測試 測試 測試 測試 測試. 測試 測試 測試 測試.",
        form: {
          name: "測試",
          lastName: "測試 測試",
          profile: {
            label: "測試",
            values: {
              manager: "測試",
              influencer: "測試",
              brand: "測試",
              all: "測試",
              notSelected: "測試 測試"
            }
          },
          phone: "測試",
          mobile: "測試 測試",
          gender: {
            label: "測試",
            values: {
              male: "測試",
              female: "測試"
            }
          },
          address: {
            title: "測試 測試",
            address: "測試",
            city: "測試",
            state: "測試",
            country: "測試",
            zipCode: "測試 測試"
          },
          button: "測試"
        },
        messages: {
          success: "測試 測試",
          error: "測試 測試 測試 測試 測試 測試 測試"
        }
      }
    },
    notFound: {
      title: "測試 測試 測試!",
      description: "測試 測試 測試 測試 測試 測試 測試 測試 測試 測試",
      button: "測試 測試 測試",
      copyright: "測試 測試 測試"
    }
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"main.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/core/client/main.jsx                                                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let Routes;
module.watch(require("./routes"), {
  Routes(v) {
    Routes = v;
  }

}, 0);
let Reducers;
module.watch(require("../reducers/bundle"), {
  Reducers(v) {
    Reducers = v;
  }

}, 1);
let Actions;
module.watch(require("../actions/bundle"), {
  Actions(v) {
    Actions = v;
  }

}, 2);
let Translations;
module.watch(require("./translations"), {
  default(v) {
    Translations = v;
  }

}, 3);
module.exportDefault({
  reducers: Reducers,
  routes: Routes,
  actions: Actions,
  translations: Translations
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"reducers":{"bundle.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/core/reducers/bundle.jsx                                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  Reducers: () => Reducers
});
const Reducers = {};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"appBundle.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/core/appBundle.jsx                                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  AppBundle: () => AppBundle
});
let Core;
module.watch(require("./client/main"), {
  default(v) {
    Core = v;
  }

}, 0);
let Accounts;
module.watch(require("../accounts/client/bundle"), {
  default(v) {
    Accounts = v;
  }

}, 1);
let AppBundle = {
  Core,
  Accounts
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"settings.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/core/settings.jsx                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  AppName: () => AppName,
  CookieName: () => CookieName,
  Settings: () => Settings
});
let Settings = {};
const AppName = "BASE_APP";
const CookieName = AppName + "_SESSION";
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"teamattack":{"ui":{"components":{"edit":{"filter":{"account-item":{"container.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/teamattack/ui/components/edit/filter/account-item/container.jsx                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let List;
module.watch(require("./list"), {
  default(v) {
    List = v;
  }

}, 1);
let Table;
module.watch(require("./table"), {
  default(v) {
    Table = v;
  }

}, 2);

class AccountItem extends React.Component {
  render() {
    let {
      account,
      view,
      toggleAccount,
      value,
      filters
    } = this.props;
    return view === "list" ? React.createElement(List, {
      account: account,
      view: view,
      toggleAccount: toggleAccount,
      value: value,
      filters: filters
    }) : React.createElement(Table, {
      account: account,
      view: view,
      toggleAccount: toggleAccount,
      value: value,
      filters: filters
    });
  }

}

module.exportDefault(AccountItem);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"list.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/teamattack/ui/components/edit/filter/account-item/list.jsx                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/objectSpread"));

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Localize, Translate;
module.watch(require("react-redux-i18n"), {
  Localize(v) {
    Localize = v;
  },

  Translate(v) {
    Translate = v;
  }

}, 1);
let Link;
module.watch(require("react-router"), {
  Link(v) {
    Link = v;
  }

}, 2);
let SocialAvatar;
module.watch(require("../../../../../../core/ui/components/social-avatar"), {
  default(v) {
    SocialAvatar = v;
  }

}, 3);

class AccountItem extends React.Component {
  constructor() {
    super();
    this.state = {
      expanded: false
    };
    this.toggleExtra = this.toggleExtra.bind(this);
  }

  toggleExtra(e) {
    e.stopPropagation();
    let newState = (0, _objectSpread2.default)({}, this.state);
    newState.expanded = !newState.expanded;
    this.setState(newState);
  }

  render() {
    let getTranslation = key => {
      return "TeamAttack.edit.search.results.results.helpers." + key;
    };

    function followerFormatter(num) {
      num = Number(num);
      return num > 999 ? (num / 1000).toFixed(1) + 'K' : num > 999999 ? (num / 1000000).toFixed(1) + 'M' : num;
    }

    let {
      account,
      toggleAccount,
      value,
      view,
      filters
    } = this.props;
    return React.createElement("div", {
      className: view === "list" ? "col-md-4" : "col-md-12"
    }, React.createElement("div", {
      className: "panel",
      onClick: toggleAccount(account)
    }, React.createElement("div", {
      className: "panel-body container-fluid team-attack-profile " + (value.filter(a => a._id === account._id)[0] ? "active" : "")
    }, React.createElement("div", {
      className: "selected"
    }, React.createElement("i", {
      className: "icon wb-check"
    })), React.createElement("div", {
      className: "header"
    }, React.createElement("div", {
      className: "avatar"
    }, React.createElement(SocialAvatar, {
      avatar: account.information.avatar,
      network: account.network,
      name: (account.information.name || "") + " " + (account.information.lastName || ""),
      size: "50"
    })), React.createElement("div", {
      className: "content"
    }, React.createElement("div", {
      className: "title"
    }, (account.information.name || "") + " " + (account.information.lastName || "")), React.createElement("div", {
      className: "location"
    }, account.information.country)), React.createElement(Link, {
      onClick: event => {
        event.preventDefault();
        window.open("/accounts/view/".concat(account._id));
      },
      className: "view-profile"
    }, React.createElement("i", {
      className: "fa fa-eye",
      "aria-hidden": "true"
    }))), React.createElement("div", {
      className: "content"
    }, filters && React.createElement("div", {
      className: "cost"
    }, React.createElement("div", {
      className: "label"
    }, React.createElement(Translate, {
      value: getTranslation("cost.".concat(filters.action_type))
    })), React.createElement("div", {
      className: "price"
    }, React.createElement("span", null, React.createElement(Localize, {
      value: Number(account.pricing[filters.action_type]) || 0,
      options: {
        style: 'currency',
        currency: 'USD',
        minimumFractionDigits: 0,
        maximumFractionDigits: 2
      }
    }), " USD"))), React.createElement("div", {
      className: "followers"
    }, React.createElement("div", {
      className: "content"
    }, React.createElement("div", {
      className: "count"
    }, " ", account.statistics ? followerFormatter(account.statistics.followers) : "-"), React.createElement("div", {
      className: "label"
    }, React.createElement(Translate, {
      value: getTranslation("followers")
    }))), React.createElement("div", {
      className: "icon"
    }, React.createElement("i", {
      className: "social-icon " + account.network
    })))), React.createElement("div", {
      className: "more " + (this.state.expanded ? "expanded" : ""),
      onClick: this.toggleExtra,
      style: {
        cursor: "pointer"
      }
    }, this.state.expanded ? "" : "", " ", React.createElement("i", {
      className: "fa fa-angle-double-down",
      "aria-hidden": "true"
    })), this.state.expanded ? React.createElement("div", {
      className: "extra"
    }, React.createElement("table", {
      className: "price-table"
    }, React.createElement("tbody", null, React.createElement("tr", null, React.createElement("td", null, React.createElement(Translate, {
      value: getTranslation("cost.post")
    })), React.createElement("td", null, account.pricing.post ? React.createElement("span", null, React.createElement(Localize, {
      value: Number(account.pricing.post) || 0,
      options: {
        style: 'currency',
        currency: 'USD',
        minimumFractionDigits: 0,
        maximumFractionDigits: 2
      }
    }), " USD") : "-")), React.createElement("tr", null, React.createElement("td", null, React.createElement(Translate, {
      value: getTranslation("cost.profilePicture")
    })), React.createElement("td", null, account.pricing.profilePicture ? React.createElement("span", null, React.createElement(Localize, {
      value: Number(account.pricing.profilePicture) || 0,
      options: {
        style: 'currency',
        currency: 'USD',
        minimumFractionDigits: 0,
        maximumFractionDigits: 2
      }
    }), " USD") : "-")), React.createElement("tr", null, React.createElement("td", null, React.createElement(Translate, {
      value: getTranslation("cost.coverPhoto")
    })), React.createElement("td", null, account.pricing.coverPhoto ? React.createElement("span", null, React.createElement(Localize, {
      value: Number(account.pricing.coverPhoto) || 0,
      options: {
        style: 'currency',
        currency: 'USD',
        minimumFractionDigits: 0,
        maximumFractionDigits: 2
      }
    }), " USD") : "-")), React.createElement("tr", null, React.createElement("td", null, React.createElement(Translate, {
      value: getTranslation("cost.noPost.hour")
    })), React.createElement("td", null, account.pricing.noPostHour ? React.createElement("span", null, React.createElement(Localize, {
      value: Number(account.pricing.noPostHour) || 0,
      options: {
        style: 'currency',
        currency: 'USD',
        minimumFractionDigits: 0,
        maximumFractionDigits: 2
      }
    }), " USD") : "-")), React.createElement("tr", null, React.createElement("td", null, React.createElement(Translate, {
      value: getTranslation("cost.noPost.noPost.day")
    })), React.createElement("td", null, account.pricing.noPostDay ? React.createElement("span", null, React.createElement(Localize, {
      value: Number(account.pricing.noPostDay) || 0,
      options: {
        style: 'currency',
        currency: 'USD',
        minimumFractionDigits: 0,
        maximumFractionDigits: 2
      }
    }), " USD") : "-")), React.createElement("tr", null, React.createElement("td", null, React.createElement(Translate, {
      value: getTranslation("cost.share")
    })), React.createElement("td", null, account.pricing.share ? React.createElement("span", null, React.createElement(Localize, {
      value: Number(account.pricing.share) || 0,
      options: {
        style: 'currency',
        currency: 'USD',
        minimumFractionDigits: 0,
        maximumFractionDigits: 2
      }
    }), " USD") : "-"))))) : "")));
  }

}

module.exportDefault(AccountItem);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"table.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/teamattack/ui/components/edit/filter/account-item/table.jsx                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/objectSpread"));

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, I18n, Localize;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  },

  Localize(v) {
    Localize = v;
  }

}, 1);
let SocialAvatar;
module.watch(require("../../../../../../core/ui/components/social-avatar"), {
  default(v) {
    SocialAvatar = v;
  }

}, 2);
let isoLangs;
module.watch(require("../../../../../../../translations"), {
  isoLangs(v) {
    isoLangs = v;
  }

}, 3);

class AccountItem extends React.Component {
  constructor() {
    super();
    this.state = {
      expanded: false
    };
    this.toggleExtra = this.toggleExtra.bind(this);
  }

  toggleExtra(e) {
    e.stopPropagation();
    let newState = (0, _objectSpread2.default)({}, this.state);
    newState.expanded = !newState.expanded;
    this.setState(newState);
  }

  render() {
    let getTranslation = key => {
      return "TeamAttack.edit.search.results.results.helpers." + key;
    };

    function followerFormatter(num) {
      num = Number(num);
      return num > 999 ? (num / 1000).toFixed(1) + 'K' : num > 999999 ? (num / 1000000).toFixed(1) + 'M' : num;
    }

    let {
      account,
      toggleAccount,
      value,
      view,
      filters
    } = this.props;
    return React.createElement("tr", {
      onClick: toggleAccount(account),
      className: value.filter(a => a._id === account._id)[0] ? "active" : ""
    }, React.createElement("td", {
      width: "200px"
    }, React.createElement("div", {
      className: "icon"
    }, React.createElement("i", {
      className: "social-icon " + account.network
    }))), React.createElement("td", null, React.createElement(SocialAvatar, {
      avatar: account.information.avatar,
      network: account.network,
      name: (account.information.name || "") + " " + (account.information.lastName || ""),
      size: "50"
    }), React.createElement("div", {
      className: "content"
    }, React.createElement("div", {
      className: "title"
    }, (account.information.name || "") + " " + (account.information.lastName || "")), React.createElement("div", {
      className: "location"
    }, account.information.country))), React.createElement("td", null, account.information.country), React.createElement("td", null, account.information.city || "-"), React.createElement("td", null, isoLangs[account.information.language].name), React.createElement("td", null, moment().diff(new Date(account.information.birthDate), "years")), React.createElement("td", null, account.information.gender), React.createElement("td", null, account.information.sexualOrientation || "-"), React.createElement("td", null, account.information.maritalStatus || "-"), React.createElement("td", null, "~"), React.createElement("td", null, "~"), React.createElement("td", null, "~"), React.createElement("td", null, "~"), React.createElement("td", null, "~"), React.createElement("td", null, account.information.categories.join(",") || "-"), React.createElement("td", null, account.information.specialties.join(",") || "-"), React.createElement("td", null, React.createElement(Localize, {
      value: Number(account.pricing[filters.action_type]) || 0,
      options: {
        style: 'currency',
        currency: 'USD',
        minimumFractionDigits: 0,
        maximumFractionDigits: 2
      }
    }), " USD"), React.createElement("td", null, "?"), React.createElement("td", null, "?"), React.createElement("td", null, "?"), React.createElement("td", null, "?"), React.createElement("td", null, "?"), React.createElement("td", null, "?"));
  }

}

module.exportDefault(AccountItem);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"controls":{"audience.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/teamattack/ui/components/edit/filter/controls/audience.jsx                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let InputNumberInterval;
module.watch(require("../../../../../../core/ui/components/forms/input-number-interval"), {
  default(v) {
    InputNumberInterval = v;
  }

}, 1);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 2);
let isoLangs;
module.watch(require("../../../../../../../translations"), {
  isoLangs(v) {
    isoLangs = v;
  }

}, 3);

let _;

module.watch(require("lodash"), {
  default(v) {
    _ = v;
  }

}, 4);

class Audience extends React.Component {
  render() {
    let getTranslation = key => {
      return "TeamAttack.edit." + key;
    };

    let languages = [];
    Object.keys(isoLangs).forEach(key => languages.push(isoLangs[key]));
    languages.pop(); //REMOVE TEST LANGUAGE

    languages = _.orderBy(languages, "native");
    let {
      values,
      updateFilter,
      toggleMap
    } = this.props;
    return React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-body slim container-fluid"
    }, React.createElement("h4", null, React.createElement(Translate, {
      value: getTranslation("search.panel.audience.title")
    })), React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("search.panel.audience.country.label")
    })), React.createElement("input", {
      type: "text",
      className: "form-control",
      onClick: toggleMap("audience_country"),
      defaultValue: values.audience_country.join(", ")
    })), React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("search.panel.audience.city.label")
    })), React.createElement("input", {
      type: "text",
      className: "form-control",
      readOnly: true,
      defaultValue: "No Disponible"
    })), React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("search.panel.audience.gender.label")
    })), React.createElement("select", {
      className: "form-control",
      value: values.audience_gender,
      onChange: updateFilter("audience_gender")
    }, React.createElement("option", {
      value: "all"
    }, I18n.t(getTranslation("search.panel.audience.all"))), React.createElement("option", {
      value: "male"
    }, I18n.t(getTranslation("search.panel.audience.gender.values.male"))), React.createElement("option", {
      value: "female"
    }, I18n.t(getTranslation("search.panel.audience.gender.values.female"))), React.createElement("option", {
      value: "split"
    }, I18n.t(getTranslation("search.panel.audience.gender.values.split"))))), React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("search.panel.audience.language.label")
    })), React.createElement("select", {
      onChange: updateFilter("influencer_languages"),
      className: "form-control",
      value: values.influencer_languages || ""
    }, React.createElement("option", {
      value: ""
    }, I18n.t(getTranslation("helpers.noSelect"))), languages.map(l => React.createElement("option", {
      key: l.code,
      value: l.code
    }, l.native)))), React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("search.panel.audience.age.label")
    })), React.createElement(InputNumberInterval, {
      input: {
        value: values.audience_age,
        onChange: updateFilter("audience_age")
      }
    })), React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("search.panel.audience.nrssg.label")
    })), React.createElement("select", {
      className: "form-control",
      value: values.audience_nrssg,
      onChange: updateFilter("audience_nrssg")
    }, React.createElement("option", {
      value: "all"
    }, I18n.t(getTranslation("search.panel.audience.all"))), React.createElement("option", {
      value: "a"
    }, I18n.t(getTranslation("search.panel.audience.nrssg.values.a"))), React.createElement("option", {
      value: "b"
    }, I18n.t(getTranslation("search.panel.audience.nrssg.values.b"))), React.createElement("option", {
      value: "c1"
    }, I18n.t(getTranslation("search.panel.audience.nrssg.values.c1"))), React.createElement("option", {
      value: "c2"
    }, I18n.t(getTranslation("search.panel.audience.nrssg.values.c2"))), React.createElement("option", {
      value: "d"
    }, I18n.t(getTranslation("search.panel.audience.nrssg.values.d"))), React.createElement("option", {
      value: "e"
    }, I18n.t(getTranslation("search.panel.audience.nrssg.values.e")))))));
  }

}

module.exportDefault(Audience);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"extended-profile.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/teamattack/ui/components/edit/filter/controls/extended-profile.jsx                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 1);
let InputNumberInterval;
module.watch(require("../../../../../../core/ui/components/forms/input-number-interval"), {
  default(v) {
    InputNumberInterval = v;
  }

}, 2);

class ProfileExtended extends React.Component {
  render() {
    let getTranslation = key => {
      return "TeamAttack.edit." + key;
    };

    let {
      values,
      updateFilter
    } = this.props;
    return React.createElement("div", null, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("search.panel.influencer.actions.label")
    })), React.createElement("select", {
      className: "form-control",
      value: values.action_type,
      onChange: updateFilter("action_type")
    }, React.createElement("option", {
      value: "all"
    }, I18n.t(getTranslation("search.panel.influencer.all"))), React.createElement("option", {
      value: "post"
    }, I18n.t(getTranslation("search.panel.influencer.action.values.post"))), React.createElement("option", {
      value: "profilePicture"
    }, I18n.t(getTranslation("search.panel.influencer.action.values.profilePicture"))), React.createElement("option", {
      value: "coverPhoto"
    }, I18n.t(getTranslation("search.panel.influencer.action.values.coverPhoto"))), React.createElement("option", {
      value: "share"
    }, I18n.t(getTranslation("search.panel.influencer.action.values.share"))))), React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("search.panel.influencer.categories.label")
    })), React.createElement("input", {
      type: "text",
      readOnly: true,
      defaultValue: "No Disponible",
      className: "form-control"
    })), React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("search.panel.influencer.specialties.label")
    })), React.createElement("input", {
      type: "text",
      readOnly: true,
      defaultValue: "No Disponible",
      className: "form-control"
    })));
  }

}

module.exportDefault(ProfileExtended);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"location.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/teamattack/ui/components/edit/filter/controls/location.jsx                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 1);

class Location extends React.Component {
  render() {
    let getTranslation = key => {
      return "TeamAttack.edit." + key;
    };

    let {
      values,
      toggleMap
    } = this.props;
    return React.createElement("div", null, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("search.panel.influencer.country.label")
    })), React.createElement("input", {
      type: "text",
      className: "form-control",
      onClick: toggleMap("influencer_country"),
      defaultValue: values.influencer_country.join(", ")
    })), React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("search.panel.influencer.city.label")
    })), React.createElement("input", {
      type: "text",
      defaultValue: "No Disponible",
      readOnly: true,
      className: "form-control"
    })));
  }

}

module.exportDefault(Location);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"profile.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/teamattack/ui/components/edit/filter/controls/profile.jsx                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 1);
let InputSelect;
module.watch(require("../../../../../../core/ui/components/forms/input-select"), {
  default(v) {
    InputSelect = v;
  }

}, 2);
let InputNumberInterval;
module.watch(require("../../../../../../core/ui/components/forms/input-number-interval"), {
  default(v) {
    InputNumberInterval = v;
  }

}, 3);
let isoLangs;
module.watch(require("../../../../../../../translations"), {
  isoLangs(v) {
    isoLangs = v;
  }

}, 4);

let _;

module.watch(require("lodash"), {
  default(v) {
    _ = v;
  }

}, 5);

class Profile extends React.Component {
  render() {
    let getTranslation = key => {
      return "TeamAttack.edit." + key;
    };

    let languages = [];
    Object.keys(isoLangs).forEach(key => languages.push(isoLangs[key]));
    languages.pop(); //REMOVE TEST LANGUAGE

    languages = _.orderBy(languages, "native");
    let {
      values,
      updateFilter
    } = this.props;
    return React.createElement("div", null, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("search.panel.influencer.gender.label")
    })), React.createElement("select", {
      className: "form-control",
      value: values.influencer_gender,
      onChange: updateFilter("influencer_gender")
    }, React.createElement("option", {
      value: "all"
    }, I18n.t(getTranslation("search.panel.influencer.gender.values.both"))), React.createElement("option", {
      value: "male"
    }, I18n.t(getTranslation("search.panel.influencer.gender.values.male"))), React.createElement("option", {
      value: "female"
    }, I18n.t(getTranslation("search.panel.influencer.gender.values.female"))))), React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("search.panel.influencer.languages.label")
    })), React.createElement("select", {
      onChange: updateFilter("influencer_languages"),
      className: "form-control",
      value: values.influencer_languages || ""
    }, React.createElement("option", {
      value: ""
    }, I18n.t(getTranslation("helpers.noSelect"))), languages.map(l => React.createElement("option", {
      key: l.code,
      value: l.code
    }, l.native)))), React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("search.panel.influencer.age.label")
    })), React.createElement(InputNumberInterval, {
      input: {
        value: values.influencer_age,
        onChange: updateFilter("influencer_age")
      }
    })), React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("search.panel.influencer.sexualOrientation.label")
    })), React.createElement(InputSelect, {
      input: {
        value: values.influencer_sexualOrientation,
        onChange: updateFilter("influencer_sexualOrientation")
      },
      className: "form-control",
      options: [{
        value: "all",
        label: I18n.t(getTranslation("search.panel.influencer.all"))
      }, {
        value: "heterosexual",
        label: I18n.t(getTranslation("search.panel.influencer.sexualOrientation.values.heterosexual"))
      }, {
        value: "homosexual",
        label: I18n.t(getTranslation("search.panel.influencer.sexualOrientation.values.homosexual"))
      }, {
        value: "bisexual",
        label: I18n.t(getTranslation("search.panel.influencer.sexualOrientation.values.bisexual"))
      }, {
        value: "transexual",
        label: I18n.t(getTranslation("search.panel.influencer.sexualOrientation.values.transexual"))
      }]
    })), React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("search.panel.influencer.maritalStatus.label")
    })), React.createElement(InputSelect, {
      input: {
        value: values.influencer_sexualOrientation,
        onChange: updateFilter("influencer_sexualOrientation")
      },
      className: "form-control",
      options: [{
        value: "all",
        label: I18n.t(getTranslation("search.panel.influencer.all"))
      }, {
        value: "single",
        label: I18n.t(getTranslation("search.panel.influencer.maritalStatus..values.single"))
      }, {
        value: "married",
        label: I18n.t(getTranslation("search.panel.influencer.maritalStatus..values.married"))
      }]
    })));
  }

}

module.exportDefault(Profile);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"ranges.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/teamattack/ui/components/edit/filter/controls/ranges.jsx                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 1);
let InputNumberInterval;
module.watch(require("../../../../../../core/ui/components/forms/input-number-interval"), {
  default(v) {
    InputNumberInterval = v;
  }

}, 2);

class Ranges extends React.Component {
  render() {
    let getTranslation = key => {
      return "TeamAttack.edit." + key;
    };

    let {
      values,
      updateFilter
    } = this.props;
    return React.createElement("div", null, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("search.panel.influencer.likes.label")
    })), React.createElement(InputNumberInterval, {
      input: {
        value: values.influencer_likes,
        onChange: updateFilter("influencer_likes")
      }
    })), React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("search.panel.influencer.followers.label")
    })), React.createElement(InputNumberInterval, {
      input: {
        value: values.influencer_followers,
        onChange: updateFilter("influencer_followers")
      }
    })), React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("search.panel.influencer.views.label")
    })), React.createElement(InputNumberInterval, {
      input: {
        value: values.influencer_views,
        onChange: updateFilter("influencer_views")
      }
    })), React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("search.panel.influencer.engagement.label")
    })), React.createElement(InputNumberInterval, {
      input: {
        value: values.influencer_engagement,
        onChange: updateFilter("influencer_engagement")
      }
    })));
  }

}

module.exportDefault(Ranges);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"ta-list.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/teamattack/ui/components/edit/filter/controls/ta-list.jsx                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 1);
let BootstrapTable, TableHeaderColumn;
module.watch(require("react-bootstrap-table"), {
  BootstrapTable(v) {
    BootstrapTable = v;
  },

  TableHeaderColumn(v) {
    TableHeaderColumn = v;
  }

}, 2);
let Link;
module.watch(require("react-router"), {
  Link(v) {
    Link = v;
  }

}, 3);
let SocialAvatar;
module.watch(require("../../../../../../core/ui/components/social-avatar"), {
  default(v) {
    SocialAvatar = v;
  }

}, 4);

const renderMembers = function (cell, row) {
  return React.createElement("div", null, cell.map((a, i) => React.createElement("div", {
    className: "icon",
    key: i
  }, React.createElement(SocialAvatar, {
    avatar: a.information.avatar,
    network: a.network,
    name: a.information.name,
    size: "75",
    type: a.information.type
  }))));
};

const renderName = function (cell, row) {
  // String example
  return React.createElement(Link, {
    to: "/team-attack/edit/" + row._id
  }, cell);
};

class Audience extends React.Component {
  render() {
    let getTranslation = key => {
      return "TeamAttack.list." + key;
    };

    let {
      teamAttacks
    } = this.props;
    const options = {
      noDataText: I18n.t(getTranslation("table.empty"))
    };
    return React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-body slim container-fluid"
    }, React.createElement("h4", null, React.createElement(Translate, {
      value: getTranslation("title")
    })), React.createElement("div", {
      className: "ibol-table"
    }, React.createElement(BootstrapTable, {
      data: teamAttacks,
      options: options
    }, React.createElement(TableHeaderColumn, {
      isKey: true,
      dataField: "name",
      width: "200px",
      dataFormat: renderName
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.name")
    })), React.createElement(TableHeaderColumn, {
      dataField: "members",
      width: "300px",
      dataFormat: renderMembers
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.members")
    }))))));
  }

}

module.exportDefault(Audience);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"controls.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/teamattack/ui/components/edit/filter/controls.jsx                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/objectSpread"));

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 1);
let Audience;
module.watch(require("./controls/audience"), {
  default(v) {
    Audience = v;
  }

}, 2);
let Location;
module.watch(require("./controls/location"), {
  default(v) {
    Location = v;
  }

}, 3);
let Profile;
module.watch(require("./controls/profile"), {
  default(v) {
    Profile = v;
  }

}, 4);
let ProfileExtended;
module.watch(require("./controls/extended-profile"), {
  default(v) {
    ProfileExtended = v;
  }

}, 5);
let Ranges;
module.watch(require("./controls/ranges"), {
  default(v) {
    Ranges = v;
  }

}, 6);
let InputSocialNetwork;
module.watch(require("../../../../../core/ui/components/forms/input-social-network"), {
  default(v) {
    InputSocialNetwork = v;
  }

}, 7);
let TAList;
module.watch(require("./controls/ta-list"), {
  default(v) {
    TAList = v;
  }

}, 8);

class FilterControls extends React.Component {
  constructor() {
    super();
    this.state = {
      influencer_age: null,
      influencer_followers: null,
      audience_age: null
    };
    this.updateSlider = this.updateSlider.bind(this);
  }

  updateSlider(key) {
    let component = this;
    return function (val) {
      let newState = (0, _objectSpread2.default)({}, component.state);
      newState[key] = val;
      component.setState(newState);
    };
  }

  componentWillMount() {
    let {
      influencer_age,
      influencer_followers,
      audience_age
    } = this.props.values;
    this.setState({
      influencer_age,
      influencer_followers,
      audience_age
    });
  }

  render() {
    let getTranslation = key => {
      return "TeamAttack.edit." + key;
    };

    let {
      values,
      updateFilter,
      toggleMap,
      teamAttacks
    } = this.props;
    return React.createElement("div", {
      className: "col-md-3"
    }, React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-body slim container-fluid"
    }, React.createElement("h4", null, React.createElement(Translate, {
      value: getTranslation("search.panel.influencer.title")
    })), React.createElement(InputSocialNetwork, {
      input: {
        value: values.influencer_networks,
        onChange: updateFilter("influencer_networks")
      }
    }), React.createElement(Location, {
      values: values,
      updateFilter: updateFilter,
      toggleMap: toggleMap
    }), React.createElement(Profile, {
      values: values,
      updateFilter: updateFilter
    }), React.createElement(Ranges, {
      values: values,
      updateFilter: updateFilter
    }), React.createElement(ProfileExtended, {
      values: values,
      updateFilter: updateFilter
    }))), React.createElement(Audience, {
      values: values,
      updateFilter: updateFilter,
      toggleMap: toggleMap
    }), teamAttacks && teamAttacks.length && React.createElement(TAList, {
      teamAttacks: teamAttacks
    }));
  }

}

module.exportDefault(FilterControls);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"layout.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/teamattack/ui/components/edit/filter/layout.jsx                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 1);
let FilterControls;
module.watch(require("./controls"), {
  default(v) {
    FilterControls = v;
  }

}, 2);
let FilterListContainer;
module.watch(require("../../../containers/team-attack-filter"), {
  default(v) {
    FilterListContainer = v;
  }

}, 3);
let ConquerMap;
module.watch(require("../../../../../campaigns/ui/components/information/conquer-map"), {
  default(v) {
    ConquerMap = v;
  }

}, 4);
let countries = [{
  "code": "BD",
  "name": "Bangladesh"
}, {
  "code": "BE",
  "name": "Belgium"
}, {
  "code": "BF",
  "name": "Burkina Faso"
}, {
  "code": "BG",
  "name": "Bulgaria"
}, {
  "code": "BA",
  "name": "Bosnia and Herz."
}, {
  "code": "BN",
  "name": "Brunei"
}, {
  "code": "BO",
  "name": "Bolivia"
}, {
  "code": "JP",
  "name": "Japan"
}, {
  "code": "BI",
  "name": "Burundi"
}, {
  "code": "BJ",
  "name": "Benin"
}, {
  "code": "BT",
  "name": "Bhutan"
}, {
  "code": "JM",
  "name": "Jamaica"
}, {
  "code": "BW",
  "name": "Botswana"
}, {
  "code": "BR",
  "name": "Brazil"
}, {
  "code": "BS",
  "name": "Bahamas"
}, {
  "code": "BY",
  "name": "Belarus"
}, {
  "code": "BZ",
  "name": "Belize"
}, {
  "code": "RU",
  "name": "Russia"
}, {
  "code": "RW",
  "name": "Rwanda"
}, {
  "code": "RS",
  "name": "Serbia"
}, {
  "code": "TL",
  "name": "Timor-Leste"
}, {
  "code": "TM",
  "name": "Turkmenistan"
}, {
  "code": "TJ",
  "name": "Tajikistan"
}, {
  "code": "RO",
  "name": "Romania"
}, {
  "code": "GW",
  "name": "Guinea-Bissau"
}, {
  "code": "GT",
  "name": "Guatemala"
}, {
  "code": "GR",
  "name": "Greece"
}, {
  "code": "GQ",
  "name": "Eq. Guinea"
}, {
  "code": "GY",
  "name": "Guyana"
}, {
  "code": "GE",
  "name": "Georgia"
}, {
  "code": "GB",
  "name": "United Kingdom"
}, {
  "code": "GA",
  "name": "Gabon"
}, {
  "code": "GN",
  "name": "Guinea"
}, {
  "code": "GM",
  "name": "Gambia"
}, {
  "code": "GL",
  "name": "Greenland"
}, {
  "code": "GH",
  "name": "Ghana"
}, {
  "code": "OM",
  "name": "Oman"
}, {
  "code": "TN",
  "name": "Tunisia"
}, {
  "code": "JO",
  "name": "Jordan"
}, {
  "code": "HR",
  "name": "Croatia"
}, {
  "code": "HT",
  "name": "Haiti"
}, {
  "code": "HU",
  "name": "Hungary"
}, {
  "code": "HN",
  "name": "Honduras"
}, {
  "code": "PR",
  "name": "Puerto Rico"
}, {
  "code": "PS",
  "name": "Palestine"
}, {
  "code": "PT",
  "name": "Portugal"
}, {
  "code": "PY",
  "name": "Paraguay"
}, {
  "code": "PA",
  "name": "Panama"
}, {
  "code": "PG",
  "name": "Papua New Guinea"
}, {
  "code": "PE",
  "name": "Peru"
}, {
  "code": "PK",
  "name": "Pakistan"
}, {
  "code": "PH",
  "name": "Philippines"
}, {
  "code": "PL",
  "name": "Poland"
}, {
  "code": "ZM",
  "name": "Zambia"
}, {
  "code": "EH",
  "name": "W. Sahara"
}, {
  "code": "EE",
  "name": "Estonia"
}, {
  "code": "EG",
  "name": "Egypt"
}, {
  "code": "ZA",
  "name": "South Africa"
}, {
  "code": "EC",
  "name": "Ecuador"
}, {
  "code": "IT",
  "name": "Italy"
}, {
  "code": "VN",
  "name": "Vietnam"
}, {
  "code": "SB",
  "name": "Solomon Is."
}, {
  "code": "ET",
  "name": "Ethiopia"
}, {
  "code": "SO",
  "name": "Somalia"
}, {
  "code": "ZW",
  "name": "Zimbabwe"
}, {
  "code": "ES",
  "name": "Spain"
}, {
  "code": "ER",
  "name": "Eritrea"
}, {
  "code": "ME",
  "name": "Montenegro"
}, {
  "code": "MD",
  "name": "Moldova"
}, {
  "code": "MG",
  "name": "Madagascar"
}, {
  "code": "MA",
  "name": "Morocco"
}, {
  "code": "UZ",
  "name": "Uzbekistan"
}, {
  "code": "MM",
  "name": "Myanmar"
}, {
  "code": "ML",
  "name": "Mali"
}, {
  "code": "MN",
  "name": "Mongolia"
}, {
  "code": "MK",
  "name": "Macedonia"
}, {
  "code": "MW",
  "name": "Malawi"
}, {
  "code": "MR",
  "name": "Mauritania"
}, {
  "code": "UG",
  "name": "Uganda"
}, {
  "code": "MY",
  "name": "Malaysia"
}, {
  "code": "MX",
  "name": "Mexico"
}, {
  "code": "IL",
  "name": "Israel"
}, {
  "code": "FR",
  "name": "France"
}, {
  "code": "XS",
  "name": "Somaliland"
}, {
  "code": "FI",
  "name": "Finland"
}, {
  "code": "FJ",
  "name": "Fiji"
}, {
  "code": "FK",
  "name": "Falkland Is."
}, {
  "code": "NI",
  "name": "Nicaragua"
}, {
  "code": "NL",
  "name": "Netherlands"
}, {
  "code": "NO",
  "name": "Norway"
}, {
  "code": "NA",
  "name": "Namibia"
}, {
  "code": "VU",
  "name": "Vanuatu"
}, {
  "code": "NC",
  "name": "New Caledonia"
}, {
  "code": "NE",
  "name": "Niger"
}, {
  "code": "NG",
  "name": "Nigeria"
}, {
  "code": "NZ",
  "name": "New Zealand"
}, {
  "code": "NP",
  "name": "Nepal"
}, {
  "code": "XK",
  "name": "Kosovo"
}, {
  "code": "CI",
  "name": "Côte d'Ivoire"
}, {
  "code": "CH",
  "name": "Switzerland"
}, {
  "code": "CO",
  "name": "Colombia"
}, {
  "code": "CN",
  "name": "China"
}, {
  "code": "CM",
  "name": "Cameroon"
}, {
  "code": "CL",
  "name": "Chile"
}, {
  "code": "XC",
  "name": "N. Cyprus"
}, {
  "code": "CA",
  "name": "Canada"
}, {
  "code": "CG",
  "name": "Congo"
}, {
  "code": "CF",
  "name": "Central African Rep."
}, {
  "code": "CD",
  "name": "Dem. Rep. Congo"
}, {
  "code": "CZ",
  "name": "Czech Rep."
}, {
  "code": "CY",
  "name": "Cyprus"
}, {
  "code": "CR",
  "name": "Costa Rica"
}, {
  "code": "CU",
  "name": "Cuba"
}, {
  "code": "SZ",
  "name": "Swaziland"
}, {
  "code": "SY",
  "name": "Syria"
}, {
  "code": "KG",
  "name": "Kyrgyzstan"
}, {
  "code": "KE",
  "name": "Kenya"
}, {
  "code": "SS",
  "name": "S. Sudan"
}, {
  "code": "SR",
  "name": "Suriname"
}, {
  "code": "KH",
  "name": "Cambodia"
}, {
  "code": "SV",
  "name": "El Salvador"
}, {
  "code": "SK",
  "name": "Slovakia"
}, {
  "code": "KR",
  "name": "Korea"
}, {
  "code": "SI",
  "name": "Slovenia"
}, {
  "code": "KP",
  "name": "Dem. Rep. Korea"
}, {
  "code": "KW",
  "name": "Kuwait"
}, {
  "code": "SN",
  "name": "Senegal"
}, {
  "code": "SL",
  "name": "Sierra Leone"
}, {
  "code": "KZ",
  "name": "Kazakhstan"
}, {
  "code": "SA",
  "name": "Saudi Arabia"
}, {
  "code": "SE",
  "name": "Sweden"
}, {
  "code": "SD",
  "name": "Sudan"
}, {
  "code": "DO",
  "name": "Dominican Rep."
}, {
  "code": "DJ",
  "name": "Djibouti"
}, {
  "code": "DK",
  "name": "Denmark"
}, {
  "code": "DE",
  "name": "Germany"
}, {
  "code": "YE",
  "name": "Yemen"
}, {
  "code": "DZ",
  "name": "Algeria"
}, {
  "code": "US",
  "name": "United States"
}, {
  "code": "UY",
  "name": "Uruguay"
}, {
  "code": "LB",
  "name": "Lebanon"
}, {
  "code": "LA",
  "name": "Lao PDR"
}, {
  "code": "TW",
  "name": "Taiwan"
}, {
  "code": "TT",
  "name": "Trinidad and Tobago"
}, {
  "code": "TR",
  "name": "Turkey"
}, {
  "code": "LK",
  "name": "Sri Lanka"
}, {
  "code": "LV",
  "name": "Latvia"
}, {
  "code": "LT",
  "name": "Lithuania"
}, {
  "code": "LU",
  "name": "Luxembourg"
}, {
  "code": "LR",
  "name": "Liberia"
}, {
  "code": "LS",
  "name": "Lesotho"
}, {
  "code": "TH",
  "name": "Thailand"
}, {
  "code": "TF",
  "name": "Fr. S. Antarctic Lands"
}, {
  "code": "TG",
  "name": "Togo"
}, {
  "code": "TD",
  "name": "Chad"
}, {
  "code": "LY",
  "name": "Libya"
}, {
  "code": "AE",
  "name": "United Arab Emirates"
}, {
  "code": "VE",
  "name": "Venezuela"
}, {
  "code": "AF",
  "name": "Afghanistan"
}, {
  "code": "IQ",
  "name": "Iraq"
}, {
  "code": "IS",
  "name": "Iceland"
}, {
  "code": "IR",
  "name": "Iran"
}, {
  "code": "AM",
  "name": "Armenia"
}, {
  "code": "AL",
  "name": "Albania"
}, {
  "code": "AO",
  "name": "Angola"
}, {
  "code": "AR",
  "name": "Argentina"
}, {
  "code": "AU",
  "name": "Australia"
}, {
  "code": "AT",
  "name": "Austria"
}, {
  "code": "IN",
  "name": "India"
}, {
  "code": "TZ",
  "name": "Tanzania"
}, {
  "code": "AZ",
  "name": "Azerbaijan"
}, {
  "code": "IE",
  "name": "Ireland"
}, {
  "code": "ID",
  "name": "Indonesia"
}, {
  "code": "UA",
  "name": "Ukraine"
}, {
  "code": "QA",
  "name": "Qatar"
}, {
  "code": "MZ",
  "name": "Mozambique"
}];

class TeamAttackInfluencerFilter extends React.Component {
  constructor() {
    super();
    this.state = {
      map: false
    };
    this.toggleMap = this.toggleMap.bind(this);
  }

  toggleMap() {
    let component = this;
    return function () {
      component.setState({
        map: !component.state.map
      });
    };
  }

  render() {
    let getTranslation = key => {
      return "TeamAttack.edit." + key;
    };

    let {
      value,
      view,
      search,
      filters,
      updateFilter,
      updateValue,
      updateMembers,
      setRefetch,
      teamAttacks
    } = this.props;

    if (this.state.map) {
      return React.createElement(ConquerMap, {
        close: this.toggleMap(""),
        onChange: () => {},
        value: filters.influencer_country,
        countries: countries,
        title: "Choose Countries"
      });
    }

    return React.createElement("div", null, React.createElement("div", {
      className: "row influencer-filter"
    }, React.createElement(FilterControls, {
      values: filters,
      teamAttacks: teamAttacks,
      updateFilter: updateFilter,
      toggleMap: this.toggleMap
    }), React.createElement(FilterListContainer, {
      filters: filters,
      view: view,
      search: search,
      updateValue: updateValue,
      updateFilter: updateFilter,
      setRefetch: setRefetch,
      updateMembers: updateMembers,
      value: value
    })));
  }

}

module.exportDefault(TeamAttackInfluencerFilter);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"list.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/teamattack/ui/components/edit/filter/list.jsx                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 1);
let ListNoResults;
module.watch(require("./no-results"), {
  default(v) {
    ListNoResults = v;
  }

}, 2);
let AccountItem;
module.watch(require("./account-item/container"), {
  default(v) {
    AccountItem = v;
  }

}, 3);

class FilterList extends React.Component {
  constructor() {
    super();
    this.state = {
      value: []
    };
    this.toggleAccount = this.toggleAccount.bind(this);
  }

  componentWillMount() {
    this.setState({
      selected: this.props.value
    });
  }

  toggleAccount(account) {
    let component = this;
    return function () {
      let newState = component.state;
      let indexOfAccount = newState.value.indexOf(account);

      if (indexOfAccount === -1) {
        newState.value.push(account);
      } else {
        newState.value.splice(indexOfAccount, 1);
      }

      component.setState(newState);
      component.props.updateMembers(newState.value);
    };
  }

  filterAccounts(data, search) {
    if (!search) return data;
    return data.filter(o => {
      let {
        name,
        lastName,
        country
      } = o.information;
      let regEx = new RegExp(search.toLowerCase());
      return name.toLowerCase().match(regEx) || lastName.toLowerCase().match(regEx) || o.network.toLowerCase().match(regEx) || country.toLowerCase().match(regEx);
    });
  }

  render() {
    let {
      data,
      value,
      view,
      search,
      updateFilter,
      updateValue,
      filters
    } = this.props;

    if (data.length === 0) {
      return React.createElement(ListNoResults, null);
    }

    let getTranslation = key => {
      return "TeamAttack.edit.search.results.results.controls." + key;
    };

    data = this.filterAccounts(data, search);
    return React.createElement("div", {
      className: "influencer-list col-md-9"
    }, React.createElement("div", {
      className: "row controls"
    }, React.createElement("div", {
      className: "col-md-3 col-md-offset-3"
    }, React.createElement("ul", {
      className: "pull-right"
    }, React.createElement("li", {
      onClick: () => updateValue("view")("table")
    }, React.createElement("i", {
      className: "fa fa-bars",
      "aria-hidden": "true"
    })), React.createElement("li", {
      onClick: () => updateValue("view")("list")
    }, React.createElement("i", {
      className: "fa fa-table",
      "aria-hidden": "true"
    })))), React.createElement("div", {
      className: "col-md-3"
    }, React.createElement("input", {
      type: "text",
      value: search,
      onChange: updateValue("search"),
      className: "form-control",
      placeholder: I18n.t(getTranslation("search"))
    })), React.createElement("div", {
      className: "col-md-3"
    }, React.createElement("select", {
      className: "form-control",
      onChange: updateFilter("results_order")
    }, React.createElement("option", {
      value: "higherPrice"
    }, I18n.t(getTranslation("filters.higherPrice"))), React.createElement("option", {
      value: "lowestPrice"
    }, I18n.t(getTranslation("filters.lowestPrice"))), React.createElement("option", {
      value: "higherEngagement"
    }, I18n.t(getTranslation("filters.higherEngagement"))), React.createElement("option", {
      value: "lowerEngagement"
    }, I18n.t(getTranslation("filters.lowerEngagement")))))), view === "list" && React.createElement("div", {
      className: "row"
    }, data.map((account, i) => React.createElement(AccountItem, {
      account: account,
      view: view,
      toggleAccount: this.toggleAccount,
      value: value,
      key: i,
      filters: filters
    }))), view === "table" && React.createElement("table", {
      className: "table list-table",
      style: {
        width: 2000
      }
    }, React.createElement("thead", null, React.createElement("tr", null, React.createElement("th", {
      colSpan: 17,
      className: "tl"
    }, "Perfil"), React.createElement("th", {
      colSpan: 6,
      className: "tl"
    }, "Audiencia")), React.createElement("tr", null, React.createElement("th", null, "Red Social"), React.createElement("th", {
      width: 200
    }, "Influencer"), React.createElement("th", null, "Pa\xEDs"), React.createElement("th", null, "Ciudad"), React.createElement("th", null, "Idiomas"), React.createElement("th", null, "Edad"), React.createElement("th", null, "Genero"), React.createElement("th", null, "Preferencia Sexual"), React.createElement("th", null, "Estado Civil"), React.createElement("th", null, "Likes"), React.createElement("th", null, "???"), React.createElement("th", null, "Views"), React.createElement("th", null, "???"), React.createElement("th", null, "Tipos de Acci\xF3n"), React.createElement("th", null, "Categorias"), React.createElement("th", null, "Especialidades"), React.createElement("th", null, "Costo"), React.createElement("th", null, "Paises"), React.createElement("th", null, "Ciudades"), React.createElement("th", null, "Genero"), React.createElement("th", null, "Idiomas"), React.createElement("th", null, "Edad"), React.createElement("th", null, "SES/NSE"))), React.createElement("tbody", null, data.map((account, i) => React.createElement(AccountItem, {
      account: account,
      view: view,
      filters: filters,
      toggleAccount: this.toggleAccount,
      value: value,
      key: i
    })))));
  }

}

module.exportDefault(FilterList);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"no-results.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/teamattack/ui/components/edit/filter/no-results.jsx                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 1);

class ListNoResults extends React.Component {
  render() {
    let getTranslation = key => {
      return "TeamAttack.edit.search.results.empty." + key;
    };

    return React.createElement("div", {
      className: "no-results"
    }, React.createElement("div", {
      className: "content"
    }, React.createElement("i", {
      className: "icon wb-alert-circle"
    }), React.createElement("h3", null, React.createElement(Translate, {
      value: getTranslation("message")
    }))));
  }

}

module.exportDefault(ListNoResults);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"members-input.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/teamattack/ui/components/edit/members-input.jsx                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/objectSpread"));

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let TeamAttackInfluencerFilter;
module.watch(require("./filter/layout"), {
  default(v) {
    TeamAttackInfluencerFilter = v;
  }

}, 1);

class TeamAttackMembers extends React.Component {
  constructor() {
    super();
    this.state = {
      view: "list",
      search: "",
      filters: {
        action_type: "post",
        results_order: "higherPrice",
        influencer_networks: ["facebook", "twitter", "instagram"],
        influencer_gender: "all",
        influencer_age: {
          min: 18,
          max: 100
        },
        influencer_country: ["Mexico"],
        influencer_languages: null,
        influencer_sexualOrientation: "all",
        influencer_city: [],
        influencer_likes: {
          min: 0,
          max: 50000000
        },
        influencer_followers: {
          min: 0,
          max: 50000000
        },
        influencer_views: {
          min: 0,
          max: 50000000
        },
        influencer_engagement: {
          min: 0,
          max: 50000000
        },
        audience_gender: "all",
        audience_age: {
          min: 18,
          max: 100
        },
        audience_nrssg: "all",
        audience_country: ["Mexico"]
      }
    };
    this.updateMembers = this.updateMembers.bind(this);
    this.updateFilter = this.updateFilter.bind(this);
    this.updateValue = this.updateValue.bind(this);
    this.setRefetch = this.setRefetch.bind(this);
    this.save = this.save.bind(this);
  }

  updateValue(key) {
    let component = this;
    return function (val) {
      if (val.target) {
        val = val.target.value;
      }

      let newState = (0, _objectSpread2.default)({}, component.state);
      newState[key] = val;
      component.setState(newState);
    };
  }

  updateFilter(key) {
    let component = this;
    return function (e) {
      let val = e;
      let newState = component.state;

      if (e.target) {
        val = e.target.value;
      }

      newState.filters[key] = val;
      component.setState(newState);

      if (component.refetch) {
        component.refetch(component.state.filters);
      }
    };
  }

  updateMembers(members) {
    let {
      input: {
        onChange
      }
    } = this.props;
    onChange(members);
  }

  save() {
    this.props.onSubmit(this.state.values);
    this.props.close();
  }

  componentWillMount() {
    let {
      input: {
        value
      }
    } = this.props;

    if (value) {
      this.setState({
        values: Object.assign({}, value)
      });
    }
  }

  setRefetch(refetch) {
    this.refetch = refetch;
  }

  render() {
    let {
      input: {
        value
      },
      teamAttacks
    } = this.props;
    let {
      view,
      search
    } = this.state;
    return React.createElement(TeamAttackInfluencerFilter, {
      filters: this.state.filters,
      setRefetch: this.setRefetch,
      updateFilter: this.updateFilter,
      updateValue: this.updateValue,
      value: value,
      view: view,
      search: search,
      teamAttacks: teamAttacks,
      updateMembers: this.updateMembers
    });
  }

}

module.exportDefault(TeamAttackMembers);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"list-table.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/teamattack/ui/components/list-table.jsx                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let SocialAvatar;
module.watch(require("../../../core/ui/components/social-avatar"), {
  default(v) {
    SocialAvatar = v;
  }

}, 1);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 2);
let BootstrapTable, TableHeaderColumn;
module.watch(require("react-bootstrap-table"), {
  BootstrapTable(v) {
    BootstrapTable = v;
  },

  TableHeaderColumn(v) {
    TableHeaderColumn = v;
  }

}, 3);
let Link;
module.watch(require("react-router"), {
  Link(v) {
    Link = v;
  }

}, 4);

let _;

module.watch(require("lodash"), {
  default(v) {
    _ = v;
  }

}, 5);

let getTranslation = key => {
  return "TeamAttack.list." + key;
};

const renderLink = function (cell, row) {
  // String example
  return React.createElement(Link, {
    to: "/team-attack/edit/".concat(row._id)
  }, React.createElement("i", {
    className: "icon wb-edit",
    "aria-hidden": "true"
  }));
};

const renderType = function (cell, row) {
  // String example
  return cell ? React.createElement(Translate, {
    value: getTranslation("table.helpers.type." + cell)
  }) : "-";
};

const renderMembers = function (cell, row) {
  return React.createElement("div", null, cell.map((a, i) => React.createElement("div", {
    className: "icon",
    key: i
  }, React.createElement(SocialAvatar, {
    avatar: a.information.avatar,
    network: a.network,
    name: a.information.name,
    size: "75",
    type: a.information.type
  }))));
};

const renderNetworks = function (cell, row) {
  // String example
  return React.createElement("div", null, _.uniq(cell.map(m => m.network)).map((a, i) => React.createElement("div", {
    className: "icon",
    key: i
  }, React.createElement("i", {
    className: "social-icon " + a
  }))));
};

const renderName = function (cell, row) {
  // String example
  return React.createElement(Link, {
    to: "/team-attack/edit/" + row._id
  }, cell);
};

class TeamAttackList extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      sortName: undefined,
      sortOrder: undefined
    };
    this.onSortChange = this.onSortChange.bind(this);
  }

  onSortChange(sortName, sortOrder) {
    this.setState({
      sortName,
      sortOrder
    });
  }

  render() {
    let {
      data,
      deleteTeamAttack
    } = this.props;
    const options = {
      sortName: this.state.sortName,
      sortOrder: this.state.sortOrder,
      onSortChange: this.onSortChange,
      noDataText: I18n.t(getTranslation("table.empty"))
    };

    const renderDelete = function (cell, row) {
      // String example
      return React.createElement("div", {
        style: {
          color: "red",
          cursor: "pointer"
        },
        onClick: deleteTeamAttack(row)
      }, "-");
    };

    data = this.props.data.map((t, index) => Object.assign({}, t, {
      index: index + 1
    }));
    return React.createElement("div", null, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-12"
    }, React.createElement("div", {
      className: "btn btn-primary table-button",
      onClick: this.props.new
    }, React.createElement(Translate, {
      value: getTranslation("new")
    })))), React.createElement("div", {
      className: "ibol-table"
    }, React.createElement(BootstrapTable, {
      data: data,
      options: options,
      pagination: true,
      search: true,
      searchPlaceholder: I18n.t(getTranslation("table.search"))
    }, React.createElement(TableHeaderColumn, {
      dataFormat: renderDelete,
      dataAlign: "center",
      width: "60px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.delete")
    })), React.createElement(TableHeaderColumn, {
      isKey: true,
      dataField: "index",
      dataAlign: "center",
      width: "60px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.index")
    })), React.createElement(TableHeaderColumn, {
      dataField: "name",
      dataSort: true,
      width: "300px",
      dataFormat: renderName
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.name")
    })), React.createElement(TableHeaderColumn, {
      dataField: "members",
      dataFormat: renderNetworks
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.networks")
    })), React.createElement(TableHeaderColumn, {
      dataField: "members",
      dataFormat: renderMembers
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.members")
    })))));
  }

}

module.exportDefault(TeamAttackList);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"teamattack-create.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/teamattack/ui/components/teamattack-create.jsx                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 1);
let Field, reduxForm;
module.watch(require("redux-form"), {
  Field(v) {
    Field = v;
  },

  reduxForm(v) {
    reduxForm = v;
  }

}, 2);

class NewTeamAttack extends React.Component {
  render() {
    const {
      handleSubmit,
      pristine,
      reset,
      submitting
    } = this.props;

    let getTranslation = key => {
      return "TeamAttack.new." + key;
    };

    return React.createElement("form", {
      onSubmit: handleSubmit
    }, React.createElement("h2", null, React.createElement(Translate, {
      value: getTranslation("title")
    })), React.createElement("div", {
      className: "padding-20"
    }, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-12"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("name")
    })), React.createElement(Field, {
      component: "input",
      name: "name",
      className: "form-control"
    })))), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-12"
    }, React.createElement("button", {
      type: "submit",
      className: "btn btn-primary pull-right"
    }, React.createElement(Translate, {
      value: getTranslation("button")
    }))))));
  }

}

NewTeamAttack = reduxForm({
  form: 'teamAttack-create'
})(NewTeamAttack);
module.exportDefault(NewTeamAttack);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"containers":{"edit.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/teamattack/ui/containers/edit.jsx                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/taggedTemplateLiteral"));

function _templateObject() {
  const data = (0, _taggedTemplateLiteral2.default)(["\n    query ($_id: String!){\n        teamAttack(_id:$_id){\n            _id,\n            name,\n            type,\n            owner {\n                _id\n            },\n            members {\n                _id\n                suspended\n                type\n                active\n                delete\n                network\n                groups\n                campaignsCount\n            }\n        }\n        teamAttacksOwn{\n            _id,\n            owner {\n                _id\n            },\n            members {\n                _id,\n                network,\n                information{\n                    name,\n                    lastName,\n                    avatar,\n                    birthDate,\n                    country,\n                    gender\n                }\n            },\n            name,\n            type\n        }\n    }\n"]);

  _templateObject = function () {
    return data;
  };

  return data;
}

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let graphql;
module.watch(require("react-apollo"), {
  graphql(v) {
    graphql = v;
  }

}, 1);
let connect;
module.watch(require("react-redux"), {
  connect(v) {
    connect = v;
  }

}, 2);
let Loading;
module.watch(require("../../../core/ui/components/loading"), {
  default(v) {
    Loading = v;
  }

}, 3);
let Saving;
module.watch(require("../../../core/ui/components/saving"), {
  default(v) {
    Saving = v;
  }

}, 4);
let EditTeamAttack;
module.watch(require("../layouts/edit"), {
  default(v) {
    EditTeamAttack = v;
  }

}, 5);
let createContainer;
module.watch(require("meteor/react-meteor-data"), {
  createContainer(v) {
    createContainer = v;
  }

}, 6);
let gql;
module.watch(require("graphql-tag"), {
  default(v) {
    gql = v;
  }

}, 7);
let notie;
module.watch(require("notie"), {
  default(v) {
    notie = v;
  }

}, 8);
let I18n;
module.watch(require("react-redux-i18n"), {
  I18n(v) {
    I18n = v;
  }

}, 9);

let getTranslation = key => {
  return "Campaigns.edit.messages." + key;
};

class EditContainer extends React.Component {
  constructor() {
    super();
    this.state = {
      saving: "saved"
    };
    this.saveCampaign = this.saveCampaign.bind(this);
  }

  componentDidMount() {
    this.savedData = JSON.stringify(this.props.teamAttack);
    let component = this;
    this.saveInterval = setInterval(function () {
      if (component.props.form && component.props.form.values) {
        component.saveCampaign(component.props.form.values, true);
      }
    }, 5000);
  }

  componentWillUnmount() {
    clearInterval(this.saveInterval);
  }

  saveCampaign(data, silent) {
    if (silent && typeof silent === "boolean") {
      silent = true;
    } else {
      silent = false;
    }

    if (silent && this.savedData === JSON.stringify(data)) {
      this.setState({
        saving: "saved"
      });
      return;
    }

    this.setState({
      saving: "saving"
    });
    this.savedData = JSON.stringify(data);
    let component = this;
    Meteor.call("teamAttack-save", data, function (err, res) {
      if (err) {
        if (err.error === 500) {
          err.error = "Failed to create post.";
        }

        console.log("ERROR", err);
        notie.alert(3, err.reason || err.error, 3);
        return;
      }

      component.setState({
        saving: "saved"
      });

      if (!silent) {
        notie.alert(1, I18n.t(getTranslation("saved")), 3);
      } //console.log("SERVER_SAVE_POSTS_RESPONSE",res);

    });
  }

  render() {
    let {
      teamAttack,
      teamAttacksOwn,
      loading,
      history,
      refetch
    } = this.props;
    teamAttacksOwn = teamAttacksOwn || [];
    let teamAttacks = teamAttacksOwn.filter(t => t.id !== teamAttack._id);
    return React.createElement("div", null, loading ? React.createElement(Loading, null) : React.createElement(EditTeamAttack, {
      initialValues: teamAttack,
      refetch: refetch,
      history: history,
      teamAttacks: teamAttacks,
      onSubmit: this.saveCampaign
    }), React.createElement(Saving, {
      state: this.state.saving
    }));
  }

}

const QUERY = gql(_templateObject());
const withData = graphql(QUERY, {
  props: (_ref) => {
    let {
      data: {
        error,
        loading,
        teamAttack,
        teamAttacksOwn,
        refetch
      }
    } = _ref;
    //console.log("TA_ERROR",error);
    if (loading) return {
      loading: true
    };
    if (error) return {
      hasErrors: true
    };
    return {
      loading,
      teamAttack,
      teamAttacksOwn,
      refetch
    };
  },
  options: ownProps => ({
    variables: {
      _id: ownProps.params.teamAttackID,
      query: ""
    }
  })
});
const EditContainerWithData = withData(EditContainer);
module.exportDefault(connect(state => {
  return {
    form: state.form["teamAttack-edit"]
  };
})(EditContainerWithData));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"list.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/teamattack/ui/containers/list.jsx                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/taggedTemplateLiteral"));

function _templateObject() {
  const data = (0, _taggedTemplateLiteral2.default)(["\n    query{\n        teamAttacksOwn{\n            _id,\n            owner {\n                _id\n            },\n            members {\n                _id,\n                network,\n                information{\n                    name,\n                    lastName,\n                    avatar,\n                    birthDate,\n                    country,\n                    gender\n                }\n            },\n            name,\n            type\n        }\n    }\n"]);

  _templateObject = function () {
    return data;
  };

  return data;
}

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let graphql;
module.watch(require("react-apollo"), {
  graphql(v) {
    graphql = v;
  }

}, 1);
let Loading;
module.watch(require("../../../core/ui/components/loading"), {
  default(v) {
    Loading = v;
  }

}, 2);
let List;
module.watch(require("../layouts/list"), {
  default(v) {
    List = v;
  }

}, 3);
let createContainer;
module.watch(require("meteor/react-meteor-data"), {
  createContainer(v) {
    createContainer = v;
  }

}, 4);
let gql;
module.watch(require("graphql-tag"), {
  default(v) {
    gql = v;
  }

}, 5);

class ListContainer extends React.Component {
  render() {
    return React.createElement("div", null, this.props.loading ? React.createElement(Loading, null) : React.createElement(List, {
      data: this.props.teamAttacksOwn,
      refetch: this.props.refetch,
      history: this.props.history
    }));
  }

}

const QUERY = gql(_templateObject());
const withData = graphql(QUERY, {
  props: (_ref) => {
    let {
      data: {
        error,
        loading,
        teamAttacksOwn,
        refetch
      }
    } = _ref;
    if (loading) return {
      loading: true
    };
    if (error) return {
      hasErrors: true
    };
    return {
      loading,
      teamAttacksOwn,
      refetch
    };
  },
  options: ownProps => ({
    pollInterval: 150000
  })
});
const ListContainerWithData = withData(ListContainer); // This container brings in Tracker-enabled Meteor data

const ListContainerWithUserId = createContainer(() => {
  return {
    userId: Meteor.userId() || ''
  };
}, ListContainerWithData);
module.exportDefault(ListContainerWithUserId);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"team-attack-filter.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/teamattack/ui/containers/team-attack-filter.jsx                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/taggedTemplateLiteral"));

function _templateObject() {
  const data = (0, _taggedTemplateLiteral2.default)(["\nquery (\n    $results_order: String,\n    $action_type: String,\n    $influencer_networks: [String]!,\n    $influencer_gender: String!, \n    $influencer_age: RangeQuery!, \n    $influencer_country: [String]!,\n    $influencer_languages: String,\n    $influencer_city: [String]!,\n    $influencer_likes: RangeQuery!,\n    $influencer_followers: RangeQuery!,\n    $influencer_views: RangeQuery!,\n    $influencer_engagement: RangeQuery!,\n    $audience_gender: String!, \n    $audience_age: RangeQuery!, \n    $audience_nrssg: String!, \n    $audience_country: [String]!\n){\n  accountsTeamAttack(\n      action_type:$action_type,\n      results_order: $results_order,\n      influencer_networks:$influencer_networks,\n      influencer_gender:$influencer_gender,\n      influencer_age:$influencer_age,\n      influencer_country:$influencer_country,\n      influencer_languages:$influencer_languages,\n      influencer_city:$influencer_city,\n      influencer_likes:$influencer_likes,\n      influencer_followers:$influencer_followers,\n      influencer_views:$influencer_views,\n      influencer_engagement:$influencer_engagement,\n      audience_gender:$audience_gender,\n      audience_age:$audience_age,\n      audience_nrssg:$audience_nrssg,\n      audience_country:$audience_country\n  ){\n\t\t_id,\n    network,\n      information {\n          name\n          lastName\n          avatar\n          gender\n          birthDate\n          country\n          city\n          maritalStatus\n          forbiddenSubjects\n          sexualOrientation\n          likes\n          language\n          description\n          categories\n          specialties\n          urls\n      },\n      statistics {\n          retweets\n          retweetsPerPost\n          favorites\n          favoritesPerPost\n          comments\n          commentsPerPost\n          likes\n          likesPerPost\n          shares\n          sharesPerPost\n          engagement\n          followers\n          following\n          profileLikes\n          posts\n          postsPerDay\n      },\n    pricing {\n        post\n        share\n        partnership\n        ambassador,\n        profilePicture,\n        coverPhoto,\n        noPostHour,\n        noPostDay,\n    }\n  }\n}\n"]);

  _templateObject = function () {
    return data;
  };

  return data;
}

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let graphql;
module.watch(require("react-apollo"), {
  graphql(v) {
    graphql = v;
  }

}, 1);
let Loading;
module.watch(require("../../../core/ui/components/loading"), {
  default(v) {
    Loading = v;
  }

}, 2);
let FilterList;
module.watch(require("../components/edit/filter/list"), {
  default(v) {
    FilterList = v;
  }

}, 3);
let createContainer;
module.watch(require("meteor/react-meteor-data"), {
  createContainer(v) {
    createContainer = v;
  }

}, 4);
let gql;
module.watch(require("graphql-tag"), {
  default(v) {
    gql = v;
  }

}, 5);

class TeamAttackFilter extends React.Component {
  render() {
    let {
      value,
      view,
      search,
      updateFilter,
      updateValue,
      updateMembers,
      accountsTeamAttack,
      setRefetch,
      filters
    } = this.props;
    setRefetch(this.props.refetch);
    let data = accountsTeamAttack || [];
    return React.createElement("div", null, this.props.loading ? React.createElement(Loading, null) : React.createElement(FilterList, {
      data: data,
      filters: filters,
      value: value,
      view: view,
      search: search,
      updateFilter: updateFilter,
      updateValue: updateValue,
      updateMembers: updateMembers
    }));
  }

}
/*
results_order: "higherPrice",
                influencer_networks: ["facebook"],
                influencer_gender: "all",
                influencer_age: {min: 18, max: 100},
                influencer_country: ["Mexico"],
                influencer_languages: null,
                influencer_city: [],
                influencer_likes: {min: 0, max: 50000000},
                influencer_followers: {min: 0, max: 50000000},
                influencer_views: {min: 0, max: 50000000},
                influencer_engagement: {min: 0, max: 50000000},
                audience_gender: "all",
                audience_age: {min: 18, max: 100},
                audience_nrssg: "all",
                audience_country: ["Mexico"]
* */


const QUERY = gql(_templateObject());
const withData = graphql(QUERY, {
  props: (_ref) => {
    let {
      data: {
        error,
        loading,
        accountsTeamAttack,
        refetch
      }
    } = _ref;
    if (loading) return {
      loading: true
    };
    if (error) return {
      hasErrors: true
    };
    return {
      loading,
      accountsTeamAttack,
      refetch
    };
  },
  options: ownProps => ({
    pollInterval: 150000,
    variables: ownProps.filters
  })
});
const TeamAttackFilterrWithData = withData(TeamAttackFilter);
module.exportDefault(TeamAttackFilterrWithData);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"layouts":{"edit.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/teamattack/ui/layouts/edit.jsx                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let reduxForm, Field;
module.watch(require("redux-form"), {
  reduxForm(v) {
    reduxForm = v;
  },

  Field(v) {
    Field = v;
  }

}, 1);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 2);
let TeamAttackMembers;
module.watch(require("../components/edit/members-input"), {
  default(v) {
    TeamAttackMembers = v;
  }

}, 3);

class EditTeamAttack extends React.Component {
  render() {
    let getTranslation = key => {
      return "TeamAttack.edit." + key;
    };

    const {
      handleSubmit,
      pristine,
      reset,
      submitting,
      teamAttacks
    } = this.props;
    return React.createElement("form", {
      onSubmit: handleSubmit
    }, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-12"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "campaignName"
    }, React.createElement(Translate, {
      value: getTranslation("form.name")
    })), React.createElement(Field, {
      component: "input",
      name: "name",
      className: "form-control"
    })))), React.createElement(Field, {
      component: TeamAttackMembers,
      name: "members",
      teamAttacks: teamAttacks
    }));
  }

}

EditTeamAttack = reduxForm({
  form: 'teamAttack-edit',
  enableReinitialize: true
})(EditTeamAttack);
module.exportDefault(EditTeamAttack);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"list.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/teamattack/ui/layouts/list.jsx                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Modal;
module.watch(require("react-modal"), {
  default(v) {
    Modal = v;
  }

}, 1);
let swal;
module.watch(require("sweetalert2"), {
  default(v) {
    swal = v;
  }

}, 2);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 3);
let ListEmpty;
module.watch(require("../../../core/ui/components/list-empty"), {
  default(v) {
    ListEmpty = v;
  }

}, 4);
let ListTable;
module.watch(require("../components/list-table"), {
  default(v) {
    ListTable = v;
  }

}, 5);
let NewTeamAttack;
module.watch(require("../components/teamattack-create"), {
  default(v) {
    NewTeamAttack = v;
  }

}, 6);
let notie;
module.watch(require("notie"), {
  default(v) {
    notie = v;
  }

}, 7);

let getTranslation = key => {
  return "TeamAttack." + key;
};

class List extends React.Component {
  constructor() {
    super();
    this.state = {
      modalIsOpen: false,
      list: [],
      current: null
    };
    this.openModal = this.openModal.bind(this);
    this.closeModal = this.closeModal.bind(this);
    this.onSubmitForm = this.onSubmitForm.bind(this);
    this.deleteTeamAttack = this.deleteTeamAttack.bind(this);
  }

  onSubmitForm(data) {
    let component = this;
    Meteor.call("teamAttack-create", data, function (err, res) {
      if (err) {
        if (err.error === 500) {
          err.error = I18n.t(getTranslation("list.messages.error"));
        }

        console.log("ERROR", err);
        notie.alert(3, err.reason || err.error, 3);
        return;
      }

      component.props.refetch();
      component.closeModal();
      component.props.history.push("/team-attack/edit/" + res);
    });
  }

  openModal() {
    this.setState({
      modalIsOpen: true
    });
  }

  deleteTeamAttack(element) {
    let component = this;
    return function () {
      swal({
        title: I18n.t(getTranslation("list.delete.title")),
        text: I18n.t(getTranslation("list.delete.description")),
        type: 'warning',
        showCancelButton: true,
        cancelButtonText: I18n.t(getTranslation("list.delete.cancel")),
        confirmButtonText: I18n.t(getTranslation("list.delete.confirm"))
      }).then(function () {
        Meteor.call("teamAttack-delete", element, function (err, res) {
          if (err) {
            notie.alert(3, I18n.t(getTranslation("list.delete.messages.error")), 3);
            return;
          }

          notie.alert(1, I18n.t(getTranslation("list.delete.messages.deleted")), 3);
          component.props.refetch();
        });
      });
    };
  }

  closeModal() {
    this.setState({
      modalIsOpen: false
    });
  }

  render() {
    let list = this.props.data || [];
    return React.createElement("div", {
      className: "content-padding-30"
    }, list.length ? React.createElement(ListTable, {
      new: this.openModal,
      data: list,
      deleteTeamAttack: this.deleteTeamAttack
    }) : React.createElement(ListEmpty, {
      message: React.createElement(Translate, {
        value: getTranslation("empty.message")
      }),
      button: React.createElement(Translate, {
        value: getTranslation("empty.button")
      }),
      callback: this.openModal
    }), React.createElement(Modal, {
      isOpen: this.state.modalIsOpen,
      onRequestClose: this.closeModal,
      className: "app-modal xl-large",
      contentLabel: "Example Modal"
    }, React.createElement("button", {
      className: "close",
      onClick: this.closeModal
    }, React.createElement("i", {
      className: "icon wb-close-mini",
      "aria-hidden": "true"
    })), React.createElement(NewTeamAttack, {
      onSubmit: this.onSubmitForm
    })));
  }

}

module.exportDefault(List);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"teamattack.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/teamattack/ui/layouts/teamattack.jsx                                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class TeamAttack extends React.Component {
  render() {
    let filter = obj => {
      let newProps = {};
      let key;

      for (key in obj) {
        if (key !== "children") {
          newProps[key] = obj[key];
        }
      }

      return newProps;
    };

    return React.createElement("div", {
      className: "page-content container-fluid"
    }, React.cloneElement(this.props.children, filter(this.props)));
  }

}

module.exportDefault(TeamAttack);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"actions":{"bundle.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/teamattack/actions/bundle.jsx                                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let Actions = {};
module.exportDefault(Actions);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"client":{"bundle.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/teamattack/client/bundle.jsx                                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let Routes;
module.watch(require("./routes"), {
  default(v) {
    Routes = v;
  }

}, 0);
let Reducers;
module.watch(require("../reducers/bundle"), {
  default(v) {
    Reducers = v;
  }

}, 1);
let Actions;
module.watch(require("../actions/bundle"), {
  default(v) {
    Actions = v;
  }

}, 2);
let Translations;
module.watch(require("./translations"), {
  default(v) {
    Translations = v;
  }

}, 3);
module.exportDefault({
  reducers: Reducers,
  routes: Routes,
  actions: Actions,
  translations: Translations
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"routes.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/teamattack/client/routes.jsx                                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Route, IndexRoute;
module.watch(require("react-router"), {
  Route(v) {
    Route = v;
  },

  IndexRoute(v) {
    IndexRoute = v;
  }

}, 1);
let TeamAttack;
module.watch(require("../ui/layouts/teamattack"), {
  default(v) {
    TeamAttack = v;
  }

}, 2);
let List;
module.watch(require("../ui/containers/list"), {
  default(v) {
    List = v;
  }

}, 3);
let Edit;
module.watch(require("../ui/containers/edit"), {
  default(v) {
    Edit = v;
  }

}, 4);
module.exportDefault(React.createElement(Route, {
  path: "/team-attack",
  component: TeamAttack
}, React.createElement(IndexRoute, {
  component: List
}), React.createElement(Route, {
  path: "edit/:teamAttackID",
  component: Edit
})));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"translations.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/teamattack/client/translations.jsx                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.exportDefault({
  en: {
    menu: "TeamAttack!",
    empty: {
      message: "You don't have a TeamAttack yet",
      button: "New TeamAttack"
    },
    list: {
      new: "New TeamAttack",
      title: "My Teams",
      table: {
        headers: {
          more: "View More",
          name: "Name",
          networks: "Networks",
          members: "Members",
          date: "Date",
          list: "Team Attack!",
          type: "Type",
          delete: "Delete"
        },
        helpers: {
          both: "Both",
          brand: "Brand",
          influencer: "Influencer",
          type: {
            post: "Post",
            profilePicture: "Profile Picture",
            coverPhoto: "Cover Photo",
            noPostHour: "Hour  Without Posting",
            noPostDay: "Day Without Posting",
            share: "Share Post"
          }
        },
        search: "Search",
        empty: "No Results"
      },
      delete: {
        title: "Are you sure?",
        description: "You won't be able to revert this!",
        confirm: "Yes, delete it.",
        cancel: "Cancel",
        messages: {
          deleted: "TeamAttack Deleted",
          error: "There was an error deleting your TeamAttack"
        }
      },
      messages: {
        saved: "TeamAttack Saved",
        error: "There was an error saving your TeamAttack"
      }
    },
    edit: {
      meta: {
        type: {
          label: "What type of Team Attack! are you looking for?",
          values: {
            collaborators: "Collaborators",
            external: "External"
          }
        },
        name: "What's the name of your Team Attack?",
        members: "Members of your Team Attack!:"
      },
      search: {
        panel: {
          influencer: {
            title: "Influencer",
            gender: {
              label: "Gender",
              values: {
                both: "Both",
                male: "Male",
                female: "Female"
              }
            },
            age: {
              label: "Age",
              helper: "years"
            },
            languages: {
              label: "Languages"
            },
            sexualOrientation: {
              label: "Sexual Orientation",
              values: {
                heterosexual: "Heterosexual",
                homosexual: "Homosxual",
                bisexual: "Bisexual",
                transexual: "Transexual"
              }
            },
            maritalStatus: {
              label: "Marital Status",
              values: {
                single: "Single",
                married: "Married"
              }
            },
            country: {
              label: "Country"
            },
            city: {
              label: "City"
            },
            actions: {
              label: "Action"
            },
            categories: {
              label: "Categories"
            },
            specialties: {
              label: "Specialties"
            },
            followers: {
              label: "Followers",
              helpers: {
                k: "K",
                m: "M"
              }
            },
            likes: {
              label: "Likes"
            },
            views: {
              label: "Views"
            },
            engagement: {
              label: "Engagement"
            },
            action: {
              label: "Action Type",
              values: {
                post: "Post",
                profilePicture: "Profile Picture",
                coverPhoto: "Cover Photo",
                noPostHour: "Hour  Without Posting",
                noPostDay: "Day Without Posting",
                share: "Share Post"
              }
            },
            all: "All"
          },
          audience: {
            title: "Audience",
            age: {
              label: "Age",
              helper: "years"
            },
            country: {
              label: "Country"
            },
            city: {
              label: "City"
            },
            language: {
              label: "Language"
            },
            gender: {
              label: "Gender",
              values: {
                male: "Mostly Women",
                female: "Mostly Men",
                split: "Equally Men & Women"
              }
            },
            nrssg: {
              label: "Socioeconomic Status",
              values: {
                a: "A",
                b: "B",
                c1: "C1",
                c2: "C2",
                d: "D",
                e: "E"
              }
            },
            all: "All"
          }
        },
        results: {
          empty: {
            message: "No Results Found"
          },
          results: {
            controls: {
              search: "Search",
              filters: {
                higherPrice: "Higher Price",
                lowestPrice: "Lowest Price",
                higherEngagement: "Higher Engagement",
                lowerEngagement: "LoWer Engagement"
              }
            },
            helpers: {
              cost: {
                post: "Post",
                profilePicture: "Profile Picture",
                coverPhoto: "Cover Photo",
                noPostHour: "Hour  Without Posting",
                noPostDay: "Day Without Posting",
                share: "Share Post"
              },
              followers: "Followers"
            }
          }
        }
      },
      button: "Save",
      close: "Close"
    },
    new: {
      title: "TeamAttack",
      name: "What's the name of your TeamAttack?",
      button: "Create TeamAttack",
      type: {
        label: "Type",
        options: {
          post: "Post",
          profilePicture: "Profile Picture",
          coverPhoto: "Cover Photo",
          noPost: {
            hour: "Hour  Without Posting",
            day: "Day Without Posting"
          },
          share: "Share Post"
        }
      }
    }
  },
  es: {
    menu: "TeamAttack!",
    empty: {
      message: "No tienes ningún TeamAttack aún",
      button: "Crear TeamAttack"
    },
    list: {
      new: "Crear TeamAttack",
      title: "My Teams",
      table: {
        headers: {
          more: "Ver Mas",
          name: "Nombre",
          members: "Miembros",
          networks: "Redes",
          date: "Fecha",
          list: "Team Attack!",
          type: "Tipo",
          delete: "Borrar"
        },
        helpers: {
          both: "Ambos",
          brand: "Marca",
          influencer: "Influencer",
          type: {
            type: {
              post: "Post",
              profilePicture: "Foto de Perfil",
              coverPhoto: "Foto de Portada",
              noPostHour: "Hora sin Piblicar",
              noPostDay: "Día sin Publicar",
              share: "Compartir Post"
            }
          }
        },
        search: "Buscar",
        empty: "No hay resultados"
      },
      delete: {
        title: "¿Estás seguro?",
        description: "No podrás revertir esta acción!",
        confirm: "Si, eliminarlo.",
        cancel: "Cancelar",
        messages: {
          deleted: "TeamAttack Borrado",
          error: "Hubo un error al borrar el TeamAttack"
        }
      },
      messages: {
        saved: "TeamAttack Guardado",
        error: "Hubo un error guardando tu TeamAttack"
      }
    },
    edit: {
      meta: {
        type: {
          label: "¿Qué tipo de Team Attack! estás buscando?",
          values: {
            collaborators: "Colaboradores",
            external: "Externos"
          }
        },
        name: "¿Cuál es el nombre de tu Team Attack!?",
        members: "Participantes del Team Attack!:"
      },
      search: {
        panel: {
          influencer: {
            title: "Influencer",
            gender: {
              label: "Genero",
              values: {
                both: "Ambos",
                male: "Masculino",
                female: "Femenino"
              }
            },
            age: {
              label: "Edad",
              helper: "años"
            },
            languages: {
              label: "Idiomas"
            },
            sexualOrientation: {
              label: "Preferencia Sexual",
              values: {
                heterosexual: "Heterosexual",
                homosexual: "Homosxual",
                bisexual: "Bisexual",
                transexual: "Transexual"
              }
            },
            maritalStatus: {
              label: "Estado Civil",
              values: {
                single: "Soltero",
                married: "Casado"
              }
            },
            country: {
              label: "País"
            },
            city: {
              label: "Ciudad"
            },
            actions: {
              label: "Tipos de Acción"
            },
            categories: {
              label: "Categorias"
            },
            specialties: {
              label: "Especialidades"
            },
            followers: {
              label: "Seguidores",
              helpers: {
                k: "K",
                m: "M"
              }
            },
            likes: {
              label: "Likes"
            },
            views: {
              label: "Vistas"
            },
            engagement: {
              label: "Engagement"
            },
            action: {
              label: "Tipo de Acción",
              values: {
                post: "Post",
                profilePicture: "Foto de Perfil",
                coverPhoto: "Foto de Portada",
                noPostHour: "Hora sin Publicar",
                noPostDay: "Día sin Publicar",
                share: "Compartir Post"
              }
            },
            all: "Todos"
          },
          audience: {
            title: "Audiencia",
            age: {
              label: "Edad",
              helper: "años"
            },
            country: {
              label: "País"
            },
            city: {
              label: "Ciudad"
            },
            language: {
              label: "Idioma"
            },
            gender: {
              label: "Genero",
              values: {
                male: "Principalmente Mujeres",
                female: "Principalmente Hombres",
                split: "Igual entre Hombres & Mujeres"
              }
            },
            nrssg: {
              label: "Nivel Socioeconómico",
              values: {
                a: "A",
                b: "B",
                c1: "C1",
                c2: "C2",
                d: "D",
                e: "E"
              }
            },
            all: "Todos"
          }
        },
        results: {
          empty: {
            message: "No Hay Resultados"
          },
          results: {
            controls: {
              search: "Buscar",
              filters: {
                higherPrice: "Mayor precio",
                lowestPrice: "Menor precio",
                higherEngagement: "Mayor Engagement",
                lowerEngagement: "Menor Engagement"
              }
            },
            helpers: {
              cost: {
                post: "Post",
                profilePicture: "Foto de Perfil",
                coverPhoto: "Foto de Portada",
                noPost: {
                  hour: "Hora sin Piblicar",
                  day: "Día sin Publicar"
                },
                share: "Compartir Post"
              },
              followers: "Seguidores"
            }
          }
        }
      },
      button: "Guardar",
      close: "Cerrar"
    },
    new: {
      title: "TeamAttack",
      name: "¿Cuál es el nombre de tu TeamAttack?",
      button: "Crear TeamAttack",
      type: {
        label: "Typo de acción",
        options: {
          post: "Post",
          profilePicture: "Foto de Perfil",
          coverPhoto: "Foto de Portada",
          noPost: {
            hour: "Hora sin Piblicar",
            day: "Día sin Publicar"
          },
          share: "Compartir Post"
        }
      }
    }
  },
  zz: {
    menu: "測試",
    empty: {
      message: "測試 測試 測試 測試 測試",
      button: "測試 測試"
    },
    list: {
      new: "測試",
      title: "測試 測試",
      table: {
        headers: {
          more: "測試 測試",
          name: "測試",
          networks: "測試測試",
          members: "測試",
          date: "測試",
          list: "測試 測試!",
          type: "測試",
          delete: "測試"
        },
        helpers: {
          both: "測試",
          brand: "測試",
          influencer: "測試",
          type: {
            post: "測試",
            profilePicture: "測試 測試 測試",
            coverPhoto: "測試 測試 測試",
            noPostHour: "測試 測試 測試",
            noPostDay: "測試 測試 測試",
            share: "測試 測試"
          }
        },
        search: "測試",
        empty: "測試 測試 測試"
      },
      delete: {
        title: "測試 測試 測試?",
        description: "測試 測試' 測試 測試 測試 測試 測試!",
        confirm: "測試, 測試 測試.",
        cancel: "測試",
        messages: {
          deleted: "測試 測試",
          error: "測試 測試 測試 測試 測試 測試 測試"
        }
      },
      messages: {
        saved: "測試 測試",
        error: "測試 測試 測試 測試 測試 測試 測試"
      }
    },
    edit: {
      meta: {
        type: {
          label: "測試 測試 測試 測試 測試 測試 測試?",
          values: {
            collaborators: "測試",
            external: "測試"
          }
        },
        name: "測試 測試 測試 測試 測試?",
        members: "測試 測試 測試 測試!:"
      },
      search: {
        panel: {
          influencer: {
            title: "測試",
            gender: {
              label: "測試",
              values: {
                both: "測試",
                male: "測試",
                female: "測試"
              }
            },
            age: {
              label: "測試",
              helper: "測試"
            },
            languages: {
              label: "測試"
            },
            sexualOrientation: {
              label: "測試 測試",
              values: {
                heterosexual: "測試",
                homosexual: "測試",
                bisexual: "測試",
                transexual: "測試"
              }
            },
            maritalStatus: {
              label: "測試 測試",
              values: {
                single: "測試",
                married: "測試"
              }
            },
            country: {
              label: "測試"
            },
            city: {
              label: "測試"
            },
            actions: {
              label: "測試"
            },
            categories: {
              label: "測試"
            },
            specialties: {
              label: "測試"
            },
            followers: {
              label: "測試",
              helpers: {
                k: "測",
                m: "試"
              }
            },
            likes: {
              label: "測試"
            },
            views: {
              label: "測試"
            },
            engagement: {
              label: "測試"
            },
            action: {
              label: "測試 測試",
              values: {
                post: "測試",
                profilePicture: "測試 測試 測試",
                coverPhoto: "測試 測試 測試",
                noPostHour: "測試 測試 測試",
                noPostDay: "測試 測試 測試",
                share: "測試 測試"
              }
            },
            all: "測試"
          },
          audience: {
            title: "測試",
            age: {
              label: "測試",
              helper: "測試"
            },
            country: {
              label: "測試"
            },
            city: {
              label: "測試"
            },
            language: {
              label: "測試"
            },
            gender: {
              label: "測試",
              values: {
                male: "測試 測試",
                female: "測試 測試",
                split: "測試 測試 & 測試"
              }
            },
            nrssg: {
              label: "測試 測試",
              values: {
                a: "A",
                b: "B",
                c1: "C1",
                c2: "C2",
                d: "D",
                e: "E"
              }
            },
            all: "測試"
          }
        },
        results: {
          empty: {
            message: "測試 測試 測試"
          },
          results: {
            controls: {
              search: "測試",
              filters: {
                higherPrice: "測試 測試",
                lowestPrice: "測試 測試",
                higherEngagement: "測試 測試",
                lowerEngagement: "測試 測試"
              }
            },
            helpers: {
              cost: {
                post: "測試",
                profilePicture: "測試 測試 測試",
                coverPhoto: "測試 測試 測試",
                noPost: {
                  hour: "測試 測試 測試",
                  day: "測試 測試 測試"
                },
                share: "測試 測試"
              },
              followers: "測試"
            }
          }
        }
      },
      button: "測試",
      close: "測試"
    },
    new: {
      title: "測試",
      name: "測試 測試 測試 測試 測試 測試?",
      button: "測試 測試",
      type: {
        label: "測試 測試 測試",
        options: {
          post: "測試",
          profilePicture: "測試 測試 測試",
          coverPhoto: "測試 測試 測試",
          noPost: {
            hour: "測試 測試 測試",
            day: "測試 測試 測試"
          },
          share: "測試 測試"
        }
      }
    }
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"reducers":{"bundle.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/teamattack/reducers/bundle.jsx                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
const Reducers = {};
module.exportDefault(Reducers);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"accounts":{"ui":{"components":{"view":{"summary":{"information-edit.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/ui/components/view/summary/information-edit.jsx                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 1);
let FormSection, Field;
module.watch(require("redux-form"), {
  FormSection(v) {
    FormSection = v;
  },

  Field(v) {
    Field = v;
  }

}, 2);
let Countries;
module.watch(require("../../../../../../constants/countries"), {
  default(v) {
    Countries = v;
  }

}, 3);
let isoLangs;
module.watch(require("../../../../../../translations"), {
  isoLangs(v) {
    isoLangs = v;
  }

}, 4);

let _;

module.watch(require("lodash"), {
  default(v) {
    _ = v;
  }

}, 5);
let InputTags;
module.watch(require("../../../../../core/ui/components/forms/input-tags"), {
  default(v) {
    InputTags = v;
  }

}, 6);
let InputSelect;
module.watch(require("../../../../../core/ui/components/forms/input-select"), {
  default(v) {
    InputSelect = v;
  }

}, 7);
let InputDate;
module.watch(require("../../../../../core/ui/components/forms/input-date"), {
  default(v) {
    InputDate = v;
  }

}, 8);

class SummaryInformation extends React.Component {
  render() {
    let getTranslation = key => {
      return "Accounts.edit.tabs.information." + key;
    };

    let {
      information
    } = this.props;
    let languages = [];
    Object.keys(isoLangs).forEach(key => languages.push(isoLangs[key]));
    languages.pop(); //REMOVE TEST LANGUAGE

    languages = _.orderBy(languages, "native");
    return React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-12"
    }, React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-body slim"
    }, React.createElement("h4", null, React.createElement(Translate, {
      value: getTranslation("title")
    })), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-3"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationCountry"
    }, React.createElement(Translate, {
      value: getTranslation("form.country")
    })), React.createElement("input", {
      type: "text",
      className: "form-control",
      defaultValue: information.country || "-",
      readOnly: true
    }))), React.createElement("div", {
      className: "col-md-3"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationCity"
    }, React.createElement(Translate, {
      value: getTranslation("form.city")
    })), React.createElement("input", {
      type: "text",
      className: "form-control",
      defaultValue: information.city || "-",
      readOnly: true
    }))), React.createElement("div", {
      className: "col-md-3"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationGender"
    }, React.createElement(Translate, {
      value: getTranslation("form.gender.label")
    })), React.createElement("input", {
      type: "text",
      className: "form-control",
      defaultValue: I18n.t(getTranslation("form.gender.values.".concat(information.city))),
      readOnly: true
    }))), React.createElement("div", {
      className: "col-md-3"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationAge"
    }, React.createElement(Translate, {
      value: getTranslation("form.birthDate")
    })), React.createElement("input", {
      type: "text",
      className: "form-control",
      defaultValue: moment(new Date(information.birthDate)).format("DD/MM/YYYY"),
      readOnly: true
    }))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationLanguages"
    }, React.createElement(Translate, {
      value: getTranslation("form.languages")
    })), React.createElement("input", {
      type: "text",
      className: "form-control",
      defaultValue: isoLangs[information.language].native || "-",
      readOnly: true
    }))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationSexualOrientation"
    }, React.createElement(Translate, {
      value: getTranslation("form.sexualOrientation.label")
    })), React.createElement("input", {
      type: "text",
      className: "form-control",
      defaultValue: information.sexualOrientation || "-",
      readOnly: true
    }))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationPoliticalIdeas"
    }, React.createElement(Translate, {
      value: getTranslation("form.likes")
    })), React.createElement("input", {
      type: "text",
      className: "form-control",
      defaultValue: information.likes.join(",") || "-",
      readOnly: true
    }))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationPoliticalIdeas"
    }, React.createElement(Translate, {
      value: getTranslation("form.categories")
    })), React.createElement("input", {
      type: "text",
      className: "form-control",
      defaultValue: information.categories.join(",") || "-",
      readOnly: true
    }))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationPoliticalIdeas"
    }, React.createElement(Translate, {
      value: getTranslation("form.forbiddenSubjects")
    })), React.createElement("input", {
      type: "text",
      className: "form-control",
      defaultValue: information.forbiddenSubjects.join(",") || "-",
      readOnly: true
    }))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationURL1"
    }, React.createElement(Translate, {
      value: getTranslation("form.url")
    })), React.createElement("input", {
      type: "text",
      className: "form-control",
      defaultValue: information.urls.join(",") || "-",
      readOnly: true
    }))), React.createElement("div", {
      className: "col-md-12"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "exampleInputEmail1"
    }, React.createElement(Translate, {
      value: getTranslation("form.description.label")
    })), React.createElement("textarea", {
      readOnly: true,
      rows: 3,
      className: "form-control",
      defaultValue: information.description || "-"
    }))))))));
  }

}

module.exportDefault(SummaryInformation);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"gallery.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/ui/components/view/gallery.jsx                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let InputGallery;
module.watch(require("../../../../core/ui/components/forms/input-gallery"), {
  default(v) {
    InputGallery = v;
  }

}, 1);
let InputVideoGallery;
module.watch(require("../../../../core/ui/components/forms/input-video-gallery"), {
  default(v) {
    InputVideoGallery = v;
  }

}, 2);

class Gallery extends React.Component {
  render() {
    let getTranslationImages = key => {
      return "Accounts.edit.tabs.gallery.images." + key;
    };

    let getTranslationVideos = key => {
      return "Accounts.edit.tabs.gallery.videos." + key;
    };

    let {
      account
    } = this.props;
    return React.createElement("div", {
      className: "content-padding-30"
    }, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement(InputGallery, {
      getTranslation: getTranslationImages,
      readOnly: true,
      input: {
        value: account.gallery.images,
        onChange: () => {}
      }
    })), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement(InputVideoGallery, {
      getTranslation: getTranslationVideos,
      readOnly: true,
      input: {
        value: account.gallery.videos,
        onChange: () => {}
      }
    }))));
  }

}

module.exportDefault(Gallery);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"information.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/ui/components/view/information.jsx                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let I18n, Translate;
module.watch(require("react-redux-i18n"), {
  I18n(v) {
    I18n = v;
  },

  Translate(v) {
    Translate = v;
  }

}, 1);
let Field;
module.watch(require("redux-form"), {
  Field(v) {
    Field = v;
  }

}, 2);
let InputTags;
module.watch(require("../../../../core/ui/components/forms/input-tags"), {
  default(v) {
    InputTags = v;
  }

}, 3);
let InputSelect;
module.watch(require("../../../../core/ui/components/forms/input-select"), {
  default(v) {
    InputSelect = v;
  }

}, 4);
let InputDate;
module.watch(require("../../../../core/ui/components/forms/input-date"), {
  default(v) {
    InputDate = v;
  }

}, 5);
let Countries;
module.watch(require("../../../../../constants/countries"), {
  default(v) {
    Countries = v;
  }

}, 6);
let isoLangs;
module.watch(require("../../../../../translations"), {
  isoLangs(v) {
    isoLangs = v;
  }

}, 7);

let _;

module.watch(require("lodash"), {
  default(v) {
    _ = v;
  }

}, 8);

class Information extends React.Component {
  render() {
    let getTranslation = key => {
      return "Accounts.edit.tabs.information." + key;
    };

    let {
      account
    } = this.props;
    let accountID = account._id;
    let {
      information
    } = account;
    let languages = [];
    Object.keys(isoLangs).forEach(key => languages.push(isoLangs[key]));
    languages.pop(); //REMOVE TEST LANGUAGE

    languages = _.orderBy(languages, "native");
    return React.createElement("div", {
      className: "content-padding-30"
    }, React.createElement("h4", null, React.createElement(Translate, {
      value: getTranslation("instructions")
    })), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("form.name")
    })), React.createElement("input", {
      type: "text",
      className: "form-control",
      defaultValue: information.name || "-",
      readOnly: true
    }))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationGender"
    }, React.createElement(Translate, {
      value: getTranslation("form.gender.label")
    })), React.createElement("input", {
      type: "text",
      className: "form-control",
      defaultValue: I18n.t(getTranslation("form.gender.values.".concat(information.city))),
      readOnly: true
    }))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationAge"
    }, React.createElement(Translate, {
      value: getTranslation("form.birthDate")
    })), React.createElement("input", {
      type: "text",
      className: "form-control",
      defaultValue: moment(new Date(information.birthDate)).format("DD/MM/YYYY"),
      readOnly: true
    }))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationCountry"
    }, React.createElement(Translate, {
      value: getTranslation("form.country")
    })), React.createElement("input", {
      type: "text",
      className: "form-control",
      defaultValue: information.country || "-",
      readOnly: true
    }))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationCity"
    }, React.createElement(Translate, {
      value: getTranslation("form.city")
    })), React.createElement("input", {
      type: "text",
      className: "form-control",
      defaultValue: information.city || "-",
      readOnly: true
    }))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationMaritalStatus"
    }, React.createElement(Translate, {
      value: getTranslation("form.maritalStatus.label")
    })), React.createElement("input", {
      type: "text",
      className: "form-control",
      defaultValue: I18n.t(getTranslation("form.maritalStatus.values.".concat(information.maritalStatus))),
      readOnly: true
    }))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationLanguages"
    }, React.createElement(Translate, {
      value: getTranslation("form.languages")
    })), React.createElement("input", {
      type: "text",
      className: "form-control",
      defaultValue: isoLangs[information.language].native || "-",
      readOnly: true
    }))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationSexualOrientation"
    }, React.createElement(Translate, {
      value: getTranslation("form.sexualOrientation.label")
    })), React.createElement("input", {
      type: "text",
      className: "form-control",
      defaultValue: I18n.t(getTranslation("form.sexualOrientation.values.".concat(information.sexualOrientation))),
      readOnly: true
    }))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationPoliticalIdeas"
    }, React.createElement(Translate, {
      value: getTranslation("form.likes")
    })), React.createElement("input", {
      type: "text",
      className: "form-control",
      defaultValue: information.likes.join(",") || "-",
      readOnly: true
    })))), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-8"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "exampleInputEmail1"
    }, React.createElement(Translate, {
      value: getTranslation("form.description.label")
    }), React.createElement("div", null, React.createElement("small", null, React.createElement(Translate, {
      value: getTranslation("form.description.description")
    })))), React.createElement("textarea", {
      readOnly: true,
      rows: 3,
      className: "form-control",
      defaultValue: information.description || "-"
    })))), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationPoliticalIdeas"
    }, React.createElement(Translate, {
      value: getTranslation("form.categories")
    })), React.createElement("input", {
      type: "text",
      className: "form-control",
      defaultValue: information.categories.join(",") || "-",
      readOnly: true
    }))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationPoliticalIdeas"
    }, React.createElement(Translate, {
      value: getTranslation("form.specialties")
    })), React.createElement("input", {
      type: "text",
      className: "form-control",
      defaultValue: information.specialties.join(",") || "-",
      readOnly: true
    })))), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationPoliticalIdeas"
    }, React.createElement(Translate, {
      value: getTranslation("form.forbiddenSubjects")
    })), React.createElement("input", {
      type: "text",
      className: "form-control",
      defaultValue: information.forbiddenSubjects.join(",") || "-",
      readOnly: true
    })))), React.createElement("h5", null, React.createElement(Translate, {
      value: getTranslation("form.urlTitle")
    })), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-12"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationURL1"
    }, React.createElement(Translate, {
      value: getTranslation("form.url")
    })), React.createElement("input", {
      type: "text",
      className: "form-control",
      defaultValue: information.urls.join(",") || "-",
      readOnly: true
    })))));
  }

}

module.exportDefault(Information);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"summary.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/ui/components/view/summary.jsx                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let connect;
module.watch(require("react-redux"), {
  connect(v) {
    connect = v;
  }

}, 1);
let SummaryPeople;
module.watch(require("../summary/people"), {
  default(v) {
    SummaryPeople = v;
  }

}, 2);
let SummaryInformation;
module.watch(require("../summary/information"), {
  default(v) {
    SummaryInformation = v;
  }

}, 3);
let SummaryPricing;
module.watch(require("../summary/pricing"), {
  default(v) {
    SummaryPricing = v;
  }

}, 4);
let SummaryInformationForm;
module.watch(require("./summary/information-edit"), {
  default(v) {
    SummaryInformationForm = v;
  }

}, 5);
let SummaryAnalytics;
module.watch(require("../summary/analytics"), {
  default(v) {
    SummaryAnalytics = v;
  }

}, 6);
let SummaryGallery;
module.watch(require("../summary/gallery"), {
  default(v) {
    SummaryGallery = v;
  }

}, 7);
let SummaryCalendar;
module.watch(require("../summary/calendar"), {
  default(v) {
    SummaryCalendar = v;
  }

}, 8);

class Summary extends React.Component {
  render() {
    let {
      account
    } = this.props;
    let {
      information,
      pricing,
      settings,
      manager,
      owner,
      shares,
      groups,
      gallery
    } = account;
    let accountID = account._id;
    return React.createElement("div", {
      className: "content-padding-30"
    }, React.createElement("div", {
      className: "row"
    }, React.createElement(SummaryPeople, {
      owner: owner,
      manager: manager,
      shares: shares
    }), React.createElement(SummaryInformation, {
      information: information,
      settings: settings,
      groups: groups
    }), React.createElement(SummaryPricing, {
      pricing: pricing
    })), React.createElement(SummaryInformationForm, {
      information: information
    }), React.createElement(SummaryAnalytics, null), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement(SummaryGallery, {
      gallery: gallery
    })), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement(SummaryCalendar, {
      accountID: accountID
    }))));
  }

}

module.exportDefault(connect(state => {
  return {
    form: state.form["account-edit"]
  };
})(Summary));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"tabs.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/ui/components/view/tabs.jsx                                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Tabs, Tab;
module.watch(require("react-bootstrap"), {
  Tabs(v) {
    Tabs = v;
  },

  Tab(v) {
    Tab = v;
  }

}, 1);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 2);
let Summary;
module.watch(require("./summary"), {
  default(v) {
    Summary = v;
  }

}, 3);
let Gallery;
module.watch(require("./gallery"), {
  default(v) {
    Gallery = v;
  }

}, 4);
let Information;
module.watch(require("./information"), {
  default(v) {
    Information = v;
  }

}, 5);
let Calendar;
module.watch(require("../../containers/account-calendar"), {
  default(v) {
    Calendar = v;
  }

}, 6);

class TabsContainer extends React.Component {
  constructor() {
    super();
    this.state = {
      tabIndex: 0
    };
    this.setTab = this.setTab.bind(this);
  }

  setTab(tabIndex) {
    this.setState({
      tabIndex: tabIndex
    });
  }

  render() {
    let {
      tabIndex
    } = this.state;
    return React.createElement("div", null, React.createElement("div", {
      className: "nav-tabs-horizontal"
    }, React.createElement(Tabs, {
      defaultActiveKey: "summary",
      id: "uncontrolled-tab-example",
      bsStyle: "tabs",
      onSelect: this.setTab
    }, React.createElement(Tab, {
      eventKey: "summary",
      title: React.createElement(Translate, {
        value: "Accounts.edit.tabs.summary.title"
      })
    }, React.createElement(Summary, {
      account: this.props.account
    })), React.createElement(Tab, {
      eventKey: "information",
      title: React.createElement(Translate, {
        value: "Accounts.edit.tabs.information.title"
      })
    }, React.createElement(Information, {
      account: this.props.account
    })), React.createElement(Tab, {
      eventKey: "gallery",
      title: React.createElement(Translate, {
        value: "Accounts.edit.tabs.gallery.title"
      })
    }, React.createElement(Gallery, {
      account: this.props.account
    })), React.createElement(Tab, {
      eventKey: "calendar",
      title: React.createElement(Translate, {
        value: "Accounts.edit.tabs.calendar.title"
      })
    }, React.createElement(Calendar, {
      account: this.props.account,
      readOnly: true
    })))));
  }

}

module.exportDefault(TabsContainer);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"account-pages":{"layout.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/ui/components/account-pages/layout.jsx                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/objectSpread"));

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let swal;
module.watch(require("sweetalert2"), {
  default(v) {
    swal = v;
  }

}, 1);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 2);

class AccountPagesLayout extends React.Component {
  constructor() {
    super();
    this.state = {
      selected: []
    };
    this.selectPage = this.selectPage.bind(this);
    this.connectPages = this.connectPages.bind(this);
  }

  selectPage(page) {
    let component = this;
    return function () {
      console.log("SELECT_PAGE");
      let newState = (0, _objectSpread2.default)({}, component.state);
      let index = newState.selected.indexOf(page);

      if (index === -1) {
        newState.selected.push(page);
      } else {
        newState.selected.splice(page, 1);
      }

      component.setState(newState);
    };
  }

  connectPages() {
    let {
      accountID
    } = this.props;
    let component = this;
    let pages = this.state.selected.map(p => p.id);
    console.log("CONNECT_PAGES", accountID, pages);
    Meteor.call("connect-facebook-pages", accountID, pages, function (err, res) {
      console.log('CONNECT_WITH_CALLBACK', arguments);

      if (err) {
        if (err.error === 500) {
          err.error = "Failed to connect account.";
        }

        notie.alert(3, err.error, 3);
        return;
      }

      console.log("CONNECTION_SUCCESFUL", res);
      component.props.refetch().then(function () {
        component.props.close(); //component.props.history.push("/accounts/edit/" + res);
      });
    });
  }

  render() {
    let {
      pages
    } = this.props;
    return React.createElement("div", null, React.createElement("div", {
      className: "row pages-list"
    }, pages.map(page => React.createElement("div", {
      className: "col-md-6 list-group-item " + (this.state.selected.indexOf(page) == -1 ? "" : "active"),
      key: page.id,
      onClick: this.selectPage(page)
    }, React.createElement("div", {
      className: "selected"
    }, React.createElement("i", {
      className: "icon wb-check"
    })), React.createElement("div", {
      className: "media"
    }, React.createElement("div", {
      className: "media-left"
    }, React.createElement("a", {
      className: "avatar",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      className: "img-fluid",
      src: page.picture,
      alt: "..."
    }))), React.createElement("div", {
      className: "media-body"
    }, React.createElement("h4", {
      className: "media-heading"
    }, page.name), React.createElement("small", null, page.category)), React.createElement("div", {
      className: "media-right"
    }))))), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-12"
    }, React.createElement("a", {
      className: "btn btn-primary pull-right",
      onClick: this.connectPages
    }, "Connect Pages"))));
  }

}

module.exportDefault(AccountPagesLayout);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"modal.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/ui/components/account-pages/modal.jsx                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 1);
let AccountPagesContainer;
module.watch(require("../../containers/account-pages"), {
  default(v) {
    AccountPagesContainer = v;
  }

}, 2);
let AccountSearch;
module.watch(require("../../../../core/ui/components/forms/account-search"), {
  default(v) {
    AccountSearch = v;
  }

}, 3);
let NoPages;
module.watch(require("./no-account"), {
  default(v) {
    NoPages = v;
  }

}, 4);

class AccountPagesModal extends React.Component {
  constructor() {
    super();
    this.state = {
      accounts: [],
      account: null
    };
    this.updateAccount = this.updateAccount.bind(this);
  }

  updateAccount(account) {
    this.setState({
      account
    });
  }

  componentWillMount() {
    let {
      accounts
    } = this.props;
    accounts = accounts.filter(a => a.network === "facebook" && a.type === "account");
    this.setState({
      account: accounts[0],
      accounts: accounts
    });
  }

  render() {
    return React.createElement("div", {
      className: "account-pages"
    }, React.createElement("div", {
      className: "controls"
    }, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-4"
    }, React.createElement(AccountSearch, {
      input: {
        value: this.state.account,
        onChange: this.updateAccount
      },
      data: this.state.accounts,
      multi: false
    })))), this.state.account && this.state.account._id && React.createElement(AccountPagesContainer, {
      accountID: this.state.account._id,
      close: this.props.close,
      history: this.props.history
    }), !this.state.account && React.createElement(NoPages, null));
  }

}

module.exportDefault(AccountPagesModal);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"no-account.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/ui/components/account-pages/no-account.jsx                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 1);

class NoPages extends React.Component {
  render() {
    let getTranslation = key => {
      return "TeamAttack.new.search.results.empty." + key;
    };

    return React.createElement("div", {
      className: "no-results"
    }, React.createElement("div", {
      className: "content"
    }, React.createElement("i", {
      className: "icon wb-alert-circle"
    }), React.createElement("h3", null, React.createElement(Translate, {
      value: getTranslation("message")
    }))));
  }

}

module.exportDefault(NoPages);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"analytics":{"Indicators.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/ui/components/analytics/Indicators.jsx                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, Localize;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  Localize(v) {
    Localize = v;
  }

}, 1);

class AnalyticsInidicators extends React.Component {
  render() {
    let getTranslation = key => {
      return "Accounts.edit.tabs.status.likes." + key;
    };

    let render = true;
    let columns = "col-sm-12";
    let {
      data
    } = this.props;
    let values = Object.keys(data).filter(key => {
      let val = data[key];
      return typeof val === "string";
    });

    if (values.length === 0) {
      render = false;
    }

    if (values.length < 3) {
      columns = "col-sm-6";
    }

    if (!render) {
      return React.createElement("div", null);
    }

    return React.createElement("div", {
      className: "col-lg-6 col-md-12"
    }, React.createElement("div", {
      className: "widget"
    }, React.createElement("div", {
      className: "widget-content padding-30 bg-white"
    }, React.createElement("div", {
      className: "row no-space"
    }, React.createElement("div", {
      className: columns
    }, React.createElement("div", {
      className: "counter counter-sm text-left padding-left-20"
    }, React.createElement("span", {
      className: "counter-number"
    }, React.createElement(Localize, {
      value: Number(data.profileLikes),
      options: {
        maximumFractionDigits: 0
      }
    })), React.createElement("div", {
      className: "counter-label text-uppercase"
    }, React.createElement(Translate, {
      value: getTranslation("profileLikes")
    })))), React.createElement("div", {
      className: columns
    }, React.createElement("div", {
      className: "counter counter-sm text-left padding-left-20"
    }, React.createElement("span", {
      className: "counter-number"
    }, React.createElement(Localize, {
      value: Number(data.followers),
      options: {
        maximumFractionDigits: 0
      }
    })), React.createElement("div", {
      className: "counter-label text-uppercase"
    }, React.createElement(Translate, {
      value: getTranslation("followers")
    })))), React.createElement("div", {
      className: columns
    }, React.createElement("div", {
      className: "counter counter-sm text-left padding-left-20"
    }, React.createElement("span", {
      className: "counter-number"
    }, React.createElement(Localize, {
      value: Number(data.following),
      options: {
        maximumFractionDigits: 2
      }
    })), React.createElement("div", {
      className: "counter-label text-uppercase"
    }, React.createElement(Translate, {
      value: getTranslation("following")
    })))), React.createElement("div", {
      className: columns
    }, React.createElement("div", {
      className: "counter counter-sm text-left padding-left-20"
    }, React.createElement("span", {
      className: "counter-number"
    }, React.createElement(Localize, {
      value: Number(data.profileLikes),
      options: {
        maximumFractionDigits: 2
      }
    })), React.createElement("div", {
      className: "counter-label text-uppercase"
    }, React.createElement(Translate, {
      value: getTranslation("profileLikes")
    })))), React.createElement("div", {
      className: columns
    }, React.createElement("div", {
      className: "counter counter-sm text-left padding-left-20"
    }, React.createElement("span", {
      className: "counter-number"
    }, React.createElement(Localize, {
      value: Number(data.profileLikes),
      options: {
        maximumFractionDigits: 2
      }
    })), React.createElement("div", {
      className: "counter-label text-uppercase"
    }, React.createElement(Translate, {
      value: getTranslation("profileLikes")
    })))), data.profileLikes && React.createElement("div", {
      className: columns
    }, React.createElement("div", {
      className: "counter counter-sm text-left padding-left-20"
    }, React.createElement("span", {
      className: "counter-number"
    }, React.createElement(Localize, {
      value: Number(data.profileLikes),
      options: {
        maximumFractionDigits: 2
      }
    })), React.createElement("div", {
      className: "counter-label text-uppercase"
    }, React.createElement(Translate, {
      value: getTranslation("profileLikes")
    }))))))));
  }

}

module.exportDefault(AnalyticsInidicators);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"comments.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/ui/components/analytics/comments.jsx                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, Localize;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  Localize(v) {
    Localize = v;
  }

}, 1);

class AnalyticsComments extends React.Component {
  render() {
    let getTranslation = key => {
      return "Accounts.edit.tabs.status.comments." + key;
    };

    let render = true;
    let {
      data
    } = this.props;
    let values = Object.keys(data).filter(key => {
      let val = data[key];
      return typeof val === "string";
    });

    if (values.length === 0) {
      render = false;
    }

    if (!render) {
      return React.createElement("div", null);
    }

    return React.createElement("div", {
      className: "col-lg-6 col-md-12"
    }, React.createElement("div", {
      className: "widget"
    }, React.createElement("div", {
      className: "widget-content padding-30 bg-white"
    }, React.createElement("div", {
      className: "row no-space"
    }, React.createElement("div", {
      className: "col-sm-6"
    }, React.createElement("div", {
      className: "counter counter-lg text-left padding-left-20"
    }, React.createElement("span", {
      className: "counter-number"
    }, React.createElement(Localize, {
      value: Number(data.comments),
      options: {
        maximumFractionDigits: 0
      }
    })), React.createElement("div", {
      className: "counter-label text-uppercase"
    }, React.createElement(Translate, {
      value: getTranslation("comments")
    })))), React.createElement("div", {
      className: "col-sm-6"
    }, React.createElement("div", {
      className: "counter counter-lg text-left padding-left-20"
    }, React.createElement("span", {
      className: "counter-number"
    }, React.createElement(Localize, {
      value: Number(data.commentsPerPost),
      options: {
        maximumFractionDigits: 2
      }
    })), React.createElement("div", {
      className: "counter-label text-uppercase"
    }, React.createElement(Translate, {
      value: getTranslation("commentsPerPost")
    }))))))));
  }

}

module.exportDefault(AnalyticsComments);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"engagement.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/ui/components/analytics/engagement.jsx                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, Localize;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  Localize(v) {
    Localize = v;
  }

}, 1);

class AnalyticsEngagement extends React.Component {
  render() {
    let getTranslation = key => {
      return "Accounts.edit.tabs.status.engagement." + key;
    };

    return React.createElement("div", {
      className: "col-lg-3 col-md-6"
    }, React.createElement("div", {
      className: "widget"
    }, React.createElement("div", {
      className: "widget-content padding-30 bg-white"
    }, React.createElement("div", {
      className: "counter counter-lg"
    }, React.createElement("div", {
      className: "counter-label text-uppercase"
    }, React.createElement(Translate, {
      value: getTranslation("label")
    })), React.createElement("div", {
      className: "counter-number-group"
    }, React.createElement("span", {
      className: "counter-number"
    }, React.createElement(Localize, {
      value: Number(this.props.data),
      options: {
        minimumFractionDigits: 4,
        maximumFractionDigits: 5
      }
    })), React.createElement("span", {
      className: "counter-number-related"
    }, "%"))))));
  }

}

module.exportDefault(AnalyticsEngagement);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"favorites.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/ui/components/analytics/favorites.jsx                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, Localize;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  Localize(v) {
    Localize = v;
  }

}, 1);

class AnalyticsFavorites extends React.Component {
  render() {
    let getTranslation = key => {
      return "Accounts.edit.tabs.status.favorites." + key;
    };

    let render = true;
    let {
      data
    } = this.props;
    let values = Object.keys(data).filter(key => {
      let val = data[key];
      return typeof val === "string";
    });

    if (values.length === 0) {
      render = false;
    }

    if (!render) {
      return React.createElement("div", null);
    }

    return React.createElement("div", {
      className: "col-lg-6 col-md-12"
    }, React.createElement("div", {
      className: "widget"
    }, React.createElement("div", {
      className: "widget-content padding-30 bg-white"
    }, React.createElement("div", {
      className: "row no-space"
    }, React.createElement("div", {
      className: "col-sm-6"
    }, React.createElement("div", {
      className: "counter counter-lg text-left padding-left-20"
    }, React.createElement("span", {
      className: "counter-number"
    }, React.createElement(Localize, {
      value: Number(data.favorites),
      options: {
        maximumFractionDigits: 0
      }
    })), React.createElement("div", {
      className: "counter-label text-uppercase"
    }, React.createElement(Translate, {
      value: getTranslation("favorites")
    })))), React.createElement("div", {
      className: "col-sm-6"
    }, React.createElement("div", {
      className: "counter counter-lg text-left padding-left-20"
    }, React.createElement("span", {
      className: "counter-number"
    }, React.createElement(Localize, {
      value: Number(data.favoritesPerPost),
      options: {
        maximumFractionDigits: 2
      }
    })), React.createElement("div", {
      className: "counter-label text-uppercase"
    }, React.createElement(Translate, {
      value: getTranslation("favoritesPerPost")
    }))))))));
  }

}

module.exportDefault(AnalyticsFavorites);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"follows.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/ui/components/analytics/follows.jsx                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, Localize;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  Localize(v) {
    Localize = v;
  }

}, 1);

class AnalyticsFollows extends React.Component {
  render() {
    let getTranslation = key => {
      return "Accounts.edit.tabs.status.follows." + key;
    };

    let render = true;
    let columns = "col-sm-4";
    let {
      data
    } = this.props;
    let values = Object.keys(data).filter(key => {
      let val = data[key];
      return typeof val === "string";
    });

    if (values.length === 0) {
      render = false;
    }

    if (values.length < 3) {
      columns = "col-sm-6";
    }

    if (!render) {
      return React.createElement("div", null);
    }

    return React.createElement("div", {
      className: "col-lg-6 col-md-12"
    }, React.createElement("div", {
      className: "widget"
    }, React.createElement("div", {
      className: "widget-content padding-30 bg-white"
    }, React.createElement("div", {
      className: "row no-space"
    }, React.createElement("div", {
      className: columns
    }, React.createElement("div", {
      className: "counter counter-lg text-left padding-left-20"
    }, React.createElement("span", {
      className: "counter-number"
    }, React.createElement(Localize, {
      value: Number(data.followers),
      options: {
        maximumFractionDigits: 0
      }
    })), React.createElement("div", {
      className: "counter-label text-uppercase"
    }, React.createElement(Translate, {
      value: getTranslation("followers")
    })))), React.createElement("div", {
      className: columns
    }, React.createElement("div", {
      className: "counter counter-lg text-left padding-left-20"
    }, React.createElement("span", {
      className: "counter-number"
    }, React.createElement(Localize, {
      value: Number(data.following),
      options: {
        maximumFractionDigits: 2
      }
    })), React.createElement("div", {
      className: "counter-label text-uppercase"
    }, React.createElement(Translate, {
      value: getTranslation("following")
    })))), data.profileLikes && React.createElement("div", {
      className: columns
    }, React.createElement("div", {
      className: "counter counter-lg text-left padding-left-20"
    }, React.createElement("span", {
      className: "counter-number"
    }, React.createElement(Localize, {
      value: Number(data.profileLikes),
      options: {
        maximumFractionDigits: 2
      }
    })), React.createElement("div", {
      className: "counter-label text-uppercase"
    }, React.createElement(Translate, {
      value: getTranslation("profileLikes")
    }))))))));
  }

}

module.exportDefault(AnalyticsFollows);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"likes.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/ui/components/analytics/likes.jsx                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, Localize;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  Localize(v) {
    Localize = v;
  }

}, 1);

class AnalyticsLikes extends React.Component {
  render() {
    let getTranslation = key => {
      return "Accounts.edit.tabs.status.likes." + key;
    };

    let render = true;
    let {
      data
    } = this.props;
    let values = Object.keys(data).filter(key => {
      let val = data[key];
      return typeof val === "string";
    });

    if (values.length === 0) {
      render = false;
    }

    if (!render) {
      return React.createElement("div", null);
    }

    return React.createElement("div", {
      className: "col-lg-6 col-md-12"
    }, React.createElement("div", {
      className: "widget"
    }, React.createElement("div", {
      className: "widget-content padding-30 bg-white"
    }, React.createElement("div", {
      className: "row no-space"
    }, React.createElement("div", {
      className: "col-sm-6"
    }, React.createElement("div", {
      className: "counter counter-lg text-left padding-left-20"
    }, React.createElement("span", {
      className: "counter-number"
    }, React.createElement(Localize, {
      value: Number(data.likes),
      options: {
        maximumFractionDigits: 0
      }
    })), React.createElement("div", {
      className: "counter-label text-uppercase"
    }, React.createElement(Translate, {
      value: getTranslation("likes")
    })))), React.createElement("div", {
      className: "col-sm-6"
    }, React.createElement("div", {
      className: "counter counter-lg text-left padding-left-20"
    }, React.createElement("span", {
      className: "counter-number"
    }, React.createElement(Localize, {
      value: Number(data.likesPerPost),
      options: {
        maximumFractionDigits: 2
      }
    })), React.createElement("div", {
      className: "counter-label text-uppercase"
    }, React.createElement(Translate, {
      value: getTranslation("likesPerPost")
    }))))))));
  }

}

module.exportDefault(AnalyticsLikes);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"posts.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/ui/components/analytics/posts.jsx                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, Localize;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  Localize(v) {
    Localize = v;
  }

}, 1);

class AnalyticsPosts extends React.Component {
  render() {
    let getTranslation = key => {
      return "Accounts.edit.tabs.status.posts." + key;
    };

    let render = true;
    let {
      data
    } = this.props;
    let values = Object.keys(data).filter(key => {
      let val = data[key];
      return typeof val === "string";
    });

    if (values.length === 0) {
      render = false;
    }

    if (!render) {
      return React.createElement("div", null);
    }

    return React.createElement("div", {
      className: "col-lg-6 col-md-12"
    }, React.createElement("div", {
      className: "widget"
    }, React.createElement("div", {
      className: "widget-content padding-30 bg-white"
    }, React.createElement("div", {
      className: "row no-space"
    }, React.createElement("div", {
      className: "col-sm-6"
    }, React.createElement("div", {
      className: "counter counter-lg text-left padding-left-20"
    }, React.createElement("span", {
      className: "counter-number"
    }, React.createElement(Localize, {
      value: Number(data.posts),
      options: {
        maximumFractionDigits: 0
      }
    })), React.createElement("div", {
      className: "counter-label text-uppercase"
    }, React.createElement(Translate, {
      value: getTranslation("posts")
    })))), React.createElement("div", {
      className: "col-sm-6"
    }, React.createElement("div", {
      className: "counter counter-lg text-left padding-left-20"
    }, React.createElement("span", {
      className: "counter-number"
    }, React.createElement(Localize, {
      value: Number(data.postsPerDay),
      options: {
        maximumFractionDigits: 2
      }
    })), React.createElement("div", {
      className: "counter-label text-uppercase"
    }, React.createElement(Translate, {
      value: getTranslation("postsPerDay")
    }))))))));
  }

}

module.exportDefault(AnalyticsPosts);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"retweets.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/ui/components/analytics/retweets.jsx                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, Localize;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  Localize(v) {
    Localize = v;
  }

}, 1);

class AnalyticsRetweets extends React.Component {
  render() {
    let getTranslation = key => {
      return "Accounts.edit.tabs.status.retweets." + key;
    };

    let render = true;
    let {
      data
    } = this.props;
    let values = Object.keys(data).filter(key => {
      let val = data[key];
      return typeof val === "string";
    });

    if (values.length === 0) {
      render = false;
    }

    if (!render) {
      return React.createElement("div", null);
    }

    return React.createElement("div", {
      className: "col-lg-6 col-md-12"
    }, React.createElement("div", {
      className: "widget"
    }, React.createElement("div", {
      className: "widget-content padding-30 bg-white"
    }, React.createElement("div", {
      className: "row no-space"
    }, React.createElement("div", {
      className: "col-sm-6"
    }, React.createElement("div", {
      className: "counter counter-lg text-left padding-left-20"
    }, React.createElement("span", {
      className: "counter-number"
    }, React.createElement(Localize, {
      value: Number(data.retweets),
      options: {
        maximumFractionDigits: 0
      }
    })), React.createElement("div", {
      className: "counter-label text-uppercase"
    }, React.createElement(Translate, {
      value: getTranslation("retweets")
    })))), React.createElement("div", {
      className: "col-sm-6"
    }, React.createElement("div", {
      className: "counter counter-lg text-left padding-left-20"
    }, React.createElement("span", {
      className: "counter-number"
    }, React.createElement(Localize, {
      value: Number(data.retweetsPerPost),
      options: {
        maximumFractionDigits: 2
      }
    })), React.createElement("div", {
      className: "counter-label text-uppercase"
    }, React.createElement(Translate, {
      value: getTranslation("retweetsPerPost")
    }))))))));
  }

}

module.exportDefault(AnalyticsRetweets);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"shares.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/ui/components/analytics/shares.jsx                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, Localize;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  Localize(v) {
    Localize = v;
  }

}, 1);

class AnalyticsShares extends React.Component {
  render() {
    let getTranslation = key => {
      return "Accounts.edit.tabs.status.shares." + key;
    };

    let render = true;
    let {
      data
    } = this.props;
    let values = Object.keys(data).filter(key => {
      let val = data[key];
      return typeof val === "string";
    });

    if (values.length === 0) {
      render = false;
    }

    if (!render) {
      return React.createElement("div", null);
    }

    return React.createElement("div", {
      className: "col-lg-6 col-md-12"
    }, React.createElement("div", {
      className: "widget"
    }, React.createElement("div", {
      className: "widget-content padding-30 bg-white"
    }, React.createElement("div", {
      className: "row no-space"
    }, React.createElement("div", {
      className: "col-sm-6"
    }, React.createElement("div", {
      className: "counter counter-lg text-left padding-left-20"
    }, React.createElement("span", {
      className: "counter-number"
    }, React.createElement(Localize, {
      value: Number(data.shares),
      options: {
        maximumFractionDigits: 0
      }
    })), React.createElement("div", {
      className: "counter-label text-uppercase"
    }, React.createElement(Translate, {
      value: getTranslation("shares")
    })))), React.createElement("div", {
      className: "col-sm-6"
    }, React.createElement("div", {
      className: "counter counter-lg text-left padding-left-20"
    }, React.createElement("span", {
      className: "counter-number"
    }, React.createElement(Localize, {
      value: Number(data.sharesPerPost),
      options: {
        maximumFractionDigits: 2
      }
    })), React.createElement("div", {
      className: "counter-label text-uppercase"
    }, React.createElement(Translate, {
      value: getTranslation("sharesPerPost")
    }))))))));
  }

}

module.exportDefault(AnalyticsShares);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"calendar":{"filters.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/ui/components/calendar/filters.jsx                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 1);

class CalendarFilter extends React.Component {
  constructor() {
    super();
    this.toggleState = this.toggleState.bind(this);
  }

  toggleState(key) {
    return this.props.update(key);
  }

  render() {
    let getTranslation = key => {
      return "Accounts.edit.tabs.calendar.filters." + key;
    };

    let {
      filters
    } = this.props;
    return React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-body container-fluid"
    }, React.createElement("ul", {
      className: "list-group list-group-full"
    }, Object.keys(filters).map((key, i) => React.createElement("li", {
      key: i,
      className: "list-group-item"
    }, React.createElement("div", {
      className: "checkbox-custom"
    }, React.createElement("input", {
      type: "checkbox",
      name: "inputCheckboxes",
      checked: filters[key],
      onChange: this.toggleState(key)
    }), React.createElement("label", null, React.createElement(Translate, {
      value: getTranslation(key)
    }))))))));
  }

}

module.exportDefault(CalendarFilter);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"information":{"category-proposal.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/ui/components/information/category-proposal.jsx                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/objectSpread"));

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 1);
let swal;
module.watch(require("sweetalert2"), {
  default(v) {
    swal = v;
  }

}, 2);

let getTranslation = key => {
  return "Accounts.edit.tabs.information.form.proposal." + key;
};

class CategoryProposal extends React.Component {
  constructor() {
    super();
    this.state = {
      type: "category",
      category: ""
    };
    this.submitForm = this.submitForm.bind(this);
    this.updateValue = this.updateValue.bind(this);
  }

  updateValue(key) {
    let component = this;
    return function (e) {
      let val = e.target.value;
      let newState = (0, _objectSpread2.default)({}, component.state);
      newState[key] = val;
      component.setState(newState);
    };
  }

  submitForm() {
    //console.log("FORM_SUBMISSION", this.state);
    let component = this;
    let {
      accountID
    } = this.props;
    Meteor.call("account-category-invite-proposal", accountID, this.state, function (err, res) {
      if (err) {
        //console.log("ERROR", err);
        swal(I18n.t(getTranslation("modals.error.title")), I18n.t(getTranslation("modals.error.description")), "error");
        return;
      }

      component.setState({});
      swal(I18n.t(getTranslation("modals.done.title")), I18n.t(getTranslation("modals.done.description")), "success");
    });
  }

  render() {
    return React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationPoliticalIdeas"
    }, React.createElement(Translate, {
      value: getTranslation("categories.label")
    })), React.createElement("div", {
      className: "input-group"
    }, React.createElement("input", {
      type: "text",
      className: "form-control",
      value: this.state.category,
      onChange: this.updateValue("category"),
      placeholder: I18n.t(getTranslation("categories.placeholder"))
    }), React.createElement("span", {
      className: "input-group-btn"
    }, React.createElement("button", {
      className: "btn btn-success",
      type: "button",
      onClick: this.submitForm
    }, React.createElement("i", {
      className: "fa fa-check",
      "aria-hidden": "true"
    })))));
  }

}

module.exportDefault(CategoryProposal);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"specialty-proposal.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/ui/components/information/specialty-proposal.jsx                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/objectSpread"));

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 1);
let swal;
module.watch(require("sweetalert2"), {
  default(v) {
    swal = v;
  }

}, 2);

let getTranslation = key => {
  return "Accounts.edit.tabs.information.form.proposal." + key;
};

class SpecialtyProposal extends React.Component {
  constructor() {
    super();
    this.state = {
      type: "specialty",
      category: "",
      specialty: ""
    };
    this.submitForm = this.submitForm.bind(this);
    this.updateValue = this.updateValue.bind(this);
  }

  updateValue(key) {
    let component = this;
    return function (e) {
      let val = e.target.value;
      let newState = (0, _objectSpread2.default)({}, component.state);
      newState[key] = val;
      component.setState(newState);
    };
  }

  submitForm() {
    //console.log("FORM_SUBMISSION", this.state);
    let component = this;
    let {
      accountID
    } = this.props;
    Meteor.call("account-category-invite-proposal", accountID, this.state, function (err, res) {
      if (err) {
        //console.log("ERROR", err);
        swal(I18n.t(getTranslation("modals.error.title")), I18n.t(getTranslation("modals.error.description")), "error");
        return;
      }

      component.setState({});
      swal(I18n.t(getTranslation("modals.done.title")), I18n.t(getTranslation("modals.done.description")), "success");
    });
  }

  render() {
    return React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationPoliticalIdeas"
    }, React.createElement(Translate, {
      value: getTranslation("specialties.label")
    })), React.createElement("select", {
      className: "form-control",
      value: this.state.category,
      onChange: this.updateValue("category")
    }, React.createElement("option", {
      value: ""
    }, I18n.t(getTranslation("specialties.placeholder")))))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationPoliticalIdeas"
    }, "\xA0"), React.createElement("div", {
      className: "input-group"
    }, React.createElement("input", {
      type: "text",
      className: "form-control",
      value: this.state.specialty,
      onChange: this.updateValue("specialty"),
      placeholder: I18n.t(getTranslation("specialties.placeholder"))
    }), React.createElement("span", {
      className: "input-group-btn"
    }, React.createElement("button", {
      className: "btn btn-success",
      type: "button",
      onClick: this.submitForm
    }, React.createElement("i", {
      className: "fa fa-check",
      "aria-hidden": "true"
    })))))));
  }

}

module.exportDefault(SpecialtyProposal);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"invite":{"invite.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/ui/components/invite/invite.jsx                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/objectSpread"));

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let swal;
module.watch(require("sweetalert2"), {
  default(v) {
    swal = v;
  }

}, 1);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 2);
let Tooltip, OverlayTrigger;
module.watch(require("react-bootstrap"), {
  Tooltip(v) {
    Tooltip = v;
  },

  OverlayTrigger(v) {
    OverlayTrigger = v;
  }

}, 3);
let SocialAvatar;
module.watch(require("../../../../core/ui/components/social-avatar"), {
  default(v) {
    SocialAvatar = v;
  }

}, 4);
let notie;
module.watch(require("notie"), {
  default(v) {
    notie = v;
  }

}, 5);

let getTranslation = key => {
  return "Accounts.edit.tabs.settings." + key;
};

class AccountInvite extends React.Component {
  constructor() {
    super();
    this.state = {
      form: false,
      email: ""
    };
    this.toggleMagangerForm = this.toggleMagangerForm.bind(this);
    this.updateEmail = this.updateEmail.bind(this);
    this.sendInvite = this.sendInvite.bind(this);
  }

  validateEmail(email) {
    let re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    return re.exec(email) ? true : false;
  }

  sendInvite() {
    let {
      email
    } = this.state;

    if (!this.validateEmail(email)) {
      notie.alert(3, I18n.t(getTranslation("form.invite.error.invalid")), 3);
      return;
    }

    if (email === Meteor.user().emails[0].address) {
      notie.alert(3, I18n.t(getTranslation("form.invite.error.self")), 3);
      return;
    }

    let newInvite = {
      email,
      account: this.props.account._id
    };
    let component = this;
    Meteor.call("account-invite-create", newInvite, function (err, res) {
      if (err) {
        if (err.error === 500) {
          err.error = I18n.t(getTranslation("form.invite.error.failed"));
        }

        notie.alert(3, err.reason || err.error, 3);
        return;
      }

      component.props.refetch({
        accountID: component.props.account._id
      });
      component.setState({
        form: false
      });
      swal(I18n.t(getTranslation("form.invite.success.title")), I18n.t(getTranslation("form.invite.success.description")), "success");
    }); //console.log("SEND_INVITE_TO", email, this.props.account);
  }

  updateEmail(e) {
    let val = e.target.value;
    let newState = (0, _objectSpread2.default)({}, this.state);
    newState.email = val;
    this.setState(newState);
  }

  toggleMagangerForm() {
    let newState = (0, _objectSpread2.default)({}, this.state);
    newState.form = !newState.form;
    this.setState(newState);
  }

  tooltipContent(content) {
    return React.createElement(Tooltip, {
      id: "tooltip_content"
    }, content);
  }

  render() {
    let {
      manager,
      hasInvite,
      isOwner
    } = this.props;
    let managerName = (manager.profile.name || "") + " " + (manager.profile.lastName || "");
    return React.createElement("div", null, React.createElement("div", {
      className: "col-md-12"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("form.manager.title")
    })), React.createElement("div", {
      className: "form-avatar"
    }, React.createElement(SocialAvatar, {
      avatar: manager.profile.avatar,
      name: managerName,
      size: "50"
    }), React.createElement("div", {
      className: "title"
    }, this.props.userId === manager._id ? React.createElement(Translate, {
      value: getTranslation("form.manager.youAre")
    }) : managerName === " " ? manager.emails[0].address : managerName, hasInvite || !isOwner ? "" : React.createElement(OverlayTrigger, {
      placement: "top",
      overlay: this.tooltipContent(React.createElement(Translate, {
        value: getTranslation("form.manager.edit")
      }))
    }, React.createElement("i", {
      className: "icon wb-edit",
      "aria-hidden": "true",
      onClick: this.toggleMagangerForm
    })))))), this.state.form && React.createElement("div", null, React.createElement("div", {
      className: "col-md-8"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("form.invite.title")
    })), React.createElement("input", {
      type: "text",
      className: "form-control",
      placeholder: I18n.t(getTranslation("form.invite.placeholder")),
      onChange: this.updateEmail
    }))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("a", {
      className: "btn btn-primary",
      style: {
        marginTop: "24px"
      },
      onClick: this.sendInvite
    }, React.createElement(Translate, {
      value: getTranslation("form.invite.send")
    })))));
  }

}

module.exportDefault(AccountInvite);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"share.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/ui/components/invite/share.jsx                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/objectSpread"));

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let swal;
module.watch(require("sweetalert2"), {
  default(v) {
    swal = v;
  }

}, 1);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 2);
let Tooltip, OverlayTrigger;
module.watch(require("react-bootstrap"), {
  Tooltip(v) {
    Tooltip = v;
  },

  OverlayTrigger(v) {
    OverlayTrigger = v;
  }

}, 3);
let SocialAvatar;
module.watch(require("../../../../core/ui/components/social-avatar"), {
  default(v) {
    SocialAvatar = v;
  }

}, 4);
let notie;
module.watch(require("notie"), {
  default(v) {
    notie = v;
  }

}, 5);

let getTranslation = key => {
  return "Accounts.edit.tabs.settings.form.invite." + key;
};

class AccountShares extends React.Component {
  constructor() {
    super();
    this.state = {
      email: ""
    };
    this.updateEmail = this.updateEmail.bind(this);
    this.sendInvite = this.sendInvite.bind(this);
    this.deleteInvite = this.deleteInvite.bind(this);
    this.removeShare = this.removeShare.bind(this);
  }

  removeShare(share) {
    let component = this;
    return function () {
      swal({
        title: I18n.t(getTranslation("sent.delete.confirm.title")),
        text: I18n.t(getTranslation("sent.delete.confirm.description")),
        type: "warning",
        showCancelButton: true,
        confirmButtonText: I18n.t(getTranslation("sent.delete.confirm.confirm")),
        cancelButtonText: I18n.t(getTranslation("sent.delete.confirm.cancel"))
      }).then(function () {
        let newShares = [...component.props.input.value];
        let indexOf = newShares.indexOf(share);
        newShares.splice(indexOf, 1);
        component.props.input.onChange(newShares);
      });
    };
  }

  updateEmail(e) {
    let val = e.target.value;
    let newState = (0, _objectSpread2.default)({}, this.state);
    newState.email = val;
    this.setState(newState);
  }

  validateEmail(email) {
    let re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    return re.exec(email) ? true : false;
  }

  sendInvite() {
    let {
      email
    } = this.state;

    if (!this.validateEmail(email)) {
      notie.alert(3, I18n.t(getTranslation("error.invalid")), 3);
      return;
    }

    if (email === Meteor.user().emails[0].address) {
      notie.alert(3, I18n.t(getTranslation("error.self")), 3);
      return;
    }

    let newInvite = {
      email,
      account: this.props.account._id,
      type: "share"
    };
    let component = this;
    Meteor.call("account-invite-create", newInvite, function (err, res) {
      if (err) {
        if (err.error === 500) {
          err.error = I18n.t(getTranslation("error.failed"));
        }

        notie.alert(3, err.reason || err.error, 3);
        return;
      }

      component.props.refetch({
        accountID: component.props.account._id
      });
      component.setState({
        form: false,
        email: ''
      });
      swal(I18n.t(getTranslation("success.title")), I18n.t(getTranslation("success.description")), "success");
    });
  }

  deleteInvite(invite) {
    let component = this;
    let {
      account
    } = this.props;
    return function () {
      swal({
        title: I18n.t(getTranslation("sent.delete.confirm.title")),
        text: I18n.t(getTranslation("sent.delete.confirm.description")),
        type: "warning",
        showCancelButton: true,
        confirmButtonText: I18n.t(getTranslation("sent.delete.confirm.confirm")),
        cancelButtonText: I18n.t(getTranslation("sent.delete.confirm.cancel"))
      }).then(function () {
        Meteor.call("account-invite-delete", invite, account._id, function (err, res) {
          if (err) {
            notie.alert(3, I18n.t(getTranslation("sent.error")), 3);
            return;
          }

          component.props.refetch({
            accountID: account._id
          });
          notie.alert(1, I18n.t(getTranslation("sent.success")), 3);
        });
      });
    };
  }

  tooltipContent(content) {
    return React.createElement(Tooltip, {
      id: "tooltip_content"
    }, content);
  }

  render() {
    let {
      invites,
      account,
      isOwner,
      isManager
    } = this.props;

    if (!isManager && !isOwner) {
      return React.createElement("div", null);
    }

    let shares = this.props.input.value;
    return React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-12"
    }, React.createElement("h5", null, React.createElement(Translate, {
      value: getTranslation("shares.title")
    }))), React.createElement("div", {
      className: "col-md-9"
    }, shares && account.shares.length !== 0 && React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "sharedWith"
    }, React.createElement(Translate, {
      value: getTranslation("shares.current")
    })), React.createElement("ul", {
      className: "list-group list-group-full"
    }, shares.map(account => React.createElement("li", {
      className: "list-group-item",
      key: account._id
    }, React.createElement("div", {
      className: "media"
    }, React.createElement("div", {
      className: "media-left"
    }, React.createElement("a", {
      className: "avatar",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      className: "img-fluid",
      src: account.profile.avatar,
      alt: "..."
    }))), React.createElement("div", {
      className: "media-body"
    }, React.createElement("h4", {
      className: "media-heading"
    }, (account.profile.name || "") + " " + (account.profile.lastName || "")), React.createElement("small", null, account.emails ? account.emails[0].address : "-")), React.createElement("div", {
      className: "media-right"
    }, React.createElement(OverlayTrigger, {
      placement: "top",
      overlay: this.tooltipContent(React.createElement(Translate, {
        value: getTranslation("sent.delete.label")
      }))
    }, React.createElement("i", {
      className: "icon wb-trash",
      "aria-hidden": "true",
      onClick: this.removeShare(account)
    })))))))), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-8"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("shares.form.title")
    })), React.createElement("input", {
      type: "text",
      className: "form-control",
      placeholder: I18n.t(getTranslation("placeholder")),
      value: this.state.email,
      onChange: this.updateEmail
    }))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("a", {
      className: "btn btn-primary",
      style: {
        marginTop: "24px"
      },
      onClick: this.sendInvite
    }, React.createElement(Translate, {
      value: getTranslation("send")
    }))))), invites && invites.length > 0 && React.createElement("div", {
      className: "col-md-8"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "sharedWith"
    }, React.createElement(Translate, {
      value: getTranslation("shares.pending")
    })), invites.map(invite => React.createElement("div", {
      className: "input-group",
      key: invite._id,
      style: {
        marginBottom: "25px"
      }
    }, React.createElement("input", {
      type: "text",
      className: "form-control",
      defaultValue: invite.email + " (" + I18n.t(getTranslation("status." + invite.status)) + ")",
      disabled: true
    }), React.createElement("span", {
      className: "input-group-btn"
    }, React.createElement("a", {
      className: "btn btn-primary"
    }, React.createElement(OverlayTrigger, {
      placement: "top",
      overlay: this.tooltipContent(React.createElement(Translate, {
        value: getTranslation("sent.delete.label")
      }))
    }, React.createElement("i", {
      className: "icon wb-trash",
      "aria-hidden": "true",
      onClick: this.deleteInvite(invite)
    })))))))));
  }

}

module.exportDefault(AccountShares);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"status.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/ui/components/invite/status.jsx                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 1);
let Tooltip, OverlayTrigger;
module.watch(require("react-bootstrap"), {
  Tooltip(v) {
    Tooltip = v;
  },

  OverlayTrigger(v) {
    OverlayTrigger = v;
  }

}, 2);
let SocialAvatar;
module.watch(require("../../../../core/ui/components/social-avatar"), {
  default(v) {
    SocialAvatar = v;
  }

}, 3);
let AccountInvite;
module.watch(require("./invite"), {
  default(v) {
    AccountInvite = v;
  }

}, 4);
let swal;
module.watch(require("sweetalert2"), {
  default(v) {
    swal = v;
  }

}, 5);
let notie;
module.watch(require("notie"), {
  default(v) {
    notie = v;
  }

}, 6);

let getTranslation = key => {
  return "Accounts.edit.tabs.settings.form.invite.sent." + key;
};

class InviteStatus extends React.Component {
  constructor() {
    super();
    this.deleteInvite = this.deleteInvite.bind(this);
  }

  deleteInvite() {
    let component = this;
    let {
      invite,
      account
    } = this.props;
    swal({
      title: I18n.t(getTranslation("delete.confirm.title")),
      text: I18n.t(getTranslation("delete.confirm.description")),
      type: "warning",
      showCancelButton: true,
      confirmButtonText: I18n.t(getTranslation("delete.confirm.confirm")),
      cancelButtonText: I18n.t(getTranslation("delete.confirm.cancel"))
    }).then(function () {
      Meteor.call("account-invite-delete", invite, account._id, function (err, res) {
        if (err) {
          notie.alert(3, I18n.t(getTranslation("error")), 3);
          return;
        }

        component.props.refetch({
          accountID: account._id
        });
        notie.alert(1, I18n.t(getTranslation("success")), 3);
      });
    });
  }

  tooltipContent(content) {
    return React.createElement(Tooltip, {
      id: "tooltip_content"
    }, content);
  }

  render() {
    let {
      manager,
      userId,
      account,
      invite,
      refetch,
      isOwner
    } = this.props;
    return React.createElement("div", {
      className: "row"
    }, React.createElement(AccountInvite, {
      manager: manager,
      userId: userId,
      account: account,
      hasInvite: invite ? true : false,
      refetch: refetch,
      isOwner: isOwner
    }), invite && React.createElement("div", {
      className: "col-md-12"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("label")
    })), React.createElement("div", {
      className: "input-group"
    }, React.createElement("input", {
      type: "text",
      className: "form-control",
      defaultValue: invite.email + " (" + I18n.t(getTranslation("status." + invite.status)) + ")",
      disabled: true
    }), React.createElement("span", {
      className: "input-group-btn"
    }, React.createElement("a", {
      className: "btn btn-primary"
    }, React.createElement(OverlayTrigger, {
      placement: "top",
      overlay: this.tooltipContent(React.createElement(Translate, {
        value: getTranslation("delete.label")
      }))
    }, React.createElement("i", {
      className: "icon wb-trash",
      "aria-hidden": "true",
      onClick: this.deleteInvite
    }))))))));
  }

}

module.exportDefault(InviteStatus);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"view.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/ui/components/invite/view.jsx                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let withRouter;
module.watch(require("react-router"), {
  withRouter(v) {
    withRouter = v;
  }

}, 1);
let swal;
module.watch(require("sweetalert2"), {
  default(v) {
    swal = v;
  }

}, 2);
let Modal;
module.watch(require("react-modal"), {
  default(v) {
    Modal = v;
  }

}, 3);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 4);
let Tooltip, OverlayTrigger;
module.watch(require("react-bootstrap"), {
  Tooltip(v) {
    Tooltip = v;
  },

  OverlayTrigger(v) {
    OverlayTrigger = v;
  }

}, 5);
let SocialAvatar;
module.watch(require("../../../../core/ui/components/social-avatar"), {
  default(v) {
    SocialAvatar = v;
  }

}, 6);
let notie;
module.watch(require("notie"), {
  default(v) {
    notie = v;
  }

}, 7);
let PropTypes;
module.watch(require("prop-types"), {
  default(v) {
    PropTypes = v;
  }

}, 8);

let getTranslation = key => {
  return "Accounts.invite." + key;
};

class AccountInviteView extends React.Component {
  constructor() {
    super();
    this.state = {
      modalIsOpen: true
    };
    this.openModal = this.openModal.bind(this);
    this.closeModal = this.closeModal.bind(this);
    this.updateInvite = this.updateInvite.bind(this);
  }

  openModal() {
    this.setState({
      modalIsOpen: true
    });
  }

  closeModal() {
    this.setState({
      modalIsOpen: false
    });
  }

  updateInvite(action) {
    let {
      invite
    } = this.props;
    let component = this;
    return function () {
      Meteor.call("account-invite-update-status", invite, action, function (err, res) {
        if (err) {
          return;
        }

        if (action === "accept") {
          //console.log("ACCEPT", invite);
          //component.props.router.push("/accounts");
          component.props.router.push("/accounts/edit/" + invite.account._id);
        } else {
          component.props.router.push("/accounts");
        }
      });
    };
  }

  componentWillMount() {
    let {
      invite
    } = this.props;

    if (invite) {
      if (invite.status === "rejected") {
        this.props.router.push("/accounts");
      }

      if (invite.email !== Meteor.user().emails[0].address) {
        let component = this;
        this.setState({
          modalIsOpen: false
        });
        swal(I18n.t(getTranslation("error.title")), I18n.t(getTranslation("error.description")), "error").then(function () {
          component.props.router.push("/accounts");
        });
      }
    } else {
      this.props.router.push("/accounts");
    }
  }

  render() {
    let {
      invite
    } = this.props;

    if (!invite) {
      return React.createElement("div", null);
    }

    return React.createElement("div", null, React.createElement(Modal, {
      isOpen: this.state.modalIsOpen,
      onRequestClose: this.closeModal,
      className: "app-modal",
      contentLabel: "Example Modal"
    }, React.createElement("button", {
      className: "close",
      onClick: this.closeModal
    }, React.createElement("i", {
      className: "icon wb-close-mini",
      "aria-hidden": "true"
    })), React.createElement("div", {
      className: "account-invite-view"
    }, React.createElement("h1", null, React.createElement("span", {
      className: "owner"
    }, (invite.owner.profile.name || "") + " " + (invite.owner.profile.lastName || "") === " " ? invite.owner.emails[0].address : (invite.owner.profile.name || "") + " " + (invite.owner.profile.lastName || "")), "  ", React.createElement(Translate, {
      value: getTranslation("title")
    })), React.createElement("div", {
      className: "form-avatar"
    }, React.createElement(SocialAvatar, {
      avatar: invite.account.information.avatar,
      network: invite.account.network,
      size: "75",
      name: (invite.account.information.name || "") + " " + (invite.account.information.lastName || "")
    }), React.createElement("div", {
      className: "title"
    }, (invite.account.information.name || "") + " " + (invite.account.information.lastName || ""))), React.createElement("div", {
      className: "controls"
    }, React.createElement("a", {
      className: "btn btn-danger",
      onClick: this.updateInvite("reject")
    }, React.createElement(Translate, {
      value: getTranslation("decline")
    })), React.createElement("a", {
      className: "btn btn-primary",
      onClick: this.updateInvite("accept")
    }, React.createElement(Translate, {
      value: getTranslation("accept")
    }))))));
  }

}

let AccountInviteViewWithRouter = withRouter(AccountInviteView);
AccountInviteView.propTypes = {
  router: PropTypes.shape({
    push: PropTypes.func.isRequired
  }).isRequired
};
module.exportDefault(AccountInviteViewWithRouter);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"summary":{"analytics.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/ui/components/summary/analytics.jsx                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 1);
let ContentSoon;
module.watch(require("../../../../core/ui/components/content-soon"), {
  default(v) {
    ContentSoon = v;
  }

}, 2);

class SummaryAnalytics extends React.Component {
  render() {
    let getTranslation = key => {
      return "TeamAttack.new.search.results.empty." + key;
    };

    return React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-12"
    }, React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-body"
    }, React.createElement(ContentSoon, null)))));
  }

}

module.exportDefault(SummaryAnalytics);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"calendar.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/ui/components/summary/calendar.jsx                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 1);
let Calendar;
module.watch(require("../../containers/account-calendar"), {
  default(v) {
    Calendar = v;
  }

}, 2);

class SummaryCalendar extends React.Component {
  render() {
    let getTranslation = key => {
      return "TeamAttack.new.search.results.empty." + key;
    };

    let {
      accountID
    } = this.props;
    return React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-12"
    }, React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-body slim"
    }, React.createElement(Calendar, {
      accountID: accountID,
      controls: false
    })))));
  }

}

module.exportDefault(SummaryCalendar);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"gallery-item.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/ui/components/summary/gallery-item.jsx                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/extends"));

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Slider;
module.watch(require("react-slick"), {
  default(v) {
    Slider = v;
  }

}, 1);
let ReactPlayer;
module.watch(require("react-player"), {
  default(v) {
    ReactPlayer = v;
  }

}, 2);

class LeftNavButton extends React.Component {
  render() {
    let {
      className,
      onClick,
      style
    } = this.props;
    return React.createElement("div", {
      className: className,
      onClick: onClick,
      style: style
    }, React.createElement("i", {
      className: "icon fa-chevron-left",
      "aria-hidden": "true"
    }));
  }

}

class RightNavButton extends React.Component {
  render() {
    let {
      className,
      onClick,
      style
    } = this.props;
    return React.createElement("div", {
      className: className,
      onClick: onClick,
      style: style
    }, React.createElement("i", {
      className: "icon fa-chevron-right",
      "aria-hidden": "true"
    }));
  }

}

class GalleryItem extends React.Component {
  render() {
    let settings = {
      dots: false,
      infinite: true,
      speed: 500,
      slidesToShow: 1,
      slidesToScroll: 1,
      nextArrow: React.createElement(RightNavButton, null),
      prevArrow: React.createElement(LeftNavButton, null)
    };
    let {
      elements,
      type
    } = this.props;

    let getItem = item => {
      if (type === "image") {
        return React.createElement("img", {
          src: item,
          alt: ""
        });
      } else {
        return React.createElement(ReactPlayer, {
          url: item,
          controls: true
        });
      }

      return item;
    };

    return React.createElement("div", {
      className: "gallery-item"
    }, React.createElement(Slider, (0, _extends2.default)({}, settings, {
      className: "gallery-slider"
    }), elements.map((e, i) => React.createElement("div", {
      className: "element",
      key: i
    }, getItem(e)))));
  }

}

module.exportDefault(GalleryItem);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"gallery.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/ui/components/summary/gallery.jsx                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 1);
let GalleryItem;
module.watch(require("./gallery-item"), {
  default(v) {
    GalleryItem = v;
  }

}, 2);

class SummaryGallery extends React.Component {
  render() {
    let getTranslation = key => {
      return "Accounts.edit.tabs.summary.gallery." + key;
    };

    let {
      images,
      videos
    } = this.props.gallery;
    return React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-body slim"
    }, React.createElement("h4", null, React.createElement(Translate, {
      value: getTranslation("images")
    })), images.length > 0 && React.createElement(GalleryItem, {
      type: "image",
      elements: images[0].content
    })))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-body slim"
    }, React.createElement("h4", null, React.createElement(Translate, {
      value: getTranslation("video")
    })), videos.length > 0 && React.createElement(GalleryItem, {
      type: "video",
      elements: videos[0].content
    })))));
  }

}

module.exportDefault(SummaryGallery);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"information-edit.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/ui/components/summary/information-edit.jsx                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 1);
let FormSection, Field;
module.watch(require("redux-form"), {
  FormSection(v) {
    FormSection = v;
  },

  Field(v) {
    Field = v;
  }

}, 2);
let Countries;
module.watch(require("../../../../../constants/countries"), {
  default(v) {
    Countries = v;
  }

}, 3);
let isoLangs;
module.watch(require("../../../../../translations"), {
  isoLangs(v) {
    isoLangs = v;
  }

}, 4);

let _;

module.watch(require("lodash"), {
  default(v) {
    _ = v;
  }

}, 5);
let InputTags;
module.watch(require("../../../../core/ui/components/forms/input-tags"), {
  default(v) {
    InputTags = v;
  }

}, 6);
let InputSelect;
module.watch(require("../../../../core/ui/components/forms/input-select"), {
  default(v) {
    InputSelect = v;
  }

}, 7);
let InputDate;
module.watch(require("../../../../core/ui/components/forms/input-date"), {
  default(v) {
    InputDate = v;
  }

}, 8);

class SummaryInformationEdit extends React.Component {
  render() {
    let getTranslation = key => {
      return "Accounts.edit.tabs.information." + key;
    };

    let languages = [];
    Object.keys(isoLangs).forEach(key => languages.push(isoLangs[key]));
    languages.pop(); //REMOVE TEST LANGUAGE

    languages = _.orderBy(languages, "native");
    return React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-12"
    }, React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-body slim"
    }, React.createElement(FormSection, {
      name: "information"
    }, React.createElement("h4", null, React.createElement(Translate, {
      value: getTranslation("title")
    })), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-3"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationCountry"
    }, React.createElement(Translate, {
      value: getTranslation("form.country")
    })), React.createElement(Field, {
      component: "select",
      name: "country",
      className: "form-control"
    }, React.createElement("option", {
      value: ""
    }, I18n.t(getTranslation("helpers.noSelect"))), Countries.map((c, i) => React.createElement("option", {
      key: i,
      value: c
    }, c))))), React.createElement("div", {
      className: "col-md-3"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationCity"
    }, React.createElement(Translate, {
      value: getTranslation("form.city")
    })), React.createElement(Field, {
      component: "input",
      name: "city",
      className: "form-control"
    }))), React.createElement("div", {
      className: "col-md-3"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationGender"
    }, React.createElement(Translate, {
      value: getTranslation("form.gender.label")
    })), React.createElement(Field, {
      component: InputSelect,
      name: "gender",
      className: "form-control",
      options: [{
        value: "male",
        label: I18n.t(getTranslation("form.gender.values.male"))
      }, {
        value: "female",
        label: I18n.t(getTranslation("form.gender.values.female"))
      }]
    }))), React.createElement("div", {
      className: "col-md-3"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationAge"
    }, React.createElement(Translate, {
      value: getTranslation("form.birthDate")
    })), React.createElement(Field, {
      component: InputDate,
      name: "birthDate",
      className: "form-control"
    }))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationLanguages"
    }, React.createElement(Translate, {
      value: getTranslation("form.languages")
    })), React.createElement(Field, {
      component: "select",
      name: "language",
      placeholder: " ",
      className: "form-control"
    }, React.createElement("option", {
      value: ""
    }, I18n.t(getTranslation("helpers.noSelect"))), languages.map(l => React.createElement("option", {
      key: l.code,
      value: l.code
    }, l.native))))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationSexualOrientation"
    }, React.createElement(Translate, {
      value: getTranslation("form.sexualOrientation.label")
    })), React.createElement(Field, {
      component: "input",
      name: "sexualOrientation",
      className: "form-control"
    }))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationPoliticalIdeas"
    }, React.createElement(Translate, {
      value: getTranslation("form.likes")
    })), React.createElement(Field, {
      component: "input",
      name: "likes",
      className: "form-control"
    }))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationPoliticalIdeas"
    }, React.createElement(Translate, {
      value: getTranslation("form.categories")
    })), React.createElement(Field, {
      component: InputTags,
      name: "categories",
      className: "form-control"
    }))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationPoliticalIdeas"
    }, React.createElement(Translate, {
      value: getTranslation("form.forbiddenSubjects")
    })), React.createElement(Field, {
      component: InputTags,
      name: "forbiddenSubjects",
      className: "form-control"
    }))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationURL1"
    }, React.createElement(Translate, {
      value: getTranslation("form.url")
    })), React.createElement(Field, {
      component: InputTags,
      name: "urls",
      placeholder: " ",
      className: "form-control"
    }))), React.createElement("div", {
      className: "col-md-12"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "exampleInputEmail1"
    }, React.createElement(Translate, {
      value: getTranslation("form.description.label")
    })), React.createElement(Field, {
      component: "textarea",
      name: "description",
      rows: 3,
      className: "form-control"
    })))))))));
  }

}

module.exportDefault(SummaryInformationEdit);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"information.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/ui/components/summary/information.jsx                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 1);
let uuid;
module.watch(require("uuid"), {
  default(v) {
    uuid = v;
  }

}, 2);
let Tooltip, OverlayTrigger;
module.watch(require("react-bootstrap"), {
  Tooltip(v) {
    Tooltip = v;
  },

  OverlayTrigger(v) {
    OverlayTrigger = v;
  }

}, 3);
let SocialAvatar;
module.watch(require("../../../../core/ui/components/social-avatar"), {
  default(v) {
    SocialAvatar = v;
  }

}, 4);

class SummaryInformation extends React.Component {
  render() {
    let getTranslation = key => {
      return "Accounts.edit.tabs." + key;
    };

    let getTooltip = title => React.createElement(Tooltip, {
      id: uuid.v4()
    }, title);

    let {
      settings,
      information,
      groups
    } = this.props;
    let titleStyle = {
      width: "70px",
      transform: "translateY(10px)"
    };
    return React.createElement("div", {
      className: "col-md-5 account-summary-profile"
    }, React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-body slim"
    }, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-7"
    }, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-12"
    }, React.createElement("h4", null, React.createElement(Translate, {
      value: getTranslation("summary.information.profile")
    }))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "form-avatar"
    }, React.createElement(SocialAvatar, {
      avatar: information.avatar,
      name: (information.name || "") + " " + (information.lastName || ""),
      size: "50"
    }), React.createElement("div", {
      className: "title",
      style: titleStyle
    }, (information.name || "") + " " + (information.lastName || "")))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("settings.form.accountIs.title")
    })), React.createElement("div", {
      className: "form-control-static"
    }, React.createElement(OverlayTrigger, {
      placement: "top",
      overlay: getTooltip(React.createElement(Translate, {
        value: getTranslation("settings.form.accountIs.brand")
      }))
    }, React.createElement("div", {
      className: "account-type-icon " + (settings.type.brand ? settings.type.influencer ? "both" : "brand" : "not")
    }, settings.type.brand ? React.createElement(Translate, {
      value: getTranslation("settings.form.accountIs.badges.brand")
    }) : React.createElement("i", {
      className: "wb-close"
    }), React.createElement("div", {
      className: "name"
    }, React.createElement(Translate, {
      value: getTranslation("settings.form.accountIs.brand")
    })))), React.createElement(OverlayTrigger, {
      placement: "top",
      overlay: getTooltip(React.createElement(Translate, {
        value: getTranslation("settings.form.accountIs.influencer")
      }))
    }, React.createElement("div", {
      className: "account-type-icon " + (settings.type.influencer ? settings.type.brand ? "both" : "influencer" : "not")
    }, settings.type.influencer ? React.createElement(Translate, {
      value: getTranslation("settings.form.accountIs.badges.influencer")
    }) : React.createElement("i", {
      className: "wb-close"
    }), React.createElement("div", {
      className: "name"
    }, React.createElement(Translate, {
      value: getTranslation("settings.form.accountIs.influencer")
    }))))))))), React.createElement("div", {
      className: "col-md-5 "
    }, React.createElement("h4", null, React.createElement(Translate, {
      value: getTranslation("summary.information.campaigns.title")
    })), React.createElement("div", {
      className: "row campaigns"
    }, React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "count"
    }, "19", React.createElement("div", {
      className: "title"
    }, React.createElement(Translate, {
      value: getTranslation("summary.information.campaigns.label.total")
    })))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "count"
    }, "19", React.createElement("div", {
      className: "title"
    }, React.createElement(Translate, {
      value: getTranslation("summary.information.campaigns.label.created")
    })))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "count"
    }, "19", React.createElement("div", {
      className: "title"
    }, React.createElement(Translate, {
      value: getTranslation("summary.information.campaigns.label.partOf")
    }))))))), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("h4", null, React.createElement(Translate, {
      value: getTranslation("summary.information.areas")
    })), React.createElement("div", {
      className: "category-list"
    })), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("h4", null, React.createElement(Translate, {
      value: getTranslation("summary.information.categories")
    })), React.createElement("div", {
      className: "category-list"
    })), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("h4", null, React.createElement(Translate, {
      value: getTranslation("summary.information.specialty")
    })), React.createElement("div", {
      className: "category-list"
    }))))));
  }

}

module.exportDefault(SummaryInformation);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"people.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/ui/components/summary/people.jsx                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 1);
let SocialAvatar;
module.watch(require("../../../../core/ui/components/social-avatar"), {
  default(v) {
    SocialAvatar = v;
  }

}, 2);

class SummaryPeople extends React.Component {
  render() {
    let getTranslation = key => {
      return "Accounts.edit.tabs.summary.people." + key;
    };

    let {
      owner,
      manager,
      shares
    } = this.props;
    let titleStyle = {
      width: "70px",
      transform: "translateY(10px)"
    };
    return React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-body slim"
    }, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("h4", null, React.createElement(Translate, {
      value: getTranslation("owner")
    })), React.createElement("div", {
      className: "form-avatar"
    }, React.createElement(SocialAvatar, {
      avatar: owner.profile.avatar,
      name: (owner.profile.name || "") + " " + (owner.profile.lastName || ""),
      size: "50"
    }), React.createElement("div", {
      className: "title",
      style: titleStyle
    }, (owner.profile.name || "") + " " + (owner.profile.lastName || "")))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("h4", null, React.createElement(Translate, {
      value: getTranslation("manager")
    })), React.createElement("div", {
      className: "form-avatar"
    }, React.createElement(SocialAvatar, {
      avatar: manager.profile.avatar,
      name: (manager.profile.name || "") + " " + (manager.profile.lastName || ""),
      size: "50"
    }), React.createElement("div", {
      className: "title",
      style: titleStyle
    }, (manager.profile.name || "") + " " + (manager.profile.lastName || ""))))), React.createElement("div", {
      className: "spacer-20"
    }), shares.length !== 0 && React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-12"
    }, React.createElement("h4", null, React.createElement(Translate, {
      value: getTranslation("shares")
    })), React.createElement("div", {
      className: "avatar-horizontal-list"
    }, shares.map(account => React.createElement("div", {
      className: "form-avatar"
    }, React.createElement(SocialAvatar, {
      avatar: account.profile.avatar,
      name: (account.profile.name || "") + " " + (account.profile.lastName || ""),
      size: "50"
    }), React.createElement("div", {
      className: "title"
    }, (account.profile.name || "") + " " + (account.profile.lastName || ""))))))))));
  }

}

module.exportDefault(SummaryPeople);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"pricing.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/ui/components/summary/pricing.jsx                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 1);

class SummaryPricing extends React.Component {
  render() {
    let getTranslation = key => {
      return "Accounts.edit.tabs.pricing." + key;
    };

    let {
      pricing
    } = this.props;
    return React.createElement("div", {
      className: "col-md-3"
    }, React.createElement("div", {
      className: "panel account-pricing"
    }, React.createElement("div", {
      className: "panel-body slim"
    }, React.createElement("h4", null, React.createElement(Translate, {
      value: getTranslation("title")
    })), React.createElement("div", {
      className: "post-price"
    }, React.createElement("div", {
      className: "title"
    }, React.createElement(Translate, {
      value: getTranslation("form.values.post")
    })), React.createElement("div", {
      className: "price-range"
    }, "$1,140.00 -  $2,140.00 USD")), React.createElement("div", {
      className: "account-pricing-horizontal-list"
    }, React.createElement("div", {
      className: "price"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("form.post")
    })), React.createElement("div", {
      className: "form-control"
    }, pricing.post, " USD"))), React.createElement("div", {
      className: "price"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("form.profilePicture")
    })), React.createElement("div", {
      className: "form-control"
    }, pricing.profilePicture, " USD"))), React.createElement("div", {
      className: "price"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("form.coverPhoto")
    })), React.createElement("div", {
      className: "form-control"
    }, pricing.coverPhoto, " USD"))), React.createElement("div", {
      className: "price"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("form.noPost.hour")
    })), React.createElement("div", {
      className: "form-control"
    }, pricing.noPostHour, " USD"))), React.createElement("div", {
      className: "price"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("form.noPost.day")
    })), React.createElement("div", {
      className: "form-control"
    }, pricing.noPostDay, " USD"))), React.createElement("div", {
      className: "price"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("form.share")
    })), React.createElement("div", {
      className: "form-control"
    }, pricing.share, " USD")))))));
  }

}

module.exportDefault(SummaryPricing);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"target":{"conquer.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/ui/components/target/conquer.jsx                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let $;
module.watch(require("jquery"), {
  default(v) {
    $ = v;
  }

}, 1);
let countries = [{
  "code": "BD",
  "name": "Bangladesh"
}, {
  "code": "BE",
  "name": "Belgium"
}, {
  "code": "BF",
  "name": "Burkina Faso"
}, {
  "code": "BG",
  "name": "Bulgaria"
}, {
  "code": "BA",
  "name": "Bosnia and Herz."
}, {
  "code": "BN",
  "name": "Brunei"
}, {
  "code": "BO",
  "name": "Bolivia"
}, {
  "code": "JP",
  "name": "Japan"
}, {
  "code": "BI",
  "name": "Burundi"
}, {
  "code": "BJ",
  "name": "Benin"
}, {
  "code": "BT",
  "name": "Bhutan"
}, {
  "code": "JM",
  "name": "Jamaica"
}, {
  "code": "BW",
  "name": "Botswana"
}, {
  "code": "BR",
  "name": "Brazil"
}, {
  "code": "BS",
  "name": "Bahamas"
}, {
  "code": "BY",
  "name": "Belarus"
}, {
  "code": "BZ",
  "name": "Belize"
}, {
  "code": "RU",
  "name": "Russia"
}, {
  "code": "RW",
  "name": "Rwanda"
}, {
  "code": "RS",
  "name": "Serbia"
}, {
  "code": "TL",
  "name": "Timor-Leste"
}, {
  "code": "TM",
  "name": "Turkmenistan"
}, {
  "code": "TJ",
  "name": "Tajikistan"
}, {
  "code": "RO",
  "name": "Romania"
}, {
  "code": "GW",
  "name": "Guinea-Bissau"
}, {
  "code": "GT",
  "name": "Guatemala"
}, {
  "code": "GR",
  "name": "Greece"
}, {
  "code": "GQ",
  "name": "Eq. Guinea"
}, {
  "code": "GY",
  "name": "Guyana"
}, {
  "code": "GE",
  "name": "Georgia"
}, {
  "code": "GB",
  "name": "United Kingdom"
}, {
  "code": "GA",
  "name": "Gabon"
}, {
  "code": "GN",
  "name": "Guinea"
}, {
  "code": "GM",
  "name": "Gambia"
}, {
  "code": "GL",
  "name": "Greenland"
}, {
  "code": "GH",
  "name": "Ghana"
}, {
  "code": "OM",
  "name": "Oman"
}, {
  "code": "TN",
  "name": "Tunisia"
}, {
  "code": "JO",
  "name": "Jordan"
}, {
  "code": "HR",
  "name": "Croatia"
}, {
  "code": "HT",
  "name": "Haiti"
}, {
  "code": "HU",
  "name": "Hungary"
}, {
  "code": "HN",
  "name": "Honduras"
}, {
  "code": "PR",
  "name": "Puerto Rico"
}, {
  "code": "PS",
  "name": "Palestine"
}, {
  "code": "PT",
  "name": "Portugal"
}, {
  "code": "PY",
  "name": "Paraguay"
}, {
  "code": "PA",
  "name": "Panama"
}, {
  "code": "PG",
  "name": "Papua New Guinea"
}, {
  "code": "PE",
  "name": "Peru"
}, {
  "code": "PK",
  "name": "Pakistan"
}, {
  "code": "PH",
  "name": "Philippines"
}, {
  "code": "PL",
  "name": "Poland"
}, {
  "code": "ZM",
  "name": "Zambia"
}, {
  "code": "EH",
  "name": "W. Sahara"
}, {
  "code": "EE",
  "name": "Estonia"
}, {
  "code": "EG",
  "name": "Egypt"
}, {
  "code": "ZA",
  "name": "South Africa"
}, {
  "code": "EC",
  "name": "Ecuador"
}, {
  "code": "IT",
  "name": "Italy"
}, {
  "code": "VN",
  "name": "Vietnam"
}, {
  "code": "SB",
  "name": "Solomon Is."
}, {
  "code": "ET",
  "name": "Ethiopia"
}, {
  "code": "SO",
  "name": "Somalia"
}, {
  "code": "ZW",
  "name": "Zimbabwe"
}, {
  "code": "ES",
  "name": "Spain"
}, {
  "code": "ER",
  "name": "Eritrea"
}, {
  "code": "ME",
  "name": "Montenegro"
}, {
  "code": "MD",
  "name": "Moldova"
}, {
  "code": "MG",
  "name": "Madagascar"
}, {
  "code": "MA",
  "name": "Morocco"
}, {
  "code": "UZ",
  "name": "Uzbekistan"
}, {
  "code": "MM",
  "name": "Myanmar"
}, {
  "code": "ML",
  "name": "Mali"
}, {
  "code": "MN",
  "name": "Mongolia"
}, {
  "code": "MK",
  "name": "Macedonia"
}, {
  "code": "MW",
  "name": "Malawi"
}, {
  "code": "MR",
  "name": "Mauritania"
}, {
  "code": "UG",
  "name": "Uganda"
}, {
  "code": "MY",
  "name": "Malaysia"
}, {
  "code": "MX",
  "name": "Mexico"
}, {
  "code": "IL",
  "name": "Israel"
}, {
  "code": "FR",
  "name": "France"
}, {
  "code": "XS",
  "name": "Somaliland"
}, {
  "code": "FI",
  "name": "Finland"
}, {
  "code": "FJ",
  "name": "Fiji"
}, {
  "code": "FK",
  "name": "Falkland Is."
}, {
  "code": "NI",
  "name": "Nicaragua"
}, {
  "code": "NL",
  "name": "Netherlands"
}, {
  "code": "NO",
  "name": "Norway"
}, {
  "code": "NA",
  "name": "Namibia"
}, {
  "code": "VU",
  "name": "Vanuatu"
}, {
  "code": "NC",
  "name": "New Caledonia"
}, {
  "code": "NE",
  "name": "Niger"
}, {
  "code": "NG",
  "name": "Nigeria"
}, {
  "code": "NZ",
  "name": "New Zealand"
}, {
  "code": "NP",
  "name": "Nepal"
}, {
  "code": "XK",
  "name": "Kosovo"
}, {
  "code": "CI",
  "name": "Côte d'Ivoire"
}, {
  "code": "CH",
  "name": "Switzerland"
}, {
  "code": "CO",
  "name": "Colombia"
}, {
  "code": "CN",
  "name": "China"
}, {
  "code": "CM",
  "name": "Cameroon"
}, {
  "code": "CL",
  "name": "Chile"
}, {
  "code": "XC",
  "name": "N. Cyprus"
}, {
  "code": "CA",
  "name": "Canada"
}, {
  "code": "CG",
  "name": "Congo"
}, {
  "code": "CF",
  "name": "Central African Rep."
}, {
  "code": "CD",
  "name": "Dem. Rep. Congo"
}, {
  "code": "CZ",
  "name": "Czech Rep."
}, {
  "code": "CY",
  "name": "Cyprus"
}, {
  "code": "CR",
  "name": "Costa Rica"
}, {
  "code": "CU",
  "name": "Cuba"
}, {
  "code": "SZ",
  "name": "Swaziland"
}, {
  "code": "SY",
  "name": "Syria"
}, {
  "code": "KG",
  "name": "Kyrgyzstan"
}, {
  "code": "KE",
  "name": "Kenya"
}, {
  "code": "SS",
  "name": "S. Sudan"
}, {
  "code": "SR",
  "name": "Suriname"
}, {
  "code": "KH",
  "name": "Cambodia"
}, {
  "code": "SV",
  "name": "El Salvador"
}, {
  "code": "SK",
  "name": "Slovakia"
}, {
  "code": "KR",
  "name": "Korea"
}, {
  "code": "SI",
  "name": "Slovenia"
}, {
  "code": "KP",
  "name": "Dem. Rep. Korea"
}, {
  "code": "KW",
  "name": "Kuwait"
}, {
  "code": "SN",
  "name": "Senegal"
}, {
  "code": "SL",
  "name": "Sierra Leone"
}, {
  "code": "KZ",
  "name": "Kazakhstan"
}, {
  "code": "SA",
  "name": "Saudi Arabia"
}, {
  "code": "SE",
  "name": "Sweden"
}, {
  "code": "SD",
  "name": "Sudan"
}, {
  "code": "DO",
  "name": "Dominican Rep."
}, {
  "code": "DJ",
  "name": "Djibouti"
}, {
  "code": "DK",
  "name": "Denmark"
}, {
  "code": "DE",
  "name": "Germany"
}, {
  "code": "YE",
  "name": "Yemen"
}, {
  "code": "DZ",
  "name": "Algeria"
}, {
  "code": "US",
  "name": "United States"
}, {
  "code": "UY",
  "name": "Uruguay"
}, {
  "code": "LB",
  "name": "Lebanon"
}, {
  "code": "LA",
  "name": "Lao PDR"
}, {
  "code": "TW",
  "name": "Taiwan"
}, {
  "code": "TT",
  "name": "Trinidad and Tobago"
}, {
  "code": "TR",
  "name": "Turkey"
}, {
  "code": "LK",
  "name": "Sri Lanka"
}, {
  "code": "LV",
  "name": "Latvia"
}, {
  "code": "LT",
  "name": "Lithuania"
}, {
  "code": "LU",
  "name": "Luxembourg"
}, {
  "code": "LR",
  "name": "Liberia"
}, {
  "code": "LS",
  "name": "Lesotho"
}, {
  "code": "TH",
  "name": "Thailand"
}, {
  "code": "TF",
  "name": "Fr. S. Antarctic Lands"
}, {
  "code": "TG",
  "name": "Togo"
}, {
  "code": "TD",
  "name": "Chad"
}, {
  "code": "LY",
  "name": "Libya"
}, {
  "code": "AE",
  "name": "United Arab Emirates"
}, {
  "code": "VE",
  "name": "Venezuela"
}, {
  "code": "AF",
  "name": "Afghanistan"
}, {
  "code": "IQ",
  "name": "Iraq"
}, {
  "code": "IS",
  "name": "Iceland"
}, {
  "code": "IR",
  "name": "Iran"
}, {
  "code": "AM",
  "name": "Armenia"
}, {
  "code": "AL",
  "name": "Albania"
}, {
  "code": "AO",
  "name": "Angola"
}, {
  "code": "AR",
  "name": "Argentina"
}, {
  "code": "AU",
  "name": "Australia"
}, {
  "code": "AT",
  "name": "Austria"
}, {
  "code": "IN",
  "name": "India"
}, {
  "code": "TZ",
  "name": "Tanzania"
}, {
  "code": "AZ",
  "name": "Azerbaijan"
}, {
  "code": "IE",
  "name": "Ireland"
}, {
  "code": "ID",
  "name": "Indonesia"
}, {
  "code": "UA",
  "name": "Ukraine"
}, {
  "code": "QA",
  "name": "Qatar"
}, {
  "code": "MZ",
  "name": "Mozambique"
}];

class TargetConquer extends React.Component {
  constructor() {
    super();
    this.state = {
      mounted: false
    };
    this.renderMap = this.renderMap.bind(this);
  }

  renderMap() {
    let component = this;
    let codes = [];

    if (component.props.input.value && Array.isArray(component.props.input.value) && typeof component.props.input.value[0] === "string") {
      codes = component.props.input.value.map(code => {
        return countries.filter(c => c.name === code)[0].code;
      });
    }

    setTimeout(function () {
      let domMap = $("#world-map-accounts-target");
      let map = domMap.vectorMap({
        map: 'world_mill',
        regionsSelectable: true,
        selectedRegions: codes,
        regionStyle: {
          initial: {
            fill: '#ccc' //fill: '#5c9dc1'

          },
          selected: {
            fill: '#c28c58'
          }
        },
        onRegionClick: function (e, code, d, f) {
          //console.log("REGION CLICK",code);
          //console.log("MAP_DATA", map, mapObject);
          setTimeout(function () {
            let regions = mapObject.getSelectedRegions();
            let value = regions.map(r => {
              return countries.filter(c => c.code === r)[0].name;
            }); //console.log("MAP VALUES",value);

            component.props.input.onChange(value);
            setTimeout(() => $(".jvectormap-tip").remove(), 100);
          }, 100); //component.props.close();

          let mapObject = domMap.vectorMap('get', 'mapObject');
        }
      });
    }, 1000);
  }

  componentWillUpdate() {
    let component = this;
    setTimeout(function () {
      let {
        active
      } = component.props;

      if (active && !component.state.mounted) {
        component.renderMap();
        component.setState({
          mounted: true
        });
      }
    }, 150);
  }

  render() {
    return React.createElement("div", null, React.createElement("h3", null, this.props.label), React.createElement("div", {
      id: "world-map-accounts-target",
      className: "vectorMap",
      style: {
        width: " 100%",
        height: " 400px"
      }
    }));
  }

}

module.exportDefault(TargetConquer);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"objective-proposal.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/ui/components/target/objective-proposal.jsx                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/objectSpread"));

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 1);
let swal;
module.watch(require("sweetalert2"), {
  default(v) {
    swal = v;
  }

}, 2);

let getTranslation = key => {
  return "Accounts.edit.tabs.target.form.proposal." + key;
};

class ObjectiveProposal extends React.Component {
  constructor() {
    super();
    this.state = {
      type: "objective",
      objective: ""
    };
    this.submitForm = this.submitForm.bind(this);
    this.updateValue = this.updateValue.bind(this);
  }

  updateValue(key) {
    let component = this;
    return function (e) {
      let val = e.target.value;
      let newState = (0, _objectSpread2.default)({}, component.state);
      newState[key] = val;
      component.setState(newState);
    };
  }

  submitForm() {
    console.log("FORM_SUBMISSION", this.state);
    let component = this;
    let {
      accountID
    } = this.props;
    Meteor.call("account-target-objective-proposal", accountID, this.state, function (err, res) {
      if (err) {
        console.log("ERROR", err);
        swal(I18n.t(getTranslation("modals.error.title")), I18n.t(getTranslation("modals.error.description")), "error");
        return;
      }

      component.setState({});
      swal(I18n.t(getTranslation("modals.done.title")), I18n.t(getTranslation("modals.done.description")), "success");
    });
  }

  render() {
    return React.createElement("div", {
      className: "form-group"
    }, React.createElement("div", {
      className: "input-group"
    }, React.createElement("input", {
      type: "text",
      className: "form-control",
      value: this.state.objective,
      onChange: this.updateValue("objective"),
      placeholder: I18n.t(getTranslation("objectives.placeholder"))
    }), React.createElement("span", {
      className: "input-group-btn"
    }, React.createElement("button", {
      className: "btn btn-success",
      type: "button",
      onClick: this.submitForm
    }, React.createElement("i", {
      className: "fa fa-check",
      "aria-hidden": "true"
    })))));
  }

}

module.exportDefault(ObjectiveProposal);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"objectives.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/ui/components/target/objectives.jsx                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 1);
let Field;
module.watch(require("redux-form"), {
  Field(v) {
    Field = v;
  }

}, 2);
let InputSelect;
module.watch(require("../../../../core/ui/components/forms/input-checkbox"), {
  default(v) {
    InputSelect = v;
  }

}, 3);

class TargetObjectives extends React.Component {
  render() {
    let objectiveKeys = ["increaseFollowers", "increaseViews", "increaseShares", "increaseEngagement", "increaseLikes", "increaseTrafficHours", "reachNewMarkets", "increaseSpeaking", "increasePlays", "increaseWebsiteTraffic", "positionTarget", "keepTarget", "presence", "positionNewMarkets"];

    let getTranslation = key => {
      return "Accounts.edit.tabs.target.form.objectives." + key;
    };

    return React.createElement("div", null, React.createElement("h3", null, "Metas"), React.createElement("div", {
      className: "row"
    }, objectiveKeys.map((key, i) => React.createElement("div", {
      className: "col-md-4",
      key: i
    }, React.createElement(Field, {
      component: InputSelect,
      name: key,
      className: "form-control",
      label: React.createElement(Translate, {
        value: getTranslation(key)
      })
    })))));
  }

}

module.exportDefault(TargetObjectives);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"target-item.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/ui/components/target/target-item.jsx                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 1);
let FormSection, Field;
module.watch(require("redux-form"), {
  FormSection(v) {
    FormSection = v;
  },

  Field(v) {
    Field = v;
  }

}, 2);
let Countries;
module.watch(require("../../../../../constants/countries"), {
  default(v) {
    Countries = v;
  }

}, 3);
let isoLangs;
module.watch(require("../../../../../translations"), {
  isoLangs(v) {
    isoLangs = v;
  }

}, 4);

let _;

module.watch(require("lodash"), {
  default(v) {
    _ = v;
  }

}, 5);
let InputSelectMultiple;
module.watch(require("../../../../core/ui/components/forms/input-select-multiple"), {
  default(v) {
    InputSelectMultiple = v;
  }

}, 6);

class TargetsItem extends React.Component {
  render() {
    let getTranslation = key => {
      return "Accounts.edit.tabs.target." + key;
    };

    let languages = [];
    Object.keys(isoLangs).forEach(key => languages.push(isoLangs[key]));
    languages.pop(); //REMOVE TEST LANGUAGE

    languages = _.orderBy(languages, "native").map(l => ({
      value: l.code,
      label: l.native
    }));
    let countries = Countries.map(c => ({
      label: c,
      value: c
    }));
    return React.createElement("div", null, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement(Field, {
      component: "input",
      name: "name",
      className: "form-control no-back target-title"
    })))), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-12"
    }, React.createElement("p", null, React.createElement(Translate, {
      value: getTranslation("sections.own.description")
    })))), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationAudienceAge"
    }, React.createElement(Translate, {
      value: getTranslation("form.age.label")
    })), React.createElement(Field, {
      component: "select",
      name: "age",
      className: "form-control"
    }, React.createElement("option", {
      value: ""
    }, I18n.t(getTranslation("form.noSelect"))), React.createElement("option", {
      value: "18-19"
    }, "18-19 ", I18n.t(getTranslation("form.age.helper"))), React.createElement("option", {
      value: "20-24"
    }, "20-24 ", I18n.t(getTranslation("form.age.helper"))), React.createElement("option", {
      value: "25-29"
    }, "25-29 ", I18n.t(getTranslation("form.age.helper"))), React.createElement("option", {
      value: "30-34"
    }, "30-34 ", I18n.t(getTranslation("form.age.helper"))), React.createElement("option", {
      value: "35-39"
    }, "35-39 ", I18n.t(getTranslation("form.age.helper"))), React.createElement("option", {
      value: "40-44"
    }, "40-44 ", I18n.t(getTranslation("form.age.helper"))), React.createElement("option", {
      value: "45-49"
    }, "45-49 ", I18n.t(getTranslation("form.age.helper"))), React.createElement("option", {
      value: "50-54"
    }, "50-54 ", I18n.t(getTranslation("form.age.helper"))), React.createElement("option", {
      value: "55-59"
    }, "55-59 ", I18n.t(getTranslation("form.age.helper"))), React.createElement("option", {
      value: "60-64"
    }, "60-64 ", I18n.t(getTranslation("form.age.helper"))), React.createElement("option", {
      value: "65"
    }, "65+ ", I18n.t(getTranslation("form.age.helper")))))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationAudienceGender"
    }, React.createElement(Translate, {
      value: getTranslation("form.gender.label")
    })), React.createElement(Field, {
      component: "select",
      name: "gender",
      className: "form-control"
    }, React.createElement("option", {
      value: ""
    }, I18n.t(getTranslation("form.noSelect"))), React.createElement("option", {
      value: "male"
    }, I18n.t(getTranslation("form.gender.values.male"))), React.createElement("option", {
      value: "female"
    }, I18n.t(getTranslation("form.gender.values.female"))), React.createElement("option", {
      value: "split"
    }, I18n.t(getTranslation("form.gender.values.split")))))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationAudienceNRSSG"
    }, React.createElement(Translate, {
      value: getTranslation("form.nrssg.label")
    })), React.createElement(Field, {
      component: "select",
      name: "nrssg",
      className: "form-control"
    }, React.createElement("option", {
      value: ""
    }, I18n.t(getTranslation("form.noSelect"))), React.createElement("option", {
      value: "a"
    }, I18n.t(getTranslation("form.nrssg.values.a"))), React.createElement("option", {
      value: "b"
    }, I18n.t(getTranslation("form.nrssg.values.b"))), React.createElement("option", {
      value: "c1"
    }, I18n.t(getTranslation("form.nrssg.values.c1"))), React.createElement("option", {
      value: "c2"
    }, I18n.t(getTranslation("form.nrssg.values.c2"))), React.createElement("option", {
      value: "d"
    }, I18n.t(getTranslation("form.nrssg.values.d"))), React.createElement("option", {
      value: "e"
    }, I18n.t(getTranslation("form.nrssg.values.e")))))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationAudienceCountry"
    }, React.createElement(Translate, {
      value: getTranslation("form.countries.label")
    })), React.createElement(Field, {
      component: InputSelectMultiple,
      name: "countries",
      className: "form-control",
      options: countries
    }))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationAudienceCities"
    }, React.createElement(Translate, {
      value: getTranslation("form.cities.label")
    })), React.createElement(Field, {
      component: InputSelectMultiple,
      name: "cities",
      className: "form-control",
      options: countries
    }))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationAudienceLanguages"
    }, React.createElement(Translate, {
      value: getTranslation("form.languages.label")
    })), React.createElement(Field, {
      component: InputSelectMultiple,
      name: "languages",
      className: "form-control",
      options: languages
    })))), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-12"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "exampleInputEmail1"
    }, React.createElement(Translate, {
      value: getTranslation("form.description.label")
    })), React.createElement(Field, {
      component: "textarea",
      name: "description",
      rows: 3,
      className: "form-control",
      placeholder: I18n.t(getTranslation("form.description.placeholder"))
    })))));
  }

}

module.exportDefault(TargetsItem);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"targets-edit.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/ui/components/target/targets-edit.jsx                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let TargetsItem;
module.watch(require("./target-item"), {
  default(v) {
    TargetsItem = v;
  }

}, 1);
let FormSection;
module.watch(require("redux-form"), {
  FormSection(v) {
    FormSection = v;
  }

}, 2);
let Tabs, Tab;
module.watch(require("react-bootstrap"), {
  Tabs(v) {
    Tabs = v;
  },

  Tab(v) {
    Tab = v;
  }

}, 3);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 4);

let getTranslation = key => {
  return "Accounts.edit.tabs.target." + key;
};

let letters = ["A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"];

const TargetsEdit = (_ref) => {
  let {
    fields
  } = _ref;
  if (fields.length === 0) fields.push({
    name: I18n.t("target") + " " + letters[fields.length]
  });
  window.fields = fields;
  return React.createElement("div", {
    className: "ibol-tabs"
  }, React.createElement("button", {
    type: "button",
    className: "add-tab",
    onClick: () => fields.push({
      name: I18n.t("target") + " " + letters[fields.length]
    })
  }, React.createElement("i", {
    className: "fa fa-plus",
    "aria-hidden": "true"
  }), " Agregar Target"), React.createElement(Tabs, {
    defaultActiveKey: 0,
    id: "uncontrolled-tab-example",
    bsStyle: "tabs",
    onSelect: tab => console.log("TAB_CHANGE", tab)
  }, fields.map((target, index) => React.createElement(Tab, {
    key: index,
    eventKey: index,
    title: fields.get(index).name ? fields.get(index).name : I18n.t("target") + " " + letters[index]
  }, React.createElement("button", {
    type: "button",
    className: "add-tab",
    style: {
      float: "right",
      marginBottom: -40
    },
    onClick: () => fields.remove(index)
  }, React.createElement("i", {
    className: "fa fa-minus",
    "aria-hidden": "true"
  }), " Eliminar Target"), React.createElement(FormSection, {
    name: "".concat(target)
  }, React.createElement(TargetsItem, null))))));
};

module.exportDefault(TargetsEdit);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"calendar.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/ui/components/calendar.jsx                                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 1);
let Calendar;
module.watch(require("../../../agenda/ui/components/calendar"), {
  default(v) {
    Calendar = v;
  }

}, 2);
let CalendarFilter;
module.watch(require("./calendar/filters"), {
  default(v) {
    CalendarFilter = v;
  }

}, 3);
let PostCreate;
module.watch(require("../../../agenda/ui/components/post-create"), {
  default(v) {
    PostCreate = v;
  }

}, 4);
let Modal;
module.watch(require("react-modal"), {
  default(v) {
    Modal = v;
  }

}, 5);
let notie;
module.watch(require("notie"), {
  default(v) {
    notie = v;
  }

}, 6);
let I18n;
module.watch(require("react-redux-i18n"), {
  I18n(v) {
    I18n = v;
  }

}, 7);

class AccountCalendar extends React.Component {
  constructor() {
    super();
    this.state = {
      modalIsOpen: false
    };
    this.openModal = this.openModal.bind(this);
    this.closeModal = this.closeModal.bind(this);
    this.savePost = this.savePost.bind(this);
  }

  openModal(e) {
    this.setState({
      modalIsOpen: true
    });
    return false;
  }

  closeModal() {
    this.setState({
      modalIsOpen: false
    });
  }

  savePost(data) {
    //console.log("SAVE_POST", data);
    let account = this.props.account;
    data.accounts = [account];

    let getTranslation = key => {
      return "Agenda.publish.modal.messages." + key;
    };

    let component = this; //TODO: Validate Data

    Meteor.call("posts-scheduler", data, function (err, res) {
      if (err) {
        if (err.error === 500) {
          err.error = "Failed to create post.";
        }

        console.error("ERROR_SAVING_POST", err);
        notie.alert(3, err.reason || err.error, 3);
        return;
      }

      notie.alert(1, I18n.t(getTranslation("saved")), 3);
      component.props.refetch({});
      component.closeModal(); //console.log("SERVER_SAVE_POSTS_RESPONSE",res);
    });
  }

  render() {
    let getTranslation = key => {
      return "Accounts.edit.tabs.calendar." + key;
    };

    let {
      events,
      filters,
      update,
      controls,
      readOnly
    } = this.props;
    return React.createElement("div", {
      className: "content-padding-30"
    }, React.createElement("div", {
      className: "row"
    }, controls !== false && React.createElement("div", {
      className: "col-md-4"
    }, readOnly !== true && React.createElement("div", null, React.createElement("a", {
      className: "btn btn-primary",
      onClick: this.openModal
    }, React.createElement(Translate, {
      value: getTranslation("publish.button")
    })), React.createElement("div", {
      className: "spacer-30"
    })), React.createElement(CalendarFilter, {
      filters: filters,
      update: update
    })), React.createElement("div", {
      className: controls !== false ? "col-md-8" : "col-md-12"
    }, React.createElement(Calendar, {
      events: events
    }))), React.createElement(Modal, {
      isOpen: this.state.modalIsOpen,
      onRequestClose: this.closeModal,
      className: "app-modal",
      contentLabel: "Example Modal"
    }, React.createElement("button", {
      className: "close",
      onClick: this.closeModal
    }, React.createElement("i", {
      className: "icon wb-close-mini",
      "aria-hidden": "true"
    })), React.createElement(PostCreate, {
      refetch: this.props.refetch,
      onSubmit: this.savePost,
      controls: {
        media: true,
        date: true,
        location: true,
        preview: true,
        discard: true
      }
    })));
  }

}

module.exportDefault(AccountCalendar);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"gallery.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/ui/components/gallery.jsx                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let InputGallery;
module.watch(require("../../../core/ui/components/forms/input-gallery"), {
  default(v) {
    InputGallery = v;
  }

}, 1);
let InputVideoGallery;
module.watch(require("../../../core/ui/components/forms/input-video-gallery"), {
  default(v) {
    InputVideoGallery = v;
  }

}, 2);
let Field;
module.watch(require("redux-form"), {
  Field(v) {
    Field = v;
  }

}, 3);

class Gallery extends React.Component {
  render() {
    let getTranslationImages = key => {
      return "Accounts.edit.tabs.gallery.images." + key;
    };

    let getTranslationVideos = key => {
      return "Accounts.edit.tabs.gallery.videos." + key;
    };

    return React.createElement("div", {
      className: "content-padding-30"
    }, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement(Field, {
      component: InputGallery,
      value: "gallery",
      getTranslation: getTranslationImages,
      name: "images",
      uploader: "account-image-upload"
    })), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement(Field, {
      component: InputVideoGallery,
      value: "gallery",
      getTranslation: getTranslationVideos,
      name: "videos"
    }))));
  }

}

module.exportDefault(Gallery);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"header-groups.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/ui/components/header-groups.jsx                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let SocialAvatar;
module.watch(require("../../../core/ui/components/social-avatar"), {
  default(v) {
    SocialAvatar = v;
  }

}, 1);

class HeaderGroups extends React.Component {
  constructor() {
    super();
    this.changeGroup = this.changeGroup.bind(this);
  }

  changeGroup(e) {
    let val = e.target.value;
    this.props.refetch({
      tag: val
    });
  }

  render() {
    return React.createElement("div", {
      className: "list"
    }, React.createElement("div", {
      className: "select-wrap"
    }, React.createElement("select", {
      onChange: this.changeGroup
    }, this.props.groups.map((g, i) => React.createElement("option", {
      value: g,
      key: i
    }, g))), React.createElement("i", {
      className: "caret"
    })), React.createElement("ul", {
      className: "profile-list"
    }, this.props.accounts.map((a, i) => React.createElement("li", {
      key: i
    }, React.createElement(SocialAvatar, {
      avatar: a.information.avatar,
      network: a.network,
      name: (a.information.name || "") + " " + (a.information.lastName || "")
    })))));
  }

}

module.exportDefault(HeaderGroups);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"header.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/ui/components/header.jsx                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let SocialAvatarProfile;
module.watch(require("../../../core/ui/components/social-avatar-profile"), {
  default(v) {
    SocialAvatarProfile = v;
  }

}, 1);
let HeaderGroups;
module.watch(require("../containers/header-groups"), {
  default(v) {
    HeaderGroups = v;
  }

}, 2);

class Header extends React.Component {
  constructor() {
    super();
  }

  getRating(followers) {
    if (followers <= 20000) {
      return React.createElement("div", {
        className: "followers"
      }, React.createElement("i", {
        className: "fa fa-star-half-o",
        "aria-hidden": "true"
      }), React.createElement("i", {
        className: "fa fa-star-o",
        "aria-hidden": "true"
      }), React.createElement("i", {
        className: "fa fa-star-o",
        "aria-hidden": "true"
      }), React.createElement("i", {
        className: "fa fa-star-o",
        "aria-hidden": "true"
      }), React.createElement("i", {
        className: "fa fa-star-o",
        "aria-hidden": "true"
      }));
    }

    if (followers > 20000 && followers <= 50000) {
      return React.createElement("div", null, React.createElement("i", {
        className: "fa fa-star",
        "aria-hidden": "true"
      }), React.createElement("i", {
        className: "fa fa-star-o",
        "aria-hidden": "true"
      }), React.createElement("i", {
        className: "fa fa-star-o",
        "aria-hidden": "true"
      }), React.createElement("i", {
        className: "fa fa-star-o",
        "aria-hidden": "true"
      }), React.createElement("i", {
        className: "fa fa-star-o",
        "aria-hidden": "true"
      }));
    }

    if (followers > 50000 && followers <= 100000) {
      return React.createElement("div", {
        className: "followers"
      }, React.createElement("i", {
        className: "fa fa-star",
        "aria-hidden": "true"
      }), React.createElement("i", {
        className: "fa fa-star-half-o",
        "aria-hidden": "true"
      }), React.createElement("i", {
        className: "fa fa-star-o",
        "aria-hidden": "true"
      }), React.createElement("i", {
        className: "fa fa-star-o",
        "aria-hidden": "true"
      }), React.createElement("i", {
        className: "fa fa-star-o",
        "aria-hidden": "true"
      }));
    }

    if (followers > 100000 && followers <= 250000) {
      return React.createElement("div", {
        className: "followers"
      }, React.createElement("i", {
        className: "fa fa-star",
        "aria-hidden": "true"
      }), React.createElement("i", {
        className: "fa fa-star",
        "aria-hidden": "true"
      }), React.createElement("i", {
        className: "fa fa-star-o",
        "aria-hidden": "true"
      }), React.createElement("i", {
        className: "fa fa-star-o",
        "aria-hidden": "true"
      }), React.createElement("i", {
        className: "fa fa-star-o",
        "aria-hidden": "true"
      }));
    }

    if (followers > 250000 && followers <= 500000) {
      return React.createElement("div", {
        className: "followers"
      }, React.createElement("i", {
        className: "fa fa-star",
        "aria-hidden": "true"
      }), React.createElement("i", {
        className: "fa fa-star",
        "aria-hidden": "true"
      }), React.createElement("i", {
        className: "fa fa-star-half-o",
        "aria-hidden": "true"
      }));
    }

    if (followers > 500000 && followers <= 1000000) {
      return React.createElement("div", {
        className: "followers"
      }, React.createElement("i", {
        className: "fa fa-star",
        "aria-hidden": "true"
      }), React.createElement("i", {
        className: "fa fa-star",
        "aria-hidden": "true"
      }), React.createElement("i", {
        className: "fa fa-star",
        "aria-hidden": "true"
      }), React.createElement("i", {
        className: "fa fa-star-o",
        "aria-hidden": "true"
      }), "profile", React.createElement("i", {
        className: "fa fa-star-o",
        "aria-hidden": "true"
      }));
    }

    if (followers > 1000000 && followers <= 2000000) {
      return React.createElement("div", {
        className: "followers"
      }, React.createElement("i", {
        className: "fa fa-star",
        "aria-hidden": "true"
      }), React.createElement("i", {
        className: "fa fa-star",
        "aria-hidden": "true"
      }), React.createElement("i", {
        className: "fa fa-star",
        "aria-hidden": "true"
      }), React.createElement("i", {
        className: "fa fa-star-half-o",
        "aria-hidden": "true"
      }), React.createElement("i", {
        className: "fa fa-star-o",
        "aria-hidden": "true"
      }));
    }

    if (followers > 2000000 && followers <= 5000000) {
      return React.createElement("div", {
        className: "followers"
      }, React.createElement("i", {
        className: "fa fa-star",
        "aria-hidden": "true"
      }), React.createElement("i", {
        className: "fa fa-star",
        "aria-hidden": "true"
      }), React.createElement("i", {
        className: "fa fa-star",
        "aria-hidden": "true"
      }), React.createElement("i", {
        className: "fa fa-star",
        "aria-hidden": "true"
      }), React.createElement("i", {
        className: "fa fa-star-o",
        "aria-hidden": "true"
      }));
    }

    SocialAvatar;

    if (followers > 5000000 && followers <= 10000000) {
      return React.createElement("div", {
        className: "followers"
      }, React.createElement("i", {
        className: "fa fa-star",
        "aria-hidden": "true"
      }), React.createElement("i", {
        className: "fa fa-star",
        "aria-hidden": "true"
      }), React.createElement("i", {
        className: "fa fa-star",
        "aria-hidden": "true"
      }), React.createElement("i", {
        className: "fa fa-star",
        "aria-hidden": "true"
      }), React.createElement("i", {
        className: "fa fa-star-half-o",
        "aria-hidden": "true"
      }));
    }

    if (followers > 10000000 && followers <= 20000000) {
      return React.createElement("div", {
        className: "followers"
      }, React.createElement("i", {
        className: "fa fa-star",
        "aria-hidden": "true"
      }), React.createElement("i", {
        className: "fa fa-star",
        "aria-hidden": "true"
      }), React.createElement("i", {
        className: "fa fa-star",
        "aria-hidden": "true"
      }), React.createElement("i", {
        className: "fa fa-star",
        "aria-hidden": "true"
      }), React.createElement("i", {
        className: "fa fa-star",
        "aria-hidden": "true"
      }));
    }

    if (followers > 20000000 && followers <= 50000000) {
      return React.createElement("div", {
        className: "followers"
      }, React.createElement("i", {
        className: "fa fa-gift",
        "aria-hidden": "true"
      }));
    }

    if (followers > 50000000) {
      return React.createElement("div", {
        className: "followers"
      }, React.createElement("i", {
        className: "fa fa-diamond",
        "aria-hidden": "true"
      }));
    }
  }

  render() {
    let {
      information,
      statistics
    } = this.props.account;
    const profile = {
      name: (information.name || "") + " " + (information.lastName || ""),
      avatar: information.avatar,
      network: this.props.account.network,
      location: (information.city ? information.city + "," : "") + " " + (information.country || ""),
      age: information.age
    };
    return React.createElement("div", {
      className: "row account-header"
    }, React.createElement("div", {
      className: "col-md-6 profile"
    }), React.createElement("div", {
      className: "col-md-6"
    }, this.props.account.groups[0] && this.props.boolean && React.createElement(HeaderGroups, {
      groups: this.props.account.groups
    })), React.createElement("div", {
      className: "col-md-12"
    }, React.createElement(SocialAvatarProfile, {
      avatar: profile.avatar,
      network: profile.network,
      name: profile.name,
      size: "100"
    }), React.createElement("div", {
      className: "col-md-10 data"
    }, React.createElement("h2", null, profile.name), React.createElement("span", null, profile.location), React.createElement("span", null, profile.date), React.createElement("span", null, statistics && this.getRating(statistics.followers)))));
  }

}

module.exportDefault(Header);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"information.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/ui/components/information.jsx                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let I18n, Translate;
module.watch(require("react-redux-i18n"), {
  I18n(v) {
    I18n = v;
  },

  Translate(v) {
    Translate = v;
  }

}, 1);
let Field;
module.watch(require("redux-form"), {
  Field(v) {
    Field = v;
  }

}, 2);
let InputTags;
module.watch(require("../../../core/ui/components/forms/input-tags"), {
  default(v) {
    InputTags = v;
  }

}, 3);
let InputSelect;
module.watch(require("../../../core/ui/components/forms/input-select"), {
  default(v) {
    InputSelect = v;
  }

}, 4);
let InputDate;
module.watch(require("../../../core/ui/components/forms/input-date"), {
  default(v) {
    InputDate = v;
  }

}, 5);
let Countries;
module.watch(require("../../../../constants/countries"), {
  default(v) {
    Countries = v;
  }

}, 6);
let isoLangs;
module.watch(require("../../../../translations"), {
  isoLangs(v) {
    isoLangs = v;
  }

}, 7);

let _;

module.watch(require("lodash"), {
  default(v) {
    _ = v;
  }

}, 8);
let SpecialtyProposal;
module.watch(require("./information/specialty-proposal"), {
  default(v) {
    SpecialtyProposal = v;
  }

}, 9);
let CategoryProposal;
module.watch(require("./information/category-proposal"), {
  default(v) {
    CategoryProposal = v;
  }

}, 10);

class Information extends React.Component {
  render() {
    let getTranslation = key => {
      return "Accounts.edit.tabs.information." + key;
    };

    let {
      accountID
    } = this.props;
    let languages = [];
    Object.keys(isoLangs).forEach(key => languages.push(isoLangs[key]));
    languages.pop(); //REMOVE TEST LANGUAGE

    languages = _.orderBy(languages, "native");
    return React.createElement("div", {
      className: "content-padding-30"
    }, React.createElement("h4", null, React.createElement(Translate, {
      value: getTranslation("instructions")
    })), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("form.name")
    })), React.createElement(Field, {
      component: "input",
      name: "name",
      className: "form-control"
    }))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationGender"
    }, React.createElement(Translate, {
      value: getTranslation("form.gender.label")
    })), React.createElement(Field, {
      component: InputSelect,
      name: "gender",
      className: "form-control",
      options: [{
        value: "male",
        label: I18n.t(getTranslation("form.gender.values.male"))
      }, {
        value: "female",
        label: I18n.t(getTranslation("form.gender.values.female"))
      }]
    }))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationAge"
    }, React.createElement(Translate, {
      value: getTranslation("form.birthDate")
    })), React.createElement(Field, {
      component: InputDate,
      name: "birthDate",
      className: "form-control"
    }))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationCountry"
    }, React.createElement(Translate, {
      value: getTranslation("form.country")
    })), React.createElement(Field, {
      component: "select",
      name: "country",
      className: "form-control"
    }, React.createElement("option", {
      value: ""
    }, I18n.t(getTranslation("helpers.noSelect"))), Countries.map((c, i) => React.createElement("option", {
      key: i,
      value: c
    }, c))))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationCity"
    }, React.createElement(Translate, {
      value: getTranslation("form.city")
    })), React.createElement(Field, {
      component: "input",
      name: "city",
      className: "form-control"
    }))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationMaritalStatus"
    }, React.createElement(Translate, {
      value: getTranslation("form.maritalStatus.label")
    })), React.createElement(Field, {
      component: InputSelect,
      name: "maritalStatus",
      className: "form-control",
      options: [{
        value: "",
        label: I18n.t(getTranslation("helpers.noSelect"))
      }, {
        value: "single",
        label: I18n.t(getTranslation("form.maritalStatus.values.single"))
      }, {
        value: "married",
        label: I18n.t(getTranslation("form.maritalStatus.values.married"))
      }]
    }))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationLanguages"
    }, React.createElement(Translate, {
      value: getTranslation("form.languages")
    })), React.createElement(Field, {
      component: "select",
      name: "language",
      placeholder: " ",
      className: "form-control"
    }, React.createElement("option", {
      value: ""
    }, I18n.t(getTranslation("helpers.noSelect"))), languages.map(l => React.createElement("option", {
      key: l.code,
      value: l.code
    }, l.native))))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationSexualOrientation"
    }, React.createElement(Translate, {
      value: getTranslation("form.sexualOrientation.label")
    })), React.createElement(Field, {
      component: InputSelect,
      name: "sexualOrientation",
      className: "form-control",
      options: [{
        value: "",
        label: I18n.t(getTranslation("helpers.noSelect"))
      }, {
        value: "heterosexual",
        label: I18n.t(getTranslation("form.sexualOrientation.values.heterosexual"))
      }, {
        value: "homosexual",
        label: I18n.t(getTranslation("form.sexualOrientation.values.homosexual"))
      }, {
        value: "bisexual",
        label: I18n.t(getTranslation("form.sexualOrientation.values.bisexual"))
      }, {
        value: "transexual",
        label: I18n.t(getTranslation("form.sexualOrientation.values.transexual"))
      }]
    }))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationPoliticalIdeas"
    }, React.createElement(Translate, {
      value: getTranslation("form.likes")
    })), React.createElement(Field, {
      component: "input",
      name: "likes",
      className: "form-control"
    })))), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-8"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "exampleInputEmail1"
    }, React.createElement(Translate, {
      value: getTranslation("form.description.label")
    }), React.createElement("div", null, React.createElement("small", null, React.createElement(Translate, {
      value: getTranslation("form.description.description")
    })))), React.createElement(Field, {
      component: "textarea",
      name: "description",
      rows: 3,
      className: "form-control"
    })))), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationPoliticalIdeas"
    }, React.createElement(Translate, {
      value: getTranslation("form.categories")
    })), React.createElement(Field, {
      component: InputTags,
      name: "categories",
      className: "form-control"
    }))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationPoliticalIdeas"
    }, React.createElement(Translate, {
      value: getTranslation("form.specialties")
    })), React.createElement(Field, {
      component: InputTags,
      name: "specialties",
      className: "form-control"
    })))), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-4"
    }, React.createElement(CategoryProposal, {
      accountID: accountID
    })), React.createElement("div", {
      className: "col-md-8"
    }, React.createElement(SpecialtyProposal, {
      accountID: accountID
    }))), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationPoliticalIdeas"
    }, React.createElement(Translate, {
      value: getTranslation("form.forbiddenSubjects")
    })), React.createElement(Field, {
      component: InputTags,
      name: "forbiddenSubjects",
      className: "form-control"
    })))), React.createElement("h5", null, React.createElement(Translate, {
      value: getTranslation("form.urlTitle")
    })), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-12"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationURL1"
    }, React.createElement(Translate, {
      value: getTranslation("form.url")
    })), React.createElement(Field, {
      component: InputTags,
      name: "urls",
      placeholder: " ",
      className: "form-control"
    })))));
  }

}

module.exportDefault(Information);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"list-table.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/ui/components/list-table.jsx                                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 1);
let BootstrapTable, TableHeaderColumn;
module.watch(require("react-bootstrap-table"), {
  BootstrapTable(v) {
    BootstrapTable = v;
  },

  TableHeaderColumn(v) {
    TableHeaderColumn = v;
  }

}, 2);
let Link;
module.watch(require("react-router"), {
  Link(v) {
    Link = v;
  }

}, 3);
let swal;
module.watch(require("sweetalert2"), {
  default(v) {
    swal = v;
  }

}, 4);
let SocialAvatar;
module.watch(require("../../../core/ui/components/social-avatar"), {
  default(v) {
    SocialAvatar = v;
  }

}, 5);

const renderName = function (cell, row) {
  // String example
  return React.createElement(Link, {
    to: "/accounts/edit/" + row._id
  }, React.createElement(SocialAvatar, {
    avatar: cell.avatar,
    name: cell.name,
    size: "50",
    page: row.type === "page"
  }), React.createElement("div", {
    className: "icon-label"
  }, cell.name + " ", cell.lastName));
};

const renderOwner = function (cell, row) {
  // String example
  return React.createElement(Link, {
    to: "/accounts/edit/" + row._id
  }, React.createElement(SocialAvatar, {
    avatar: cell.profile.avatar,
    name: cell.profile.name,
    size: "50"
  }), React.createElement("div", {
    className: "icon-label"
  }, cell.profile.name + " ", cell.profile.lastName));
  TableHeaderColumn;
};

const renderManager = function (cell, row) {
  // String example
  return React.createElement(Link, {
    to: "/accounts/edit/" + row._id
  }, React.createElement(SocialAvatar, {
    avatar: cell.profile.avatar,
    name: cell.profile.name,
    size: "50"
  }), React.createElement("div", {
    className: "icon-label"
  }, cell.profile.name + " ", cell.profile.lastName));
};

const renderCollaborators = function (cell, row) {
  // String example
  return React.createElement(Link, {
    to: "/accounts/edit/" + row._id
  }, cell.length === 0 && "-", cell.map(m => React.createElement(SocialAvatar, {
    key: m._id,
    avatar: m.profile.avatar,
    name: m.profile.name,
    size: "50"
  })));
};

const renderNetwork = function (cell, row) {
  // String example
  return React.createElement("div", null, React.createElement("div", {
    className: "icon"
  }, React.createElement("i", {
    className: "social-icon " + cell
  })));
};

const isBrand = function (cell, row) {
  // String example
  return React.createElement("i", {
    className: "icon circle brand " + (cell.type.brand ? "wb-check" : "wb-close not"),
    "aria-hidden": "true"
  });
};

const isInfluencer = function (cell, row) {
  // String example
  return React.createElement("i", {
    className: "icon circle influencer " + (cell.type.influencer ? "wb-check" : "wb-close not"),
    "aria-hidden": "true"
  });
};

const renderCampaigns = function (cell, row) {
  // String example
  return React.createElement("div", null, cell || "-");
};

const renderTags = function (cell, row) {
  // String example
  const tagsList = function () {
    return cell.map((tag, i) => {
      return React.createElement("div", {
        className: "tag",
        key: i
      }, tag);
    });
  };

  return React.createElement("div", {
    className: "tag-list"
  }, cell.length ? tagsList() : "-");
};

class ListTable extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      sortName: undefined,
      sortOrder: undefined
    };
    this.onSortChange = this.onSortChange.bind(this);
    this.confirmDelete = this.confirmDelete.bind(this);
  }

  onSortChange(sortName, sortOrder) {
    this.setState({
      sortName,
      sortOrder
    });
  }

  confirmDelete(account) {
    let component = this;
    return function () {
      let getTranslation = key => {
        return "Accounts.edit.tabs.settings." + key;
      };

      swal({
        title: I18n.t(getTranslation("delete.main.title")),
        text: I18n.t(getTranslation("delete.main.description")),
        type: "warning",
        showCancelButton: true,
        confirmButtonText: I18n.t(getTranslation("delete.main.confirm")),
        cancelButtonText: I18n.t(getTranslation("delete.main.cancel"))
      }).then(function () {
        Meteor.call("profiles-mark-delete", account, function (err, res) {
          //console.log("DELETE_ACCOUNT", err,res);
          if (err) {
            swal(I18n.t(getTranslation("delete.error.title")), I18n.t(getTranslation("delete.error.description")), "error");
            return;
          }

          swal(I18n.t(getTranslation("delete.done.title")), I18n.t(getTranslation("delete.done.description")), "success");
        });
      });
    };
  }

  render() {
    let getTranslation = key => {
      return "Accounts.list." + key;
    };

    let confirmDelete = this.confirmDelete;

    const renderDelete = function (cell, row) {
      // String example
      return React.createElement("div", {
        style: {
          color: "red",
          cursor: "pointer"
        },
        onClick: confirmDelete(row)
      }, "-");
    };

    const options = {
      sortName: this.state.sortName,
      sortOrder: this.state.sortOrder,
      onSortChange: this.onSortChange,
      noDataText: I18n.t(getTranslation("table.empty"))
    };
    window.userList = this.props.data;
    let data = this.props.data.map((i, index) => Object.assign({}, i, {
      index: index + 1
    }));
    return React.createElement("div", null, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-12"
    }, React.createElement("button", {
      className: "btn btn-primary table-button",
      onClick: this.props.new
    }, React.createElement(Translate, {
      value: getTranslation("new")
    })))), React.createElement("div", {
      className: "ibol-table"
    }, React.createElement(BootstrapTable, {
      data: data,
      options: options,
      pagination: true,
      search: true,
      searchPlaceholder: I18n.t(getTranslation("table.search"))
    }, React.createElement(TableHeaderColumn, {
      dataField: "_id",
      dataFormat: renderDelete,
      dataAlign: "center",
      width: "60px"
    }, React.createElement("i", {
      className: "fa fa-trash",
      "aria-hidden": "true"
    })), React.createElement(TableHeaderColumn, {
      isKey: true,
      dataField: "index",
      dataAlign: "center",
      width: "60px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.index")
    })), React.createElement(TableHeaderColumn, {
      dataField: "network",
      dataFormat: renderNetwork,
      dataAlign: "center",
      dataSort: true,
      width: "110px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.network")
    })), React.createElement(TableHeaderColumn, {
      dataField: "information",
      dataFormat: renderName,
      dataSort: true,
      width: "250px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.account")
    }), React.createElement("img", {
      className: "fan-page",
      src: "https://s3.amazonaws.com/ibol-app-media/icons/fan-page.svg",
      alt: "Fan Page",
      style: {
        height: "1em",
        marginLeft: 5
      }
    })), React.createElement(TableHeaderColumn, {
      dataField: "owner",
      dataFormat: renderOwner,
      dataSort: true,
      width: "200px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.owner")
    })), React.createElement(TableHeaderColumn, {
      dataField: "manager",
      dataFormat: renderManager,
      dataSort: true,
      width: "200px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.manager")
    })), React.createElement(TableHeaderColumn, {
      dataField: "shares",
      dataFormat: renderCollaborators,
      dataSort: true,
      width: "200px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.collaborators")
    })), React.createElement(TableHeaderColumn, {
      dataField: "settings",
      dataFormat: isBrand,
      dataAlign: "center",
      width: "110px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.brand")
    })), React.createElement(TableHeaderColumn, {
      dataField: "settings",
      dataFormat: isInfluencer,
      dataAlign: "center",
      width: "110px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.influencer")
    })), React.createElement(TableHeaderColumn, {
      dataField: "groups",
      dataFormat: renderTags,
      width: "200px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.tags")
    })), React.createElement(TableHeaderColumn, {
      dataField: "campaignsCount",
      dataFormat: renderCampaigns,
      dataAlign: "center",
      dataSort: true,
      width: "200px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.campaigns")
    })))));
  }

}

module.exportDefault(ListTable);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"new-account.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/ui/components/new-account.jsx                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let notie;
module.watch(require("notie"), {
  default(v) {
    notie = v;
  }

}, 1);
let DropdownButton, MenuItem;
module.watch(require("react-bootstrap"), {
  DropdownButton(v) {
    DropdownButton = v;
  },

  MenuItem(v) {
    MenuItem = v;
  }

}, 2);
let AccountPagesModal;
module.watch(require("./account-pages/modal"), {
  default(v) {
    AccountPagesModal = v;
  }

}, 3);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 4);

class NewAccount extends React.Component {
  constructor() {
    super();
    this.state = {
      pagesView: false
    };
    this.connectNetwork = this.connectNetwork.bind(this);
    this.openPagesView = this.openPagesView.bind(this);
  }

  openPagesView() {
    this.setState({
      pagesView: true
    });
  }

  connectNetwork(network) {
    let component = this;
    return function () {
      let options = {};

      switch (network) {
        case "facebook":
          options.requestPermissions = ["user_posts", "user_friends", "manage_pages", "publish_pages", "pages_show_list", "ads_management", "business_management"];
          break;

        case "twitter":
          options = {};
          break;

        case "google":
          options.requestPermissions = ["https://www.googleapis.com/auth/adsense", "https://www.googleapis.com/auth/plus.me", "https://www.googleapis.com/auth/plus.stream.write", "https://www.googleapis.com/auth/adexchange.buyer", "https://www.googleapis.com/auth/adsense", "https://www.googleapis.com/auth/adwords"];
          options.requestOfflineToken = true; // options.forceApprovalPrompt= true;

          break;

        case "instagram":
          options.requestPermissions = ["public_content"];
          break;

        default:
          options = {};
      }

      Meteor.connectWith(network, options, function (err, res) {
        //console.log('CONNECT_WITH_CALLBACK', arguments);
        if (err) {
          if (err.error === 500) {
            err.error = "Failed to connect account.";
          }

          notie.alert(3, err.error, 3);
          return;
        } //console.log("CONNECTION_SUCCESFUL", res);


        component.props.refetch().then(function () {
          component.props.close();
          component.props.history.push("/accounts/edit/" + res);
        });
      });
    };
  }

  render() {
    if (this.state.pagesView) {
      return React.createElement(AccountPagesModal, {
        accounts: this.props.accounts,
        close: this.props.close,
        history: this.props.history
      });
    }

    let FBListItem = React.createElement("li", {
      onClick: this.connectNetwork("facebook")
    }, React.createElement("i", {
      className: "social-icon facebook"
    }));
    let FBDropdown = React.createElement(DropdownButton, {
      bsStyle: "default",
      title: React.createElement("i", {
        className: "social-icon facebook"
      }),
      id: "dropdown-basic-".concat(123)
    }, React.createElement(MenuItem, {
      eventKey: "1",
      onClick: this.openPagesView
    }, "Connect Fan Page"), React.createElement(MenuItem, {
      eventKey: "2",
      onClick: this.connectNetwork("facebook")
    }, "Connect New Account"));
    let {
      accounts
    } = this.props;
    let hasFB = accounts.filter(a => a.network === "facebook").length === 0 ? false : true;

    let getTranslation = key => {
      return "Accounts.connect." + key;
    };

    return React.createElement("div", null, React.createElement("h2", null, React.createElement(Translate, {
      value: getTranslation("question")
    })), React.createElement("ul", {
      className: "profile-list"
    }, hasFB ? FBDropdown : FBListItem, React.createElement("li", {
      onClick: this.connectNetwork("twitter")
    }, React.createElement("i", {
      className: "social-icon twitter"
    })), React.createElement("li", {
      onClick: this.connectNetwork("instagram")
    }, React.createElement("i", {
      className: "social-icon instagram"
    })), React.createElement("li", {
      onClick: this.connectNetwork("google")
    }, React.createElement("i", {
      className: "social-icon google"
    }))), hasFB ? React.createElement(Translate, {
      value: getTranslation("message")
    }) : '');
  }

}

module.exportDefault(NewAccount);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"pricing.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/ui/components/pricing.jsx                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let InputMaskedNumber;
module.watch(require("../../../core/ui/components/forms/input-masked-number"), {
  default(v) {
    InputMaskedNumber = v;
  }

}, 1);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 2);
let Field;
module.watch(require("redux-form"), {
  Field(v) {
    Field = v;
  }

}, 3);

class Pricing extends React.Component {
  render() {
    let getTranslation = key => {
      return "Accounts.edit.tabs.pricing." + key;
    };

    return React.createElement("div", {
      className: "content-padding-30 account-pricing"
    }, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("h4", null, React.createElement(Translate, {
      value: getTranslation("instructions")
    }))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "pull-right post-price"
    }, React.createElement("div", {
      className: "title"
    }, React.createElement(Translate, {
      value: getTranslation("form.values.post")
    })), React.createElement("div", {
      className: "price-range"
    }, "$1,140.00 --  $2,140.00 USD")))), React.createElement("div", {
      className: "spacer-20"
    }), React.createElement("div", {
      className: "row price-block"
    }, React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("form.post")
    })), React.createElement("div", {
      className: "input-group"
    }, React.createElement("div", {
      className: "input-group-addon"
    }, "$"), React.createElement(Field, {
      component: InputMaskedNumber,
      name: "post",
      className: "form-control",
      type: "number"
    }), React.createElement("div", {
      className: "input-group-addon"
    }, "USD")))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("form.profilePicture")
    })), React.createElement("div", {
      className: "input-group"
    }, React.createElement("div", {
      className: "input-group-addon"
    }, "$"), React.createElement(Field, {
      component: InputMaskedNumber,
      name: "profilePicture",
      className: "form-control",
      type: "number"
    }), React.createElement("div", {
      className: "input-group-addon"
    }, "USD")))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("form.coverPhoto")
    })), React.createElement("div", {
      className: "input-group"
    }, React.createElement("div", {
      className: "input-group-addon"
    }, "$"), React.createElement(Field, {
      component: InputMaskedNumber,
      name: "coverPhoto",
      className: "form-control",
      type: "number"
    }), React.createElement("div", {
      className: "input-group-addon"
    }, "USD"))))), React.createElement("div", {
      className: "row price-block"
    }, React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("form.share")
    })), React.createElement("div", {
      className: "input-group"
    }, React.createElement("div", {
      className: "input-group-addon"
    }, "$"), React.createElement(Field, {
      component: InputMaskedNumber,
      name: "share",
      className: "form-control",
      type: "number"
    }), React.createElement("div", {
      className: "input-group-addon"
    }, "USD"))))), React.createElement("div", {
      className: "legend"
    }, "*", React.createElement(Translate, {
      value: getTranslation("form.legend")
    })));
  }

}

module.exportDefault(Pricing);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"settings.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/ui/components/settings.jsx                                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let swal;
module.watch(require("sweetalert2"), {
  default(v) {
    swal = v;
  }

}, 1);
let withRouter;
module.watch(require("react-router"), {
  withRouter(v) {
    withRouter = v;
  }

}, 2);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 3);
let Field;
module.watch(require("redux-form"), {
  Field(v) {
    Field = v;
  }

}, 4);
let InputTags;
module.watch(require("../../../core/ui/components/forms/input-tags"), {
  default(v) {
    InputTags = v;
  }

}, 5);
let InputLabelCheckbox;
module.watch(require("../../../core/ui/components/forms/input-label-checkbox"), {
  default(v) {
    InputLabelCheckbox = v;
  }

}, 6);
let AccountInviteContainer;
module.watch(require("../containers/account-invite"), {
  default(v) {
    AccountInviteContainer = v;
  }

}, 7);
let PropTypes;
module.watch(require("prop-types"), {
  default(v) {
    PropTypes = v;
  }

}, 8);
let SocialAvatar;
module.watch(require("../../../core/ui/components/social-avatar"), {
  default(v) {
    SocialAvatar = v;
  }

}, 9);

let getTranslation = key => {
  return "Accounts.edit.tabs.settings." + key;
};

class AccountSettings extends React.Component {
  constructor() {
    super();
    this.state = {
      manager: {
        form: false
      }
    };
    this.confirmDelete = this.confirmDelete.bind(this);
  }

  confirmDelete() {
    let component = this;
    swal({
      title: I18n.t(getTranslation("delete.main.title")),
      text: I18n.t(getTranslation("delete.main.description")),
      type: "warning",
      showCancelButton: true,
      confirmButtonText: I18n.t(getTranslation("delete.main.confirm")),
      cancelButtonText: I18n.t(getTranslation("delete.main.cancel"))
    }).then(function () {
      Meteor.call("profiles-mark-delete", component.props.account, function (err, res) {
        //console.log("DELETE_ACCOUNT", err,res);
        if (err) {
          swal(I18n.t(getTranslation("delete.error.title")), I18n.t(getTranslation("delete.error.description")), "error");
          return;
        }

        swal(I18n.t(getTranslation("delete.done.title")), I18n.t(getTranslation("delete.done.description")), "success");
        component.props.router.push("/accounts");
      });
    });
  }

  render() {
    let manager = this.props.account.manager;
    let owner = this.props.account.owner;
    let {
      account,
      userId
    } = this.props;
    let ownerName = (owner.profile.name || "") + " " + (owner.profile.lastName || "");
    return React.createElement("div", {
      className: "content-padding-30 account-settings"
    }, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("h4", null, "Titular"), React.createElement("div", {
      className: "form-avatar"
    }, React.createElement(SocialAvatar, {
      avatar: owner.profile.avatar,
      name: ownerName,
      size: "50"
    }), React.createElement("div", {
      className: "title"
    }, ownerName)), React.createElement("div", {
      className: "spacer-20"
    }), React.createElement(AccountInviteContainer, {
      manager: manager,
      userId: userId,
      account: account
    })), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("form.accountIs.title")
    })), React.createElement("div", {
      className: "form-control no-back"
    }, React.createElement(Field, {
      component: InputLabelCheckbox,
      name: "settings.type.brand",
      label: React.createElement(Translate, {
        value: getTranslation("form.accountIs.brand")
      }),
      iconChecked: "icon wb-check",
      iconUnchecked: "icon wb-close not",
      className: "brand"
    }), React.createElement(Field, {
      component: InputLabelCheckbox,
      name: "settings.type.influencer",
      label: React.createElement(Translate, {
        value: getTranslation("form.accountIs.influencer")
      }),
      iconChecked: "icon wb-check",
      iconUnchecked: "icon wb-close not",
      className: "influencer"
    }))), React.createElement("div", {
      className: "form-group",
      style: {
        marginTop: 65
      }
    }, React.createElement("label", {
      htmlFor: "exampleInputEmail1"
    }, React.createElement(Translate, {
      value: getTranslation("form.groups.label")
    })), React.createElement(Field, {
      component: InputTags,
      name: "groups",
      placeholder: I18n.t(getTranslation("form.groups.placeholder")),
      className: "form-control"
    })))));
  }

}

AccountSettings.propTypes = {
  router: PropTypes.shape({
    push: PropTypes.func.isRequired
  }).isRequired
};
module.exportDefault(withRouter(AccountSettings));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"status.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/ui/components/status.jsx                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 1);
let ContentSoon;
module.watch(require("../../../core/ui/components/content-soon"), {
  default(v) {
    ContentSoon = v;
  }

}, 2);
let AnalyticsComments;
module.watch(require("./analytics/comments"), {
  default(v) {
    AnalyticsComments = v;
  }

}, 3);
let AnalyticsEngagement;
module.watch(require("./analytics/engagement"), {
  default(v) {
    AnalyticsEngagement = v;
  }

}, 4);
let AnalyticsFavorites;
module.watch(require("./analytics/favorites"), {
  default(v) {
    AnalyticsFavorites = v;
  }

}, 5);
let AnalyticsFollows;
module.watch(require("./analytics/follows"), {
  default(v) {
    AnalyticsFollows = v;
  }

}, 6);
let AnalyticsLikes;
module.watch(require("./analytics/likes"), {
  default(v) {
    AnalyticsLikes = v;
  }

}, 7);
let AnalyticsPosts;
module.watch(require("./analytics/posts"), {
  default(v) {
    AnalyticsPosts = v;
  }

}, 8);
let AnalyticsRetweets;
module.watch(require("./analytics/retweets"), {
  default(v) {
    AnalyticsRetweets = v;
  }

}, 9);
let AnalyticsShares;
module.watch(require("./analytics/shares"), {
  default(v) {
    AnalyticsShares = v;
  }

}, 10);
let AnalyticsInidicators;
module.watch(require("./analytics/Indicators"), {
  default(v) {
    AnalyticsInidicators = v;
  }

}, 11);

class Analytics extends React.Component {
  constructor() {
    super();
    this.state = {
      loading: false
    };
    this.reloadAnalytics = this.reloadAnalytics.bind(this);
  }

  reloadAnalytics() {
    let component = this;
    let {
      account,
      refetch
    } = this.props;
    this.setState({
      loading: true
    });
    Meteor.call("profile-get-stats", account, function (err, res) {
      //console.log("RELOAD ANALYTICS",err,res);
      refetch({
        _id: account._id
      });
      component.setState({
        loading: false
      });
    });
  }

  render() {
    let getTranslation = key => {
      return "Accounts.edit.tabs.status." + key;
    };

    let {
      stats
    } = this.props;

    if (!stats) {
      return React.createElement(ContentSoon, {
        content: React.createElement(Translate, {
          value: getTranslation("soon.title")
        })
      });
    }

    let {
      retweets,
      retweetsPerPost,
      favorites,
      favoritesPerPost,
      comments,
      commentsPerPost,
      likes,
      likesPerPost,
      shares,
      sharesPerPost,
      engagement,
      followers,
      following,
      profileLikes,
      posts,
      postsPerDay
    } = stats;
    return React.createElement("div", {
      className: "content-padding-30"
    }, React.createElement("a", {
      onClick: this.reloadAnalytics,
      className: "btn btn-icon btn-primary pull-right spinner"
    }, this.state.loading ? React.createElement("i", {
      className: "fa fa-circle-o-notch "
    }) : "Reload"), React.createElement("div", {
      className: "spacer-30"
    }), React.createElement("div", {
      className: "row"
    }, React.createElement(AnalyticsInidicators, {
      data: {
        likes,
        likesPerPost,
        shares,
        sharesPerPost,
        engagement,
        followers,
        following,
        profileLikes,
        posts,
        postsPerDay
      }
    })), React.createElement("div", {
      className: "clearfix visible-lg-block"
    }));
  }

}

module.exportDefault(Analytics);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"summary.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/ui/components/summary.jsx                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 1);
let connect;
module.watch(require("react-redux"), {
  connect(v) {
    connect = v;
  }

}, 2);
let Tooltip, OverlayTrigger;
module.watch(require("react-bootstrap"), {
  Tooltip(v) {
    Tooltip = v;
  },

  OverlayTrigger(v) {
    OverlayTrigger = v;
  }

}, 3);
let uuid;
module.watch(require("uuid"), {
  default(v) {
    uuid = v;
  }

}, 4);
let isoLangs;
module.watch(require("../../../../translations"), {
  isoLangs(v) {
    isoLangs = v;
  }

}, 5);
let SummaryPeople;
module.watch(require("./summary/people"), {
  default(v) {
    SummaryPeople = v;
  }

}, 6);
let SummaryInformation;
module.watch(require("./summary/information"), {
  default(v) {
    SummaryInformation = v;
  }

}, 7);
let SummaryPricing;
module.watch(require("./summary/pricing"), {
  default(v) {
    SummaryPricing = v;
  }

}, 8);
let SummaryInformationEdit;
module.watch(require("./summary/information-edit"), {
  default(v) {
    SummaryInformationEdit = v;
  }

}, 9);
let SummaryAnalytics;
module.watch(require("./summary/analytics"), {
  default(v) {
    SummaryAnalytics = v;
  }

}, 10);
let SummaryGallery;
module.watch(require("./summary/gallery"), {
  default(v) {
    SummaryGallery = v;
  }

}, 11);
let SummaryCalendar;
module.watch(require("./summary/calendar"), {
  default(v) {
    SummaryCalendar = v;
  }

}, 12);

class Summary extends React.Component {
  render() {
    let getTranslation = key => {
      return "Accounts.edit.tabs." + key;
    };

    let {
      information,
      pricing,
      settings,
      manager,
      owner,
      shares,
      groups,
      gallery
    } = this.props.form.values;
    let {
      accountID
    } = this.props;
    return React.createElement("div", {
      className: "content-padding-30"
    }, React.createElement("div", {
      className: "row"
    }, React.createElement(SummaryPeople, {
      owner: owner,
      manager: manager,
      shares: shares
    }), React.createElement(SummaryInformation, {
      information: information,
      settings: settings,
      groups: groups
    }), React.createElement(SummaryPricing, {
      pricing: pricing
    })), React.createElement(SummaryInformationEdit, {
      information: information
    }), React.createElement(SummaryAnalytics, null), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement(SummaryGallery, {
      gallery: gallery
    })), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement(SummaryCalendar, {
      accountID: accountID
    }))));
  }

}

module.exportDefault(connect(state => {
  return {
    form: state.form["account-edit"]
  };
})(Summary));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"tabs.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/ui/components/tabs.jsx                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Tabs, Tab;
module.watch(require("react-bootstrap"), {
  Tabs(v) {
    Tabs = v;
  },

  Tab(v) {
    Tab = v;
  }

}, 1);
let FormSection, Field;
module.watch(require("redux-form"), {
  FormSection(v) {
    FormSection = v;
  },

  Field(v) {
    Field = v;
  }

}, 2);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 3);
let Target;
module.watch(require("./target"), {
  default(v) {
    Target = v;
  }

}, 4);
let Gallery;
module.watch(require("../components/gallery"), {
  default(v) {
    Gallery = v;
  }

}, 5);
let Information;
module.watch(require("../components/information"), {
  default(v) {
    Information = v;
  }

}, 6);
let Pricing;
module.watch(require("../components/pricing"), {
  default(v) {
    Pricing = v;
  }

}, 7);
let Settings;
module.watch(require("../components/settings"), {
  default(v) {
    Settings = v;
  }

}, 8);
let Analytics;
module.watch(require("../components/status"), {
  default(v) {
    Analytics = v;
  }

}, 9);
let Summary;
module.watch(require("../components/summary"), {
  default(v) {
    Summary = v;
  }

}, 10);
let Calendar;
module.watch(require("../containers/account-calendar"), {
  default(v) {
    Calendar = v;
  }

}, 11);

class TabsContainer extends React.Component {
  constructor() {
    super();
    this.state = {
      tabIndex: 0
    };
    this.setTab = this.setTab.bind(this);
  }

  setTab(tabIndex) {
    this.setState({
      tabIndex: tabIndex
    });
  }

  render() {
    let {
      tabIndex
    } = this.state;
    return React.createElement("div", null, React.createElement("div", {
      className: "nav-tabs-horizontal"
    }, React.createElement(Tabs, {
      defaultActiveKey: "summary",
      id: "uncontrolled-tab-example",
      bsStyle: "tabs",
      onSelect: this.setTab
    }, React.createElement(Tab, {
      eventKey: "summary",
      title: React.createElement(Translate, {
        value: "Accounts.edit.tabs.summary.title"
      })
    }, this.props.children, React.createElement(Summary, {
      accountID: this.props.account._id
    })), React.createElement(Tab, {
      eventKey: "settings",
      title: React.createElement(Translate, {
        value: "Accounts.edit.tabs.settings.title"
      })
    }, this.props.children, React.createElement(Settings, {
      account: this.props.account,
      userId: this.props.userId
    })), React.createElement(Tab, {
      eventKey: "information",
      title: React.createElement(Translate, {
        value: "Accounts.edit.tabs.information.title"
      })
    }, this.props.children, React.createElement(FormSection, {
      name: "information"
    }, React.createElement(Information, {
      accountID: this.props.account._id
    }))), React.createElement(Tab, {
      eventKey: "status",
      title: React.createElement(Translate, {
        value: "Accounts.edit.tabs.status.title"
      })
    }, this.props.children, React.createElement(Analytics, {
      stats: this.props.account.statistics,
      account: this.props.account,
      refetch: this.props.refetch
    })), React.createElement(Tab, {
      eventKey: "target",
      title: React.createElement(Translate, {
        value: "Accounts.edit.tabs.target.title"
      })
    }, this.props.children, React.createElement(FormSection, {
      name: "audience"
    }, React.createElement(Target, {
      tabIndex: tabIndex,
      accountID: this.props.account._id
    }))), React.createElement(Tab, {
      eventKey: "pricing",
      title: React.createElement(Translate, {
        value: "Accounts.edit.tabs.pricing.title"
      })
    }, this.props.children, React.createElement(FormSection, {
      name: "pricing"
    }, React.createElement(Pricing, null))), React.createElement(Tab, {
      eventKey: "gallery",
      title: React.createElement(Translate, {
        value: "Accounts.edit.tabs.gallery.title"
      })
    }, this.props.children, React.createElement(FormSection, {
      name: "gallery"
    }, React.createElement(Gallery, null))), React.createElement(Tab, {
      eventKey: "calendar",
      title: React.createElement(Translate, {
        value: "Accounts.edit.tabs.calendar.title"
      })
    }, this.props.children, React.createElement(Calendar, {
      account: this.props.account
    })))));
  }

}

module.exportDefault(TabsContainer);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"target.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/ui/components/target.jsx                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 1);
let FormSection, Field, FieldArray;
module.watch(require("redux-form"), {
  FormSection(v) {
    FormSection = v;
  },

  Field(v) {
    Field = v;
  },

  FieldArray(v) {
    FieldArray = v;
  }

}, 2);
let TargetsEdit;
module.watch(require("./target/targets-edit"), {
  default(v) {
    TargetsEdit = v;
  }

}, 3);
let TargetConquer;
module.watch(require("./target/conquer"), {
  default(v) {
    TargetConquer = v;
  }

}, 4);
let TargetObjectives;
module.watch(require("./target/objectives"), {
  default(v) {
    TargetObjectives = v;
  }

}, 5);
let ObjectiveProposal;
module.watch(require("./target/objective-proposal"), {
  default(v) {
    ObjectiveProposal = v;
  }

}, 6);

class Concept extends React.Component {
  render() {
    let getTranslation = key => {
      return "Accounts.edit.tabs.target." + key;
    };

    let {
      tabIndex,
      accountID
    } = this.props;
    return React.createElement("div", {
      className: "content-padding-30 account-target"
    }, React.createElement(FieldArray, {
      component: TargetsEdit,
      name: "targets"
    }), React.createElement(Field, {
      component: TargetConquer,
      name: "conquer",
      className: "form-control",
      active: tabIndex,
      label: "Regi\xF3n a consquistar"
    }), React.createElement(FormSection, {
      name: "objectives"
    }, React.createElement(TargetObjectives, null)), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-4",
      style: {
        marginTop: 20
      }
    }, React.createElement(ObjectiveProposal, {
      accountID: accountID
    }))));
  }

}

module.exportDefault(Concept);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"containers":{"account-calendar.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/ui/containers/account-calendar.jsx                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/taggedTemplateLiteral"));

function _templateObject() {
  const data = (0, _taggedTemplateLiteral2.default)(["\nquery($accountID: String, $all: Boolean, $draft: Boolean, $pending: Boolean, $sent: Boolean, $accepted: Boolean,  $rejected: Boolean, $scheduled: Boolean, $published: Boolean, $completed: Boolean, $cancelled: Boolean, $suspended: Boolean){\n  eventsAccount(accountID:$ accountID, all: $all, draft: $draft, pending: $pending, sent: $sent, accepted: $accepted,  rejected: $rejected, scheduled: $scheduled, published: $published, completed: $completed, cancelled: $cancelled, suspended: $suspended){\n    _id,\n    type,\n    start,\n    end,\n    title,\n    allDay,\n    preview,\n    network\n  }\n}\n"]);

  _templateObject = function () {
    return data;
  };

  return data;
}

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let graphql;
module.watch(require("react-apollo"), {
  graphql(v) {
    graphql = v;
  }

}, 1);
let Loading;
module.watch(require("../../../core/ui/components/loading"), {
  default(v) {
    Loading = v;
  }

}, 2);
let AccountCalendar;
module.watch(require("../components/calendar"), {
  default(v) {
    AccountCalendar = v;
  }

}, 3);
let createContainer;
module.watch(require("meteor/react-meteor-data"), {
  createContainer(v) {
    createContainer = v;
  }

}, 4);
let gql;
module.watch(require("graphql-tag"), {
  default(v) {
    gql = v;
  }

}, 5);
let notie;
module.watch(require("notie"), {
  default(v) {
    notie = v;
  }

}, 6);

class AccountCalendarContainer extends React.Component {
  constructor() {
    super();
    this.state = {
      "all": true,
      "draft": true,
      "pending": true,
      "sent": true,
      "accepted": true,
      "rejected": true,
      "scheduled": true,
      "published": true,
      "completed": true,
      "cancelled": true,
      "suspended": true
    };
    this.filterUpdate = this.filterUpdate.bind(this);
  }

  filterUpdate(key) {
    let component = this;
    return function (e) {
      let newState = component.state;

      if (key === "all" && !newState[key] === true) {
        if (!newState[key]) {
          Object.keys(newState).forEach(oKey => {
            newState[oKey] = true;
          });
        }
      } else {
        newState[key] = !newState[key];
      }

      component.setState(newState);
      component.props.refetch(newState);
    };
  }

  render() {
    let {
      account,
      refetch,
      eventsAccount,
      controls,
      readOnly
    } = this.props;
    return React.createElement("div", null, this.props.loading ? React.createElement(Loading, null) : React.createElement(AccountCalendar, {
      events: eventsAccount,
      readOnly: readOnly,
      refetch: refetch,
      account: account,
      filters: this.state,
      update: this.filterUpdate,
      controls: controls
    }));
  }

}

const QUERY = gql(_templateObject());
const withData = graphql(QUERY, {
  props: (_ref) => {
    let {
      data: {
        error,
        loading,
        eventsAccount,
        refetch
      }
    } = _ref;
    if (loading) return {
      loading: true
    };
    if (error) return {
      hasErrors: true
    };
    return {
      loading,
      eventsAccount,
      refetch
    };
  },
  options: ownProps => ({
    pollInterval: 150000,
    variables: {
      "accountID": ownProps.account ? ownProps.account._id : "",
      "all": true,
      "draft": true,
      "pending": true,
      "sent": true,
      "accepted": true,
      "rejected": true,
      "scheduled": true,
      "published": true,
      "completed": true,
      "cancelled": true,
      "suspended": true
    }
  })
});
const AccountCalendarContainerWithData = withData(AccountCalendarContainer);
module.exportDefault(AccountCalendarContainerWithData);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"account-invite.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/ui/containers/account-invite.jsx                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/taggedTemplateLiteral"));

function _templateObject() {
  const data = (0, _taggedTemplateLiteral2.default)(["\nquery($accountID:String!){\n  accountInvites(accountID:$accountID){\n    _id,\n    email,\n    sent,\n    status,\n    type,\n    owner {\n      _id,\n      profile{\n        avatar,\n        name,\n        lastName\n      },\n      emails {\n        address\n      }\n    },\n  }\n}\n"]);

  _templateObject = function () {
    return data;
  };

  return data;
}

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let graphql;
module.watch(require("react-apollo"), {
  graphql(v) {
    graphql = v;
  }

}, 1);
let Field;
module.watch(require("redux-form"), {
  Field(v) {
    Field = v;
  }

}, 2);
let Loading;
module.watch(require("../../../core/ui/components/loading"), {
  default(v) {
    Loading = v;
  }

}, 3);
let InviteStatus;
module.watch(require("../components/invite/status"), {
  default(v) {
    InviteStatus = v;
  }

}, 4);
let AccountShares;
module.watch(require("../components/invite/share"), {
  default(v) {
    AccountShares = v;
  }

}, 5);
let createContainer;
module.watch(require("meteor/react-meteor-data"), {
  createContainer(v) {
    createContainer = v;
  }

}, 6);
let gql;
module.watch(require("graphql-tag"), {
  default(v) {
    gql = v;
  }

}, 7);
let notie;
module.watch(require("notie"), {
  default(v) {
    notie = v;
  }

}, 8);

class AccountInviteContainer extends React.Component {
  render() {
    let {
      manager,
      userId,
      account
    } = this.props;
    let managerInvite = null;
    let shareInvites = [];

    if (this.props.accountInvites) {
      managerInvite = this.props.accountInvites.filter(i => i.type === "manager")[0];
      shareInvites = this.props.accountInvites.filter(i => i.type === "share");
    }

    let isManager = false;
    let isOwner = false;
    let userID = Meteor.userId();

    if (account) {
      if (account.owner._id === userID) {
        isOwner = true;
      }

      if (account.manager._id === userID) {
        isManager = true;
      }
    }

    return React.createElement("div", null, this.props.loading ? React.createElement(Loading, null) : React.createElement("div", null, React.createElement(InviteStatus, {
      invite: managerInvite,
      refetch: this.props.refetch,
      manager: manager,
      userId: userId,
      isOwner: isOwner,
      isManager: isManager,
      account: account
    }), React.createElement(Field, {
      component: AccountShares,
      name: "shares",
      invites: shareInvites,
      refetch: this.props.refetch,
      manager: manager,
      userId: userId,
      isOwner: isOwner,
      isManager: isManager,
      account: account
    })));
  }

}

const QUERY = gql(_templateObject());
const withData = graphql(QUERY, {
  props: (_ref) => {
    let {
      data: {
        error,
        loading,
        accountInvites,
        refetch
      }
    } = _ref;
    if (loading) return {
      loading: true
    };

    if (error) {
      console.log("ERROR", error);
      return {
        hasErrors: true
      };
    }

    return {
      loading,
      accountInvites,
      refetch
    };
  },
  options: ownProps => ({
    pollInterval: 150000,
    variables: {
      "accountID": ownProps.account._id
    }
  })
});
const AccountInviteContainerWithData = withData(AccountInviteContainer);
module.exportDefault(AccountInviteContainerWithData);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"account-pages.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/ui/containers/account-pages.jsx                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/taggedTemplateLiteral"));

function _templateObject() {
  const data = (0, _taggedTemplateLiteral2.default)(["\nquery($accountID: String!){\n  accountFBPages(accountID:$accountID){\n    id,\n    name,\n    perms,\n    category,\n    picture\n  }\n}\n"]);

  _templateObject = function () {
    return data;
  };

  return data;
}

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let graphql;
module.watch(require("react-apollo"), {
  graphql(v) {
    graphql = v;
  }

}, 1);
let Loading;
module.watch(require("../../../core/ui/components/loading"), {
  default(v) {
    Loading = v;
  }

}, 2);
let AccountPagesLayout;
module.watch(require("../components/account-pages/layout"), {
  default(v) {
    AccountPagesLayout = v;
  }

}, 3);
let createContainer;
module.watch(require("meteor/react-meteor-data"), {
  createContainer(v) {
    createContainer = v;
  }

}, 4);
let gql;
module.watch(require("graphql-tag"), {
  default(v) {
    gql = v;
  }

}, 5);

class AccountPagesContainer extends React.Component {
  render() {
    let {
      refetch,
      accountFBPages,
      accountID,
      close,
      history
    } = this.props;
    return React.createElement("div", null, this.props.loading ? React.createElement(Loading, null) : React.createElement(AccountPagesLayout, {
      accountID: accountID,
      pages: accountFBPages,
      close: close,
      history: history,
      refetch: refetch
    }));
  }

}

const QUERY = gql(_templateObject());
const withData = graphql(QUERY, {
  props: (_ref) => {
    let {
      data: {
        error,
        loading,
        accountFBPages,
        refetch
      }
    } = _ref;
    if (loading) return {
      loading: true
    };
    if (error) return {
      hasErrors: true
    };
    return {
      loading,
      accountFBPages,
      refetch
    };
  },
  options: ownProps => ({
    variables: {
      accountID: ownProps.accountID
    }
  })
});
const AccountPagesContainerWithData = withData(AccountPagesContainer);
module.exportDefault(AccountPagesContainerWithData);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"edit.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/ui/containers/edit.jsx                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/taggedTemplateLiteral"));

function _templateObject() {
  const data = (0, _taggedTemplateLiteral2.default)(["\n    query ($_id: String!){\n        account(_id:$_id){\n            _id,\n            active,\n            suspended,\n            delete,\n            network,\n            manager {\n                _id\n                profile {\n                    name\n                    lastName\n                    avatar\n                }\n                emails {\n                    address\n                }\n            },\n            owner {\n                _id\n                profile {\n                    name\n                    lastName\n                    avatar\n                }\n                emails {\n                    address\n                }\n            },\n            shares {\n                _id\n                profile {\n                    name\n                    lastName\n                    avatar\n                }\n                emails {\n                    address\n                }\n            },\n            settings{\n                type {\n                    brand\n                    influencer\n                }\n            },\n            information {\n                name\n                lastName\n                avatar\n                gender\n                birthDate\n                country\n                city\n                maritalStatus\n                forbiddenSubjects\n                sexualOrientation\n                likes\n                language\n                description\n                categories\n                specialties\n                urls\n            },\n            audience {\n                targets {\n                    name,\n                    age,\n                    gender,\n                    nrssg,\n                    countries,\n                    cities,\n                    languages,\n                    description\n                },\n                conquer,\n                objectives {\n                    increaseFollowers,\n                    increaseViews,\n                    increaseShares,\n                    increaseEngagement,\n                    increaseLikes,\n                    increaseTrafficHours,\n                    reachNewMarkets,\n                    increaseSpeaking,\n                    increasePlays,\n                    increaseWebsiteTraffic,\n                    positionTarget,\n                    keepTarget,\n                    presence,\n                    positionNewMarkets,\n                }\n            }\n            pricing {\n                post\n                share\n                partnership\n                ambassador,\n                profilePicture,\n                coverPhoto,\n                noPostHour,\n                noPostDay,\n            },\n            statistics {\n                retweets\n                retweetsPerPost\n                favorites\n                favoritesPerPost\n                comments\n                commentsPerPost\n                likes\n                likesPerPost\n                shares\n                sharesPerPost\n                engagement\n                followers\n                following\n                profileLikes\n                posts\n                postsPerDay\n            },\n            gallery {\n                images{\n                    name,\n                    content\n                },\n                videos{\n                    name,\n                    content\n                }\n            },\n            groups\n        }\n    }\n"]);

  _templateObject = function () {
    return data;
  };

  return data;
}

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let graphql;
module.watch(require("react-apollo"), {
  graphql(v) {
    graphql = v;
  }

}, 1);
let connect;
module.watch(require("react-redux"), {
  connect(v) {
    connect = v;
  }

}, 2);
let Loading;
module.watch(require("../../../core/ui/components/loading"), {
  default(v) {
    Loading = v;
  }

}, 3);
let EditAccount;
module.watch(require("../layouts/edit"), {
  default(v) {
    EditAccount = v;
  }

}, 4);
let createContainer;
module.watch(require("meteor/react-meteor-data"), {
  createContainer(v) {
    createContainer = v;
  }

}, 5);
let I18n;
module.watch(require("react-redux-i18n"), {
  I18n(v) {
    I18n = v;
  }

}, 6);
let gql;
module.watch(require("graphql-tag"), {
  default(v) {
    gql = v;
  }

}, 7);
let notie;
module.watch(require("notie"), {
  default(v) {
    notie = v;
  }

}, 8);
let Saving;
module.watch(require("../../../core/ui/components/saving"), {
  default(v) {
    Saving = v;
  }

}, 9);

class EditContainer extends React.Component {
  constructor() {
    super();
    this.state = {
      saving: "saved"
    };
    this.saveAccount = this.saveAccount.bind(this);
  }

  componentDidMount() {
    this.savedData = JSON.stringify(this.props.account);
    let component = this;
    this.saveInterval = setInterval(function () {
      if (component.props.form && component.props.form.values) {
        component.saveAccount(component.props.form.values, true);
      }
    }, 5000);
  }

  componentWillUnmount() {
    clearInterval(this.saveInterval);
  }

  saveAccount(data, silent) {
    let getTranslation = key => {
      return "Accounts.edit." + key;
    };

    if (silent && typeof silent === "boolean") {
      silent = true;
    } else {
      silent = false;
    }

    if (silent && this.savedData === JSON.stringify(data)) {
      this.setState({
        saving: "saved"
      });
      return;
    }

    this.setState({
      saving: "saving"
    });
    this.savedData = JSON.stringify(data);
    let component = this; //TODO: Validate Data

    Meteor.call("profiles-save", data, function (err, res) {
      if (err) {
        if (err.error === 500) {
          err.error = "Failed to create post.";
        }

        console.error("ERROR_SAVING_ACCOUNT", err);
        component.setState({
          saving: "saved"
        });
        notie.alert(3, err.reason || err.error, 3);
        return;
      }

      component.setState({
        saving: "saved"
      });

      if (!silent) {
        notie.alert(1, I18n.t(getTranslation("saveMessage")), 3);
      }
    });
  }

  render() {
    return React.createElement("div", null, this.props.loading ? React.createElement(Loading, null) : React.createElement(EditAccount, {
      initialValues: this.props.account,
      userId: this.props.userId,
      refetch: this.props.refetch,
      history: this.props.history,
      onSubmit: this.saveAccount
    }), React.createElement(Saving, {
      state: this.state.saving
    }));
  }

}

const QUERY = gql(_templateObject());
const withData = graphql(QUERY, {
  props: (_ref) => {
    let {
      data: {
        error,
        loading,
        account,
        refetch
      }
    } = _ref;
    if (loading) return {
      loading: true
    };
    if (error) return {
      hasErrors: true
    };
    return {
      loading,
      account,
      refetch
    };
  },
  options: ownProps => ({
    variables: {
      _id: ownProps.params.accountID
    }
  })
});
const EditContainerWithData = withData(EditContainer);
const EditContainerWithUserId = createContainer(() => {
  return {
    userId: Meteor.userId() || ''
  };
}, EditContainerWithData);
module.exportDefault(connect(state => {
  return {
    form: state.form["account-edit"]
  };
})(EditContainerWithUserId));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"header-groups.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/ui/containers/header-groups.jsx                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/taggedTemplateLiteral"));

function _templateObject() {
  const data = (0, _taggedTemplateLiteral2.default)(["\nquery($tag: String!){\n  accountsByTag(tag:$tag){\n    _id,\n    network,\n    information{\n      name,\n      lastName,\n      avatar\n    }\n  }\n}\n"]);

  _templateObject = function () {
    return data;
  };

  return data;
}

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let graphql;
module.watch(require("react-apollo"), {
  graphql(v) {
    graphql = v;
  }

}, 1);
let Loading;
module.watch(require("../../../core/ui/components/loading"), {
  default(v) {
    Loading = v;
  }

}, 2);
let EditAccount;
module.watch(require("../layouts/edit"), {
  default(v) {
    EditAccount = v;
  }

}, 3);
let createContainer;
module.watch(require("meteor/react-meteor-data"), {
  createContainer(v) {
    createContainer = v;
  }

}, 4);
let gql;
module.watch(require("graphql-tag"), {
  default(v) {
    gql = v;
  }

}, 5);
let HeaderGroupsComponent;
module.watch(require("../components/header-groups"), {
  default(v) {
    HeaderGroupsComponent = v;
  }

}, 6);

class HeaderGroups extends React.Component {
  render() {
    return React.createElement("div", {
      className: "groups"
    }, this.props.loading ? React.createElement(Loading, null) : React.createElement(HeaderGroupsComponent, {
      groups: this.props.groups,
      accounts: this.props.accountsByTag,
      refetch: this.props.refetch
    }));
  }

}

const QUERY = gql(_templateObject());
const withData = graphql(QUERY, {
  props: (_ref) => {
    let {
      data: {
        error,
        loading,
        accountsByTag,
        refetch
      }
    } = _ref;
    if (loading) return {
      loading: true
    };
    if (error) return {
      hasErrors: true
    };
    return {
      loading,
      accountsByTag,
      refetch
    };
  },
  options: ownProps => ({
    variables: {
      tag: ownProps.groups[0]
    }
  })
});
const HeaderGroupsWithData = withData(HeaderGroups);
module.exportDefault(HeaderGroupsWithData);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"invite.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/ui/containers/invite.jsx                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/taggedTemplateLiteral"));

function _templateObject() {
  const data = (0, _taggedTemplateLiteral2.default)(["\nquery($inviteID:String!){\n  accountInvite(inviteID:$inviteID){\n    _id,\n    email,\n    sent,\n    status,\n    type,\n    account {\n      _id,\n      network,\n      information{\n        name,\n        lastName,\n        avatar,\n        birthDate,\n        country,\n        gender\n      }\n    }\n    owner {\n      _id,\n      profile{\n        avatar,\n        name,\n        lastName\n      },\n      emails {\n        address\n      }\n    },\n  }\n}\n"]);

  _templateObject = function () {
    return data;
  };

  return data;
}

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let graphql;
module.watch(require("react-apollo"), {
  graphql(v) {
    graphql = v;
  }

}, 1);
let Loading;
module.watch(require("../../../core/ui/components/loading"), {
  default(v) {
    Loading = v;
  }

}, 2);
let AccountInviteView;
module.watch(require("../components/invite/view"), {
  default(v) {
    AccountInviteView = v;
  }

}, 3);
let createContainer;
module.watch(require("meteor/react-meteor-data"), {
  createContainer(v) {
    createContainer = v;
  }

}, 4);
let gql;
module.watch(require("graphql-tag"), {
  default(v) {
    gql = v;
  }

}, 5);

class InviteContainer extends React.Component {
  render() {
    return React.createElement("div", null, this.props.loading ? React.createElement(Loading, null) : React.createElement(AccountInviteView, {
      invite: this.props.accountInvite
    }));
  }

}

const QUERY = gql(_templateObject());
const withData = graphql(QUERY, {
  props: (_ref) => {
    let {
      data: {
        error,
        loading,
        accountInvite,
        refetch
      }
    } = _ref;
    console.log("INVITE_ERROR", error);
    if (loading) return {
      loading: true
    };
    if (error) return {
      hasErrors: true
    };
    return {
      loading,
      accountInvite,
      refetch
    };
  },
  options: ownProps => ({
    variables: {
      inviteID: ownProps.params.inviteID
    }
  })
});
const InviteContainerWithData = withData(InviteContainer);
module.exportDefault(InviteContainerWithData);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"list.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/ui/containers/list.jsx                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/taggedTemplateLiteral"));

function _templateObject() {
  const data = (0, _taggedTemplateLiteral2.default)(["\n    query {\n        accounts{\n            _id,\n            network,\n            type,\n            groups,\n            owner {\n                _id,\n                profile{\n                    name,\n                    lastName,\n                    avatar\n                }\n            },\n            manager {\n                _id,\n                profile{\n                    name,\n                    lastName,\n                    avatar\n                }\n            },\n            shares{\n                _id,\n                profile{\n                    name,\n                    lastName,\n                    avatar\n                }\n            },\n            campaignsCount\n            information{\n                name,\n                lastName,\n                avatar\n            },\n            settings{\n                type{\n                    brand,\n                    influencer\n                }\n            }\n        }\n    }\n"]);

  _templateObject = function () {
    return data;
  };

  return data;
}

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let graphql;
module.watch(require("react-apollo"), {
  graphql(v) {
    graphql = v;
  }

}, 1);
let Loading;
module.watch(require("../../../core/ui/components/loading"), {
  default(v) {
    Loading = v;
  }

}, 2);
let List;
module.watch(require("../layouts/list"), {
  default(v) {
    List = v;
  }

}, 3);
let createContainer;
module.watch(require("meteor/react-meteor-data"), {
  createContainer(v) {
    createContainer = v;
  }

}, 4);
let gql;
module.watch(require("graphql-tag"), {
  default(v) {
    gql = v;
  }

}, 5);

class ListContainer extends React.Component {
  render() {
    return React.createElement("div", null, this.props.loading ? React.createElement(Loading, null) : React.createElement(List, {
      data: this.props.accounts,
      refetch: this.props.refetch,
      history: this.props.history
    }));
  }

}

const QUERY = gql(_templateObject());
const withData = graphql(QUERY, {
  props: (_ref) => {
    let {
      data: {
        error,
        loading,
        accounts,
        refetch
      }
    } = _ref;
    if (loading) return {
      loading: true
    };
    if (error) return {
      hasErrors: true
    };
    return {
      loading,
      accounts,
      refetch
    };
  },
  options: ownProps => ({
    pollInterval: 3000
  })
});
const ListContainerWithData = withData(ListContainer); // This container brings in Tracker-enabled Meteor data

const ListContainerWithUserId = createContainer(() => {
  return {
    userId: Meteor.userId() || ''
  };
}, ListContainerWithData);
module.exportDefault(ListContainerWithUserId);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"view.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/ui/containers/view.jsx                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/taggedTemplateLiteral"));

function _templateObject() {
  const data = (0, _taggedTemplateLiteral2.default)(["\n    query ($_id: String!){\n        account(_id:$_id){\n            _id,\n            active,\n            suspended,\n            delete,\n            network,\n            manager {\n                _id\n                profile {\n                    name\n                    lastName\n                    avatar\n                }\n                emails {\n                    address\n                }\n            },\n            owner {\n                _id\n                profile {\n                    name\n                    lastName\n                    avatar\n                }\n                emails {\n                    address\n                }\n            },\n            shares {\n                _id\n                profile {\n                    name\n                    lastName\n                    avatar\n                }\n                emails {\n                    address\n                }\n            },\n            settings{\n                type {\n                    brand\n                    influencer\n                }\n            },\n            information {\n                name\n                lastName\n                avatar\n                gender\n                birthDate\n                country\n                city\n                maritalStatus\n                forbiddenSubjects\n                sexualOrientation\n                likes\n                language\n                description\n                categories\n                specialties\n                urls\n            },\n            audience {\n                targets {\n                    name,\n                    age,\n                    gender,\n                    nrssg,\n                    countries,\n                    cities,\n                    languages,\n                    description\n                },\n                conquer,\n                objectives {\n                    increaseFollowers,\n                    increaseViews,\n                    increaseShares,\n                    increaseEngagement,\n                    increaseLikes,\n                    increaseTrafficHours,\n                    reachNewMarkets,\n                    increaseSpeaking,\n                    increasePlays,\n                    increaseWebsiteTraffic,\n                    positionTarget,\n                    keepTarget,\n                    presence,\n                    positionNewMarkets,\n                }\n            }\n            pricing {\n                post\n                share\n                partnership\n                ambassador,\n                profilePicture,\n                coverPhoto,\n                noPostHour,\n                noPostDay,\n            },\n            statistics {\n                retweets\n                retweetsPerPost\n                favorites\n                favoritesPerPost\n                comments\n                commentsPerPost\n                likes\n                likesPerPost\n                shares\n                sharesPerPost\n                engagement\n                followers\n                following\n                profileLikes\n                posts\n                postsPerDay\n            },\n            gallery {\n                images{\n                    name,\n                    content\n                },\n                videos{\n                    name,\n                    content\n                }\n            },\n            groups\n        }\n    }\n"]);

  _templateObject = function () {
    return data;
  };

  return data;
}

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let graphql;
module.watch(require("react-apollo"), {
  graphql(v) {
    graphql = v;
  }

}, 1);
let connect;
module.watch(require("react-redux"), {
  connect(v) {
    connect = v;
  }

}, 2);
let Loading;
module.watch(require("../../../core/ui/components/loading"), {
  default(v) {
    Loading = v;
  }

}, 3);
let ViewAccount;
module.watch(require("../layouts/view"), {
  default(v) {
    ViewAccount = v;
  }

}, 4);
let createContainer;
module.watch(require("meteor/react-meteor-data"), {
  createContainer(v) {
    createContainer = v;
  }

}, 5);
let gql;
module.watch(require("graphql-tag"), {
  default(v) {
    gql = v;
  }

}, 6);

class ViewContainer extends React.Component {
  render() {
    return React.createElement("div", null, this.props.loading ? React.createElement(Loading, null) : React.createElement(ViewAccount, {
      account: this.props.account
    }));
  }

}

const QUERY = gql(_templateObject());
const withData = graphql(QUERY, {
  props: (_ref) => {
    let {
      data: {
        error,
        loading,
        account,
        refetch
      }
    } = _ref;
    if (loading) return {
      loading: true
    };
    if (error) return {
      hasErrors: true
    };
    return {
      loading,
      account,
      refetch
    };
  },
  options: ownProps => ({
    variables: {
      _id: ownProps.params.accountID
    }
  })
});
module.exportDefault(withData(ViewContainer));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"layouts":{"accounts.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/ui/layouts/accounts.jsx                                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class Accounts extends React.Component {
  render() {
    let filter = obj => {
      let newProps = {};
      let key;

      for (key in obj) {
        if (key !== "children") {
          newProps[key] = obj[key];
        }
      }

      return newProps;
    };

    return React.createElement("div", null, React.cloneElement(this.props.children, filter(this.props)));
  }

}

module.exportDefault(Accounts);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"edit.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/ui/layouts/edit.jsx                                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Header;
module.watch(require("../components/header"), {
  default(v) {
    Header = v;
  }

}, 1);
let Tabs;
module.watch(require("../components/tabs"), {
  default(v) {
    Tabs = v;
  }

}, 2);
let reduxForm;
module.watch(require("redux-form"), {
  reduxForm(v) {
    reduxForm = v;
  }

}, 3);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 4);

class EditAccount extends React.Component {
  render() {
    const {
      handleSubmit,
      pristine,
      reset,
      submitting,
      refetch
    } = this.props;
    return React.createElement("form", {
      onSubmit: handleSubmit
    }, React.createElement(Tabs, {
      account: this.props.initialValues,
      userId: this.props.userId,
      refetch: refetch
    }, React.createElement(Header, {
      account: this.props.initialValues,
      boolean: true
    })));
  }

}

EditAccount = reduxForm({
  form: 'account-edit',
  enableReinitialize: true
})(EditAccount);
module.exportDefault(EditAccount);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"list.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/ui/layouts/list.jsx                                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Modal;
module.watch(require("react-modal"), {
  default(v) {
    Modal = v;
  }

}, 1);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 2);
let ListTable;
module.watch(require("../components/list-table"), {
  default(v) {
    ListTable = v;
  }

}, 3);
let NewAccount;
module.watch(require("../components/new-account"), {
  default(v) {
    NewAccount = v;
  }

}, 4);
let ListEmpty;
module.watch(require("../../../core/ui/components/list-empty"), {
  default(v) {
    ListEmpty = v;
  }

}, 5);
let notie;
module.watch(require("notie"), {
  default(v) {
    notie = v;
  }

}, 6);

class List extends React.Component {
  constructor() {
    super();
    this.state = {
      modalIsOpen: false
    };
    this.openModal = this.openModal.bind(this);
    this.closeModal = this.closeModal.bind(this);
  }

  openModal() {
    this.setState({
      modalIsOpen: true
    });
  }

  closeModal() {
    this.setState({
      modalIsOpen: false
    });
  }

  render() {
    let getTranslation = key => {
      return "Accounts." + key;
    };

    return React.createElement("div", {
      className: "page-content container-fluid"
    }, this.props.data && this.props.data.length ? React.createElement(ListTable, {
      data: this.props.data,
      new: this.openModal
    }) : React.createElement(ListEmpty, {
      message: React.createElement(Translate, {
        value: getTranslation("empty.message")
      }),
      button: React.createElement(Translate, {
        value: getTranslation("empty.button")
      }),
      callback: this.openModal
    }), React.createElement(Modal, {
      isOpen: this.state.modalIsOpen,
      onRequestClose: this.closeModal,
      className: "app-modal",
      contentLabel: "Example Modal"
    }, React.createElement("button", {
      className: "close",
      onClick: this.closeModal
    }, React.createElement("i", {
      className: "icon wb-close-mini",
      "aria-hidden": "true"
    })), React.createElement(NewAccount, {
      close: this.closeModal,
      history: this.props.history,
      refetch: this.props.refetch,
      accounts: this.props.data
    })));
  }

}

module.exportDefault(List);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"view.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/ui/layouts/view.jsx                                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Header;
module.watch(require("../components/header"), {
  default(v) {
    Header = v;
  }

}, 1);
let Tabs;
module.watch(require("../components/view/tabs"), {
  default(v) {
    Tabs = v;
  }

}, 2);

class ViewAccount extends React.Component {
  render() {
    const {
      account
    } = this.props;
    return React.createElement("div", null, React.createElement(Header, {
      account: account,
      boolean: false
    }), React.createElement(Tabs, {
      account: account
    }));
  }

}

module.exportDefault(ViewAccount);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"actions":{"bundle.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/actions/bundle.jsx                                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let Actions = {};
module.exportDefault(Actions);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"client":{"bundle.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/client/bundle.jsx                                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let Routes;
module.watch(require("./routes"), {
  default(v) {
    Routes = v;
  }

}, 0);
let Reducers;
module.watch(require("../reducers/bundle"), {
  default(v) {
    Reducers = v;
  }

}, 1);
let Actions;
module.watch(require("../actions/bundle"), {
  default(v) {
    Actions = v;
  }

}, 2);
let Translations;
module.watch(require("./translations"), {
  default(v) {
    Translations = v;
  }

}, 3);
module.watch(require("./social-connect"));
module.watch(require("./permissions"));
module.exportDefault({
  reducers: Reducers,
  routes: Routes,
  actions: Actions,
  translations: Translations
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"permissions.jsx":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/client/permissions.jsx                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/*Accounts.ui.config({
    requestPermissions: {
        facebook: ["user_posts","publish_actions","manage_pages","publish_pages","pages_show_list","ads_management","business_management"],
    }
});*/
Accounts.ui.config({
  requestPermissions: {
    instagram: ["scope=public_content"]
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"routes.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/client/routes.jsx                                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Route, IndexRoute;
module.watch(require("react-router"), {
  Route(v) {
    Route = v;
  },

  IndexRoute(v) {
    IndexRoute = v;
  }

}, 1);
let Accounts;
module.watch(require("../ui/layouts/accounts"), {
  default(v) {
    Accounts = v;
  }

}, 2);
let Invite;
module.watch(require("../ui/containers/invite"), {
  default(v) {
    Invite = v;
  }

}, 3);
let List;
module.watch(require("../ui/containers/list"), {
  default(v) {
    List = v;
  }

}, 4);
let Edit;
module.watch(require("../ui/containers/edit"), {
  default(v) {
    Edit = v;
  }

}, 5);
let View;
module.watch(require("../ui/containers/view"), {
  default(v) {
    View = v;
  }

}, 6);
module.exportDefault(React.createElement(Route, {
  path: "/accounts",
  component: Accounts
}, React.createElement(IndexRoute, {
  component: List
}), React.createElement(Route, {
  path: "edit/:accountID",
  component: Edit
}), React.createElement(Route, {
  path: "view/:accountID",
  component: View
}), React.createElement(Route, {
  path: "invite/:inviteID",
  component: Invite
})));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"social-connect.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/client/social-connect.jsx                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let Meteor;
module.watch(require("meteor/meteor"), {
  Meteor(v) {
    Meteor = v;
  }

}, 0);

Accounts.oauth.tryConnectAfterPopupClosed = function (credentialToken, callback) {
  //console.log("tryConnectAfterPopupClosed", credentialToken, callback);
  let credentialSecret = OAuth._retrieveCredentialSecret(credentialToken) || null;
  let options = {
    oauth: {
      credentialToken: credentialToken,
      credentialSecret: credentialSecret
    }
  }; //console.log("Before Meteor Call", options);

  Meteor.call("addLoginService", options, function (error, res) {
    //console.log("After Meteor Call",arguments);
    if (callback) {
      callback(error, res);
    }
  });
};

Accounts.oauth.connectCredentialRequestCompleteHandler = function (callback) {
  return function (credentialTokenOrError) {
    //console.log("connectCredentialRequestCompleteHandler",credentialTokenOrError);
    if (credentialTokenOrError && credentialTokenOrError instanceof Error) {
      if (callback) {
        callback(credentialTokenOrError);
      }
    } else {
      Accounts.oauth.tryConnectAfterPopupClosed(credentialTokenOrError, callback);
    }
  };
};

let makePascalCased = function (word) {
  return word[0].toUpperCase() + word.slice(1).toLowerCase();
};

Meteor.connectWith = function (service, options, callback) {
  // Support a callback without options
  if (!callback && typeof options === "function") {
    callback = options;
    options = null;
  }

  let connectCredentialRequestCompleteCallback = Accounts.oauth.connectCredentialRequestCompleteHandler(callback);
  let Service;

  if (service === "instagram") {
    Service = Package["bozhao:accounts-instagram"].Instagram;
  } else {
    Service = typeof service === "string" ? Package[service + "-oauth"][makePascalCased(service)] : service;
  }

  Service.requestCredential(options, connectCredentialRequestCompleteCallback);
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"translations.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/client/translations.jsx                                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.exportDefault({
  en: {
    edit: {
      tabs: {
        concept: {
          title: "Concept",
          instructions: "Fill in the following fields.",
          form: {
            description: "Description fo the person/character/concept",
            occupation: "Occupation",
            profession: "Profession",
            subjects: {
              primary: "Primary Subjects",
              secondary: "Secondary Subjects",
              forbidden: "Forbidden Subjects"
            },
            keywords: "Keywords",
            likes: "Hobbies & Likes",
            motivations: "Motivations"
          }
        },
        gallery: {
          title: "Gallery",
          images: {
            title: "Images",
            newAlbum: {
              title: "Enter your Album Name",
              confirm: "Add Album",
              cancel: "Cancel"
            },
            empty: {
              message: "You have no pictures yet.",
              button: "Upload Picture"
            },
            list: {
              newImage: "Add Picture",
              newAlbum: "Add Album"
            },
            delete: {
              albumHelper: "Delete Album",
              title: "Are you sure?",
              description: "You won't be able to revert this!",
              confirm: "Yes, delete it.",
              cancel: "Cancel"
            }
          },
          videos: {
            title: "Videos",
            newAlbum: {
              title: "Enter your Album Name",
              confirm: "Add Album",
              cancel: "Cancel"
            },
            new: {
              title: "Enter your video URL",
              confirm: "Add Video",
              cancel: "Cancel"
            },
            list: {
              newVideo: "Add Video"
            },
            empty: {
              message: "You have no videos yet.",
              button: "New Video"
            },
            delete: {
              albumHelper: "Delete Album",
              title: "Are you sure?",
              description: "You won't be able to revert this!",
              confirm: "Yes, delete it.",
              cancel: "Cancel"
            }
          }
        },
        information: {
          title: "Information",
          instructions: "Enter your personal information in the following fields.",
          form: {
            name: "Name",
            surname: "Last Name",
            gender: {
              label: "Gender",
              values: {
                male: "Male",
                female: "Female"
              }
            },
            birthDate: "Birth Date",
            maritalStatus: {
              label: "Marital Status",
              values: {
                single: "Single",
                married: "Married"
              }
            },
            forbiddenSubjects: "Forbidden Subjects",
            country: "Country",
            city: "City",
            languages: "Languages",
            sexualOrientation: {
              label: "Sexual Orientation",
              values: {
                heterosexual: "Heterosexual",
                homosexual: "Homosxual",
                bisexual: "Bisexual",
                transexual: "Transexual"
              }
            },
            likes: "Likes",
            categories: "Categories",
            specialties: "Specialties",
            description: {
              label: "Description",
              description: "Add a description of your person, character or brand."
            },
            urlTitle: "Enter your websites.",
            url: "URLs",
            proposal: {
              categories: {
                label: "Propose categories",
                placeholder: "Propose your category"
              },
              specialties: {
                label: "Propose specialties",
                categories: "Select a category",
                placeholder: "Propose your specialty"
              },
              modals: {
                error: {
                  title: "Error",
                  description: "There was an error in your request. Please contact customer support."
                },
                done: {
                  title: "Done!",
                  description: "Thanks for your proposal"
                }
              }
            }
          },
          helpers: {
            noSelect: "Not Selected"
          }
        },
        target: {
          title: "Target/Objectives",
          instructions: "Please enter your audience's information",
          form: {
            age: {
              label: "Age",
              helper: "years"
            },
            gender: {
              label: "Gender",
              values: {
                male: "Mostly Women",
                female: "Mostly Men",
                split: "Equally Men & Women"
              }
            },
            nrssg: {
              label: "Socioeconomic Status",
              values: {
                a: "A",
                b: "B",
                c1: "C1",
                c2: "C2",
                d: "D",
                e: "E"
              }
            },
            countries: {
              label: "Country"
            },
            cities: {
              label: "Cities"
            },
            languages: {
              label: "Languages"
            },
            description: {
              label: "Description",
              placeholder: "Add a brief description about the profile of this audience."
            },
            noSelect: "Not Selected",
            objectives: {
              increaseFollowers: "Increase followers",
              increaseViews: "Increase visits",
              increaseShares: "Increase post's shares",
              increaseEngagement: "Increase engagement",
              increaseLikes: "Increase Likes",
              increaseTrafficHours: "Increase hours of traffic to profile",
              reachNewMarkets: "Reach new markets",
              increaseSpeaking: "Increase the number of people that speak about you",
              increasePlays: "Increase video playbacks",
              increaseWebsiteTraffic: "Increase website traffic",
              positionTarget: "Position your brand in target marker",
              keepTarget: "Keep your market position",
              presence: "Have more presence with followers",
              positionNewMarkets: "Position your brand in new markets"
            },
            proposal: {
              objectives: {
                placeholder: "Propose a new objective"
              },
              modals: {
                error: {
                  title: "Error",
                  description: "There was an error in your request. Please contact customer support."
                },
                done: {
                  title: "Done!",
                  description: "Thanks for your proposal"
                }
              }
            }
          },
          sections: {
            own: {
              title: "Audience",
              description: "Please describe your audience."
            },
            target: {
              title: "Target",
              description: "Please describe the target you wish."
            }
          },
          helpers: {
            noSelect: "Not Selected"
          }
        },
        pricing: {
          title: "Pricing",
          instructions: "Posts Pricing",
          form: {
            values: {
              account: "Your account has an approximate value of:",
              post: "Your posts have an approximate value of:"
            },
            post: "Post",
            profilePicture: "Profile Picture",
            coverPhoto: "Cover Photo",
            noPost: {
              hour: "Hour  Without Posting",
              day: "Day Without Posting"
            },
            share: "Share Post",
            partnership: "Partnership",
            ambassador: "Brand Ambassador",
            legend: "All prices are established in USD."
          }
        },
        settings: {
          title: "Settings",
          instructions: "Enter the following information.",
          form: {
            name: "Account's Name",
            accountIs: {
              title: "This account is?",
              brand: "Brand",
              influencer: "Influencer",
              badges: {
                brand: "B",
                influencer: "I"
              }
            },
            groups: {
              label: "Groups",
              placeholder: "Add Tags to order your accounts and group them."
            },
            manager: {
              title: "Current Manager",
              youAre: "You are the current manager.",
              edit: "Edit"
            },
            invite: {
              title: "Invite to manage my account",
              send: "Send Invite",
              placeholder: "Email",
              success: {
                title: "Done!",
                description: "Your invite has been sent",
                confirm: "Ok"
              },
              error: {
                invalid: "The Email Address is Invalid",
                failed: "Invite Failed",
                self: "Can't invite yourself"
              },
              sent: {
                label: "Invite Sent To",
                delete: {
                  label: "Delete Invite",
                  confirm: {
                    title: "Are you sure?",
                    description: "This action cannot be reverted.",
                    confirm: "Yes, I'm sure",
                    cancel: "Cancel"
                  }
                },
                status: {
                  pending: "Pending",
                  sent: "Sent",
                  accepted: "Accepted",
                  rejected: "Rejected"
                },
                error: "Invite Delete Failed",
                success: "Invite Deleted"
              },
              shares: {
                title: "Share this account with other users",
                current: "Shared with",
                pending: "Pending invites",
                form: {
                  title: "New Account Share"
                }
              }
            },
            deleteAccount: "Delete Account"
          },
          delete: {
            main: {
              title: "Are you sure?",
              description: "This account will be submitted for deletion after it's reviewed by one of our account specialists.",
              confirm: "Yes, delete it!",
              cancel: "Cancel"
            },
            error: {
              title: "Error",
              description: "There was an error in your request. Please contact customer support."
            },
            done: {
              title: "Done!",
              description: "We'll contact you shortly."
            }
          }
        },
        status: {
          title: "Analytics",
          soon: {
            title: "We are gathering your data."
          },
          follows: {
            following: "Following",
            followers: "Followers",
            profileLikes: "Profile Likes"
          },
          engagement: {
            label: "Engagement"
          },
          posts: {
            posts: "Posts",
            postsPerDay: "Posts per Day"
          },
          likes: {
            likes: "Likes",
            likesPerPost: "Likes per Post"
          },
          comments: {
            comments: "Comments",
            commentsPerPost: "Comments per Post"
          },
          retweets: {
            retweets: "Retweets",
            retweetsPerPost: "Retweets per Post"
          },
          shares: {
            shares: "Shares",
            sharesPerPost: "Shares per Post"
          },
          favorites: {
            favorites: "Favorites",
            favoritesPerPost: "Favorites per Post"
          }
        },
        summary: {
          title: "Summary",
          people: {
            owner: "Owner",
            manager: "Manager",
            shares: "Collaborators"
          },
          information: {
            information: "Information",
            profile: "Profile",
            campaigns: {
              title: "No. of Campaigns",
              labels: {
                total: "Total",
                created: "Created",
                partOf: "Part of"
              }
            },
            categories: "Categories",
            specialty: "Specialty",
            groups: "Groups",
            areas: "Areas"
          },
          gallery: {
            images: "Images",
            video: "Video"
          }
        },
        calendar: {
          title: "Calendar",
          publish: {
            button: "Schedule Post"
          },
          filters: {
            all: "All Posts",
            draft: "Draft Posts",
            pending: "Pending Posts",
            sent: "Sent Posts",
            accepted: "Accepted Posts",
            rejected: "Rejected Posts",
            scheduled: "Scheduled Posts",
            published: "Published Posts",
            completed: "Completed Posts",
            cancelled: "Cancelled Posts",
            suspended: "Suspended Posts"
          }
        }
      },
      saveMessage: "Account Saved",
      saveButton: "Save"
    },
    menu: "Accounts",
    empty: {
      message: "You have no accounts yet.",
      button: "Connect Account"
    },
    connect: {
      question: "Which social network do you want to connect?",
      message: "If you will add a new account, Please log out the social network that you want to connect"
    },
    list: {
      new: "Connect Account",
      table: {
        headers: {
          owner: "Owner",
          edit: "Edit",
          index: "#",
          account: "Account",
          network: "Network",
          brand: "Brand",
          influencer: "Influencer",
          tags: "Groups",
          manager: "Manager",
          collaborators: "Shares",
          campaigns: "Campaigns"
        },
        search: "Search",
        empty: "No Results"
      }
    },
    invite: {
      title: "has invited you to manage this account.",
      accept: "Accept",
      decline: "Decline",
      error: {
        title: "Error",
        description: "This invite is intended for another user."
      }
    }
  },
  es: {
    edit: {
      tabs: {
        concept: {
          title: "Concepto",
          instructions: "Ingresa tus datos en los siguientes campos.",
          form: {
            description: "Descripción de la persona/personaje/concepto",
            occupation: "Ocupación",
            profession: "Profesión",
            subjects: {
              primary: "Temas Principales",
              secondary: "Temas Secundarios",
              forbidden: "Temas Prohibidos"
            },
            keywords: "Palabras Clave",
            likes: "Gustos & Intereses",
            motivations: "Motivaciones"
          }
        },
        gallery: {
          title: "Galería",
          images: {
            title: "Imágenes",
            newAlbum: {
              title: "¿Como se llama tu album?",
              confirm: "Agregar Album",
              cancel: "Cancelar"
            },
            empty: {
              message: "Aún no tienes imágenes..",
              button: "Subir Imágen"
            },
            list: {
              newImage: "Agregar Imagen",
              newAlbum: "Agregar Album"
            },
            delete: {
              albumHelper: "Borrar Album",
              title: "¿Estás seguro?",
              description: "No podrás revertir esta acción!",
              confirm: "Si, eliminarlos.",
              cancel: "Cancelar"
            }
          },
          videos: {
            title: "Videos",
            newAlbum: {
              title: "¿Como se llama tu album?",
              confirm: "Agregar Album",
              cancel: "Cancelar"
            },
            new: {
              title: "Introduce la URL de tu video",
              confirm: "Agregar Video",
              cancel: "Cancelar"
            },
            list: {
              newVideo: "Agregar Video"
            },
            empty: {
              message: "Aún no tienes videos",
              button: "Nuevo Video"
            },
            delete: {
              title: "¿Estás seguro?",
              description: "No podrás revertir esta acción!",
              confirm: "Si, eliminarlo.",
              cancel: "Cancelar"
            }
          }
        },
        information: {
          title: "Información",
          instructions: "Ingresa tus datos personales en los siguientes campos.",
          form: {
            name: "Nombre",
            surname: "Apellido",
            gender: {
              label: "Genero",
              values: {
                male: "Masculino",
                female: "Femenino"
              }
            },
            birthDate: "Fecha de Nacimiento",
            maritalStatus: {
              label: "Estado Civil",
              values: {
                single: "Soltero",
                married: "Casado"
              }
            },
            forbiddenSubjects: "Temas Prohibidos",
            country: "País",
            city: "Ciudad",
            languages: "Idiomas",
            sexualOrientation: {
              label: "Orientación Sexual",
              values: {
                heterosexual: "Heterosexual",
                homosexual: "Homosxual",
                bisexual: "Bisexual",
                transexual: "Transexual"
              }
            },
            likes: "Gustos & Intereses",
            categories: "Categorías",
            specialties: "Especialidades",
            description: {
              label: "Brief Personal",
              description: "Agrega una descripción de tu persona, personaje o marca."
            },
            urlTitle: "Ingresa tus páginas web.",
            url: "URLs",
            proposal: {
              categories: {
                label: "Proponer categorias",
                placeholder: "Proponga su categoria"
              },
              specialties: {
                label: "Proponer especialidades",
                categories: "Selecione su categoria",
                placeholder: "Proponga su especialidad"
              },
              modals: {
                error: {
                  title: "Error",
                  description: "Hubo un error en su solicitud. Por favor comuniquese con soporte."
                },
                done: {
                  title: "Listo!",
                  description: "Gracias por su propuesta"
                }
              }
            }
          },
          helpers: {
            noSelect: "No Seleccionado"
          }
        },
        target: {
          title: "Target/Metas",
          instructions: "Porfavor describe a tu audiencia",
          form: {
            age: {
              label: "Edad",
              helper: "años"
            },
            gender: {
              label: "Genero",
              values: {
                male: "Principalmente Mujeres",
                female: "Principalmente Hombres",
                split: "Igual entre Hombres & Mujeres"
              }
            },
            nrssg: {
              label: "Nivel Socioeconómico",
              values: {
                a: "A",
                b: "B",
                c1: "C1",
                c2: "C2",
                d: "D",
                e: "E"
              }
            },
            countries: {
              label: "Paises"
            },
            cities: {
              label: "Ciudades"
            },
            languages: {
              label: "Idiomas"
            },
            description: {
              label: "Descripción del Perfil",
              placeholder: "Agrega una breve descripción sobre el perfil que consideras tiene esta audiencia."
            },
            noSelect: "No Seleccionado",
            objectives: {
              increaseFollowers: "Aumentar tus seguidores",
              increaseViews: "Aumentar tus visitas",
              increaseShares: "Aumentar share en tus post",
              increaseEngagement: "Aumentar tu engagement",
              increaseLikes: "Aumentar tus likes",
              increaseTrafficHours: "Aumentar horas de tráfico en tu perfil",
              reachNewMarkets: "Posicionarte en otras zonas grográficas",
              increaseSpeaking: "Aumentar el número de gente que habla de ti",
              increasePlays: "Aumentar reproduccione en tus videos",
              increaseWebsiteTraffic: "Aumentar el tráfico a tu pagina web",
              positionTarget: "Posicionar en tu target",
              keepTarget: "Mantenimiento de posicionamiento en tu target",
              presence: "Tener mayor presencia y/o presencia constante con mis seguidores",
              positionNewMarkets: "Posicionarte en nuevos mercados"
            },
            proposal: {
              objectives: {
                placeholder: "Sugerir una nueva meta"
              },
              modals: {
                error: {
                  title: "Error",
                  description: "Hubo un error en su solicitud. Por favor comuniquese con soporte."
                },
                done: {
                  title: "Listo!",
                  description: "Gracias por su propuesta"
                }
              }
            }
          },
          sections: {
            own: {
              title: "Audiencia",
              description: "Por favor, describe el target que deseas"
            },
            target: {
              title: "Target",
              description: "Porfavor describe el target que deseas."
            }
          },
          helpers: {
            noSelect: "No Seleccionado"
          }
        },
        pricing: {
          title: "Costo de mis Publicaciones",
          instructions: "Costo de mis publicaciones",
          form: {
            values: {
              account: "Tu cuenta tiene un valor aproximado de:",
              post: "Tu post tiene un valor aproximado de:"
            },
            post: "Post",
            profilePicture: "Foto de Perfil",
            coverPhoto: "Foto de Portada",
            noPost: {
              hour: "Hora sin Piblicar",
              day: "Día sin Publicar"
            },
            share: "Compartir Post",
            partnership: "Alianza",
            ambassador: "Embajador de Marca",
            legend: "Todos los valores estan establecidos en dólares americanos."
          }
        },
        settings: {
          title: "Configuraciones",
          instructions: "Ingresa los siguientes datos.",
          form: {
            name: "Nombre de la cuenta",
            accountIs: {
              title: "¿Ésta cuenta es?",
              brand: "Marca",
              influencer: "Influencer",
              badges: {
                brand: "M",
                influencer: "I"
              }
            },
            groups: {
              label: "Grupos",
              placeholder: "Agrega TAGS para ordenar tus perfiles y agruparlos."
            },
            manager: {
              title: "Administrador Actual",
              youAre: "Tu eres el administrador actual.",
              edit: "Editar"
            },
            invite: {
              title: "Delega la administración de este perfil a:",
              send: "Enviar Invitación",
              placeholder: "Email",
              success: {
                title: "Listo!",
                description: "Tu invitación ha sido enviada",
                confirm: "Ok"
              },
              error: {
                invalid: "Dirección de correo inválida",
                failed: "Fallo la invitación",
                self: "No puedes invitarte a ti mismo"
              },
              sent: {
                label: "Invite Sent To",
                delete: {
                  label: "Borrar Invitación",
                  confirm: {
                    title: "Estas seguro?",
                    description: "Esta acción no puede ser revertida.",
                    confirm: "Si, estoy seguro",
                    cancel: "Cancelar"
                  }
                },
                status: {
                  pending: "Pendeinte",
                  sent: "Enviada",
                  accepted: "Aceptada",
                  rejected: "Rechazada"
                },
                error: "Invite Delete Failed",
                success: "Invite Deleted"
              },
              shares: {
                title: "Invita a alguien a colaborar en este perfil.",
                current: "Colaboradores:",
                pending: "Invitaciones Pendientes",
                form: {
                  title: "Agregar colaboradores auxiliares para administrar este perfil:"
                }
              }
            },
            deleteAccount: "Eliminar Cuenta"
          },
          delete: {
            main: {
              title: "Estas seguro?",
              description: "Esta cuenta será marcada para eliminación despues de que uno de nuestros ejecutivos de cuenta se ponga en contacto.",
              confirm: "Si, eliminar cuenta.",
              cancel: "Cancelar"
            },
            error: {
              title: "Error",
              description: "Hubo un error en su solicitud. Por favor comuniquese con soporte."
            },
            done: {
              title: "Listo!",
              description: "En breve estaremos en contacto."
            }
          }
        },
        status: {
          title: "Analíticas",
          soon: {
            title: "Estamos recopilando tu información."
          },
          follows: {
            following: "Siguiendo",
            followers: "Seguidores",
            profileLikes: "Likes del Perfil"
          },
          engagement: {
            label: "Engagement"
          },
          posts: {
            posts: "Posts",
            postsPerDay: "Posts por Día"
          },
          likes: {
            likes: "Likes",
            likesPerPost: "Likes por Día"
          },
          comments: {
            comments: "Commentarios",
            commentsPerPost: "Commentarios por Día"
          },
          retweets: {
            retweets: "Retweets",
            retweetsPerPost: "Retweets por Día"
          },
          shares: {
            shares: "Shares",
            sharesPerPost: "Shares por Día"
          },
          favorites: {
            favorites: "Favoritos",
            favoritesPerPost: "Favoritos por Día"
          }
        },
        summary: {
          title: "Resumen",
          people: {
            owner: "Titular",
            manager: "Administración",
            shares: "Collaboradores"
          },
          information: {
            information: "Información",
            profile: "Perfil",
            campaigns: {
              title: "No. de Campañas",
              labels: {
                total: "Total",
                created: "Creadas",
                partOf: "Participantes"
              }
            },
            categories: "Categorias",
            specialty: "Especialidades",
            groups: "Groups",
            areas: "Areas"
          },
          gallery: {
            images: "Foto",
            video: "Video"
          }
        },
        calendar: {
          title: "Calendario",
          publish: {
            button: "Programar Publicación"
          },
          filters: {
            all: "Todas las Publicaciones",
            draft: "Publicaciones Borradores",
            pending: "Publicaciones Pendientes",
            sent: "Publicaciones Enviadas",
            accepted: "Publicaciones Aceptadas",
            rejected: "Publicaciones Rechazadas",
            scheduled: "Publicaciones Programadas",
            published: "Publicaciones Publicadas",
            completed: "Publicaciones Completadas",
            cancelled: "Publicaciones Canceladas",
            suspended: "Publicaciones Suspendidas"
          }
        }
      },
      saveMessage: "Cuenta Grardada",
      saveButton: "Guardar"
    },
    menu: "Perfiles",
    empty: {
      message: "Aún no tienes cuentas",
      button: "Añadir Perfil"
    },
    connect: {
      question: "¿Que red social quieres conectar?",
      message: "Si deseas agregar una cuenta nueva es necesario cerrar sesion en la red social que quieras conectar"
    },
    list: {
      new: "Añadir Perfil",
      table: {
        headers: {
          edit: "Editar",
          owner: "Titular",
          index: "Nº",
          account: "Perfiles/Fan Pages",
          network: "Red Social",
          brand: "Marca",
          influencer: "Influencer",
          tags: "Grupos",
          manager: "Administrador",
          collaborators: "Colaboradores",
          campaigns: "Nº de Campañas"
        },
        search: "Buscar",
        empty: "No hay resultados"
      }
    },
    invite: {
      title: "te ha invitado a administrar esta cuenta.",
      accept: "Aceptar",
      decline: "Rechazar",
      error: {
        title: "Error",
        description: "Esta invitación esta destinada para otro usuario."
      }
    }
  },
  zz: {
    edit: {
      tabs: {
        concept: {
          title: "測試",
          instructions: "測試 測試 測試 測試 測試 測試 測試 測試.",
          form: {
            description: "測試 測試 測試 測試 測試 測試/測試/測試",
            occupation: "測試",
            profession: "測試",
            subjects: {
              primary: "測試 測試",
              secondary: "測試 測試",
              forbidden: "測試 測試"
            },
            keywords: "測試",
            likes: "測試 & 測試",
            motivations: "測試"
          }
        },
        gallery: {
          title: "測試",
          newAlbum: {
            title: "測試 測試 測試 測試 測試?",
            confirm: "測試 測試",
            cancel: "測試"
          },
          images: {
            title: "測試",
            empty: {
              message: "測試 測試 測試 測試 測試.",
              button: "測試 測試"
            },
            list: {
              newImage: "測試 測試",
              newAlbum: "測試 測試"
            },
            delete: {
              albumHelper: "測試 測試",
              title: "測試 測試?",
              description: "測試 測試 測試 測試 測試!",
              confirm: "測試, 測試.",
              cancel: "測試"
            }
          },
          videos: {
            title: "測試",
            newAlbum: {
              title: "測試 測試 測試 測試 測試?",
              confirm: "測試 測試",
              cancel: "測試"
            },
            new: {
              title: "測試 測試 測試 測試 測試 測試",
              confirm: "測試 測試",
              cancel: "測試"
            },
            list: {
              newVideo: "測試 測試"
            },
            empty: {
              message: "測試 測試 測試 測試",
              button: "測試 測試"
            },
            delete: {
              title: "測試 測試?",
              description: "測試 測試 測試 測試 測試!",
              confirm: "測試, 測試.",
              cancel: "測試"
            }
          }
        },
        information: {
          title: "測試",
          instructions: "測試 測試 測試 測試 測試 測試 測試 測試.",
          form: {
            name: "測試",
            surname: "測試",
            gender: {
              label: "測試",
              values: {
                male: "測試",
                female: "測試"
              }
            },
            birthDate: "測試",
            maritalStatus: {
              label: "測試",
              values: {
                single: "測試",
                married: "測試"
              }
            },
            forbiddenSubjects: "測試 測試",
            country: "測試",
            city: "測試",
            languages: "測試",
            sexualOrientation: {
              label: "測試",
              values: {
                heterosexual: "測試",
                homosexual: "測試",
                bisexual: "測試",
                transexual: "測試"
              }
            },
            likes: "測試",
            categories: "測試",
            specialties: "測試",
            description: {
              label: "測試",
              description: "測試 測試 測試 測試 測試 測試, 測試 測試 測試."
            },
            urlTitle: "測試",
            url: "測試",
            proposal: {
              categories: {
                label: "測試 測試",
                placeholder: "測試 測試 測試"
              },
              specialties: {
                label: "測試 測試",
                categories: "測試 測試",
                placeholder: "測試 測試 測試"
              },
              modals: {
                error: {
                  title: "測試",
                  description: "測試 測試 測試 測試 測試 測試 測試. 測試 測試 測試 測試."
                },
                done: {
                  title: "測試!",
                  description: "測試 測試 測試 測試"
                }
              }
            }
          },
          helpers: {
            noSelect: "測試 測試"
          }
        },
        target: {
          title: "測試/測試",
          instructions: "測試 測試 測試 測試 測試",
          form: {
            age: {
              label: "測試",
              helper: "測試"
            },
            gender: {
              label: "測試",
              values: {
                male: "測試 測試",
                female: "測試 測試",
                split: "測試 測試 測試"
              }
            },
            nrssg: {
              label: "測試 測試",
              values: {
                a: "A",
                b: "B",
                c1: "C1",
                c2: "C2",
                d: "D",
                e: "E"
              }
            },
            countries: {
              label: "測試"
            },
            cities: {
              label: "測試"
            },
            languages: {
              label: "測試"
            },
            description: {
              label: "測試",
              placeholder: "測試 測試 測試 測試 測試 測試 測試 測試 測試 測試."
            },
            noSelect: "測試",
            objectives: {
              increaseFollowers: "測試 測試",
              increaseViews: "測試 測試",
              increaseShares: "測試 測試 測試",
              increaseEngagement: "測試 測試",
              increaseLikes: "測試 測試",
              increaseTrafficHours: "測試 測試 測試 測試 測試 測試",
              reachNewMarkets: "測試 測試 測試",
              increaseSpeaking: "測試 測試 測試 測試 測試 測試 測試 測試 測試",
              increasePlays: "測試 測試 測試",
              increaseWebsiteTraffic: "測試 測試 測試",
              positionTarget: "測試 測試 測試 測試 測試 測試",
              keepTarget: "測試 測試 測試 測試",
              presence: "測試 測試 測試 測試 測試",
              positionNewMarkets: "測試 測試 測試 測試 測試 測試"
            },
            proposal: {
              objectives: {
                placeholder: "測試 測試 測試 測試"
              },
              modals: {
                error: {
                  title: "測試",
                  description: "測試 測試 測試 測試 測試 測試. 測試 測試 測試 測試 測試."
                },
                done: {
                  title: "測試!",
                  description: "測試 測試 測試 測試"
                }
              }
            }
          },
          sections: {
            own: {
              title: "測試",
              description: "測試 測試 測試 測試."
            },
            target: {
              title: "測試",
              description: "測試 測試 測試 測試 測試 測試."
            }
          },
          helpers: {
            noSelect: "測試 測試"
          }
        },
        pricing: {
          title: "測試",
          instructions: "測試 測試 測試 測試",
          form: {
            values: {
              account: "測試 測試 測試 測試 測試 測試 測試:",
              post: "測試 測試 測試 測試 測試 測試 測試:"
            },
            post: "測試",
            profilePicture: "測試 測試 測試",
            coverPhoto: "測試 測試 測試",
            noPost: {
              hour: "測試 測試 測試",
              day: "測試 測試 測試"
            },
            share: "測試 測試",
            partnership: "測試",
            ambassador: "測試 測試 測試",
            legend: "測試 測試 測試 測試 測試 測試."
          }
        },
        settings: {
          title: "測試",
          instructions: "測試 測試 測試 測試.",
          form: {
            name: "測試' 測試",
            accountIs: {
              title: "測試 測試 測試?",
              brand: "測試",
              influencer: "測試",
              badges: {
                brand: "測",
                influencer: "試"
              }
            },
            groups: {
              label: "測試",
              placeholder: "測試 測試 測試 測試 測試 測試 測試 測試 測試."
            },
            manager: {
              title: "測試 測試",
              youAre: "測試 測試 測試 測試 測試.",
              edit: "測試"
            },
            invite: {
              title: "測試 測試 測試 測試 測試",
              send: "測試 測試",
              placeholder: "測試",
              success: {
                title: "測試!",
                description: "測試 測試 測試 測試 測試",
                confirm: "測試"
              },
              error: {
                invalid: "測試 測試 測試 測試 測試",
                failed: "測試 測試",
                self: "測試 測試 測試"
              },
              sent: {
                label: "測試 測試 測試",
                delete: {
                  label: "測試 測試",
                  confirm: {
                    title: "測試 測試 測試?",
                    description: "測試 測試 測試 測試 測試.",
                    confirm: "測試, 測試 測試",
                    cancel: "測試"
                  }
                },
                status: {
                  pending: "測試",
                  sent: "測試",
                  accepted: "測試",
                  rejected: "測試"
                },
                error: "測試 測試 測試",
                success: "測試 測試"
              },
              shares: {
                title: "測試 測試 測試 測試 測試 測試 測試 測試 測試",
                current: "測試 測試",
                pending: "測試 測試",
                form: {
                  title: "測試 測試 測試 測試 測試 測試 測試:"
                }
              }
            },
            deleteAccount: "測試 測試"
          },
          delete: {
            main: {
              title: "測試 測試 測試?",
              description: "測試 測試 測試 測試 測試 測試 測試 測試 測試' 測試 測試 測試 測試 測試 測試 測試.",
              confirm: "測試, 測試 測試!",
              cancel: "測試"
            },
            error: {
              title: "測試",
              description: "測試 測試 測試 測試 測試 測試 測試. 測試 測試 測試 測試."
            },
            done: {
              title: "測試!",
              description: "測試' 測試 測試 測試."
            }
          }
        },
        status: {
          title: "測試",
          soon: {
            title: "測試 測試 測試 測試 測試."
          },
          follows: {
            following: "測試",
            followers: "測試",
            profileLikes: "測試 測試"
          },
          engagement: {
            label: "測試"
          },
          posts: {
            posts: "測試",
            postsPerDay: "測試 測試 測試"
          },
          likes: {
            likes: "測試",
            likesPerPost: "測試 測試 測試"
          },
          comments: {
            comments: "測試",
            commentsPerPost: "測試 測試 測試"
          },
          retweets: {
            retweets: "測試",
            retweetsPerPost: "測試 測試 測試"
          },
          shares: {
            shares: "測試",
            sharesPerPost: "測試 測試 測試"
          },
          favorites: {
            favorites: "測試",
            favoritesPerPost: "測試 測試 測試"
          }
        },
        summary: {
          title: "測試",
          people: {
            owner: "測試",
            manager: "測試",
            shares: "測試"
          },
          information: {
            information: "測試",
            profile: "測試",
            campaigns: {
              title: "測試. 測試 測試",
              labels: {
                total: "測試",
                created: "測試",
                partOf: "測試"
              }
            },
            categories: "測試",
            specialty: "測試",
            groups: "測試",
            areas: "測試"
          },
          gallery: {
            images: "測試",
            video: "測試"
          }
        },
        calendar: {
          title: "測試",
          publish: {
            button: "測試 測試"
          },
          filters: {
            all: "測試",
            draft: "測試",
            pending: "測試",
            sent: "測試",
            accepted: "測試",
            rejected: "測試",
            scheduled: "測試",
            published: "測試",
            completed: "測試",
            cancelled: "測試",
            suspended: "測試"
          }
        }
      },
      saveMessage: "測試 測試",
      saveButton: "測試"
    },
    menu: "測試",
    empty: {
      message: "測試 測試 測試 測試",
      button: "測試 測試"
    },
    list: {
      new: "測試 測試",
      table: {
        headers: {
          edit: "測試",
          owner: "測試",
          index: "測",
          account: "測試",
          network: "測試 測試",
          brand: "測試",
          influencer: "測試",
          tags: "測試",
          manager: "測試",
          collaborators: "測試",
          campaigns: "測試"
        },
        search: "測試",
        empty: "測試 測試"
      }
    },
    invite: {
      title: "測試 測試 測試 測試 測試 測試 測試.",
      accept: "測試",
      decline: "測試",
      error: {
        title: "測試",
        description: "測試 測試 測試 測試 測試 測試 測試."
      }
    }
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"reducers":{"bundle.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/accounts/reducers/bundle.jsx                                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
const Reducers = {};
module.exportDefault(Reducers);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"reporter":{"ui":{"components":{"edit":{"controls":{"container.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/reporter/ui/components/edit/controls/container.jsx                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class Controls extends React.Component {
  render() {
    return React.createElement("div", null);
    return React.createElement("div", {
      className: "col-md-3"
    }, React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-body slim"
    }, "Controls", React.createElement("a", {
      className: "btn btn-primary block"
    }, "Nuevo Elemento"))));
  }

}

module.exportDefault(Controls);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"elements":{"container.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/reporter/ui/components/edit/elements/container.jsx                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Field, FormSection;
module.watch(require("redux-form"), {
  Field(v) {
    Field = v;
  },

  FormSection(v) {
    FormSection = v;
  }

}, 1);
let Element;
module.watch(require("./element"), {
  default(v) {
    Element = v;
  }

}, 2);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 3);

let getTranslation = key => {
  return "Accounts.edit.tabs.target." + key;
};

const ElementsEdit = (_ref) => {
  let {
    fields
  } = _ref;
  return React.createElement("div", {
    className: "ibol-tabs"
  }, React.createElement("button", {
    type: "button",
    className: "add-tab",
    onClick: () => fields.push({
      name: I18n.t("target") + " " + letters[fields.length]
    })
  }, React.createElement("i", {
    className: "fa fa-plus",
    "aria-hidden": "true"
  }), " Agregar Target"), fields.map((target, index) => React.createElement("div", {
    key: index
  }, React.createElement("button", {
    type: "button",
    className: "add-tab",
    style: {
      float: "right",
      marginBottom: -40
    },
    onClick: () => fields.remove(index)
  }, React.createElement("i", {
    className: "fa fa-minus",
    "aria-hidden": "true"
  }), " Eliminar Target"), React.createElement(FormSection, {
    name: "".concat(target)
  }, React.createElement(Element, null)))));
};

module.exportDefault(ElementsEdit);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"element.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/reporter/ui/components/edit/elements/element.jsx                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Field, FormSection;
module.watch(require("redux-form"), {
  Field(v) {
    Field = v;
  },

  FormSection(v) {
    FormSection = v;
  }

}, 1);

class Element extends React.Component {
  render() {
    let {
      size
    } = this.props;
    return React.createElement("div", {
      className: "element ".concat(size)
    }, "Content");
  }

}

module.exportDefault(Element);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"report.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/reporter/ui/components/edit/report.jsx                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let FormSection, Field, FieldArray;
module.watch(require("redux-form"), {
  FormSection(v) {
    FormSection = v;
  },

  Field(v) {
    Field = v;
  },

  FieldArray(v) {
    FieldArray = v;
  }

}, 1);
let ElementsEdit;
module.watch(require("./elements/container"), {
  default(v) {
    ElementsEdit = v;
  }

}, 2);

class Report extends React.Component {
  render() {
    return React.createElement("div", {
      className: "report col-md-9"
    }, React.createElement(Field, {
      component: "input",
      name: "name",
      className: "name"
    }), React.createElement(FieldArray, {
      component: ElementsEdit,
      name: "targets"
    }));
  }

}

module.exportDefault(Report);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"list-table.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/reporter/ui/components/list-table.jsx                                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 1);
let BootstrapTable, TableHeaderColumn;
module.watch(require("react-bootstrap-table"), {
  BootstrapTable(v) {
    BootstrapTable = v;
  },

  TableHeaderColumn(v) {
    TableHeaderColumn = v;
  }

}, 2);
let Link;
module.watch(require("react-router"), {
  Link(v) {
    Link = v;
  }

}, 3);
let SocialAvatar;
module.watch(require("../../../core/ui/components/social-avatar"), {
  default(v) {
    SocialAvatar = v;
  }

}, 4);

let getTranslation = key => {
  return "Reporter.list." + key;
};

const renderLink = function (cell, row) {
  // String example
  return React.createElement(Link, {
    to: "/reporter/edit/" + cell
  }, React.createElement("i", {
    className: "icon wb-edit",
    "aria-hidden": "true"
  }));
};

class ListTable extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      sortName: undefined,
      sortOrder: undefined
    };
    this.onSortChange = this.onSortChange.bind(this);
  }

  onSortChange(sortName, sortOrder) {
    this.setState({
      sortName,
      sortOrder
    });
  }

  render() {
    const options = {
      sortName: this.state.sortName,
      sortOrder: this.state.sortOrder,
      onSortChange: this.onSortChange,
      noDataText: I18n.t(getTranslation("table.empty"))
    };
    const list = this.props.data;
    return React.createElement("div", null, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-12"
    }, React.createElement("button", {
      className: "btn btn-primary table-button",
      onClick: this.props.new
    }, React.createElement(Translate, {
      value: "Reporter.list.new"
    })))), React.createElement("div", {
      className: "ibol-table"
    }, React.createElement(BootstrapTable, {
      data: list,
      options: options,
      pagination: true,
      search: true,
      searchPlaceholder: I18n.t(getTranslation("table.search"))
    }, React.createElement(TableHeaderColumn, {
      isKey: true,
      dataField: "_id",
      dataFormat: renderLink,
      dataAlign: "center",
      width: "110px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.edit")
    })), React.createElement(TableHeaderColumn, {
      dataField: "name",
      dataSort: true
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.name")
    })))));
  }

}

module.exportDefault(ListTable);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"new-report.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/reporter/ui/components/new-report.jsx                                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Link;
module.watch(require("react-router"), {
  Link(v) {
    Link = v;
  }

}, 1);
let Field, reduxForm;
module.watch(require("redux-form"), {
  Field(v) {
    Field = v;
  },

  reduxForm(v) {
    reduxForm = v;
  }

}, 2);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 3);

class NewReport extends React.Component {
  render() {
    let getTranslation = key => {
      return "Reporter.new." + key;
    };

    const {
      handleSubmit,
      pristine,
      reset,
      submitting
    } = this.props;
    return React.createElement("form", {
      onSubmit: handleSubmit
    }, React.createElement("h2", null, React.createElement(Translate, {
      value: getTranslation("title")
    })), React.createElement("div", {
      className: "padding-20"
    }, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-12"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement(Field, {
      component: "input",
      name: "name",
      className: "form-control"
    })))), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-12"
    }, React.createElement("button", {
      type: "submit",
      className: "btn btn-primary pull-right"
    }, React.createElement(Translate, {
      value: getTranslation("button")
    }))))));
  }

}

NewReport = reduxForm({
  form: 'report-create'
})(NewReport);
module.exportDefault(NewReport);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"containers":{"edit.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/reporter/ui/containers/edit.jsx                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/taggedTemplateLiteral"));

function _templateObject() {
  const data = (0, _taggedTemplateLiteral2.default)(["\n    query ($reportId: String!){\n        report(reportId:$reportId){\n            _id,\n            name,\n            owner {\n                _id\n            },\n            items {\n                name\n                Description\n                type,\n                size,\n                source {\n                    type,\n                    campaign {\n                        _id\n                        status\n                    },\n                    account {\n                        _id\n                        suspended\n                        type\n                        active\n                        delete\n                        network\n                        groups\n                        campaignsCount\n                    }\n                }\n            }\n        }\n    }\n"]);

  _templateObject = function () {
    return data;
  };

  return data;
}

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let graphql;
module.watch(require("react-apollo"), {
  graphql(v) {
    graphql = v;
  }

}, 1);
let connect;
module.watch(require("react-redux"), {
  connect(v) {
    connect = v;
  }

}, 2);
let Loading;
module.watch(require("../../../core/ui/components/loading"), {
  default(v) {
    Loading = v;
  }

}, 3);
let Edit;
module.watch(require("../layouts/edit"), {
  default(v) {
    Edit = v;
  }

}, 4);
let createContainer;
module.watch(require("meteor/react-meteor-data"), {
  createContainer(v) {
    createContainer = v;
  }

}, 5);
let gql;
module.watch(require("graphql-tag"), {
  default(v) {
    gql = v;
  }

}, 6);
let notie;
module.watch(require("notie"), {
  default(v) {
    notie = v;
  }

}, 7);
let I18n;
module.watch(require("react-redux-i18n"), {
  I18n(v) {
    I18n = v;
  }

}, 8);

let getTranslation = key => {
  return "Campaigns.edit.messages." + key;
};

class ListContainer extends React.Component {
  constructor() {
    super();
    this.state = {
      saving: "saved"
    };
    this.saveReport = this.saveReport.bind(this);
  }

  componentDidMount() {
    this.savedData = JSON.stringify(this.props.account);
    let component = this;
    this.saveInterval = setInterval(function () {
      if (component.props.form && component.props.form.values) {
        component.saveReport(component.props.form.values, true);
      }
    }, 5000);
  }

  componentWillUnmount() {
    clearInterval(this.saveInterval);
  }

  saveReport(data, silent) {
    if (silent && typeof silent === "boolean") {
      silent = true;
    } else {
      silent = false;
    }

    if (silent && this.savedData === JSON.stringify(data)) {
      this.setState({
        saving: "saved"
      });
      return;
    }

    this.setState({
      saving: "saving"
    });
    this.savedData = JSON.stringify(data);
    let component = this; //TODO: Validate Data

    Meteor.call("report-save", data, function (err, res) {
      if (err) {
        if (err.error === 500) {
          err.error = "Failed to create report.";
        } //console.log("ERROR",err);


        notie.alert(3, err.reason || err.error, 3);
        return;
      }

      component.setState({
        saving: "saved"
      });

      if (!silent) {
        notie.alert(1, I18n.t(getTranslation("saved")), 3);
      } //console.log("SERVER_SAVE_POSTS_RESPONSE",res);

    });
  }

  render() {
    return React.createElement("div", null, this.props.loading ? React.createElement(Loading, null) : React.createElement(Edit, {
      initialValues: this.props.report,
      refetch: this.props.refetch,
      history: this.props.history
    }));
  }

}

const QUERY = gql(_templateObject());
const withData = graphql(QUERY, {
  props: (_ref) => {
    let {
      data: {
        error,
        loading,
        report,
        refetch
      }
    } = _ref;
    if (loading) return {
      loading: true
    };
    if (error) return {
      hasErrors: true
    };
    return {
      loading,
      report,
      refetch
    };
  },
  options: ownProps => ({
    variables: {
      reportId: ownProps.params.reportID,
      query: ""
    },
    pollInterval: 3000
  })
});
const ListContainerWithData = withData(ListContainer);
module.exportDefault(connect(state => {
  return {
    form: state.form["report-edit"]
  };
})(ListContainerWithData));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"list.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/reporter/ui/containers/list.jsx                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/taggedTemplateLiteral"));

function _templateObject() {
  const data = (0, _taggedTemplateLiteral2.default)(["\n query {\n      reportsOwn{\n        _id,\n        name,\n        owner {\n          _id\n        },\n        items {\n          name\n          Description\n          type,\n          source {\n            type,\n            campaign {\n              _id\n              status\n            },\n            account {\n              _id\n              suspended\n              type\n              active\n              delete\n              network\n              groups\n              campaignsCount\n            }\n          }\n        }\n      }\n}\n"]);

  _templateObject = function () {
    return data;
  };

  return data;
}

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let graphql;
module.watch(require("react-apollo"), {
  graphql(v) {
    graphql = v;
  }

}, 1);
let Loading;
module.watch(require("../../../core/ui/components/loading"), {
  default(v) {
    Loading = v;
  }

}, 2);
let List;
module.watch(require("../layouts/list"), {
  default(v) {
    List = v;
  }

}, 3);
let createContainer;
module.watch(require("meteor/react-meteor-data"), {
  createContainer(v) {
    createContainer = v;
  }

}, 4);
let gql;
module.watch(require("graphql-tag"), {
  default(v) {
    gql = v;
  }

}, 5);

class ListContainer extends React.Component {
  render() {
    return React.createElement("div", null, this.props.loading ? React.createElement(Loading, null) : React.createElement(List, {
      data: this.props.reportsOwn,
      refetch: this.props.refetch,
      history: this.props.history
    }));
  }

}

const QUERY = gql(_templateObject());
const withData = graphql(QUERY, {
  props: (_ref) => {
    let {
      data: {
        error,
        loading,
        reportsOwn,
        refetch
      }
    } = _ref;
    if (loading) return {
      loading: true
    };
    if (error) return {
      hasErrors: true
    };
    return {
      loading,
      reportsOwn,
      refetch
    };
  },
  options: ownProps => ({
    pollInterval: 3000
  })
});
const ListContainerWithData = withData(ListContainer); // This container brings in Tracker-enabled Meteor data

const ListContainerWithUserId = createContainer(() => {
  return {
    userId: Meteor.userId() || ''
  };
}, ListContainerWithData);
module.exportDefault(ListContainerWithUserId);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"layouts":{"edit.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/reporter/ui/layouts/edit.jsx                                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let reduxForm;
module.watch(require("redux-form"), {
  reduxForm(v) {
    reduxForm = v;
  }

}, 1);
let Controls;
module.watch(require("../components/edit/controls/container"), {
  default(v) {
    Controls = v;
  }

}, 2);
let Report;
module.watch(require("../components/edit/report"), {
  default(v) {
    Report = v;
  }

}, 3);

class EditReport extends React.Component {
  render() {
    return React.createElement("div", {
      className: "reporter-report padding-15"
    }, React.createElement("div", {
      className: "row"
    }, React.createElement(Report, null), React.createElement(Controls, null)));
  }

}

EditReport = reduxForm({
  form: 'report-edit',
  enableReinitialize: true
})(EditReport);
module.exportDefault(EditReport);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"list.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/reporter/ui/layouts/list.jsx                                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Link;
module.watch(require("react-router"), {
  Link(v) {
    Link = v;
  }

}, 1);
let Modal;
module.watch(require("react-modal"), {
  default(v) {
    Modal = v;
  }

}, 2);
let NewReport;
module.watch(require("../components/new-report"), {
  default(v) {
    NewReport = v;
  }

}, 3);
let ListEmpty;
module.watch(require("../../../core/ui/components/list-empty"), {
  default(v) {
    ListEmpty = v;
  }

}, 4);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 5);
let notie;
module.watch(require("notie"), {
  default(v) {
    notie = v;
  }

}, 6);
let withRouter;
module.watch(require("react-router"), {
  withRouter(v) {
    withRouter = v;
  }

}, 7);
let PropTypes;
module.watch(require("prop-types"), {
  default(v) {
    PropTypes = v;
  }

}, 8);
let ListTable;
module.watch(require("../components/list-table"), {
  default(v) {
    ListTable = v;
  }

}, 9);

class List extends React.Component {
  constructor() {
    super();
    this.state = {
      modalIsOpen: false
    };
    this.openModal = this.openModal.bind(this);
    this.closeModal = this.closeModal.bind(this);
    this.createReport = this.createReport.bind(this);
  }

  createReport(data) {
    //console.log("SAVE_REPORT",data);
    let component = this;
    Meteor.call("report-create", data, function (err, res) {
      if (err) {
        if (err.error === 500) {
          err.error = "Failed to create report.";
        } //console.log("ERROR",err);


        notie.alert(3, err.reason || err.error, 3);
        return;
      }

      component.closeModal();
      component.props.refetch().then(function () {
        //console.log("SERVER_SAVE_Report_RESPONSE",res,component);
        component.props.router.push("/reporter/edit/" + res);
      });
    });
  }

  openModal() {
    this.setState({
      modalIsOpen: true
    });
  }

  closeModal() {
    this.setState({
      modalIsOpen: false
    });
  }

  render() {
    let getTranslation = key => {
      return "Reporter." + key;
    };

    return React.createElement("div", {
      className: "page-content container-fluid"
    }, this.props.data && this.props.data.length ? React.createElement(ListTable, {
      data: this.props.data,
      new: this.openModal
    }) : React.createElement(ListEmpty, {
      message: React.createElement(Translate, {
        value: getTranslation("empty.message")
      }),
      button: React.createElement(Translate, {
        value: getTranslation("empty.button")
      }),
      callback: this.openModal
    }), React.createElement(Modal, {
      isOpen: this.state.modalIsOpen,
      onRequestClose: this.closeModal,
      className: "app-modal",
      contentLabel: "Example Modal"
    }, React.createElement("button", {
      className: "close",
      onClick: this.closeModal
    }, React.createElement("i", {
      className: "icon wb-close-mini",
      "aria-hidden": "true"
    })), React.createElement(NewReport, {
      onSubmit: this.createReport
    })));
  }

}

let ListWithRouter = withRouter(List);
List.propTypes = {
  router: PropTypes.shape({
    push: PropTypes.func.isRequired
  }).isRequired
};
module.exportDefault(ListWithRouter);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"reporter.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/reporter/ui/layouts/reporter.jsx                                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class Reporter extends React.Component {
  render() {
    let filter = obj => {
      let newProps = {};
      let key;

      for (key in obj) {
        if (key !== "children") {
          newProps[key] = obj[key];
        }
      }

      return newProps;
    };

    return React.createElement("div", {
      className: "page-content container-fluid"
    }, React.cloneElement(this.props.children, filter(this.props)));
  }

}

module.exportDefault(Reporter);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"actions":{"bundle.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/reporter/actions/bundle.jsx                                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let Actions = {};
module.exportDefault(Actions);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"client":{"bundle.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/reporter/client/bundle.jsx                                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let Routes;
module.watch(require("./routes"), {
  default(v) {
    Routes = v;
  }

}, 0);
let Reducers;
module.watch(require("../reducers/bundle"), {
  default(v) {
    Reducers = v;
  }

}, 1);
let Actions;
module.watch(require("../actions/bundle"), {
  default(v) {
    Actions = v;
  }

}, 2);
let Translations;
module.watch(require("./translations"), {
  default(v) {
    Translations = v;
  }

}, 3);
module.exportDefault({
  reducers: Reducers,
  routes: Routes,
  actions: Actions,
  translations: Translations
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"routes.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/reporter/client/routes.jsx                                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Route, IndexRoute;
module.watch(require("react-router"), {
  Route(v) {
    Route = v;
  },

  IndexRoute(v) {
    IndexRoute = v;
  }

}, 1);
let Reporter;
module.watch(require("../ui/layouts/reporter"), {
  default(v) {
    Reporter = v;
  }

}, 2);
let List;
module.watch(require("../ui/containers/list"), {
  default(v) {
    List = v;
  }

}, 3);
let Edit;
module.watch(require("../ui/containers/edit"), {
  default(v) {
    Edit = v;
  }

}, 4);
module.exportDefault(React.createElement(Route, {
  path: "/reporter",
  component: Reporter
}, React.createElement(IndexRoute, {
  component: List
}), React.createElement(Route, {
  path: "edit/:reportID",
  component: Edit
})));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"translations.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/reporter/client/translations.jsx                                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.exportDefault({
  en: {
    menu: "Activity Reports",
    empty: {
      message: "You don't have reports yet",
      button: "New Report"
    },
    new: {
      title: "What's your report's name?",
      button: "Create"
    }
  },
  es: {
    menu: "Reporte de Actividades",
    empty: {
      message: "No tienes reportes aun",
      button: "Crear Reporte"
    },
    new: {
      title: "¿Cómo se llama tu reporte?",
      button: "Crear Reporte"
    }
  },
  zz: {
    menu: "測試",
    empty: {
      message: "測試 測試 測試 測試 測試",
      button: "測試 測試"
    },
    new: {
      title: "測試 測試 測試 測試?",
      button: "測試"
    }
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"reducers":{"bundle.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/reporter/reducers/bundle.jsx                                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
const Reducers = {};
module.exportDefault(Reducers);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"statement":{"ui":{"components":{"statement":{"payments":{"campaign-payments.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/statement/ui/components/statement/payments/campaign-payments.jsx                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let I18n, Localize, Translate;
module.watch(require("react-redux-i18n"), {
  I18n(v) {
    I18n = v;
  },

  Localize(v) {
    Localize = v;
  },

  Translate(v) {
    Translate = v;
  }

}, 1);
let BootstrapTable, TableHeaderColumn;
module.watch(require("react-bootstrap-table"), {
  BootstrapTable(v) {
    BootstrapTable = v;
  },

  TableHeaderColumn(v) {
    TableHeaderColumn = v;
  }

}, 2);
let SocialAvatar;
module.watch(require("../../../../../core/ui/components/social-avatar"), {
  default(v) {
    SocialAvatar = v;
  }

}, 3);

let getTranslation = key => {
  return "Statement.tabs.statement.payments." + key;
};

const renderPaymentMethod = function (cell, row) {
  // String example
  let getCard = card => {
    switch (card) {
      case "Amex":
        return "https://s3.amazonaws.com/ibol-app-media/cards/card_amex.png";

      case "Visa":
        return "https://s3.amazonaws.com/ibol-app-media/cards/card_visa.png";

      case "MasterCard":
        return "https://s3.amazonaws.com/ibol-app-media/cards/card_masterCard.png";

      case "Discover":
        return "https://s3.amazonaws.com/ibol-app-media/cards/card_discover.png";

      case "DinersClub":
        return "https://s3.amazonaws.com/ibol-app-media/cards/card_dinersClub.png";
    }
  };

  return React.createElement("div", null, React.createElement("img", {
    src: getCard(cell.brand),
    alt: cell.brand,
    style: {
      height: 32,
      marginRight: 10
    }
  }), "- ", cell.last4);
};

const renderIncome = function (cell, row) {
  // String example
  return row.type === "incoming" ? React.createElement("span", null, React.createElement(Localize, {
    value: cell,
    options: {
      style: 'currency',
      currency: 'USD',
      minimumFractionDigits: 2,
      maximumFractionDigits: 2
    }
  }), " USD") : "-";
};

const renderExpense = function (cell, row) {
  // String example
  return row.type === "outgoing" ? React.createElement("span", null, React.createElement(Localize, {
    value: cell,
    options: {
      style: 'currency',
      currency: 'USD',
      minimumFractionDigits: 2,
      maximumFractionDigits: 2
    }
  }), " USD") : "-";
};

const renderOwner = function (cell, row) {
  // String example
  if (!cell) return React.createElement("span", null, "\"-\"");
  return React.createElement("div", null, React.createElement(SocialAvatar, {
    avatar: cell.owner.profile.avatar,
    name: cell.owner.profile.name,
    size: "50"
  }), React.createElement("div", {
    className: "icon-label"
  }, cell.owner.profile.name + " " + cell.owner.profile.lastName));
};

const renderManager = function (cell, row) {
  // String example
  return React.createElement("div", null, React.createElement(SocialAvatar, {
    avatar: cell.manager.profile.avatar,
    name: cell.manager.profile.name,
    size: "50"
  }), React.createElement("div", {
    className: "icon-label"
  }, cell.manager.profile.name + " " + cell.manager.profile.lastName));
};

const renderNetwork = function (cell, row) {
  // String example
  if (!cell.account) return "-";
  return React.createElement("div", {
    className: "icon"
  }, React.createElement("i", {
    className: "social-icon " + cell.account.network
  }));
};

const renderInfluencer = function (cell, row) {
  // String example
  console.log("RENDER_INFLUENCER", cell);
  return React.createElement("div", null, React.createElement(SocialAvatar, {
    avatar: cell.information.avatar,
    name: cell.information.name,
    size: "50",
    page: cell.type === "page",
    network: cell.network
  }), React.createElement("div", {
    className: "icon-label"
  }, cell.information.name + " " + cell.information.lastName));
};

const renderActionType = function (cell, row) {
  // String example
  if (!cell.type) return "-";
  return React.createElement("div", null, cell.type);
};

const renderActionMessage = function (cell, row) {
  // String example
  if (!cell.message) return "-";
  return React.createElement("div", null, cell.type);
};

const renderActionMedia = function (cell, row) {
  // String example
  if (!cell.media) return "-";
  return React.createElement("div", {
    style: {
      padding: 6
    }
  }, React.createElement("img", {
    src: cell,
    alt: "",
    style: {
      maxHeight: 100,
      maxWidth: "100%"
    }
  }));
};

const renderActionTimeZone = function (cell, row) {
  // String example
  return React.createElement("div", null, moment.tz.guess());
};

const renderActionDate = function (cell, row) {
  // String example
  if (!cell.date) return "-";
  return React.createElement("div", null, moment(new Date(cell.date)).format("DD/MM/YY"));
};

const renderActionTime = function (cell, row) {
  // String example
  if (!cell.date) return "-";
  return React.createElement("div", null, moment(new Date(cell.date)).format("HH:MM A"));
};

const renderActionHashtag = function (cell, row) {
  if (!cell.useHashtag) return "-";
  return React.createElement("i", {
    className: "icon circle brand " + (cell ? "wb-check" : "wb-close not"),
    "aria-hidden": "true"
  });
};

const renderBrands = function (cell, row) {
  return React.createElement("div", null, cell.map((a, i) => React.createElement("div", {
    className: "icon",
    key: i
  }, React.createElement(SocialAvatar, {
    avatar: a.information.avatar,
    network: a.network,
    name: a.information.name,
    size: "50",
    type: a.information.type
  }))));
};

class CampaignTable extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      sortName: undefined,
      sortOrder: undefined
    };
    this.onSortChange = this.onSortChange.bind(this);
  }

  onSortChange(sortName, sortOrder) {
    this.setState({
      sortName,
      sortOrder
    });
  }

  render() {
    let {
      data,
      type
    } = this.props;
    let list = data.payments;
    console.log("CAMPAIGN_PAYMENTS", data, type);
    const options = {
      sortName: this.state.sortName,
      sortOrder: this.state.sortOrder,
      onSortChange: this.onSortChange,
      noDataText: I18n.t(getTranslation("table.empty"))
    };
    let balance = 0;

    let getBalance = l => {
      balance += (l.type === "outgoing" ? -1 : 1) * Number(l.amount);
      return balance;
    };

    list = list.map((l, index) => Object.assign({}, l, {
      index: index + 1,
      balance: getBalance(l)
    }));
    return React.createElement("div", {
      className: "statement-table-breakdown"
    }, React.createElement("div", {
      className: "header"
    }, React.createElement("h1", null, React.createElement(Translate, {
      value: getTranslation("title")
    })), React.createElement("h2", null, React.createElement(Translate, {
      value: getTranslation("type.".concat(type))
    }))), React.createElement("div", {
      className: "row campaign"
    }, React.createElement("div", {
      className: "col-md-5"
    }, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-4"
    }, React.createElement(Translate, {
      value: getTranslation("data.brands")
    })), React.createElement("div", {
      className: "col-md-8 value"
    }, renderBrands(data.brands))), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-4"
    }, React.createElement(Translate, {
      value: getTranslation("data.campaign")
    })), React.createElement("div", {
      className: "col-md-8 value"
    }, data.campaign)), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-4"
    }, React.createElement(Translate, {
      value: getTranslation("data.owner")
    })), React.createElement("div", {
      className: "col-md-8 value"
    }, renderOwner(data))), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-4"
    }, React.createElement(Translate, {
      value: getTranslation("data.manager")
    })), React.createElement("div", {
      className: "col-md-8 value"
    }, renderManager(data))), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-4"
    }, React.createElement(Translate, {
      value: getTranslation("data.actions")
    })), React.createElement("div", {
      className: "col-md-8 value"
    }, list.length)))), React.createElement("h3", null, React.createElement(Translate, {
      value: getTranslation("table.title")
    })), React.createElement("div", {
      className: "ibol-table"
    }, React.createElement(BootstrapTable, {
      data: list,
      options: options
    }, React.createElement(TableHeaderColumn, {
      isKey: true,
      dataField: "index",
      dataAlign: "center",
      width: "60px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.index")
    })), React.createElement(TableHeaderColumn, {
      dataField: "campaign",
      dataAlign: "center",
      dataFormat: renderOwner,
      width: "200px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.owner")
    })), React.createElement(TableHeaderColumn, {
      dataField: "campaign",
      dataAlign: "center",
      dataFormat: renderManager,
      width: "200px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.manager")
    })), React.createElement(TableHeaderColumn, {
      dataField: "post",
      dataAlign: "center",
      dataFormat: renderNetwork,
      width: "120px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.network")
    })), React.createElement(TableHeaderColumn, {
      dataField: "to",
      dataAlign: "center",
      dataFormat: renderInfluencer,
      width: "200px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.influencer")
    })), React.createElement(TableHeaderColumn, {
      dataField: "post",
      dataAlign: "center",
      dataFormat: renderActionType,
      width: "200px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.action")
    })), React.createElement(TableHeaderColumn, {
      dataField: "post",
      dataAlign: "center",
      dataFormat: renderActionMessage,
      width: "200px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.message")
    })), React.createElement(TableHeaderColumn, {
      dataField: "post",
      dataAlign: "center",
      dataFormat: renderActionMedia,
      width: "200px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.media")
    })), React.createElement(TableHeaderColumn, {
      dataField: "post",
      dataAlign: "center",
      dataFormat: renderActionTimeZone,
      width: "200px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.timeZone")
    })), React.createElement(TableHeaderColumn, {
      dataField: "post",
      dataAlign: "center",
      dataFormat: renderActionDate,
      width: "200px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.date")
    })), React.createElement(TableHeaderColumn, {
      dataField: "post",
      dataAlign: "center",
      dataFormat: renderActionTime,
      width: "200px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.time")
    })), React.createElement(TableHeaderColumn, {
      dataField: "post",
      dataAlign: "center",
      dataFormat: renderActionHashtag,
      width: "200px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.hashtag")
    })), React.createElement(TableHeaderColumn, {
      dataField: "paymentMethod",
      dataAlign: "center",
      dataFormat: renderPaymentMethod,
      width: "200px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.payment")
    })), React.createElement(TableHeaderColumn, {
      dataField: "amount",
      dataFormat: renderIncome,
      dataAlign: "center",
      width: "200px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.income")
    })), React.createElement(TableHeaderColumn, {
      dataField: "amount",
      dataFormat: renderExpense,
      dataAlign: "center",
      width: "200px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.expense")
    })))), React.createElement("div", {
      className: "total"
    }, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-8"
    }), React.createElement("div", {
      className: "col-md-2"
    }, React.createElement(Translate, {
      value: getTranslation("table.footer.income")
    })), React.createElement("div", {
      className: "col-md-2"
    }, React.createElement("span", null, React.createElement(Localize, {
      value: data[type],
      options: {
        style: 'currency',
        currency: 'USD',
        minimumFractionDigits: 2,
        maximumFractionDigits: 2
      }
    }), " USD"))), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-8"
    }), React.createElement("div", {
      className: "col-md-2"
    }, React.createElement(Translate, {
      value: getTranslation("table.footer.commission")
    })), React.createElement("div", {
      className: "col-md-2"
    }, React.createElement("span", null, React.createElement(Localize, {
      value: data[type] * 0.3,
      options: {
        style: 'currency',
        currency: 'USD',
        minimumFractionDigits: 2,
        maximumFractionDigits: 2
      }
    }), " USD"))), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-8"
    }), React.createElement("div", {
      className: "col-md-2"
    }, React.createElement(Translate, {
      value: getTranslation("table.footer.total")
    })), React.createElement("div", {
      className: "col-md-2"
    }, React.createElement("span", null, React.createElement(Localize, {
      value: data[type] * 0.7,
      options: {
        style: 'currency',
        currency: 'USD',
        minimumFractionDigits: 2,
        maximumFractionDigits: 2
      }
    }), " USD")))));
  }

}

module.exportDefault(CampaignTable);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"container.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/statement/ui/components/statement/payments/container.jsx                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Table;
module.watch(require("./table"), {
  default(v) {
    Table = v;
  }

}, 1);
let Total;
module.watch(require("./total"), {
  default(v) {
    Total = v;
  }

}, 2);
let DateControls;
module.watch(require("./date-controls"), {
  default(v) {
    DateControls = v;
  }

}, 3);

let _;

module.watch(require("lodash"), {
  default(v) {
    _ = v;
  }

}, 4);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 5);

let getTranslation = key => {
  return "Statement.tabs.statement." + key;
};

class Layout extends React.Component {
  constructor() {
    super();
    this.processPayments = this.processPayments.bind(this);
  }

  processPayments(payments) {
    let res = [];
    let balance = 0;

    let getBalance = campaignBalance => {
      balance += campaignBalance;
      return balance;
    };

    let campaignIDs = _.uniq(payments.map(c => c.campaign._id));

    campaignIDs.forEach((campaignID, i) => {
      let campaignPayments = payments.filter(p => p.campaign._id === campaignID);
      let payment = campaignPayments[0];
      let income = payments.filter(p => p.type === "incoming").map(p => Number(p.amount)).reduce((acc, p) => acc + p, 0);
      let expense = payments.filter(p => p.type === "outgoing").map(p => Number(p.amount)).reduce((acc, p) => acc + p, 0);
      res.push({
        _id: campaignID,
        index: i + 1,
        dates: {
          from: new Date(_.min(campaignPayments.map(p => Number(new Date())))),
          to: new Date(_.max(campaignPayments.map(p => Number(new Date()))))
        },
        brands: payment.campaign.information.brands,
        owner: payment.campaign.owner,
        manager: payment.campaign.manager,
        campaign: payment.campaign.information.name,
        income,
        expense,
        balance: getBalance(income - expense),
        payments: campaignPayments
      });
    });
    window.processedPayments = res;
    return res;
  }

  render() {
    let {
      payments,
      updateMonth,
      updateYear,
      updateAccounts,
      year,
      month,
      accounts
    } = this.props;
    window.payments = payments;
    let processPayments = this.processPayments(payments);
    return React.createElement("div", null, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-6"
    }), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "row"
    }, React.createElement(DateControls, {
      year: year,
      month: month,
      updateMonth: updateMonth,
      updateYear: updateYear
    })), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement(Translate, {
      value: getTranslation("table.note")
    })), React.createElement(Total, {
      list: payments
    })))), React.createElement(Table, {
      payments: processPayments
    }));
  }

}

module.exportDefault(Layout);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"date-controls.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/statement/ui/components/statement/payments/date-controls.jsx                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class DateControls extends React.Component {
  constructor() {
    super();
    this.updateYear = this.updateYear.bind(this);
  }

  updateYear(offset) {
    let {
      year,
      updateYear
    } = this.props;
    return function () {
      updateYear(year + offset);
    };
  }

  updateMonth(offset) {
    let {
      month,
      updateMonth
    } = this.props;
    return function () {
      updateMonth(month + offset);
    };
  }

  render() {
    let getTranslation = key => {
      return "Statement." + key;
    };

    let {
      year,
      month
    } = this.props;
    return React.createElement("div", {
      className: "col-md-6 col-md-offset-6"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("div", {
      className: "input-group"
    }, React.createElement("span", {
      className: "input-group-btn"
    }, React.createElement("button", {
      type: "button",
      onClick: this.updateYear(-1),
      className: "btn btn-default btn-outline"
    }, "<")), React.createElement("input", {
      type: "text",
      className: "form-control",
      value: year,
      disabled: true
    }), React.createElement("span", {
      className: "input-group-btn"
    }, React.createElement("button", {
      type: "button",
      onClick: this.updateYear(1),
      className: "btn btn-default btn-outline"
    }, ">")))), React.createElement("div", {
      className: "form-group"
    }, React.createElement("div", {
      className: "input-group"
    }, React.createElement("span", {
      className: "input-group-btn"
    }, React.createElement("button", {
      type: "button",
      onClick: this.updateMonth(-1),
      className: "btn btn-default btn-outline"
    }, "<")), React.createElement("input", {
      type: "text",
      className: "form-control",
      value: month,
      disabled: true
    }), React.createElement("span", {
      className: "input-group-btn"
    }, React.createElement("button", {
      type: "button",
      onClick: this.updateMonth(1),
      className: "btn btn-default btn-outline"
    }, ">")))));
  }

}

module.exportDefault(DateControls);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"table.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/statement/ui/components/statement/payments/table.jsx                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let I18n, Localize, Translate;
module.watch(require("react-redux-i18n"), {
  I18n(v) {
    I18n = v;
  },

  Localize(v) {
    Localize = v;
  },

  Translate(v) {
    Translate = v;
  }

}, 1);
let BootstrapTable, TableHeaderColumn;
module.watch(require("react-bootstrap-table"), {
  BootstrapTable(v) {
    BootstrapTable = v;
  },

  TableHeaderColumn(v) {
    TableHeaderColumn = v;
  }

}, 2);
let SocialAvatar;
module.watch(require("../../../../../core/ui/components/social-avatar"), {
  default(v) {
    SocialAvatar = v;
  }

}, 3);
let Modal;
module.watch(require("react-modal"), {
  default(v) {
    Modal = v;
  }

}, 4);
let CampaignTable;
module.watch(require("./campaign-payments"), {
  default(v) {
    CampaignTable = v;
  }

}, 5);

let getTranslation = key => {
  return "Statement.tabs.statement." + key;
};

const renderPaymentMethod = function (cell, row) {
  // String example
  let getCard = card => {
    switch (card) {
      case "Amex":
        return "https://s3.amazonaws.com/ibol-app-media/cards/card_amex.png";

      case "Visa":
        return "https://s3.amazonaws.com/ibol-app-media/cards/card_visa.png";

      case "MasterCard":
        return "https://s3.amazonaws.com/ibol-app-media/cards/card_masterCard.png";

      case "Discover":
        return "https://s3.amazonaws.com/ibol-app-media/cards/card_discover.png";

      case "DinersClub":
        return "https://s3.amazonaws.com/ibol-app-media/cards/card_dinersClub.png";
    }
  };

  return React.createElement("div", null, React.createElement("img", {
    src: getCard(cell.brand),
    alt: cell.brand,
    style: {
      height: 32,
      marginRight: 10
    }
  }), "- ", cell.last4);
};

const renderCampaignName = function (cell, row) {
  // String example
  return React.createElement("span", null, cell || "-");
};

const renderBalance = function (cell, row) {
  // String example
  return React.createElement("span", null, React.createElement(Localize, {
    value: cell,
    options: {
      style: 'currency',
      currency: 'USD',
      minimumFractionDigits: 2,
      maximumFractionDigits: 2
    }
  }), " USD");
};

const renderName = function (cell, row) {
  // String example
  return React.createElement("div", null, React.createElement(SocialAvatar, {
    avatar: cell.avatar,
    name: cell.name,
    size: "50",
    page: row.type === "page"
  }), React.createElement("div", {
    className: "icon-label"
  }, cell.name + " " + cell.lastName));
};

const renderOwner = function (cell, row) {
  // String example
  if (!cell) return React.createElement("span", null, "\"-\"");
  return React.createElement("div", null, React.createElement(SocialAvatar, {
    avatar: cell.profile.avatar,
    name: cell.profile.name,
    size: "50"
  }), React.createElement("div", {
    className: "icon-label"
  }, cell.profile.name + " " + cell.profile.lastName));
};

const renderManager = function (cell, row) {
  // String example
  return React.createElement("div", null, React.createElement(SocialAvatar, {
    avatar: cell.profile.avatar,
    name: cell.profile.name,
    size: "50"
  }), React.createElement("div", {
    className: "icon-label"
  }, cell.profile.name + " " + cell.profile.lastName));
};

const renderDate = function (cell, row) {
  // String example
  return React.createElement("span", null, moment(new Date(cell.from)).format("DD/MM/YY"), " - ", moment(new Date(cell.to)).format("DD/MM/YY"));
};

const renderBrands = function (cell, row) {
  return React.createElement("div", null, cell.map((a, i) => React.createElement("div", {
    className: "icon",
    key: i
  }, React.createElement(SocialAvatar, {
    avatar: a.information.avatar,
    network: a.network,
    name: a.information.name,
    size: "50",
    type: a.information.type
  }))));
};

class Table extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      sortName: undefined,
      sortOrder: undefined,
      modalType: "income",
      modalData: null,
      modalIsOpen: false
    };
    this.onSortChange = this.onSortChange.bind(this);
    this.openModal = this.openModal.bind(this);
    this.closeModal = this.closeModal.bind(this);
  }

  onSortChange(sortName, sortOrder) {
    this.setState({
      sortName,
      sortOrder
    });
  }

  openModal(modalData, modalType) {
    let component = this;
    return function () {
      component.setState({
        modalIsOpen: true,
        modalData,
        modalType
      });
    };
  }

  closeModal() {
    this.setState({
      modalIsOpen: false,
      modalData: null,
      modalType: null
    });
  }

  render() {
    let {
      payments
    } = this.props;
    let {
      modalData,
      modalType
    } = this.state;
    const options = {
      sortName: this.state.sortName,
      sortOrder: this.state.sortOrder,
      onSortChange: this.onSortChange,
      noDataText: I18n.t(getTranslation("table.empty"))
    };
    /*
    let balance=0;
    let getBalance=(l)=>{
        balance+=((l.type==="outgoing"?-1:1)*Number(l.amount));
        return balance;
    };
    list = list.map((l, index) => Object.assign({}, l, {
        index: (index + 1),
        balance: getBalance(l)
    }));*/

    let {
      openModal
    } = this;

    const renderIncome = function (cell, row) {
      return cell ? React.createElement("span", {
        onClick: openModal(row, "income"),
        style: {
          cursor: "pointer"
        }
      }, React.createElement(Localize, {
        value: cell,
        options: {
          style: 'currency',
          currency: 'USD',
          minimumFractionDigits: 2,
          maximumFractionDigits: 2
        }
      }), " USD") : "-";
    };

    const renderExpense = function (cell, row) {
      return cell ? React.createElement("span", {
        onClick: openModal(row, "expense"),
        style: {
          cursor: "pointer"
        }
      }, React.createElement(Localize, {
        value: cell,
        options: {
          style: 'currency',
          currency: 'USD',
          minimumFractionDigits: 2,
          maximumFractionDigits: 2
        }
      }), " USD") : "-";
    };

    return React.createElement("div", {
      className: "statement-table"
    }, React.createElement("div", {
      className: "ibol-table"
    }, React.createElement(BootstrapTable, {
      data: payments,
      options: options
    }, React.createElement(TableHeaderColumn, {
      isKey: true,
      dataField: "index",
      dataAlign: "center",
      width: "60px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.index")
    })), React.createElement(TableHeaderColumn, {
      dataField: "dates",
      dataFormat: renderDate,
      dataAlign: "center",
      width: "180px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.dates")
    })), React.createElement(TableHeaderColumn, {
      dataField: "owner",
      dataAlign: "center",
      dataFormat: renderOwner,
      width: "200px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.owner")
    })), React.createElement(TableHeaderColumn, {
      dataField: "manager",
      dataAlign: "center",
      dataFormat: renderManager,
      width: "200px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.manager")
    })), React.createElement(TableHeaderColumn, {
      dataField: "brands",
      dataAlign: "center",
      dataFormat: renderBrands,
      width: "200px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.brands")
    })), React.createElement(TableHeaderColumn, {
      dataField: "campaign",
      dataAlign: "center",
      dataFormat: renderCampaignName,
      width: "200px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.campaign")
    })), React.createElement(TableHeaderColumn, {
      dataField: "income",
      dataFormat: renderIncome,
      dataAlign: "center",
      width: "200px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.income")
    })), React.createElement(TableHeaderColumn, {
      dataField: "expense",
      dataFormat: renderExpense,
      dataAlign: "center",
      width: "200px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.expense")
    })), React.createElement(TableHeaderColumn, {
      dataField: "balance",
      dataFormat: renderBalance,
      dataAlign: "center",
      width: "200px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.balance")
    })))), React.createElement(Modal, {
      isOpen: this.state.modalIsOpen,
      onRequestClose: this.closeModal,
      className: "app-modal",
      contentLabel: "Campaign's Payments"
    }, React.createElement("button", {
      className: "close",
      onClick: this.closeModal
    }, React.createElement("i", {
      className: "icon wb-close-mini",
      "aria-hidden": "true"
    })), React.createElement(CampaignTable, {
      data: modalData,
      type: modalType
    })));
  }

}

module.exportDefault(Table);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"total.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/statement/ui/components/statement/payments/total.jsx                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, Localize;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  Localize(v) {
    Localize = v;
  }

}, 1);

class Total extends React.Component {
  render() {
    let getTranslation = key => {
      return "Statement.tabs.statement." + key;
    };

    let {
      list
    } = this.props;
    let income = list.filter(l => l.type === "incoming").map(l => Number(l.amount)).reduce((acc, v) => acc + v, 0);
    let expense = list.filter(l => l.type === "outgoing").map(l => Number(l.amount)).reduce((acc, v) => acc + v, 0);
    return React.createElement("div", {
      className: "row total-table col-md-6"
    }, React.createElement("table", null, React.createElement("tbody", null, React.createElement("tr", null, React.createElement("td", null, React.createElement("h3", null, React.createElement(Translate, {
      value: getTranslation("table.headers.income")
    }))), React.createElement("td", {
      width: "200px"
    }, React.createElement(Localize, {
      value: income,
      options: {
        style: 'currency',
        currency: 'USD',
        minimumFractionDigits: 2,
        maximumFractionDigits: 2
      }
    }), " USD")), React.createElement("tr", null, React.createElement("td", null, React.createElement("h3", null, React.createElement(Translate, {
      value: getTranslation("table.headers.expense")
    }))), React.createElement("td", {
      width: "200px"
    }, React.createElement(Localize, {
      value: expense,
      options: {
        style: 'currency',
        currency: 'USD',
        minimumFractionDigits: 2,
        maximumFractionDigits: 2
      }
    }), " USD")), React.createElement("tr", null, React.createElement("td", null, React.createElement("h3", null, React.createElement(Translate, {
      value: getTranslation("table.headers.balance")
    }))), React.createElement("td", {
      width: "200px"
    }, React.createElement(Localize, {
      value: income - expense,
      options: {
        style: 'currency',
        currency: 'USD',
        minimumFractionDigits: 2,
        maximumFractionDigits: 2
      }
    }), " USD")))));
  }

}

module.exportDefault(Total);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"container.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/statement/ui/components/statement/container.jsx                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Tabs, Tab;
module.watch(require("react-bootstrap"), {
  Tabs(v) {
    Tabs = v;
  },

  Tab(v) {
    Tab = v;
  }

}, 1);
let Payments;
module.watch(require("../../containers/statement"), {
  default(v) {
    Payments = v;
  }

}, 2);

class Layout extends React.Component {
  constructor() {
    super();
    this.state = {
      month: moment().month() + 1,
      year: moment().year(),
      accounts: []
    };
    this.updateAccounts = this.updateAccounts.bind(this);
    this.updateMonth = this.updateMonth.bind(this);
    this.updateYear = this.updateYear.bind(this);
  }

  updateMonth(month) {
    this.setState({
      month
    });
  }

  updateYear(year) {
    this.setState({
      year
    });
  }

  updateAccounts(accounts) {
    this.setState({
      accounts
    });
  }

  render() {
    let {
      month,
      year,
      accounts
    } = this.state;
    return React.createElement("div", {
      className: "page-content container-fluid statement"
    }, React.createElement(Payments, {
      year: year,
      month: month,
      accounts: accounts,
      updateMonth: this.updateMonth,
      updateYear: this.updateYear,
      updateAccounts: this.updateAccounts
    }));
  }

}

module.exportDefault(Layout);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"broker":{"container.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/statement/ui/components/broker/container.jsx                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 1);
let Tabs, Tab;
module.watch(require("react-bootstrap"), {
  Tabs(v) {
    Tabs = v;
  },

  Tab(v) {
    Tab = v;
  }

}, 2);
let Invite;
module.watch(require("./invite"), {
  default(v) {
    Invite = v;
  }

}, 3);
let List;
module.watch(require("./list"), {
  default(v) {
    List = v;
  }

}, 4);

class Broker extends React.Component {
  constructor(props) {
    super(props);
    this.handleUpload = this.handleUpload.bind(this);
  }

  handleUpload(e) {
    console.log(e.target.files);
    var uploader = new Slingshot.Upload('test-bucket-ibol');
    let file = e.target.files[0];
    uploader.send(file, (error, downloadUrl) => {
      if (error) {
        alert('Error al subir el archivo');
        console.log('Error', error);
        return;
      }

      console.log(downloadUrl);
    });
  }

  render() {
    let getTranslation = key => {
      return "Statement.tabs.broker." + key;
    };

    return React.createElement("div", {
      className: "content-padding-30 clear-tabs settings-broker"
    }, React.createElement(Tabs, {
      defaultActiveKey: "invites",
      id: "uncontrolled-tab-example2",
      bsStyle: "tabs"
    }, React.createElement(Tab, {
      eventKey: "invites",
      title: React.createElement(Translate, {
        value: getTranslation("tabs.contacts.title")
      })
    }, React.createElement(Invite, null)), React.createElement(Tab, {
      eventKey: "message",
      title: React.createElement(Translate, {
        value: getTranslation("tabs.broker.title")
      })
    }, React.createElement("input", {
      type: "file",
      onChange: this.handleUpload
    }), React.createElement(List, null))));
  }

}

module.exportDefault(Broker);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"invite.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/statement/ui/components/broker/invite.jsx                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 1);

class BrokerInvite extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    let getTranslation = key => {
      return "Statement.tabs.broker.tabs.contacts." + key;
    };

    return React.createElement("div", {
      className: ""
    }, React.createElement("div", {
      className: "spacer-30"
    }), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-6"
    }, "Seleccione sus redes sociales y/o su email", React.createElement("div", {
      className: "list"
    })), React.createElement("div", {
      className: "col-md-6"
    }, "Seleccione sus contactos", React.createElement("div", {
      className: "list"
    })))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "message"
    }, React.createElement("textarea", {
      placeholder: "Mande a sus contactos un mensaje personalizado"
    }), React.createElement("a", {
      className: "btn btn-primary pull-right"
    }, "Enviar")), React.createElement("div", null, React.createElement("h3", null, "Perfiles Invitados")))));
  }

}

module.exportDefault(BrokerInvite);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"list.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/statement/ui/components/broker/list.jsx                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, Localize, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  Localize(v) {
    Localize = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 1);
let BootstrapTable, TableHeaderColumn;
module.watch(require("react-bootstrap-table"), {
  BootstrapTable(v) {
    BootstrapTable = v;
  },

  TableHeaderColumn(v) {
    TableHeaderColumn = v;
  }

}, 2);
let SocialAvatar;
module.watch(require("../../../../core/ui/components/social-avatar"), {
  default(v) {
    SocialAvatar = v;
  }

}, 3);

const renderManager = function (cell, row) {
  // String example
  return React.createElement("div", null, React.createElement(SocialAvatar, {
    avatar: cell.profile.avatar,
    name: cell.profile.name,
    size: "50"
  }), React.createElement("div", {
    className: "icon-label"
  }, cell.profile.name + " " + cell.profile.lastName));
};

const renderDate = function (cell, row) {
  // String example
  return moment(new Date(cell)).format("DD/MM/YY");
};

const renderNetwork = function (cell, row) {
  // String example
  return React.createElement("div", null, React.createElement("div", {
    className: "icon"
  }, React.createElement("i", {
    className: "social-icon " + cell
  })), React.createElement("span", {
    className: "icon-label"
  }, cell));
};

const isBrand = function (cell, row) {
  // String example
  return React.createElement("i", {
    className: "icon circle brand " + (cell ? "wb-check" : "wb-close not"),
    "aria-hidden": "true"
  });
};

const isInfluencer = function (cell, row) {
  // String example
  return React.createElement("i", {
    className: "icon circle influencer " + (cell ? "wb-check" : "wb-close not"),
    "aria-hidden": "true"
  });
};

const currency = function (cell, row) {
  // String example
  return React.createElement("span", null, React.createElement(Localize, {
    value: cell,
    options: {
      style: 'currency',
      currency: 'USD',
      minimumFractionDigits: 2,
      maximumFractionDigits: 2
    }
  }), " USD");
};

class BrokerList extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      sortName: undefined,
      sortOrder: undefined
    };
    this.onSortChange = this.onSortChange.bind(this);
  }

  onSortChange(sortName, sortOrder) {
    this.setState({
      sortName,
      sortOrder
    });
  }

  render() {
    let data = [{
      date: new Date(),
      manager: Meteor.user() || {
        profile: {
          name: null,
          lastName: null,
          avatar: null
        }
      },
      network: "facebook",
      brand: true,
      influencer: true,
      actions: 12,
      income: 1234345,
      profit: 24686.9
    }];

    let getTranslation = key => {
      return "Statement.tabs.broker.tabs.broker." + key;
    };

    const options = {
      sortName: this.state.sortName,
      sortOrder: this.state.sortOrder,
      onSortChange: this.onSortChange,
      noDataText: I18n.t(getTranslation("table.empty"))
    };
    return React.createElement("div", {
      className: ""
    }, React.createElement("div", {
      className: "ibol-table"
    }, React.createElement(BootstrapTable, {
      data: data,
      options: options,
      pagination: true,
      search: true,
      searchPlaceholder: I18n.t(getTranslation("table.search"))
    }, React.createElement(TableHeaderColumn, {
      isKey: true,
      dataField: "date",
      dataFormat: renderDate,
      dataAlign: "center",
      width: "140px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.date")
    })), React.createElement(TableHeaderColumn, {
      dataField: "manager",
      dataFormat: renderManager,
      dataSort: true
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.manager")
    })), React.createElement(TableHeaderColumn, {
      dataField: "network",
      dataAlign: "center",
      dataFormat: renderNetwork,
      dataSort: true,
      width: "180px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.network")
    })), React.createElement(TableHeaderColumn, {
      dataField: "brand",
      dataFormat: isBrand,
      dataAlign: "center",
      width: "160px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.brand")
    })), React.createElement(TableHeaderColumn, {
      dataField: "influencer",
      dataFormat: isInfluencer,
      dataAlign: "center",
      width: "160px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.influencer")
    })), React.createElement(TableHeaderColumn, {
      dataField: "actions",
      dataAlign: "center",
      width: "110px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.invites")
    })), React.createElement(TableHeaderColumn, {
      dataField: "income",
      dataFormat: currency,
      dataAlign: "center",
      width: "180px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.income")
    })), React.createElement(TableHeaderColumn, {
      dataField: "profit",
      dataFormat: currency,
      dataAlign: "center",
      width: "180px"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.profit")
    })))));
  }

}

module.exportDefault(BrokerList);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"containers":{"statement.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/statement/ui/containers/statement.jsx                                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/taggedTemplateLiteral"));

function _templateObject() {
  const data = (0, _taggedTemplateLiteral2.default)(["\n    query ($year: String, $month: String, $accounts: [String]) {\n        paymentsOwn(year: $year, month: $month, accounts: $accounts) {\n            amount\n            date,\n            from{\n                _id,\n                profile{\n                    name\n                    lastName,\n                    avatar\n                }\n            }\n            to{\n                _id,\n                type,\n                network,\n                information{\n                    name\n                    lastName,\n                    avatar\n                }\n            }\n            type\n            paymentMethod{\n                brand,\n                last4\n            }\n            status,\n            type,\n            campaign{\n                _id,\n                owner{\n                    profile{\n                        name,\n                        lastName,\n                        avatar\n                    }\n                }\n                manager{\n                    _id,\n                    profile{\n                        name,\n                        lastName,\n                        avatar\n                    }\n                }\n                information{\n                    name,\n                    brands{\n                        _id,\n                        network,\n                        information{\n                            name,\n                            lastName,\n                            avatar\n                        }\n                    }\n                }\n            },\n            post{\n                _id,\n                status,\n                type,\n                date,\n                useHashtag,\n                account{\n                    _id,\n                    name,\n                    lastName,\n                    avatar,\n                    network,\n                }\n                data{\n                    message,\n                    media,\n                    location\n                }\n            }\n        }\n    }\n\n"]);

  _templateObject = function () {
    return data;
  };

  return data;
}

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let graphql;
module.watch(require("react-apollo"), {
  graphql(v) {
    graphql = v;
  }

}, 1);
let Loading;
module.watch(require("../../../core/ui/components/loading"), {
  default(v) {
    Loading = v;
  }

}, 2);
let Payments;
module.watch(require("../components/statement/payments/container"), {
  default(v) {
    Payments = v;
  }

}, 3);
let createContainer;
module.watch(require("meteor/react-meteor-data"), {
  createContainer(v) {
    createContainer = v;
  }

}, 4);
let gql;
module.watch(require("graphql-tag"), {
  default(v) {
    gql = v;
  }

}, 5);

class EditContainer extends React.Component {
  render() {
    let {
      loading,
      refetch,
      paymentsOwn,
      updateMonth,
      updateYear,
      updateAccounts,
      year,
      month,
      accounts
    } = this.props;
    return React.createElement("div", null, loading ? React.createElement(Loading, null) : React.createElement(Payments, {
      payments: paymentsOwn,
      refetch: refetch,
      year: year,
      month: month,
      accounts: accounts,
      updateMonth: updateMonth,
      updateYear: updateYear,
      updateAccounts: updateAccounts
    }));
  }

}

const QUERY = gql(_templateObject());
const withData = graphql(QUERY, {
  props: (_ref) => {
    let {
      data: {
        error,
        loading,
        paymentsOwn,
        refetch
      }
    } = _ref;
    if (loading) return {
      loading: true
    };
    if (error) return {
      hasErrors: true
    };
    return {
      loading,
      paymentsOwn,
      refetch
    };
  },
  options: ownProps => ({
    variables: {
      year: ownProps.year,
      month: ownProps.month,
      accounts: ownProps.accounts
    }
  })
});
module.exportDefault(withData(EditContainer));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"layouts":{"layout.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/statement/ui/layouts/layout.jsx                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Tabs, Tab;
module.watch(require("react-bootstrap"), {
  Tabs(v) {
    Tabs = v;
  },

  Tab(v) {
    Tab = v;
  }

}, 1);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 2);
let Statement;
module.watch(require("../components/statement/container"), {
  default(v) {
    Statement = v;
  }

}, 3);
let Broker;
module.watch(require("../components/broker/container"), {
  default(v) {
    Broker = v;
  }

}, 4);

class Layout extends React.Component {
  render() {
    let getTranslation = key => {
      return "Statement.tabs." + key;
    };

    return React.createElement("div", null, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-lg-12"
    }, React.createElement("div", {
      className: "nav-tabs-horizontal"
    }, React.createElement(Tabs, {
      defaultActiveKey: this.props.params.tab,
      id: "uncontrolled-tab-example",
      bsStyle: "tabs"
    }, React.createElement(Tab, {
      eventKey: "statement",
      title: React.createElement(Translate, {
        value: getTranslation("statement.title")
      })
    }, React.createElement(Statement, null)), React.createElement(Tab, {
      eventKey: "broker",
      title: React.createElement(Translate, {
        value: getTranslation("broker.title")
      })
    }, React.createElement(Broker, null)))))));
  }

}

module.exportDefault(Layout);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"statement.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/statement/ui/layouts/statement.jsx                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class Statement extends React.Component {
  render() {
    let filter = obj => {
      let newProps = {};
      let key;

      for (key in obj) {
        if (key !== "children") {
          newProps[key] = obj[key];
        }
      }

      return newProps;
    };

    return React.createElement("div", null, React.cloneElement(this.props.children, filter(this.props)));
  }

}

module.exportDefault(Statement);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"actions":{"bundle.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/statement/actions/bundle.jsx                                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let Actions = {};
module.exportDefault(Actions);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"client":{"bundle.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/statement/client/bundle.jsx                                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let Routes;
module.watch(require("./routes"), {
  default(v) {
    Routes = v;
  }

}, 0);
let Reducers;
module.watch(require("../reducers/bundle"), {
  default(v) {
    Reducers = v;
  }

}, 1);
let Actions;
module.watch(require("../actions/bundle"), {
  default(v) {
    Actions = v;
  }

}, 2);
let Translations;
module.watch(require("./translations"), {
  default(v) {
    Translations = v;
  }

}, 3);
module.exportDefault({
  reducers: Reducers,
  routes: Routes,
  actions: Actions,
  translations: Translations
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"routes.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/statement/client/routes.jsx                                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Route, IndexRoute;
module.watch(require("react-router"), {
  Route(v) {
    Route = v;
  },

  IndexRoute(v) {
    IndexRoute = v;
  }

}, 1);
let Statement;
module.watch(require("../ui/layouts/statement"), {
  default(v) {
    Statement = v;
  }

}, 2);
let Layout;
module.watch(require("../ui/layouts/layout"), {
  default(v) {
    Layout = v;
  }

}, 3);
module.exportDefault(React.createElement(Route, {
  path: "/statement",
  component: Statement
}, React.createElement(IndexRoute, {
  component: Layout
})));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"translations.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/statement/client/translations.jsx                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.exportDefault({
  en: {
    menu: "Statement",
    tabs: {
      statement: {
        title: "Statement",
        table: {
          headers: {
            index: "#",
            dates: "Dates",
            owner: "Owner",
            manager: "Manager",
            brands: "Brands",
            campaign: "Campaign",
            income: "Incomes",
            expense: "Expenses",
            balance: "Balance"
          },
          note: "",
          empty: "No Results",
          search: "Search",
          total: "Total Incomes/Expenses",
          balance: "Balance"
        },
        payments: {
          title: "Breakdown",
          type: {
            income: "Income",
            expense: "Expense"
          },
          data: {
            brands: "Brands",
            campaign: "Campaign",
            owner: "Owner",
            manager: "Manager",
            actions: "Actions"
          },
          table: {
            title: "Campaign's Information",
            headers: {
              index: "#",
              owner: "Owner",
              manager: "Manager",
              network: "Network",
              influencer: "Influencer",
              action: "Action Type",
              message: "Message",
              media: "Media",
              timeZone: "Time Zone",
              date: "Date",
              time: "Time",
              hashtag: "#IBOL Viralizng!",
              payment: "Paymment",
              income: "Income",
              expense: "Expensr"
            },
            footer: {
              income: "Income",
              commission: "Comission IBOL (30%)",
              total: "Total"
            }
          }
        }
      },
      broker: {
        title: "Broker",
        tabs: {
          broker: {
            title: "Broker",
            table: {
              search: "Search",
              empty: "No results",
              headers: {
                date: "Date",
                manager: "Manager",
                network: "Network",
                brand: "Brand",
                influencer: "Influencer",
                invites: "Invites",
                income: "Income",
                profit: "Profit"
              }
            }
          },
          contacts: {
            title: "Invite Contacts"
          }
        }
      }
    }
  },
  es: {
    menu: "Estado de Cuenta",
    tabs: {
      statement: {
        title: "Estado de Cuenta",
        table: {
          headers: {
            index: "No",
            dates: "Fechas",
            owner: "Titular",
            manager: "Administrador",
            brands: "Marcas",
            campaign: "Campaña",
            income: "Ingresos",
            expense: "Egresos",
            balance: "Saldo"
          },
          note: "Nota: Al dar click sobre cualquier elemento de la tabla desplegaría desglose, dependiendo si fue infreso o egreso lo seleccionado.",
          empty: "No Hay Resultados",
          search: "Buscar",
          total: "Total Ingresos/Egresos",
          balance: "Total"
        },
        payments: {
          title: "Desglose",
          type: {
            income: "Ingreso",
            expense: "Egreso"
          },
          data: {
            brands: "Marcas",
            campaign: "Campaña",
            owner: "Titular",
            manager: "Administrador",
            actions: "Acciones"
          },
          table: {
            title: "Datos de la campaña participante",
            headers: {
              index: "#",
              owner: "Titular",
              manager: "Administrador",
              network: "Red Social",
              influencer: "Influencer",
              action: "Tipo de Acción",
              message: "Mensaje",
              media: "Media",
              timeZone: "Zona Horaria",
              date: "Fecha",
              time: "Hora",
              hashtag: "#IBOL Viralizing!",
              payment: "Pago",
              income: "Ingreso",
              expense: "Egreso"
            },
            footer: {
              income: "Ingreso Bruto",
              commission: "Comisión IBOL (30%)",
              total: "Total"
            }
          }
        }
      },
      broker: {
        title: "Broker",
        tabs: {
          broker: {
            title: "Broker",
            table: {
              search: "Buscar",
              empty: "No hay resultados",
              headers: {
                date: "Fecha",
                manager: "Administrador",
                network: "Red Social",
                brand: "Marca",
                influencer: "Influencer",
                invites: "Acciones",
                income: "Facturación",
                profit: "Utilidad"
              }
            }
          },
          contacts: {
            title: "Invitar Contactos"
          }
        }
      }
    }
  },
  zz: {
    menu: "測試",
    tabs: {
      statement: {
        title: "測試 測試 測試",
        table: {
          headers: {
            index: "測",
            dates: "測試",
            owner: "測試",
            manager: "測試",
            brands: "測試",
            campaign: "測試",
            income: "測試",
            expense: "測試",
            balance: "測試"
          },
          note: "測試: 測試 測試 測試 測試 測試 測試 測試 測試 測試 測試 測試, 測試 測試 測試 測試 測試 測試 測試 測試.",
          empty: "測試 測試",
          search: "測試",
          total: "測試 測試/測試",
          balance: "測試"
        },
        payments: {
          title: "測試",
          type: {
            income: "測試",
            expense: "測試"
          },
          data: {
            brands: "測試",
            campaign: "測試",
            owner: "測試",
            manager: "測試",
            actions: "測試"
          },
          table: {
            title: "測試",
            headers: {
              index: "測",
              owner: "測試",
              manager: "測試",
              network: "測試",
              influencer: "測試",
              action: "測試",
              message: "測試",
              media: "測試",
              timeZone: "測試",
              date: "測試",
              time: "測試",
              hashtag: "測試",
              payment: "測試",
              income: "測試",
              expense: "測試"
            },
            footer: {
              income: "測試",
              commission: "測試",
              total: "測試"
            }
          }
        }
      },
      broker: {
        title: "測試",
        tabs: {
          broker: {
            title: "測試",
            table: {
              search: "測試",
              empty: "測試 測試 測試",
              headers: {
                date: "測試",
                manager: "測試",
                network: "測試 測試",
                brand: "測試",
                influencer: "測試",
                invites: "測試",
                income: "測試",
                profit: "測試"
              }
            }
          },
          contacts: {
            title: "測試 測試"
          }
        }
      }
    }
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"reducers":{"bundle.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/statement/reducers/bundle.jsx                                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
const Reducers = {};
module.exportDefault(Reducers);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"agenda":{"ui":{"components":{"post-create":{"account-select.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/agenda/ui/components/post-create/account-select.jsx                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 1);
let SocialAvatar;
module.watch(require("../../../../core/ui/components/social-avatar"), {
  default(v) {
    SocialAvatar = v;
  }

}, 2);

class AccountSelect extends React.Component {
  constructor() {
    super();
    this.state = {
      value: ""
    }; //this.searchAccounts = _.debounce(this.searchAccounts, 600).bind(this);

    this.searchAccounts = this.searchAccounts.bind(this);
    this.accountClick = this.accountClick.bind(this);
  }

  searchAccounts(e) {
    let value = e.target.value;
    this.setState({
      value
    });
  }

  accountClick(account) {
    let component = this;
    return function () {
      let accounts = component.props.input.value || [];

      if (accounts.indexOf(account) === -1) {
        accounts.push(account);
      } else {
        accounts.splice(accounts.indexOf(account), 1);
      }

      component.props.input.onChange(accounts);
      component.forceUpdate();
    };
  }

  render() {
    let getTranslation = key => {
      return "Agenda.publish.modal." + key;
    };

    return React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-body container-fluid padding-20"
    }, React.createElement("div", {
      className: "post-account"
    }, React.createElement("div", {
      className: "search"
    }, React.createElement("i", {
      className: "icon wb-search",
      "aria-hidden": "true"
    }), React.createElement("input", {
      type: "text",
      placeholder: this.props.placeholder || "Search",
      onChange: this.searchAccounts,
      ref: "accountsSearch"
    })), React.createElement("ul", {
      className: "list-group list-group-full selected"
    }, this.props.input.value && this.props.input.value.length ? this.props.input.value.map((account, i) => {
      return React.createElement("li", {
        className: "list-group-item",
        key: i,
        onClick: this.accountClick(account)
      }, React.createElement(SocialAvatar, {
        avatar: account.information.avatar,
        name: account.information.name + " " + account.information.lastName,
        network: account.network,
        size: "50"
      }), account.information.name + " " + account.information.lastName);
    }) : ""), this.props.input.value && this.props.input.value.length ? React.createElement("hr", null) : "", React.createElement("ul", {
      className: "list-group list-group-full"
    }, this.props.data && this.props.data.length ? _.difference(this.props.data, this.props.input.value || []).filter(o => {
      if (!this.state.value) {
        return true;
      }

      let {
        name,
        lastName
      } = o.information;
      let regEx = new RegExp(this.state.value || "");
      return name.toLowerCase().match(regEx) || lastName.toLowerCase().match(regEx) || o.network.toLowerCase().match(regEx);
    }).map((account, i) => {
      return React.createElement("li", {
        className: "list-group-item",
        key: i,
        onClick: this.accountClick(account)
      }, React.createElement(SocialAvatar, {
        avatar: account.information.avatar,
        name: account.information.name + " " + account.information.lastName,
        network: account.network,
        size: "50"
      }), account.information.name + " " + account.information.lastName);
    }) : "No Results"))));
  }

}

module.exportDefault(AccountSelect);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"controls.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/agenda/ui/components/post-create/controls.jsx                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Tooltip, OverlayTrigger;
module.watch(require("react-bootstrap"), {
  Tooltip(v) {
    Tooltip = v;
  },

  OverlayTrigger(v) {
    OverlayTrigger = v;
  }

}, 1);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 2);
let Field, reduxForm;
module.watch(require("redux-form"), {
  Field(v) {
    Field = v;
  },

  reduxForm(v) {
    reduxForm = v;
  }

}, 3);
let InputFileUpload;
module.watch(require("../../../../core/ui/components/forms/input-file-upload"), {
  default(v) {
    InputFileUpload = v;
  }

}, 4);

class PostCreateControls extends React.Component {
  tooltipContent(content) {
    return React.createElement(Tooltip, {
      id: "tooltip_content"
    }, content);
  }

  render() {
    let getTranslation = key => {
      return "Agenda.publish.modal." + key;
    };

    let {
      openUIModal,
      setImage
    } = this.props;
    let {
      media,
      date,
      location,
      preview,
      discard,
      draft
    } = this.props.settings;
    return React.createElement("ul", {
      className: "controls"
    }, media && React.createElement("li", null, React.createElement(OverlayTrigger, {
      placement: "top",
      overlay: this.tooltipContent(React.createElement(Translate, {
        value: getTranslation("write.controls.picture")
      }))
    }, React.createElement(Field, {
      name: "media",
      content: React.createElement("i", {
        className: "icon fa-photo",
        "aria-hidden": "true"
      }),
      settings: {
        multiple: false,
        maxSize: 3 * 1024 * 1024,
        className: "icon-drop-zone",
        activeClassName: "icon-drop-zone-active",
        accept: "image/png, image/jpeg, image/gif"
      },
      uploader: "campaign-image-upload",
      component: InputFileUpload,
      callback: setImage
    }))), date && React.createElement("li", {
      onClick: openUIModal("timeDate").bind(this)
    }, React.createElement(OverlayTrigger, {
      placement: "top",
      overlay: this.tooltipContent(React.createElement(Translate, {
        value: getTranslation("write.controls.time")
      }))
    }, React.createElement("i", {
      className: "icon fa-calendar",
      "aria-hidden": "true"
    }))), preview && React.createElement("li", {
      onClick: openUIModal("location").bind(this)
    }, React.createElement(OverlayTrigger, {
      placement: "top",
      overlay: this.tooltipContent(React.createElement(Translate, {
        value: getTranslation("write.controls.location")
      }))
    }, React.createElement("i", {
      className: "icon fa-location-arrow",
      "aria-hidden": "true"
    }))), preview && React.createElement("li", {
      onClick: openUIModal("preview").bind(this)
    }, React.createElement(OverlayTrigger, {
      placement: "top",
      overlay: this.tooltipContent(React.createElement(Translate, {
        value: getTranslation("write.controls.preview")
      }))
    }, React.createElement("i", {
      className: "icon fa-eye",
      "aria-hidden": "true"
    }))), discard && React.createElement("li", null, React.createElement(OverlayTrigger, {
      placement: "top",
      overlay: this.tooltipContent(React.createElement(Translate, {
        value: getTranslation("write.controls.discard")
      }))
    }, React.createElement("i", {
      className: "icon fa-trash-o",
      "aria-hidden": "true"
    }))), draft && React.createElement("li", null, React.createElement(OverlayTrigger, {
      placement: "top",
      overlay: this.tooltipContent(React.createElement(Translate, {
        value: getTranslation("write.controls.draft")
      }))
    }, React.createElement("i", {
      className: "icon fa-save",
      "aria-hidden": "true"
    }))));
  }

}

module.exportDefault(PostCreateControls);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"input-textarea.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/agenda/ui/components/post-create/input-textarea.jsx                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Meteor;
module.watch(require("meteor/meteor"), {
  Meteor(v) {
    Meteor = v;
  }

}, 1);
re = /(https?:\/\/(?:www\.|(?!www))[^\s\.]+\.[^\s]{2,}|www\.[^\s]+\.[^\s]{2,})/;

class InputTextarea extends React.Component {
  constructor() {
    super();
    this.isFree = true;
    this.onChange = this.onChange.bind(this);
    this.getURL = _.debounce(this.getURL, 2000);
  }

  getURL(url, component) {
    Meteor.call("post-get-short-url", url, function (err, res) {
      if (res) {
        let value = component.props.input.value.replace(re, res);
        component.props.input.onChange(value);
      }
    });
  }

  onChange(e) {
    let val = e.target.value;

    if (re.exec(val)) {
      this.getURL(re.exec(val)[0], this);
    }

    this.props.input.onChange(val);
  }

  render() {
    /*let reIbol=re=/#ibol/;
    if(!reIbol.exec(value) && component.isFree){
        value +=" #ibol";
    }*/
    let max = 140;

    if (this.isFree) {
      max = 134;
    }

    let count = this.props.input.value.length;
    return React.createElement("div", {
      className: "form-input"
    }, React.createElement("textarea", {
      onChange: this.onChange,
      value: this.props.input.value,
      placeholder: this.props.placeholder || ""
    }), React.createElement("div", {
      className: "counter " + (count / max > 1 ? "exceeded" : "")
    }, count + "/" + max));
  }

}

module.exportDefault(InputTextarea);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"location.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/agenda/ui/components/post-create/location.jsx                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/extends"));

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/objectSpread"));

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let withGoogleMap, GoogleMap, Marker;
module.watch(require("react-google-maps"), {
  withGoogleMap(v) {
    withGoogleMap = v;
  },

  GoogleMap(v) {
    GoogleMap = v;
  },

  Marker(v) {
    Marker = v;
  }

}, 1);
let InputGeolocation;
module.watch(require("../../../../core/ui/components/forms/input-geolocation"), {
  default(v) {
    InputGeolocation = v;
  }

}, 2);

class PostLocation extends React.Component {
  constructor() {
    super();
    this.state = {
      location: "",
      markers: [{
        position: {
          lat: 19.4403823,
          lng: -99.184876
        },
        defaultAnimation: 2
      }],
      center: {
        lat: 19.4403823,
        lng: -99.184876
      }
    };
    this.onMapMove = this.onMapMove.bind(this);
    this.saveLocation = this.saveLocation.bind(this);
    this.setPosition = this.setPosition.bind(this);
  }

  setPosition(position) {
    let newState = (0, _objectSpread2.default)({}, this.state);
    newState.center = position;
    newState.markers = [{
      position,
      defaultAnimation: 2
    }];
    this.setState(newState);
  }

  onMapMove() {
    const component = this;
    return function () {
      let values = this.getCenter(),
          lat = values.lat(),
          lng = values.lng();
      const geocoder = new google.maps.Geocoder();

      const debouncedGeocoder = _.debounce(geocoder.geocode, 500);

      component.setState({
        coordinates: [lat, lng],
        markers: [{
          position: {
            lat,
            lng
          },
          defaultAnimation: 2
        }]
      });
      debouncedGeocoder({
        location: {
          lat,
          lng
        }
      }, function (res, status) {
        if (status === 'OK') {
          if (res[1]) {
            component.setState({
              location: res[0].formatted_address
            });
          } else {
            component.setState({
              location: "Unknown Location"
            });
          }
        } else {
          component.setState({
            location: "Unknown Location"
          });
        }
      });
    };
  }

  saveLocation() {
    this.props.close();
    this.props.input.onChange(this.state.coordinates);
  }

  render() {
    const Map = withGoogleMap(props => {
      return React.createElement(GoogleMap, {
        ref: props.onMapLoad,
        defaultZoom: 14,
        defaultCenter: this.state.center,
        onDragEnd: props.onMapDrag
      }, props.markers.map((marker, index) => React.createElement(Marker, (0, _extends2.default)({
        key: index
      }, marker))));
    });
    return React.createElement("div", {
      className: (this.props.open ? "open" : "") + " panel location-panel panel-modal",
      style: {
        background: "#fff"
      }
    }, React.createElement("div", {
      className: "panel-body container-fluid padding-20"
    }, React.createElement("div", {
      className: "row"
    }, React.createElement(InputGeolocation, {
      input: {
        value: "",
        onChange: a => this.setPosition(a.geolocation)
      },
      types: []
    }), this.state.location, this.props.open ? React.createElement(Map, {
      containerElement: React.createElement("div", {
        style: {
          height: "300px",
          margin: "20px 0"
        }
      }),
      mapElement: React.createElement("div", {
        style: {
          height: "300px",
          borderRadius: ".215rem"
        }
      }),
      onMapDrag: () => {},
      markers: this.state.markers
    }) : "", React.createElement("a", {
      className: "btn btn-primary pull-right",
      onClick: this.saveLocation
    }, "Save"))));
  }

}

module.exportDefault(PostLocation);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"preview.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/agenda/ui/components/post-create/preview.jsx                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let connect;
module.watch(require("react-redux"), {
  connect(v) {
    connect = v;
  }

}, 1);
let Tabs, Tab;
module.watch(require("react-bootstrap"), {
  Tabs(v) {
    Tabs = v;
  },

  Tab(v) {
    Tab = v;
  }

}, 2);
let TwitterPreview;
module.watch(require("../../../../search/ui/components/previews/twitter"), {
  default(v) {
    TwitterPreview = v;
  }

}, 3);
let FacebookPreview;
module.watch(require("../../../../search/ui/components/previews/facebook"), {
  default(v) {
    FacebookPreview = v;
  }

}, 4);
let InstagramPreview;
module.watch(require("../../../../search/ui/components/previews/instagram"), {
  default(v) {
    InstagramPreview = v;
  }

}, 5);

class PostPreview extends React.Component {
  render() {
    let getTranslation = key => {
      return "Agenda.publish.modal." + key;
    };

    let {
      form
    } = this.props;

    if (!form) {
      return null;
    }

    let post = {
      link: null,
      title: null,
      date: form.date,
      description: (form.message || "") + " " + (form.hashtags ? form.hashtags.join(" ") : ""),
      network: "network",
      media: {
        type: "photo",
        url: form.media || null,
        preview: null
      },
      user: {
        name: form.accounts && form.accounts[0] ? (form.accounts[0].information.name || "") + " " + (form.accounts[0].information.lastName || "") : "",
        screenName: form.accounts && form.accounts[0] ? form.accounts[0].information.name || "" : "",
        avatar: form.accounts && form.accounts[0] ? form.accounts[0].information.avatar : ""
      }
    };
    return React.createElement("div", {
      className: (this.props.open ? "open" : "") + " panel preview-panel panel-modal clear-tabs"
    }, React.createElement(Tabs, {
      defaultActiveKey: "facebook",
      id: "uncontrolled-tab-example",
      bsStyle: "tabs"
    }, React.createElement(Tab, {
      eventKey: "facebook",
      title: "Facebook"
    }, React.createElement(FacebookPreview, {
      data: post
    })), React.createElement(Tab, {
      eventKey: "twitter",
      title: "Twitter"
    }, React.createElement(TwitterPreview, {
      data: post
    })), React.createElement(Tab, {
      eventKey: "instagram",
      title: "Instagram"
    }, React.createElement(InstagramPreview, {
      data: post
    }))), React.createElement("a", {
      className: "btn btn-primary pull-right",
      onClick: this.props.close
    }, this.props.closeButton));
  }

}

module.exportDefault(connect(state => {
  return {
    form: state.form["post-create"].values
  };
})(PostPreview));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"time-date.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/agenda/ui/components/post-create/time-date.jsx                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let InfiniteCalendar;
module.watch(require("react-infinite-calendar"), {
  default(v) {
    InfiniteCalendar = v;
  }

}, 1);
let TimePicker;
module.watch(require("react-times"), {
  default(v) {
    TimePicker = v;
  }

}, 2);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 3);

class PostTimeDate extends React.Component {
  constructor() {
    super();
    let date = moment();
    this.state = {
      time: date,
      quantum: date.format("A")
    };
    this.onTimeChange = this.onTimeChange.bind(this);
    this.onTimeQuantumChange = this.onTimeQuantumChange.bind(this);
    this.onCalendarChange = this.onCalendarChange.bind(this);
    this.saveDate = this.saveDate.bind(this);
    this.getCurrentDate = this.getCurrentDate.bind(this);
  }

  componentWillMount() {
    let time = new Date();
    let currentState = this.props.store ? this.props.store.getState() : null;
    /*
             if (currentState && currentState.form["post-create"] && currentState.form["post-create"].values && currentState.form["post-create"].values.date) {
                time = currentState.form["post-create"].values.date;
            } */

    if (this.props.input && this.props.input.value) {
      time = this.props.input.value;
    } else {
      let wrapped = moment(time);
      let remainder = 5 - wrapped.minute() % 5;
      time = wrapped.add(remainder, "minutes").toDate();
    }

    let date = moment(time);
    this.setState({
      time: date,
      quantum: date.format("A")
    });
  }

  onTimeChange(time) {
    let values = time.split(":"),
        hours = Number(values[0]),
        minutes = Number(values[1]);

    if (this.state.quantum === "PM") {
      hours += 12;
    }

    let newDate = moment(this.state.time).startOf("day").add(hours, "hours").add(minutes, "minutes");
    this.setState({
      time: newDate
    });

    if (this.props.autoSave) {
      this.saveDate();
    }
  }

  onTimeQuantumChange(timeQuantum) {
    this.setState({
      quantum: timeQuantum
    });

    if (this.props.autoSave) {
      this.saveDate();
    }
  }

  onCalendarChange(date) {
    const currentDate = this.state.time;
    const hours = currentDate.hours();
    const minutes = currentDate.minutes();
    const newTime = moment(date).hour(hours).minutes(minutes);
    this.setState({
      time: newTime
    });

    if (this.props.autoSave) {
      this.saveDate();
    }
  }

  saveDate() {
    if (this.props.close) {
      this.props.close();
    }

    this.props.input.onChange(this.state.time.toDate());
  }

  getCurrentDate() {
    let date = moment();

    if (this.state && this.state.time) {
      date = moment(this.state.time);
    }

    return date;
  }

  render() {
    let getTranslation = key => {
      return "Agenda.publish.modal." + key;
    };

    return React.createElement("div", {
      className: (this.props.open ? "open" : "") + " panel date-panel panel-modal"
    }, React.createElement("div", {
      className: "panel-body container-fluid padding-20"
    }, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-6"
    }, this.props.open ? React.createElement(InfiniteCalendar, {
      minDate: new Date(),
      onSelect: this.onCalendarChange,
      selectedDate: this.state.time,
      rowHeight: 35,
      className: "ibol-calendar"
    }) : ""), React.createElement("div", {
      className: "col-md-6 date-controls"
    }, React.createElement(TimePicker, {
      timeMode: "12",
      withoutIcon: true,
      onTimeChange: this.onTimeChange,
      onTimeQuantumChange: this.onTimeQuantumChange,
      timeQuantum: this.state.quantum,
      time: this.state.time.format("hh:mm")
    }), React.createElement("p", null, moment.tz.guess().split("_").join(" ")), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "time-zone"
    }, React.createElement("div", {
      className: "location"
    }, React.createElement(Translate, {
      value: getTranslation("cities.mexico")
    })), React.createElement("div", {
      className: "time"
    }, this.getCurrentDate().tz('America/Mexico_City').format('hh:mm A')))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "time-zone"
    }, React.createElement("div", {
      className: "location"
    }, React.createElement(Translate, {
      value: getTranslation("cities.newYork")
    })), React.createElement("div", {
      className: "time"
    }, this.getCurrentDate().tz('America/New_York').format('hh:mm A')))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "time-zone"
    }, React.createElement("div", {
      className: "location"
    }, React.createElement(Translate, {
      value: getTranslation("cities.london")
    })), React.createElement("div", {
      className: "time"
    }, this.getCurrentDate().tz('Europe/London').format('hh:mm A')))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "time-zone"
    }, React.createElement("div", {
      className: "location"
    }, React.createElement(Translate, {
      value: getTranslation("cities.losAngeles")
    })), React.createElement("div", {
      className: "time"
    }, this.getCurrentDate().tz('America/Los_Angeles').format('hh:mm A'))))), !this.props.autoSave && React.createElement("a", {
      className: "btn btn-primary pull-right",
      onClick: this.saveDate
    }, React.createElement(Translate, {
      value: getTranslation("time.save")
    }))))));
  }

}

module.exportDefault(PostTimeDate);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"calendar-filter.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/agenda/ui/components/calendar-filter.jsx                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 1);
let InputSocialNetwork;
module.watch(require("../../../core/ui/components/forms/input-social-network"), {
  default(v) {
    InputSocialNetwork = v;
  }

}, 2);
let AccountSearch;
module.watch(require("../../../core/ui/components/forms/account-search"), {
  default(v) {
    AccountSearch = v;
  }

}, 3);

class CalendarFilter extends React.Component {
  constructor() {
    super();
    this.toggleState = this.toggleState.bind(this);
  }

  toggleState(key) {
    return this.props.update(key);
  }

  updateInput(key) {
    let {
      update
    } = this.props;
    return function (value) {
      update(key)(value, true);
    };
  }

  render() {
    let getTranslation = key => {
      return "Agenda.campaigns." + key;
    };

    let accountData = this.props.accounts;
    accountData = accountData || [];
    let {
      all,
      created,
      paused,
      active,
      drafts,
      posts,
      networks,
      accounts
    } = this.props.filters;
    return React.createElement("div", {
      className: "calendar-filter"
    }, React.createElement("div", {
      className: "panel white "
    }, React.createElement("div", {
      className: "panel-body ultra-slim container-fluid"
    }, React.createElement(InputSocialNetwork, {
      input: {
        value: networks,
        onChange: this.updateInput("networks")
      }
    }), React.createElement(AccountSearch, {
      input: {
        value: accounts,
        onChange: this.updateInput("accounts")
      },
      data: accountData,
      multi: true
    }))), React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-body slim container-fluid"
    }, React.createElement("ul", {
      className: "list-group list-group-full"
    }, React.createElement("li", {
      className: "list-group-item"
    }, React.createElement("div", {
      className: "checkbox-custom"
    }, React.createElement("input", {
      type: "checkbox",
      name: "inputCheckboxes",
      checked: posts,
      onChange: this.toggleState("posts")
    }), React.createElement("label", null, React.createElement(Translate, {
      value: getTranslation("posts")
    })))), React.createElement("li", {
      className: "list-group-item"
    }, React.createElement("div", {
      className: "checkbox-custom"
    }, React.createElement("input", {
      type: "checkbox",
      name: "inputCheckboxes",
      checked: all,
      onChange: this.toggleState("all")
    }), React.createElement("label", null, React.createElement(Translate, {
      value: getTranslation("all")
    })))), React.createElement("li", {
      className: "list-group-item"
    }, React.createElement("div", {
      className: "checkbox-custom"
    }, React.createElement("input", {
      type: "checkbox",
      name: "inputCheckboxes",
      checked: created,
      onChange: this.toggleState("created")
    }), React.createElement("label", null, React.createElement(Translate, {
      value: getTranslation("created")
    })))), React.createElement("li", {
      className: "list-group-item"
    }, React.createElement("div", {
      className: "checkbox-custom"
    }, React.createElement("input", {
      type: "checkbox",
      name: "inputCheckboxes",
      checked: paused,
      onChange: this.toggleState("paused")
    }), React.createElement("label", null, React.createElement(Translate, {
      value: getTranslation("paused")
    })))), React.createElement("li", {
      className: "list-group-item"
    }, React.createElement("div", {
      className: "checkbox-custom"
    }, React.createElement("input", {
      type: "checkbox",
      name: "inputCheckboxes",
      checked: active,
      onChange: this.toggleState("active")
    }), React.createElement("label", null, React.createElement(Translate, {
      value: getTranslation("active")
    })))), React.createElement("li", {
      className: "list-group-item"
    }, React.createElement("div", {
      className: "checkbox-custom"
    }, React.createElement("input", {
      type: "checkbox",
      name: "inputCheckboxes",
      checked: drafts,
      onChange: this.toggleState("drafts")
    }), React.createElement("label", null, React.createElement(Translate, {
      value: getTranslation("drafts")
    }))))))));
  }

}

module.exportDefault(CalendarFilter);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"calendar.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/agenda/ui/components/calendar.jsx                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let BigCalendar;
module.watch(require("react-big-calendar"), {
  default(v) {
    BigCalendar = v;
  }

}, 1);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 2);
let Tooltip, OverlayTrigger;
module.watch(require("react-bootstrap"), {
  Tooltip(v) {
    Tooltip = v;
  },

  OverlayTrigger(v) {
    OverlayTrigger = v;
  }

}, 3);
let SocialAvatar;
module.watch(require("../../../core/ui/components/social-avatar"), {
  default(v) {
    SocialAvatar = v;
  }

}, 4);

function getTranslation(key) {
  return "Agenda.calendar." + key;
}

;

function tooltipContent(content) {
  return React.createElement(Tooltip, {
    id: "tooltip_content"
  }, content);
}

function Event(_ref) {
  let {
    event
  } = _ref;
  return React.createElement(OverlayTrigger, {
    placement: "left",
    overlay: tooltipContent(React.createElement(Translate, {
      value: getTranslation("types." + event.type)
    }))
  }, React.createElement("div", {
    className: "event-" + event.type
  }, event.preview && React.createElement(SocialAvatar, {
    name: event.title,
    network: event.network,
    avatar: event.preview,
    size: "35"
  }), React.createElement("span", null, event.title)));
}

function EventAgenda(_ref2) {
  let {
    event
  } = _ref2;
  return React.createElement("div", {
    className: "event-" + event.type
  }, event.preview && React.createElement(SocialAvatar, {
    name: event.title,
    network: event.network,
    avatar: event.preview,
    size: "35"
  }), React.createElement("span", null, event.title, " (", React.createElement(Translate, {
    value: getTranslation("types." + event.type)
  }), ")"));
}

BigCalendar.momentLocalizer(moment); // or globalizeLocalizer

class Calendar extends React.Component {
  render() {
    let messages = {
      allDay: React.createElement(Translate, {
        value: getTranslation("labels.allDay")
      }),
      previous: React.createElement(Translate, {
        value: getTranslation("labels.previous")
      }),
      next: React.createElement(Translate, {
        value: getTranslation("labels.next")
      }),
      today: React.createElement(Translate, {
        value: getTranslation("labels.today")
      }),
      month: React.createElement(Translate, {
        value: getTranslation("labels.month")
      }),
      week: React.createElement(Translate, {
        value: getTranslation("labels.week")
      }),
      day: React.createElement(Translate, {
        value: getTranslation("labels.day")
      }),
      agenda: React.createElement(Translate, {
        value: getTranslation("labels.agenda")
      }),
      date: I18n.t(getTranslation("labels.date")),
      time: I18n.t(getTranslation("labels.time")),
      event: I18n.t(getTranslation("labels.event"))
    };
    let formats = {
      dateFormat: (date, culture, localizer) => {
        return moment(date).format("DD");
      },
      monthHeaderFormat: (date, culture, localizer) => {
        let month = moment(date).format("MMMM").toLowerCase();
        return I18n.t(getTranslation("months." + month)) + " " + moment(date).format("YYYY");
      },
      dayFormat: (date, culture, localizer) => {
        let day = moment(date).format("dddd").toLowerCase();
        return I18n.t(getTranslation("days." + day)).substr(0, 2) + " " + moment(date).format("DD/MM");
      },
      weekdayFormat: (date, culture, localizer) => {
        let day = moment(date).format("dddd").toLowerCase();
        return I18n.t(getTranslation("days." + day));
      }
    };
    let events = this.props.events.map(e => Object.assign({}, e, {
      start: new Date(e.start),
      end: new Date(e.end)
    }));
    return React.createElement("div", null, React.createElement(BigCalendar, {
      events: events,
      defaultDate: new Date(),
      defaultView: "month",
      timeslots: 12,
      popup: true,
      messages: messages,
      formats: formats,
      components: {
        event: Event,
        agenda: {
          event: EventAgenda
        }
      }
    }));
  }

}

module.exportDefault(Calendar);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"menu.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/agenda/ui/components/menu.jsx                                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Link;
module.watch(require("react-router"), {
  Link(v) {
    Link = v;
  }

}, 1);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 2);

class CalendarMenu extends React.Component {
  render() {
    let getTranslation = key => {
      return "Agenda.nav." + key;
    };

    return React.createElement("ul", {
      className: "nav nav-tabs"
    }, React.createElement("li", {
      role: "presentation",
      className: "active"
    }, React.createElement("a", {
      href: "#",
      onClick: () => {
        return false;
      }
    }, React.createElement(Translate, {
      value: getTranslation("calendar")
    }))), React.createElement("li", {
      role: "presentation"
    }, React.createElement(Link, {
      to: "reporter"
    }, React.createElement(Translate, {
      value: getTranslation("reporter")
    }))));
  }

}

module.exportDefault(CalendarMenu);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"post-create.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/agenda/ui/components/post-create.jsx                                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let connect;
module.watch(require("react-redux"), {
  connect(v) {
    connect = v;
  }

}, 1);
let PostTimeDate;
module.watch(require("./post-create/time-date"), {
  default(v) {
    PostTimeDate = v;
  }

}, 2);
let PostPreview;
module.watch(require("./post-create/preview"), {
  default(v) {
    PostPreview = v;
  }

}, 3);
let PostLocation;
module.watch(require("./post-create/location"), {
  default(v) {
    PostLocation = v;
  }

}, 4);
let PostCreateControls;
module.watch(require("./post-create/controls"), {
  default(v) {
    PostCreateControls = v;
  }

}, 5);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 6);
let Field, reduxForm;
module.watch(require("redux-form"), {
  Field(v) {
    Field = v;
  },

  reduxForm(v) {
    reduxForm = v;
  }

}, 7);
let store;
module.watch(require("../../../../store"), {
  default(v) {
    store = v;
  }

}, 8);
let AccountSelect;
module.watch(require("./post-create/account-select"), {
  default(v) {
    AccountSelect = v;
  }

}, 9);
let InputTextarea;
module.watch(require("./post-create/input-textarea"), {
  default(v) {
    InputTextarea = v;
  }

}, 10);
let InputTags;
module.watch(require("../../../core/ui/components/forms/input-tags"), {
  default(v) {
    InputTags = v;
  }

}, 11);

class PostCreate extends React.Component {
  constructor() {
    super();
    this.state = {
      ui: {
        timeDate: false,
        preview: false,
        location: false
      },
      image: null
    };
    this.store = store;
    this.openUIModal = this.openUIModal.bind(this);
    this.closeUIModal = this.closeUIModal.bind(this);
    this.handleTags = this.handleTags.bind(this);
    this.setImage = this.setImage.bind(this);
  }

  handleTags(tags) {
    const validatedTags = tags.map(tag => tag.split("#").length > 1 ? tag : "#" + tag);

    if (validatedTags.indexOf("#ibol") === -1) {
      validatedTags.push("#ibol");
    }

    return validatedTags;
  }

  setImage(image) {
    this.setState({
      image
    });
  }

  openUIModal(modal) {
    let component = this;
    return function () {
      let newState = component.state;
      newState.ui[modal] = true;
      component.setState(newState);
    };
  }

  closeUIModal(modal) {
    return function () {
      let newState = this.state;
      newState.ui[modal] = false;
      this.setState(newState);
    };
  }

  componentWillMount() {
    if (this.props.initialValues && this.props.initialValues.media) {
      this.setState({
        image: this.props.initialValues.media
      });
    }
  }

  render() {
    const {
      handleSubmit,
      pristine,
      reset,
      submitting,
      controls,
      data,
      refetch
    } = this.props;

    let getTranslation = key => {
      return "Agenda.publish.modal." + key;
    }; //let values= this.props.form.values;


    return React.createElement("form", {
      className: "post-create",
      onSubmit: handleSubmit
    }, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: data ? "col-md-8" : "col-md-12"
    }, React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-body container-fluid padding-20"
    }, React.createElement("div", {
      className: "post-write"
    }, React.createElement("div", {
      className: "image " + (this.state.image ? "on" : "")
    }, this.state.image && React.createElement("img", {
      src: this.state.image,
      alt: ""
    })), React.createElement(Field, {
      component: InputTextarea,
      name: "message",
      placeholder: I18n.t(getTranslation('write.placeholder'))
    }), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-8"
    }, React.createElement(PostCreateControls, {
      setImage: this.setImage,
      openUIModal: this.openUIModal,
      settings: controls
    })), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("button", {
      type: "submit",
      className: "btn btn-primary pull-right"
    }, React.createElement(Translate, {
      value: getTranslation("write.controls.schedule")
    })))))))), data && React.createElement("div", {
      className: "col-md-4"
    }, React.createElement(Field, {
      name: "accounts",
      component: AccountSelect,
      placeholder: I18n.t(getTranslation('write.search')),
      data: data,
      refetch: refetch
    }))), React.createElement(Field, {
      name: "date",
      component: PostTimeDate,
      open: this.state.ui.timeDate,
      close: this.closeUIModal("timeDate").bind(this),
      store: this.store
    }), React.createElement(Field, {
      name: "location",
      component: PostLocation,
      open: this.state.ui.location,
      close: this.closeUIModal("location").bind(this),
      store: this.store
    }), React.createElement(PostPreview, {
      open: this.state.ui.preview,
      closeButton: React.createElement(Translate, {
        value: getTranslation("write.close")
      }),
      close: this.closeUIModal("preview").bind(this)
    }));
  }

}

PostCreate = reduxForm({
  form: 'post-create'
})(PostCreate);
module.exportDefault(PostCreate);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"containers":{"agenda.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/agenda/ui/containers/agenda.jsx                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/taggedTemplateLiteral"));

function _templateObject() {
  const data = (0, _taggedTemplateLiteral2.default)(["\nquery ($all: Boolean, $created: Boolean, $paused: Boolean, $active: Boolean, $drafts: Boolean, $posts: Boolean, $query: String!){\n  eventsOwn(all:$all, created:$created, paused:$paused, active:$active, drafts:$drafts, posts:$posts){\n    _id,\n    type,\n    start,\n    end,\n    title,\n    allDay,\n    preview,\n    network\n  },\n    accountsOwnSearch(query:$query){\n        _id,\n        network,\n        information{\n            name,\n            lastName,\n            avatar\n        }\n    }\n}\n"]);

  _templateObject = function () {
    return data;
  };

  return data;
}

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let graphql;
module.watch(require("react-apollo"), {
  graphql(v) {
    graphql = v;
  }

}, 1);
let Loading;
module.watch(require("../../../core/ui/components/loading"), {
  default(v) {
    Loading = v;
  }

}, 2);
let Agenda;
module.watch(require("../layouts/agenda"), {
  default(v) {
    Agenda = v;
  }

}, 3);
let createContainer;
module.watch(require("meteor/react-meteor-data"), {
  createContainer(v) {
    createContainer = v;
  }

}, 4);
let gql;
module.watch(require("graphql-tag"), {
  default(v) {
    gql = v;
  }

}, 5);
let notie;
module.watch(require("notie"), {
  default(v) {
    notie = v;
  }

}, 6);

class AgendaContainer extends React.Component {
  constructor() {
    super();
    this.state = {
      "all": true,
      "created": true,
      "paused": true,
      "active": true,
      "drafts": true,
      "posts": true,
      "accounts": [],
      "networks": ["facebook"]
    };
    this.filterUpdate = this.filterUpdate.bind(this);
  }

  filterUpdate(key) {
    let component = this;
    return function (e, useVal) {
      let newState = component.state;
      newState[key] = !newState[key];

      if (useVal) {
        newState[key] = e;
      }

      component.setState(newState);
      component.props.refetch(newState);
    };
  }

  render() {
    return React.createElement("div", null, this.props.loading ? React.createElement(Loading, null) : React.createElement(Agenda, {
      events: this.props.eventsOwn,
      accounts: this.props.accountsOwnSearch,
      refetch: this.props.refetch,
      filters: this.state,
      update: this.filterUpdate
    }));
  }

}

const QUERY = gql(_templateObject());
const withData = graphql(QUERY, {
  props: (_ref) => {
    let {
      data: {
        error,
        loading,
        eventsOwn,
        accountsOwnSearch,
        refetch
      }
    } = _ref;
    if (loading) return {
      loading: true
    };
    if (error) return {
      hasErrors: true
    };
    return {
      loading,
      eventsOwn,
      accountsOwnSearch,
      refetch
    };
  },
  options: ownProps => ({
    pollInterval: 150000,
    variables: {
      "all": true,
      "created": true,
      "paused": true,
      "active": true,
      "drafts": true,
      "posts": true,
      query: ""
    }
  })
});
const AgendaContainerWithData = withData(AgendaContainer);
module.exportDefault(AgendaContainerWithData);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"post-create.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/agenda/ui/containers/post-create.jsx                                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/taggedTemplateLiteral"));

function _templateObject() {
  const data = (0, _taggedTemplateLiteral2.default)(["\n    query($query: String!){\n  accountsOwnSearch(query:$query){\n    _id,\n    network,\n    information{\n      name,\n      lastName,\n      avatar\n    }\n  }\n}\n"]);

  _templateObject = function () {
    return data;
  };

  return data;
}

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let graphql;
module.watch(require("react-apollo"), {
  graphql(v) {
    graphql = v;
  }

}, 1);
let I18n;
module.watch(require("react-redux-i18n"), {
  I18n(v) {
    I18n = v;
  }

}, 2);
let Loading;
module.watch(require("../../../core/ui/components/loading"), {
  default(v) {
    Loading = v;
  }

}, 3);
let PostCreate;
module.watch(require("../components/post-create"), {
  default(v) {
    PostCreate = v;
  }

}, 4);
let createContainer;
module.watch(require("meteor/react-meteor-data"), {
  createContainer(v) {
    createContainer = v;
  }

}, 5);
let gql;
module.watch(require("graphql-tag"), {
  default(v) {
    gql = v;
  }

}, 6);
let notie;
module.watch(require("notie"), {
  default(v) {
    notie = v;
  }

}, 7);

class PostCreateContainer extends React.Component {
  constructor() {
    super();
    this.savePosts = this.savePosts.bind(this);
  }

  savePosts(data) {
    let getTranslation = key => {
      return "Agenda.publish.modal.messages." + key;
    };

    let component = this; //TODO: Validate Data

    Meteor.call("posts-scheduler", data, function (err, res) {
      if (err) {
        if (err.error === 500) {
          err.error = "Failed to create post.";
        }

        console.error("ERROR_SAVING_POST", err);
        notie.alert(3, err.reason || err.error, 3);
        return;
      }

      notie.alert(1, I18n.t(getTranslation("saved")), 3);
      component.props.reloadAgenda();
      component.props.close(); //console.log("SERVER_SAVE_POSTS_RESPONSE",res);
    });
  }

  render() {
    return React.createElement("div", null, this.props.loading ? React.createElement(Loading, null) : React.createElement(PostCreate, {
      data: this.props.accountsOwnSearch,
      refetch: this.props.refetch,
      onSubmit: this.savePosts,
      controls: {
        media: true,
        date: true,
        location: true,
        preview: true,
        discard: true,
        draft: true
      }
    }));
  }

}

const QUERY = gql(_templateObject());
const withData = graphql(QUERY, {
  props: (_ref) => {
    let {
      data: {
        error,
        loading,
        accountsOwnSearch,
        refetch
      }
    } = _ref;
    if (loading) return {
      loading: true
    };
    if (error) return {
      hasErrors: true
    };
    return {
      loading,
      accountsOwnSearch,
      refetch
    };
  },
  options: ownProps => ({
    pollInterval: 150000,
    variables: {
      query: ""
    }
  })
});
const PostCreateContainerWithData = withData(PostCreateContainer);
module.exportDefault(PostCreateContainerWithData);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"layouts":{"agenda.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/agenda/ui/layouts/agenda.jsx                                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Calendar;
module.watch(require("../components/calendar"), {
  default(v) {
    Calendar = v;
  }

}, 1);
let CalendarFilter;
module.watch(require("../components/calendar-filter"), {
  default(v) {
    CalendarFilter = v;
  }

}, 2);
let CalendarMenu;
module.watch(require("../components/menu"), {
  default(v) {
    CalendarMenu = v;
  }

}, 3);
let PostCreate;
module.watch(require("../containers/post-create"), {
  default(v) {
    PostCreate = v;
  }

}, 4);
let Modal;
module.watch(require("react-modal"), {
  default(v) {
    Modal = v;
  }

}, 5);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 6);

class Agenda extends React.Component {
  constructor() {
    super();
    this.state = {
      modalIsOpen: false
    };
    this.openModal = this.openModal.bind(this);
    this.closeModal = this.closeModal.bind(this);
  }

  openModal() {
    this.setState({
      modalIsOpen: true
    });
  }

  closeModal() {
    this.setState({
      modalIsOpen: false
    });
  }

  render() {
    let getTranslation = key => {
      return "Agenda." + key;
    };

    let events = this.props.events || [];
    let {
      accounts
    } = this.props;
    return React.createElement("div", null, React.createElement("div", {
      className: "page-content container-fluid"
    }, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-3"
    }, React.createElement("button", {
      className: "btn btn-primary",
      onClick: this.openModal
    }, React.createElement(Translate, {
      value: getTranslation("publish.button")
    })), React.createElement("div", {
      className: "spacer-30"
    }), React.createElement(CalendarFilter, {
      filters: this.props.filters,
      update: this.props.update,
      accounts: accounts
    })), React.createElement("div", {
      className: "col-md-9"
    }, React.createElement(Calendar, {
      events: events
    })))), React.createElement(Modal, {
      isOpen: this.state.modalIsOpen,
      onRequestClose: this.closeModal,
      className: "app-modal",
      contentLabel: "Example Modal"
    }, React.createElement("button", {
      className: "close",
      onClick: this.closeModal
    }, React.createElement("i", {
      className: "icon wb-close-mini",
      "aria-hidden": "true"
    })), React.createElement(PostCreate, {
      close: this.closeModal,
      reloadAgenda: this.props.refetch
    })));
  }

}

module.exportDefault(Agenda);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"actions":{"bundle.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/agenda/actions/bundle.jsx                                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let Actions = {};
module.exportDefault(Actions);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"client":{"bundle.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/agenda/client/bundle.jsx                                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let Routes;
module.watch(require("./routes"), {
  default(v) {
    Routes = v;
  }

}, 0);
let Reducers;
module.watch(require("../reducers/bundle"), {
  default(v) {
    Reducers = v;
  }

}, 1);
let Actions;
module.watch(require("../actions/bundle"), {
  default(v) {
    Actions = v;
  }

}, 2);
let Translations;
module.watch(require("./translations"), {
  default(v) {
    Translations = v;
  }

}, 3);
module.exportDefault({
  reducers: Reducers,
  routes: Routes,
  actions: Actions,
  translations: Translations
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"routes.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/agenda/client/routes.jsx                                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Route, IndexRoute;
module.watch(require("react-router"), {
  Route(v) {
    Route = v;
  },

  IndexRoute(v) {
    IndexRoute = v;
  }

}, 1);
let Agenda;
module.watch(require("../ui/containers/agenda"), {
  default(v) {
    Agenda = v;
  }

}, 2);
module.exportDefault(React.createElement(Route, {
  path: "/agenda",
  component: Agenda
}));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"translations.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/agenda/client/translations.jsx                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.exportDefault({
  en: {
    menu: "Agenda",
    campaigns: {
      posts: "Scheduled Posts",
      all: "All Campaigns",
      created: "Created Campaigns",
      paused: "Paused Campaigns",
      active: "Active Campaigns",
      drafts: "Dfrafts"
    },
    calendar: {
      labels: {
        allDay: "All Day",
        previous: "<",
        next: ">",
        today: "Today",
        month: "Month",
        week: "Week",
        day: "Day",
        agenda: "List",
        date: "Date",
        time: "Time",
        event: "Event"
      },
      types: {
        post: "Post",
        campaign: "Campaign"
      },
      days: {
        monday: "Monday",
        tuesday: "Tuesday",
        wednesday: "Wednesday",
        thursday: "Thursday",
        friday: "Friday",
        saturday: "Saturday",
        sunday: "Sunday"
      },
      months: {
        january: "January",
        february: "February",
        march: "March",
        april: "Abril",
        june: "June",
        july: "July",
        august: "August",
        september: "September",
        october: "October",
        november: "November",
        december: "December"
      }
    },
    publish: {
      button: "Schedule Post",
      modal: {
        write: {
          placeholder: "Write here...",
          controls: {
            picture: "Upload Picture",
            time: "Post Time",
            location: "Location",
            preview: "Preview",
            discard: "Discard",
            draft: "Save as Draft",
            schedule: "Schedule"
          },
          close: "Close",
          search: "Search...",
          hashtags: "Hashtags"
        },
        cities: {
          mexico: "Mexico City",
          newYork: "New York",
          london: "London",
          losAngeles: "Los Angeles"
        },
        time: {
          save: "Save"
        },
        messages: {
          saved: "Post Scheduled"
        }
      }
    },
    nav: {
      calendar: "Calendar",
      reporter: "Activity Report"
    }
  },
  es: {
    menu: "Agenda",
    campaigns: {
      posts: "Publicaciones Programadas",
      all: "Todas las Campañas",
      created: "Campañas Creadas",
      paused: "Campañas Pausadas",
      active: "Campañas Activas",
      drafts: "Borradores"
    },
    calendar: {
      labels: {
        allDay: "Todo el día",
        previous: "Anterior",
        next: "Siguiente",
        today: "Hoy",
        month: "Mes",
        week: "Semana",
        day: "Día",
        agenda: "Lista",
        date: "Fecha",
        time: "Hora",
        event: "Evento"
      },
      types: {
        post: "Post",
        campaign: "Campaña"
      },
      days: {
        monday: "Lunes",
        tuesday: "Martes",
        wednesday: "Miercoles",
        thursday: "Jueves",
        friday: "Viernes",
        saturday: "Sabado",
        sunday: "Domingo"
      },
      months: {
        january: "Enero",
        february: "Febrero",
        march: "Marzo",
        april: "Abril",
        june: "Junio",
        july: "Julio",
        august: "Agosto",
        september: "Septiembre",
        october: "Octubre",
        november: "Noviembre",
        december: "Diciembre"
      }
    },
    publish: {
      button: "Programar Publicación",
      modal: {
        write: {
          placeholder: "Escribe aquí...",
          controls: {
            picture: "Subir imagen",
            time: "Hora y Fecha de Publicación",
            location: "Ubicación",
            preview: "Vista Previa",
            discard: "Borrar",
            draft: "Guardar Borrador",
            schedule: "Programar"
          },
          close: "Cerrar",
          search: "Buscar...",
          hashtags: "Hashtags"
        },
        cities: {
          mexico: "Ciudad de México",
          newYork: "Nueva York",
          london: "Londres",
          losAngeles: "Los Angeles"
        },
        time: {
          save: "Guadar"
        },
        messages: {
          saved: "Post Programado"
        }
      }
    },
    nav: {
      calendar: "Calendario",
      reporter: "Reporte de Actividades"
    }
  },
  zz: {
    menu: "測試",
    campaigns: {
      posts: "測試 測試",
      all: "測試 測試",
      created: "測試 測試",
      paused: "測試 測試",
      active: "測試 測試",
      drafts: "測試"
    },
    calendar: {
      labels: {
        allDay: "測試 測試",
        previous: "<",
        next: ">",
        today: "測試",
        month: "測試",
        week: "測試",
        day: "測試",
        agenda: "測試",
        date: "測試",
        time: "測試",
        event: "測試"
      },
      types: {
        post: "測試",
        campaign: "測試"
      },
      days: {
        monday: "測試",
        tuesday: "測試",
        wednesday: "測試",
        thursday: "測試",
        friday: "測試",
        saturday: "測試",
        sunday: "測試"
      },
      months: {
        january: "測試",
        february: "測試",
        march: "測試",
        april: "測試",
        june: "測試",
        july: "測試",
        august: "測試",
        september: "測試",
        october: "測試",
        november: "測試",
        december: "測試"
      }
    },
    publish: {
      button: "測試 測試",
      modal: {
        write: {
          placeholder: "測試 測試...",
          controls: {
            picture: "測試 測試",
            time: "測試 測試",
            location: "測試",
            preview: "測試",
            discard: "測試",
            draft: "測試 測試 測試",
            schedule: "測試"
          },
          close: "測試",
          search: "測試...",
          hashtags: "測試"
        },
        cities: {
          mexico: "測試 測試",
          newYork: "測試 測試",
          london: "測試",
          losAngeles: "測試 測試"
        },
        time: {
          save: "測試"
        },
        messages: {
          saved: "測試 測試"
        }
      }
    },
    nav: {
      calendar: "測試",
      reporter: "測試 測試"
    }
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"reducers":{"bundle.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/agenda/reducers/bundle.jsx                                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
const Reducers = {};
module.exportDefault(Reducers);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"examples":{"ui":{"components":{"advanced":{"alertify.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/advanced/alertify.jsx                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class AlertifyExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "AlertifyExample")), React.createElement("div", {
      className: "page-content container-fluid"
    }));
  }

}

module.exportDefault(AlertifyExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"animation.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/advanced/animation.jsx                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class AnimationExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "AnimationExample")), React.createElement("div", {
      className: "page-content container-fluid"
    }));
  }

}

module.exportDefault(AnimationExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"bootbox-sweetalert.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/advanced/bootbox-sweetalert.jsx                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class SweetalertExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "SweetalertExample")), React.createElement("div", {
      className: "page-content container-fluid"
    }));
  }

}

module.exportDefault(SweetalertExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"chardin.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/advanced/chardin.jsx                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class ChardinExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "ChardinExample")), React.createElement("div", {
      className: "page-content container-fluid"
    }));
  }

}

module.exportDefault(ChardinExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"context-menu.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/advanced/context-menu.jsx                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class ContextMenuExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "ContextMenuExample")), React.createElement("div", {
      className: "page-content container-fluid"
    }));
  }

}

module.exportDefault(ContextMenuExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"highlight.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/advanced/highlight.jsx                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class HighlightExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "HighlightExample")), React.createElement("div", {
      className: "page-content container-fluid"
    }));
  }

}

module.exportDefault(HighlightExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"lightbox.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/advanced/lightbox.jsx                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class LightboxExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "LightboxExample")), React.createElement("div", {
      className: "page-content container-fluid"
    }));
  }

}

module.exportDefault(LightboxExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"maps-vector.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/advanced/maps-vector.jsx                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class MapsVectorExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "MapsVectorExample")), React.createElement("div", {
      className: "page-content container-fluid"
    }));
  }

}

module.exportDefault(MapsVectorExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"masonry.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/advanced/masonry.jsx                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class MasonryExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "MasonryExample")), React.createElement("div", {
      className: "page-content container-fluid"
    }));
  }

}

module.exportDefault(MasonryExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"rating.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/advanced/rating.jsx                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class RatingExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "RatingExample")), React.createElement("div", {
      className: "page-content container-fluid"
    }));
  }

}

module.exportDefault(RatingExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"scrollable.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/advanced/scrollable.jsx                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class ScrollableExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "ScrollableExample")), React.createElement("div", {
      className: "page-content container-fluid"
    }));
  }

}

module.exportDefault(ScrollableExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"sortable-nestable.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/advanced/sortable-nestable.jsx                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class SortableNestedExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "SortableNestedExample")), React.createElement("div", {
      className: "page-content container-fluid"
    }));
  }

}

module.exportDefault(SortableNestedExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"toastr.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/advanced/toastr.jsx                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class ToastrExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "ToastrExample")), React.createElement("div", {
      className: "page-content container-fluid"
    }));
  }

}

module.exportDefault(ToastrExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"treeview.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/advanced/treeview.jsx                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class TreeViewExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "TreeViewExample")), React.createElement("div", {
      className: "page-content container-fluid"
    }));
  }

}

module.exportDefault(TreeViewExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"charts":{"c3.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/charts/c3.jsx                                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class C3Example extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "C3Example")), React.createElement("div", {
      className: "page-content container-fluid"
    }));
  }

}

module.exportDefault(C3Example);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"chartist.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/charts/chartist.jsx                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class ChartistExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "ChartistExample")), React.createElement("div", {
      className: "page-content container-fluid"
    }));
  }

}

module.exportDefault(ChartistExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"chartjs.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/charts/chartjs.jsx                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class ChartJSExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "ChartJSExample")), React.createElement("div", {
      className: "page-content container-fluid"
    }));
  }

}

module.exportDefault(ChartJSExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"gauges.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/charts/gauges.jsx                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class GaugesExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "GaugesExample")), React.createElement("div", {
      className: "page-content container-fluid"
    }));
  }

}

module.exportDefault(GaugesExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"highcharts.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/charts/highcharts.jsx                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class HighchartsExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "HighchartsExample")), React.createElement("div", {
      className: "page-content container-fluid"
    }));
  }

}

module.exportDefault(HighchartsExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"morris.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/charts/morris.jsx                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class MorrisExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "MorrisExample")), React.createElement("div", {
      className: "page-content container-fluid"
    }));
  }

}

module.exportDefault(MorrisExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"peity.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/charts/peity.jsx                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class PeityExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "PeityExample")), React.createElement("div", {
      className: "page-content container-fluid"
    }));
  }

}

module.exportDefault(PeityExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"pie-progress.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/charts/pie-progress.jsx                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class PieProgressExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "PieProgressExample")), React.createElement("div", {
      className: "page-content container-fluid"
    }));
  }

}

module.exportDefault(PieProgressExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"rickshaw.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/charts/rickshaw.jsx                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class RickshawExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "RickshawExample")), React.createElement("div", {
      className: "page-content container-fluid"
    }));
  }

}

module.exportDefault(RickshawExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"sparkline.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/charts/sparkline.jsx                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class SparklineExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "SparklineExample")), React.createElement("div", {
      className: "page-content container-fluid"
    }));
  }

}

module.exportDefault(SparklineExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"forms":{"advanced.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/forms/advanced.jsx                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class AdvancedExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "AdvancedExample")), React.createElement("div", {
      className: "page-content container-fluid"
    }));
  }

}

module.exportDefault(AdvancedExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"editor-ace.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/forms/editor-ace.jsx                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class EditorAceExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "EditorAceExample")), React.createElement("div", {
      className: "page-content container-fluid"
    }));
  }

}

module.exportDefault(EditorAceExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"editor-markdown.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/forms/editor-markdown.jsx                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class EditorMarkdownExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "EditorMarkdownExample")), React.createElement("div", {
      className: "page-content container-fluid"
    }));
  }

}

module.exportDefault(EditorMarkdownExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"editor-summernote.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/forms/editor-summernote.jsx                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class EditorSummernoteExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "EditorSummernoteExample")), React.createElement("div", {
      className: "page-content container-fluid"
    }));
  }

}

module.exportDefault(EditorSummernoteExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"file-uploads.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/forms/file-uploads.jsx                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class FileUploadsExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "FileUploadsExample")), React.createElement("div", {
      className: "page-content container-fluid"
    }));
  }

}

module.exportDefault(FileUploadsExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"general.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/forms/general.jsx                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class GeneralExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "Form General Elements"), React.createElement("ol", {
      className: "breadcrumb"
    }, React.createElement("li", null, React.createElement("a", {
      href: "#/"
    }, "Home")), React.createElement("li", null, React.createElement("a", {
      href: "javascript:void(0)"
    }, "Forms")), React.createElement("li", {
      className: "active"
    }, "General"))), React.createElement("div", {
      className: "page-content"
    }, React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-heading"
    }, React.createElement("h3", {
      className: "panel-title"
    }, "Form Elements")), React.createElement("div", {
      className: "panel-body container-fluid"
    }, React.createElement("div", {
      className: "row row-lg"
    }, React.createElement("div", {
      className: "col-md-6 col-lg-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Rounded Input"), React.createElement("input", {
      type: "text",
      className: "form-control round",
      id: "inputRounded"
    }))), React.createElement("div", {
      className: "col-md-6 col-lg-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Disable"), React.createElement("input", {
      type: "text",
      className: "form-control",
      id: "inputDisabled",
      placeholder: "Disabled input here...",
      disabled: true
    }))), React.createElement("div", {
      className: "col-md-6 col-lg-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Input Focus"), React.createElement("input", {
      type: "text",
      className: "form-control focus",
      id: "inputFocus",
      defaultValue: "This is focused..."
    }))), React.createElement("div", {
      className: "col-md-6 col-lg-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Placeholder"), React.createElement("input", {
      type: "text",
      className: "form-control",
      id: "inputPlaceholder",
      placeholder: "placeholder"
    }))), React.createElement("div", {
      className: "col-md-6 col-lg-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Static Control"), React.createElement("p", {
      className: "form-control-static"
    }, "email@example.com"))), React.createElement("div", {
      className: "col-md-6 col-lg-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "File Upload"), React.createElement("div", {
      className: "form-group"
    }, React.createElement("div", {
      className: "input-group input-group-file",
      "data-plugin": "inputGroupFile"
    }, React.createElement("input", {
      type: "text",
      className: "form-control",
      readOnly: true
    }), React.createElement("span", {
      className: "input-group-btn"
    }, React.createElement("span", {
      className: "btn btn-success btn-file"
    }, React.createElement("i", {
      className: "icon wb-upload",
      "aria-hidden": "true"
    }), React.createElement("input", {
      type: "file",
      name: true,
      multiple: true
    }))))), React.createElement("div", {
      className: "form-group"
    }, React.createElement("div", {
      className: "input-group input-group-file",
      "data-plugin": "inputGroupFile"
    }, React.createElement("input", {
      type: "text",
      className: "form-control",
      readOnly: true
    }), React.createElement("span", {
      className: "input-group-btn"
    }, React.createElement("span", {
      className: "btn btn-outline btn-file"
    }, React.createElement("i", {
      className: "icon wb-upload",
      "aria-hidden": "true"
    }), React.createElement("input", {
      type: "file",
      name: true,
      multiple: true
    }))))))), React.createElement("div", {
      className: "col-md-6 col-lg-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "With Help"), React.createElement("input", {
      type: "text",
      className: "form-control",
      id: "inputHelpText"
    }), React.createElement("span", {
      className: "text-help"
    }, "A block of help text that breaks onto a new line and may extend beyond one line."))), React.createElement("div", {
      className: "col-md-6 col-lg-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Search"), React.createElement("div", {
      className: "form-group"
    }, React.createElement("div", {
      className: "input-group"
    }, React.createElement("input", {
      type: "text",
      className: "form-control",
      name: true,
      placeholder: "Search..."
    }), React.createElement("span", {
      className: "input-group-btn"
    }, React.createElement("button", {
      type: "submit",
      className: "btn btn-primary"
    }, React.createElement("i", {
      className: "icon wb-search",
      "aria-hidden": "true"
    }))))), React.createElement("div", {
      className: "form-group"
    }, React.createElement("div", {
      className: "input-search"
    }, React.createElement("button", {
      type: "submit",
      className: "input-search-btn"
    }, React.createElement("i", {
      className: "icon wb-search",
      "aria-hidden": "true"
    })), React.createElement("input", {
      type: "text",
      className: "form-control",
      name: true,
      placeholder: "Search..."
    }))), React.createElement("div", {
      className: "form-group"
    }, React.createElement("div", {
      className: "input-search input-search-dark"
    }, React.createElement("i", {
      className: "input-search-icon wb-search",
      "aria-hidden": "true"
    }), React.createElement("input", {
      type: "text",
      className: "form-control",
      name: true,
      placeholder: "Search..."
    }), React.createElement("button", {
      type: "button",
      className: "input-search-close icon wb-close",
      "aria-label": "Close"
    }))), React.createElement("div", {
      className: "form-group"
    }, React.createElement("div", {
      className: "input-search"
    }, React.createElement("i", {
      className: "input-search-icon wb-search",
      "aria-hidden": "true"
    }), React.createElement("input", {
      type: "text",
      className: "form-control",
      name: true,
      placeholder: "Search..."
    }), React.createElement("button", {
      type: "button",
      className: "input-search-close icon wb-close",
      "aria-label": "Close"
    }))))), React.createElement("div", {
      className: "clearfix hidden-sm-down hidden-lg-up"
    }), React.createElement("div", {
      className: "col-md-6 col-lg-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Size"), React.createElement("div", {
      className: "form-group"
    }, React.createElement("input", {
      type: "text",
      className: "form-control form-control-sm",
      placeholder: "Small"
    })), React.createElement("div", {
      className: "form-group"
    }, React.createElement("input", {
      type: "text",
      className: "form-control",
      placeholder: "Normal"
    })), React.createElement("div", {
      className: "form-group"
    }, React.createElement("input", {
      type: "text",
      className: "form-control form-control-lg",
      placeholder: "Big"
    })))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "example-wrap margin-sm-0"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Select"), React.createElement("div", {
      className: "form-group"
    }, React.createElement("select", {
      className: "form-control"
    }, React.createElement("option", null, "1"), React.createElement("option", null, "2"), React.createElement("option", null, "3"), React.createElement("option", null, "4"), React.createElement("option", null, "5"))), React.createElement("div", {
      className: "form-group"
    }, React.createElement("select", {
      className: "form-control",
      multiple: true
    }, React.createElement("option", null, "1"), React.createElement("option", null, "2"), React.createElement("option", null, "3"), React.createElement("option", null, "4"), React.createElement("option", null, "5"))))), React.createElement("div", {
      className: "clearfix hidden-sm-down hidden-lg-up"
    }), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Textarea"), React.createElement("textarea", {
      className: "form-control",
      id: "textareaDefault",
      rows: 3,
      defaultValue: ""
    })))))), React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-heading"
    }, React.createElement("h3", {
      className: "panel-title"
    }, "Input Groups")), React.createElement("div", {
      className: "panel-body container-fluid"
    }, React.createElement("div", {
      className: "row row-lg"
    }, React.createElement("div", {
      className: "col-md-6 col-lg-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Checkbox And Radio"), React.createElement("p", null, "Place any checkbox or radio option within an input group's addon instead of text. "), React.createElement("div", {
      className: "form-group"
    }, React.createElement("div", {
      className: "input-group"
    }, React.createElement("span", {
      className: "input-group-addon"
    }, React.createElement("span", {
      className: "checkbox-custom checkbox-default"
    }, React.createElement("input", {
      type: "checkbox",
      id: "inputCheckbox",
      name: "inputCheckbox",
      defaultChecked: true
    }), React.createElement("label", {
      htmlFor: "inputCheckbox"
    }))), React.createElement("input", {
      type: "text",
      className: "form-control"
    }))), React.createElement("div", {
      className: "form-group"
    }, React.createElement("div", {
      className: "input-group"
    }, React.createElement("span", {
      className: "input-group-addon"
    }, React.createElement("span", {
      className: "radio-custom radio-default"
    }, React.createElement("input", {
      type: "radio",
      id: "inputRadio",
      name: "inputRadio",
      defaultChecked: true
    }), React.createElement("label", {
      htmlFor: "inputRadio"
    }))), React.createElement("input", {
      type: "text",
      className: "form-control"
    }))))), React.createElement("div", {
      className: "col-md-6 col-lg-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Text Addon"), React.createElement("p", null, "Place one add-on or button on either side of an input. You may also place one on both sides of an input."), React.createElement("div", {
      className: "form-group"
    }, React.createElement("div", {
      className: "input-group"
    }, React.createElement("input", {
      type: "email",
      className: "form-control",
      placeholder: "email"
    }), React.createElement("span", {
      className: "input-group-addon"
    }, "@example.com"))), React.createElement("div", {
      className: "form-group"
    }, React.createElement("div", {
      className: "input-group"
    }, React.createElement("span", {
      className: "input-group-addon"
    }, "$"), React.createElement("input", {
      type: "text",
      className: "form-control",
      placeholder: true
    }))), React.createElement("div", {
      className: "form-group"
    }, React.createElement("div", {
      className: "input-group"
    }, React.createElement("span", {
      className: "input-group-addon"
    }, "$"), React.createElement("input", {
      type: "text",
      className: "form-control",
      placeholder: true
    }), React.createElement("span", {
      className: "input-group-addon"
    }, ".00"))))), React.createElement("div", {
      className: "clearfix hidden-sm-down hidden-lg-up"
    }), React.createElement("div", {
      className: "col-md-6 col-lg-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Icon Addon"), React.createElement("p", null, "Place icon instead of text in add-on on either side of an input. You may also place one on both sides of an input. "), React.createElement("div", {
      className: "form-group"
    }, React.createElement("div", {
      className: "input-group input-group-icon"
    }, React.createElement("span", {
      className: "input-group-addon"
    }, React.createElement("span", {
      className: "icon wb-user",
      "aria-hidden": "true"
    })), React.createElement("input", {
      type: "text",
      className: "form-control",
      placeholder: "Username"
    }))), React.createElement("div", {
      className: "form-group"
    }, React.createElement("div", {
      className: "input-group input-group-icon"
    }, React.createElement("span", {
      className: "input-group-addon"
    }, React.createElement("span", {
      className: "icon wb-envelope",
      "aria-hidden": "true"
    })), React.createElement("input", {
      type: "text",
      className: "form-control",
      placeholder: "Email"
    }))), React.createElement("div", {
      className: "form-group"
    }, React.createElement("div", {
      className: "input-group input-group-icon"
    }, React.createElement("input", {
      type: "email",
      className: "form-control",
      placeholder: "Email"
    }), React.createElement("span", {
      className: "input-group-addon"
    }, React.createElement("span", {
      className: "icon wb-envelope",
      "aria-hidden": "true"
    })))))), React.createElement("div", {
      className: "clearfix hidden-md-down hidden-xl-up"
    }), React.createElement("div", {
      className: "col-md-6 col-lg-4"
    }, React.createElement("div", {
      className: "example-wrap margin-md-0"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Button Addon"), React.createElement("p", null, "Buttons in input groups are a bit different and require one extra level of nesting. Instead of ", React.createElement("code", null, ".input-group-addon"), ", you'll need to use ", React.createElement("code", null, ".input-group-btn"), " to wrap the buttons. This is required due to default browser styles that cannot be overridden."), React.createElement("div", {
      className: "form-group"
    }, React.createElement("div", {
      className: "input-group"
    }, React.createElement("span", {
      className: "input-group-btn"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-default btn-outline"
    }, "Go!")), React.createElement("input", {
      type: "text",
      className: "form-control",
      placeholder: "Search for..."
    }))), React.createElement("div", {
      className: "form-group"
    }, React.createElement("div", {
      className: "input-group"
    }, React.createElement("input", {
      type: "text",
      className: "form-control",
      placeholder: "Search for..."
    }), React.createElement("span", {
      className: "input-group-btn"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-default btn-outline"
    }, "Go!")))))), React.createElement("div", {
      className: "clearfix hidden-sm-down hidden-lg-up"
    }), React.createElement("div", {
      className: "col-md-6 col-lg-4"
    }, React.createElement("div", {
      className: "example-wrap margin-sm-0"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Buttons With Dropdowns"), React.createElement("p", null, "Place any button or drodowns within an input group's addon instead of text. "), React.createElement("div", {
      className: "form-group"
    }, React.createElement("div", {
      className: "input-group"
    }, React.createElement("div", {
      className: "input-group-btn"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-default btn-outline dropdown-toggle",
      "data-toggle": "dropdown",
      "aria-expanded": "false"
    }, "Action"), React.createElement("div", {
      className: "dropdown-menu",
      role: "menu"
    }, React.createElement("a", {
      className: "dropdown-item",
      href: "javascript:void(0)",
      role: "menuitem"
    }, "Action"), React.createElement("a", {
      className: "dropdown-item",
      href: "javascript:void(0)",
      role: "menuitem"
    }, "Another action"), React.createElement("a", {
      className: "dropdown-item",
      href: "javascript:void(0)",
      role: "menuitem"
    }, "Something else here"), React.createElement("div", {
      className: "dropdown-divider"
    }), React.createElement("a", {
      className: "dropdown-item",
      href: "javascript:void(0)",
      role: "menuitem"
    }, "Separated link"))), React.createElement("input", {
      type: "text",
      className: "form-control"
    }))), React.createElement("div", {
      className: "form-group"
    }, React.createElement("div", {
      className: "input-group"
    }, React.createElement("input", {
      type: "text",
      className: "form-control"
    }), React.createElement("div", {
      className: "input-group-btn"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-default btn-outline",
      tabIndex: -1
    }, "Action"), React.createElement("button", {
      type: "button",
      className: "btn btn-default btn-outline dropdown-toggle",
      "data-toggle": "dropdown",
      "aria-expanded": "false",
      tabIndex: -1
    }), React.createElement("div", {
      className: "dropdown-menu pull-xs-right",
      role: "menu"
    }, React.createElement("a", {
      className: "dropdown-item",
      href: "javascript:void(0)",
      role: "menuitem"
    }, "Action"), React.createElement("a", {
      className: "dropdown-item",
      href: "javascript:void(0)",
      role: "menuitem"
    }, "Another action"), React.createElement("a", {
      className: "dropdown-item",
      href: "javascript:void(0)",
      role: "menuitem"
    }, "Something else here"), React.createElement("div", {
      className: "dropdown-divider"
    }), React.createElement("a", {
      className: "dropdown-item",
      href: "javascript:void(0)",
      role: "menuitem"
    }, "Separated link"))))))), React.createElement("div", {
      className: "col-md-6 col-lg-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Size"), React.createElement("p", null, "Add the relative form sizing classes to the ", React.createElement("code", null, ".input-group"), " itself and contents within will automatically resize\u2014no need for repeating the form control size classes on each element."), React.createElement("div", {
      className: "form-group"
    }, React.createElement("div", {
      className: "input-group input-group-lg"
    }, React.createElement("span", {
      className: "input-group-addon"
    }, "@"), React.createElement("input", {
      type: "text",
      className: "form-control",
      placeholder: "Username"
    }))), React.createElement("div", {
      className: "form-group"
    }, React.createElement("div", {
      className: "input-group"
    }, React.createElement("span", {
      className: "input-group-addon"
    }, "@"), React.createElement("input", {
      type: "text",
      className: "form-control",
      placeholder: "Username"
    }))), React.createElement("div", {
      className: "form-group"
    }, React.createElement("div", {
      className: "input-group input-group-sm"
    }, React.createElement("span", {
      className: "input-group-addon"
    }, "@"), React.createElement("input", {
      type: "text",
      className: "form-control",
      placeholder: "Username"
    })))))))), React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-heading"
    }, React.createElement("h3", {
      className: "panel-title"
    }, "Checkbox & Radio", React.createElement("small", null, React.createElement("a", {
      className: "example-plugin-link",
      href: "http://flatlogic.github.io/awesome-bootstrap-checkbox/demo/",
      target: "_blank"
    }, "official website")))), React.createElement("div", {
      className: "panel-body container-fluid"
    }, React.createElement("div", {
      className: "row row-lg"
    }, React.createElement("div", {
      className: "col-md-6 col-xl-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Checkboxes"), React.createElement("p", null, "Add class ", React.createElement("code", null, ".checkbox-custom"), "to make it."), React.createElement("div", {
      className: "checkbox-custom checkbox-primary"
    }, React.createElement("input", {
      type: "checkbox",
      id: "inputUnchecked"
    }), React.createElement("label", {
      htmlFor: "inputUnchecked"
    }, "Unchecked")), React.createElement("div", {
      className: "checkbox-custom checkbox-primary"
    }, React.createElement("input", {
      type: "checkbox",
      id: "inputChecked",
      defaultChecked: true
    }), React.createElement("label", {
      htmlFor: "inputChecked"
    }, "Checked")), React.createElement("div", {
      className: "checkbox-custom"
    }, React.createElement("input", {
      type: "checkbox",
      disabled: true
    }), React.createElement("label", null, "Disabled Unchecked")), React.createElement("div", {
      className: "checkbox-custom"
    }, React.createElement("input", {
      type: "checkbox",
      disabled: true,
      defaultChecked: true
    }), React.createElement("label", null, "Checked Disabled")))), React.createElement("div", {
      className: "col-md-6 col-xl-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Radios"), React.createElement("p", null, "Add class ", React.createElement("code", null, ".radio-custom"), "to make it."), React.createElement("div", {
      className: "radio-custom radio-primary"
    }, React.createElement("input", {
      type: "radio",
      id: "inputRadiosUnchecked",
      name: "inputRadios"
    }), React.createElement("label", {
      htmlFor: "inputRadiosUnchecked"
    }, "Unchecked")), React.createElement("div", {
      className: "radio-custom radio-primary"
    }, React.createElement("input", {
      type: "radio",
      id: "inputRadiosChecked",
      name: "inputRadios",
      defaultChecked: true
    }), React.createElement("label", {
      htmlFor: "inputRadiosChecked"
    }, "Checked")), React.createElement("div", {
      className: "radio-custom radio-primary"
    }, React.createElement("input", {
      type: "radio",
      id: "inputRadiosDisabled",
      name: "inputRadiosDisabled",
      disabled: true
    }), React.createElement("label", {
      htmlFor: "inputRadiosDisabled"
    }, "Disabled Unchecked")), React.createElement("div", {
      className: "radio-custom radio-primary"
    }, React.createElement("input", {
      type: "radio",
      id: "inputRadiosDisabledChecked",
      name: "inputRadiosDisabledChecked",
      disabled: true,
      defaultChecked: true
    }), React.createElement("label", {
      htmlFor: "inputRadiosDisabledChecked"
    }, "Checked Disabled")))), React.createElement("div", {
      className: "col-md-6 col-xl-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Color Options"), React.createElement("p", null, "Add class ", React.createElement("code", null, ".checkbox-default"), ", ", React.createElement("code", null, ".checkbox-primary"), ",", React.createElement("code", null, ".checkbox-success"), ", ", React.createElement("code", null, ".checkbox-info"), ", ", React.createElement("code", null, ".checkbox-warning"), ",", React.createElement("code", null, ".checkbox-danger"), ", to change styles."), React.createElement("ul", {
      className: "list-unstyled list-inline"
    }, React.createElement("li", {
      className: "list-inline-item"
    }, React.createElement("div", {
      className: "checkbox-custom"
    }, React.createElement("input", {
      type: "checkbox",
      name: "inputCheckboxes",
      defaultChecked: true
    }), React.createElement("label", null))), React.createElement("li", {
      className: "list-inline-item"
    }, React.createElement("div", {
      className: "checkbox-custom checkbox-default"
    }, React.createElement("input", {
      type: "checkbox",
      name: "inputCheckboxes",
      defaultChecked: true
    }), React.createElement("label", null))), React.createElement("li", {
      className: "list-inline-item"
    }, React.createElement("div", {
      className: "checkbox-custom checkbox-primary"
    }, React.createElement("input", {
      type: "checkbox",
      name: "inputCheckboxes",
      defaultChecked: true
    }), React.createElement("label", null))), React.createElement("li", {
      className: "list-inline-item"
    }, React.createElement("div", {
      className: "checkbox-custom checkbox-success"
    }, React.createElement("input", {
      type: "checkbox",
      name: "inputCheckboxes",
      defaultChecked: true
    }), React.createElement("label", null))), React.createElement("li", {
      className: "list-inline-item"
    }, React.createElement("div", {
      className: "checkbox-custom checkbox-info"
    }, React.createElement("input", {
      type: "checkbox",
      name: "inputCheckboxes",
      defaultChecked: true
    }), React.createElement("label", null))), React.createElement("li", {
      className: "list-inline-item"
    }, React.createElement("div", {
      className: "checkbox-custom checkbox-warning"
    }, React.createElement("input", {
      type: "checkbox",
      name: "inputCheckboxes",
      defaultChecked: true
    }), React.createElement("label", null))), React.createElement("li", {
      className: "list-inline-item"
    }, React.createElement("div", {
      className: "checkbox-custom checkbox-danger"
    }, React.createElement("input", {
      type: "checkbox",
      name: "inputCheckboxes",
      defaultChecked: true
    }), React.createElement("label", null)))), React.createElement("ul", {
      className: "list-unstyled list-inline"
    }, React.createElement("li", {
      className: "list-inline-item"
    }, React.createElement("div", {
      className: "radio-custom"
    }, React.createElement("input", {
      type: "radio",
      id: "inputRadioNormal",
      name: "inputRadiosNormal",
      defaultChecked: true
    }), React.createElement("label", {
      htmlFor: "inputRadioNormal"
    }))), React.createElement("li", {
      className: "list-inline-item"
    }, React.createElement("div", {
      className: "radio-custom radio-default"
    }, React.createElement("input", {
      type: "radio",
      name: "inputRadioDefault",
      defaultChecked: true
    }), React.createElement("label", null))), React.createElement("li", {
      className: "list-inline-item"
    }, React.createElement("div", {
      className: "radio-custom radio-primary"
    }, React.createElement("input", {
      type: "radio",
      name: "inputRadioPrimary",
      defaultChecked: true
    }), React.createElement("label", null))), React.createElement("li", {
      className: "list-inline-item"
    }, React.createElement("div", {
      className: "radio-custom radio-success"
    }, React.createElement("input", {
      type: "radio",
      name: "inputRadioSuccess",
      defaultChecked: true
    }), React.createElement("label", null))), React.createElement("li", {
      className: "list-inline-item"
    }, React.createElement("div", {
      className: "radio-custom radio-info"
    }, React.createElement("input", {
      type: "radio",
      name: "inputRadioInfo",
      defaultChecked: true
    }), React.createElement("label", null))), React.createElement("li", {
      className: "list-inline-item"
    }, React.createElement("div", {
      className: "radio-custom radio-warning"
    }, React.createElement("input", {
      type: "radio",
      name: "inputRadioWarning",
      defaultChecked: true
    }), React.createElement("label", null))), React.createElement("li", {
      className: "list-inline-item"
    }, React.createElement("div", {
      className: "radio-custom radio-danger"
    }, React.createElement("input", {
      type: "radio",
      name: "inputRadioDanger",
      defaultChecked: true
    }), React.createElement("label", null)))))))))));
  }

}

module.exportDefault(GeneralExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"image-cropping.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/forms/image-cropping.jsx                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class ImageCroppingExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "ImageCroppingExample")), React.createElement("div", {
      className: "page-content container-fluid"
    }));
  }

}

module.exportDefault(ImageCroppingExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"layouts.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/forms/layouts.jsx                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let FormGroup, ControlLabel, FormControl, HelpBlock, Checkbox, Radio, Button;
module.watch(require("react-bootstrap"), {
  FormGroup(v) {
    FormGroup = v;
  },

  ControlLabel(v) {
    ControlLabel = v;
  },

  FormControl(v) {
    FormControl = v;
  },

  HelpBlock(v) {
    HelpBlock = v;
  },

  Checkbox(v) {
    Checkbox = v;
  },

  Radio(v) {
    Radio = v;
  },

  Button(v) {
    Button = v;
  }

}, 1);

class LayoutsExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "Form Layouts"), React.createElement("ol", {
      className: "breadcrumb"
    }, React.createElement("li", null, React.createElement("a", {
      href: "#/"
    }, "Home")), React.createElement("li", null, React.createElement("a", {
      href: "javascript:void(0)"
    }, "Forms")), React.createElement("li", {
      className: "active"
    }, "Layouts")), React.createElement("div", {
      className: "page-header-actions"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-sm btn-icon btn-default btn-outline btn-round",
      "data-toggle": "tooltip",
      "data-original-title": "Edit"
    }, React.createElement("i", {
      className: "icon wb-pencil",
      "aria-hidden": "true"
    })), React.createElement("button", {
      type: "button",
      className: "btn btn-sm btn-icon btn-default btn-outline btn-round",
      "data-toggle": "tooltip",
      "data-original-title": "Refresh"
    }, React.createElement("i", {
      className: "icon wb-refresh",
      "aria-hidden": "true"
    })), React.createElement("button", {
      type: "button",
      className: "btn btn-sm btn-icon btn-default btn-outline btn-round",
      "data-toggle": "tooltip",
      "data-original-title": "Setting"
    }, React.createElement("i", {
      className: "icon wb-settings",
      "aria-hidden": "true"
    })))), React.createElement("div", {
      className: "page-content"
    }, React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-body container-fluid"
    }, React.createElement("div", {
      className: "row row-lg"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Basic Form"), React.createElement("div", {
      className: "example"
    }, React.createElement("form", {
      autoComplete: "off"
    }, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "form-group col-md-6"
    }, React.createElement("label", {
      className: "form-control-label",
      htmlFor: "inputBasicFirstName"
    }, "First Name"), React.createElement("input", {
      type: "text",
      className: "form-control",
      id: "inputBasicFirstName",
      name: "inputFirstName",
      placeholder: "First Name",
      autoComplete: "off"
    })), React.createElement("div", {
      className: "form-group col-md-6"
    }, React.createElement("label", {
      className: "form-control-label",
      htmlFor: "inputBasicLastName"
    }, "Last Name"), React.createElement("input", {
      type: "text",
      className: "form-control",
      id: "inputBasicLastName",
      name: "inputLastName",
      placeholder: "Last Name",
      autoComplete: "off"
    }))), React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      className: "form-control-label"
    }, "Gender"), React.createElement("div", null, React.createElement("div", {
      className: "radio-custom radio-default radio-inline"
    }, React.createElement("input", {
      type: "radio",
      id: "inputBasicMale",
      name: "inputGender"
    }), React.createElement("label", {
      htmlFor: "inputBasicMale"
    }, "Male")), React.createElement("div", {
      className: "radio-custom radio-default radio-inline"
    }, React.createElement("input", {
      type: "radio",
      id: "inputBasicFemale",
      name: "inputGender",
      defaultChecked: true
    }), React.createElement("label", {
      htmlFor: "inputBasicFemale"
    }, "Female")))), React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      className: "form-control-label",
      htmlFor: "inputBasicEmail"
    }, "Email Address"), React.createElement("input", {
      type: "email",
      className: "form-control",
      id: "inputBasicEmail",
      name: "inputEmail",
      placeholder: "Email Address",
      autoComplete: "off"
    })), React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      className: "form-control-label",
      htmlFor: "inputBasicPassword"
    }, "Password"), React.createElement("input", {
      type: "password",
      className: "form-control",
      id: "inputBasicPassword",
      name: "inputPassword",
      placeholder: "Password",
      autoComplete: "off"
    })), React.createElement("div", {
      className: "form-group"
    }, React.createElement("div", {
      className: "checkbox-custom checkbox-default"
    }, React.createElement("input", {
      type: "checkbox",
      id: "inputBasicRemember",
      name: "inputCheckbox",
      defaultChecked: true,
      autoComplete: "off"
    }), React.createElement("label", {
      htmlFor: "inputBasicRemember"
    }, "Remember Me"))), React.createElement("div", {
      className: "form-group"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-primary"
    }, "Sign Up")))))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Basic Form Without Label"), React.createElement("div", {
      className: "example"
    }, React.createElement("form", null, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "form-group col-md-6"
    }, React.createElement("input", {
      type: "text",
      className: "form-control",
      name: "firstname",
      placeholder: "First Name",
      autoComplete: "off"
    })), React.createElement("div", {
      className: "form-group col-md-6"
    }, React.createElement("input", {
      type: "text",
      className: "form-control",
      name: "lastname",
      placeholder: "Last Name",
      autoComplete: "off"
    }))), React.createElement("div", {
      className: "form-group"
    }, React.createElement("div", {
      className: "radio-custom radio-default radio-inline"
    }, React.createElement("input", {
      type: "radio",
      id: "inputLabelMale",
      name: "inputRadioGender"
    }), React.createElement("label", {
      htmlFor: "inputLabelMale"
    }, "Male")), React.createElement("div", {
      className: "radio-custom radio-default radio-inline"
    }, React.createElement("input", {
      type: "radio",
      id: "inputLabelFemale",
      name: "inputRadioGender",
      defaultChecked: true
    }), React.createElement("label", {
      htmlFor: "inputLabelFemale"
    }, "Female"))), React.createElement("div", {
      className: "form-group"
    }, React.createElement("input", {
      type: "email",
      className: "form-control",
      name: "email",
      placeholder: "Email Address",
      autoComplete: "off"
    })), React.createElement("div", {
      className: "form-group"
    }, React.createElement("input", {
      type: "password",
      className: "form-control",
      name: "password",
      placeholder: "Password",
      autoComplete: "off"
    })), React.createElement("div", {
      className: "form-group"
    }, React.createElement("textarea", {
      className: "form-control",
      placeholder: "Briefly Describe Yourself",
      defaultValue: ""
    })), React.createElement("div", {
      className: "form-group"
    }, React.createElement("div", {
      className: "checkbox-custom checkbox-default"
    }, React.createElement("input", {
      type: "checkbox",
      id: "inputCheckboxAgree",
      name: "inputCheckboxesAgree",
      defaultChecked: true,
      autoComplete: "off"
    }), React.createElement("label", {
      htmlFor: "inputCheckboxAgree"
    }, "Agree Policy"))), React.createElement("div", {
      className: "form-group"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-primary"
    }, "Submit")))))), React.createElement("div", {
      className: "clearfix hidden-md-down"
    }), React.createElement("div", {
      className: "col-md-12 col-lg-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Horizontal Form"), React.createElement("p", null, "Use ", React.createElement("code", null, ".form-horizontal"), " class to set horizontal form."), React.createElement("div", {
      className: "example"
    }, React.createElement("form", {
      className: "form-horizontal"
    }, React.createElement("div", {
      className: "form-group row"
    }, React.createElement("label", {
      className: "col-md-3 form-control-label"
    }, "Your Name: "), React.createElement("div", {
      className: "col-md-9"
    }, React.createElement("input", {
      type: "text",
      className: "form-control",
      name: "name",
      placeholder: "Full Name",
      autoComplete: "off"
    }))), React.createElement("div", {
      className: "form-group row"
    }, React.createElement("label", {
      className: "col-md-3 form-control-label"
    }, "Your Gender: "), React.createElement("div", {
      className: "col-md-9"
    }, React.createElement("div", {
      className: "radio-custom radio-default radio-inline"
    }, React.createElement("input", {
      type: "radio",
      id: "inputHorizontalMale",
      name: "inputRadiosMale2"
    }), React.createElement("label", {
      htmlFor: "inputHorizontalMale"
    }, "Male")), React.createElement("div", {
      className: "radio-custom radio-default radio-inline"
    }, React.createElement("input", {
      type: "radio",
      id: "inputHorizontalFemale",
      name: "inputRadiosMale2",
      defaultChecked: true
    }), React.createElement("label", {
      htmlFor: "inputHorizontalFemale"
    }, "Female")))), React.createElement("div", {
      className: "form-group row"
    }, React.createElement("label", {
      className: "col-md-3 form-control-label"
    }, "Your Email: "), React.createElement("div", {
      className: "col-md-9"
    }, React.createElement("input", {
      type: "email",
      className: "form-control",
      name: "email",
      placeholder: "@email.com",
      autoComplete: "off"
    }))), React.createElement("div", {
      className: "form-group row"
    }, React.createElement("label", {
      className: "col-md-3 form-control-label"
    }, "Description: "), React.createElement("div", {
      className: "col-md-9"
    }, React.createElement("textarea", {
      className: "form-control",
      placeholder: "Briefly Describe Yourself",
      defaultValue: ""
    }))), React.createElement("div", {
      className: "form-group row"
    }, React.createElement("div", {
      className: "col-md-9 col-md-offset-3"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-primary"
    }, "Submit "), React.createElement("button", {
      type: "reset",
      className: "btn btn-default btn-outline"
    }, "Reset")))))))))), React.createElement("div", {
      className: "panel"
    }, React.createElement("header", {
      className: "panel-heading"
    }, React.createElement("h3", {
      className: "panel-title"
    }, "Inline Form", React.createElement("span", {
      className: "panel-desc"
    }, "Use ", React.createElement("code", null, ".form-inline"), " class in the form to style with inline fields."))), React.createElement("div", {
      className: "panel-body"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Basic Inline Form"), React.createElement("div", {
      className: "example"
    }, React.createElement("form", {
      className: "form-inline"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      className: "form-control-label",
      htmlFor: "inputInlineUsername"
    }, "Username"), React.createElement("input", {
      type: "text",
      className: "form-control",
      id: "inputInlineUsername",
      name: "inputUsername",
      placeholder: "Username",
      autoComplete: "off"
    })), React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      className: "form-control-label",
      htmlFor: "inputInlinePassword"
    }, "Password"), React.createElement("input", {
      type: "password",
      className: "form-control",
      id: "inputInlinePassword",
      name: "inputPassword",
      placeholder: "Password",
      autoComplete: "off"
    })), React.createElement("div", {
      className: "form-group"
    }, React.createElement("div", {
      className: "checkbox-custom checkbox-default"
    }, React.createElement("input", {
      type: "checkbox",
      id: "inputInlineRemember",
      name: "inputCheckboxRemember",
      defaultChecked: true,
      autoComplete: "off"
    }), React.createElement("label", {
      htmlFor: "inputInlineRemember"
    }, "Remember me"))), React.createElement("div", {
      className: "form-group"
    }, React.createElement("button", {
      type: "submit",
      className: "btn btn-primary btn-outline"
    }, "Login")))), React.createElement("h4", {
      className: "example-title"
    }, "Basic Inline Form Without Label"), React.createElement("div", {
      className: "example"
    }, React.createElement("form", {
      className: "form-inline"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      className: "sr-only",
      htmlFor: "inputUnlabelUsername"
    }, "Username"), React.createElement("input", {
      type: "text",
      className: "form-control",
      id: "inputUnlabelUsername",
      placeholder: "Username",
      autoComplete: "off"
    })), React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      className: "sr-only",
      htmlFor: "inputUnlabelPassword"
    }, "Password"), React.createElement("input", {
      type: "password",
      className: "form-control",
      id: "inputUnlabelPassword",
      placeholder: "Password",
      autoComplete: "off"
    })), React.createElement("div", {
      className: "form-group"
    }, React.createElement("button", {
      type: "submit",
      className: "btn btn-primary btn-outline"
    }, "Login"))))))), React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-heading"
    }, React.createElement("h3", {
      className: "panel-title"
    }, "Controls Sizing")), React.createElement("div", {
      className: "panel-body container-fluid"
    }, React.createElement("div", {
      className: "row row-lg"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Input Sizing"), React.createElement("div", {
      className: "example"
    }, React.createElement("input", {
      type: "text",
      className: "form-control form-control-lg",
      placeholder: ".input-lg"
    })), React.createElement("div", {
      className: "example"
    }, React.createElement("input", {
      type: "text",
      className: "form-control",
      placeholder: "Default input"
    })), React.createElement("div", {
      className: "example"
    }, React.createElement("input", {
      type: "text",
      className: "form-control form-control-sm",
      placeholder: ".input-sm"
    })))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Select Sizing"), React.createElement("div", {
      className: "example"
    }, React.createElement("select", {
      className: "form-control form-control-lg"
    }, React.createElement("option", null, "Option 1"), React.createElement("option", null, "Option 2"), React.createElement("option", null, "Option 3"))), React.createElement("div", {
      className: "example"
    }, React.createElement("select", {
      className: "form-control"
    }, React.createElement("option", null, "Option 1"), React.createElement("option", null, "Option 2"), React.createElement("option", null, "Option 3"))), React.createElement("div", {
      className: "example"
    }, React.createElement("select", {
      className: "form-control form-control-sm"
    }, React.createElement("option", null, "Option 1"), React.createElement("option", null, "Option 2"), React.createElement("option", null, "Option 3"))))), React.createElement("div", {
      className: "col-md-12"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Column Sizing"), React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "row row-lg"
    }, React.createElement("div", {
      className: "form-group col-md-2"
    }, React.createElement("input", {
      type: "text",
      className: "form-control",
      placeholder: ".col-md-2"
    })), React.createElement("div", {
      className: "form-group col-md-4"
    }, React.createElement("input", {
      type: "text",
      className: "form-control",
      placeholder: ".col-md-4"
    })), React.createElement("div", {
      className: "form-group col-md-6"
    }, React.createElement("input", {
      type: "text",
      className: "form-control",
      placeholder: ".col-md-6"
    })))))), React.createElement("div", {
      className: "col-md-12"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Horizontal Form Label Sizing"), React.createElement("div", {
      className: "example"
    }, React.createElement("form", {
      className: "form-horizontal"
    }, React.createElement("div", {
      className: "form-group row"
    }, React.createElement("label", {
      className: "col-md-3 form-control-lg form-control-label",
      htmlFor: "inputSizingLarge"
    }, "Large label"), React.createElement("div", {
      className: "col-md-9"
    }, React.createElement("input", {
      type: "text",
      className: "form-control form-control-lg",
      id: "inputSizingLarge",
      name: "inputLarge",
      placeholder: "Large input"
    }))), React.createElement("div", {
      className: "form-group row"
    }, React.createElement("label", {
      className: "col-md-3 form-control-sm form-control-label",
      htmlFor: "inputSizingSmall"
    }, "Small label"), React.createElement("div", {
      className: "col-md-9"
    }, React.createElement("input", {
      type: "text",
      className: "form-control form-control-sm",
      id: "inputSizingSmall",
      name: "inputLarge",
      placeholder: "Small input"
    })))))))))), React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-heading"
    }, React.createElement("h3", {
      className: "panel-title"
    }, "Input Grid")), React.createElement("div", {
      className: "panel-body container-fluid"
    }, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-lg-12 form-group"
    }, React.createElement("input", {
      type: "text",
      className: "form-control",
      placeholder: ".col-lg-12"
    })), React.createElement("div", {
      className: "col-lg-6 form-group"
    }, React.createElement("input", {
      type: "text",
      className: "form-control",
      placeholder: ".col-lg-6"
    })), React.createElement("div", {
      className: "col-lg-6 form-group"
    }, React.createElement("input", {
      type: "text",
      className: "form-control",
      placeholder: ".col-lg-6"
    })), React.createElement("div", {
      className: "col-lg-4 form-group"
    }, React.createElement("input", {
      type: "text",
      className: "form-control",
      placeholder: ".col-lg-4"
    })), React.createElement("div", {
      className: "col-lg-4 form-group"
    }, React.createElement("input", {
      type: "text",
      className: "form-control",
      placeholder: ".col-lg-4"
    })), React.createElement("div", {
      className: "col-lg-4 form-group"
    }, React.createElement("input", {
      type: "text",
      className: "form-control",
      placeholder: ".col-lg-4"
    })), React.createElement("div", {
      className: "col-lg-3 form-group"
    }, React.createElement("input", {
      type: "text",
      className: "form-control",
      placeholder: ".col-lg-3"
    })), React.createElement("div", {
      className: "col-lg-3 form-group"
    }, React.createElement("input", {
      type: "text",
      className: "form-control",
      placeholder: ".col-lg-3"
    })), React.createElement("div", {
      className: "col-lg-3 form-group"
    }, React.createElement("input", {
      type: "text",
      className: "form-control",
      placeholder: ".col-lg-3"
    })), React.createElement("div", {
      className: "col-lg-3 form-group"
    }, React.createElement("input", {
      type: "text",
      className: "form-control",
      placeholder: ".col-lg-3"
    })), React.createElement("div", {
      className: "col-lg-2 form-group"
    }, React.createElement("input", {
      type: "text",
      className: "form-control",
      placeholder: ".col-lg-2"
    })), React.createElement("div", {
      className: "col-lg-2 form-group"
    }, React.createElement("input", {
      type: "text",
      className: "form-control",
      placeholder: ".col-lg-2"
    })), React.createElement("div", {
      className: "col-lg-2 form-group"
    }, React.createElement("input", {
      type: "text",
      className: "form-control",
      placeholder: ".col-lg-2"
    })), React.createElement("div", {
      className: "col-lg-2 form-group"
    }, React.createElement("input", {
      type: "text",
      className: "form-control",
      placeholder: ".col-lg-2"
    })), React.createElement("div", {
      className: "col-lg-2 form-group"
    }, React.createElement("input", {
      type: "text",
      className: "form-control",
      placeholder: ".col-lg-2"
    })), React.createElement("div", {
      className: "col-lg-2 form-group"
    }, React.createElement("input", {
      type: "text",
      className: "form-control",
      placeholder: ".col-lg-2"
    })), React.createElement("div", {
      className: "col-lg-1 form-group"
    }, React.createElement("input", {
      type: "text",
      className: "form-control",
      placeholder: ".col-lg-1"
    })), React.createElement("div", {
      className: "col-lg-1 form-group"
    }, React.createElement("input", {
      type: "text",
      className: "form-control",
      placeholder: ".col-lg-1"
    })), React.createElement("div", {
      className: "col-lg-1 form-group"
    }, React.createElement("input", {
      type: "text",
      className: "form-control",
      placeholder: ".col-lg-1"
    })), React.createElement("div", {
      className: "col-lg-1 form-group"
    }, React.createElement("input", {
      type: "text",
      className: "form-control",
      placeholder: ".col-lg-1"
    })), React.createElement("div", {
      className: "col-lg-1 form-group"
    }, React.createElement("input", {
      type: "text",
      className: "form-control",
      placeholder: ".col-lg-1"
    })), React.createElement("div", {
      className: "col-lg-1 form-group"
    }, React.createElement("input", {
      type: "text",
      className: "form-control",
      placeholder: ".col-lg-1"
    })), React.createElement("div", {
      className: "col-lg-1 form-group"
    }, React.createElement("input", {
      type: "text",
      className: "form-control",
      placeholder: ".col-lg-1"
    })), React.createElement("div", {
      className: "col-lg-1 form-group"
    }, React.createElement("input", {
      type: "text",
      className: "form-control",
      placeholder: ".col-lg-1"
    })), React.createElement("div", {
      className: "col-lg-1 form-group"
    }, React.createElement("input", {
      type: "text",
      className: "form-control",
      placeholder: ".col-lg-1"
    })), React.createElement("div", {
      className: "col-lg-1 form-group"
    }, React.createElement("input", {
      type: "text",
      className: "form-control",
      placeholder: ".col-lg-1"
    })), React.createElement("div", {
      className: "col-lg-1 form-group"
    }, React.createElement("input", {
      type: "text",
      className: "form-control",
      placeholder: ".col-lg-1"
    })), React.createElement("div", {
      className: "col-lg-1 form-group"
    }, React.createElement("input", {
      type: "text",
      className: "form-control",
      placeholder: ".col-lg-1"
    })))))));
  }

}

module.exportDefault(LayoutsExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"masks.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/forms/masks.jsx                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class MasksExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "MasksExample")), React.createElement("div", {
      className: "page-content container-fluid"
    }));
  }

}

module.exportDefault(MasksExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"material.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/forms/material.jsx                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class MaterialExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "Material Elements"), React.createElement("ol", {
      className: "breadcrumb"
    }, React.createElement("li", null, React.createElement("a", {
      href: "#/"
    }, "Home")), React.createElement("li", null, React.createElement("a", {
      href: "javascript:void(0)"
    }, "Forms")), React.createElement("li", {
      className: "active"
    }, "Material")), React.createElement("div", {
      className: "page-header-actions"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-sm btn-icon btn-default btn-outline btn-round",
      "data-toggle": "tooltip",
      "data-original-title": "Edit"
    }, React.createElement("i", {
      className: "icon wb-pencil",
      "aria-hidden": "true"
    })), React.createElement("button", {
      type: "button",
      className: "btn btn-sm btn-icon btn-default btn-outline btn-round",
      "data-toggle": "tooltip",
      "data-original-title": "Refresh"
    }, React.createElement("i", {
      className: "icon wb-refresh",
      "aria-hidden": "true"
    })), React.createElement("button", {
      type: "button",
      className: "btn btn-sm btn-icon btn-default btn-outline btn-round",
      "data-toggle": "tooltip",
      "data-original-title": "Setting"
    }, React.createElement("i", {
      className: "icon wb-settings",
      "aria-hidden": "true"
    })))), React.createElement("div", {
      className: "page-content container-fluid"
    }, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-heading"
    }, React.createElement("h3", {
      className: "panel-title"
    }, "Static Labels")), React.createElement("div", {
      className: "panel-body container-fluid"
    }, React.createElement("form", {
      autoComplete: "off"
    }, React.createElement("div", {
      className: "form-group form-material",
      "data-plugin": "formMaterial"
    }, React.createElement("label", {
      className: "form-control-label",
      htmlFor: "inputText"
    }, "Text"), React.createElement("input", {
      type: "text",
      className: "form-control",
      id: "inputText",
      name: "inputText",
      placeholder: "Text"
    })), React.createElement("div", {
      className: "form-group form-material",
      "data-plugin": "formMaterial"
    }, React.createElement("label", {
      className: "form-control-label",
      htmlFor: "inputEmail"
    }, "Email"), React.createElement("input", {
      type: "email",
      className: "form-control",
      id: "inputEmail",
      name: "inputEmail",
      placeholder: "Email"
    })), React.createElement("div", {
      className: "form-group form-material",
      "data-plugin": "formMaterial"
    }, React.createElement("label", {
      className: "form-control-label",
      htmlFor: "inputPassword"
    }, "Password"), React.createElement("input", {
      type: "password",
      className: "form-control",
      id: "inputPassword",
      name: "inputPassword",
      placeholder: "Password"
    })), React.createElement("div", {
      className: "form-group form-material",
      "data-plugin": "formMaterial"
    }, React.createElement("label", {
      className: "form-control-label",
      htmlFor: "inputFile"
    }, "File"), React.createElement("input", {
      type: "text",
      className: "form-control",
      placeholder: "Browse..",
      readOnly: true
    }), React.createElement("input", {
      type: "file",
      id: "inputFile",
      name: "inputFile",
      multiple: true
    })), React.createElement("div", {
      className: "form-group form-material",
      "data-plugin": "formMaterial"
    }, React.createElement("label", {
      className: "form-control-label",
      htmlFor: "textarea"
    }, "Textarea"), React.createElement("textarea", {
      className: "form-control",
      id: "textarea",
      name: "textarea",
      rows: 3,
      defaultValue: ""
    })), React.createElement("div", {
      className: "form-group form-material",
      "data-plugin": "formMaterial"
    }, React.createElement("label", {
      className: "form-control-label",
      htmlFor: "select"
    }, "Select"), React.createElement("select", {
      className: "form-control",
      id: "select"
    }, React.createElement("option", null, "1"), React.createElement("option", null, "2"), React.createElement("option", null, "3"), React.createElement("option", null, "4"), React.createElement("option", null, "5"))), React.createElement("div", {
      className: "form-group form-material",
      "data-plugin": "formMaterial"
    }, React.createElement("label", {
      className: "form-control-label",
      htmlFor: "selectMulti"
    }, "Multi Select"), React.createElement("select", {
      className: "form-control",
      id: "selectMulti",
      multiple: true
    }, React.createElement("option", null, "1"), React.createElement("option", null, "2"), React.createElement("option", null, "3"), React.createElement("option", null, "4"), React.createElement("option", null, "5"))), React.createElement("div", {
      className: "form-group form-material",
      "data-plugin": "formMaterial"
    }, React.createElement("label", {
      className: "form-control-label",
      htmlFor: "inputDisabled"
    }, "Input Disabled"), React.createElement("input", {
      type: "text",
      className: "form-control",
      id: "inputDisabled",
      placeholder: "Input Disabled",
      disabled: true
    })), React.createElement("div", {
      className: "form-group form-material",
      "data-plugin": "formMaterial"
    }, React.createElement("label", {
      className: "form-control-label",
      htmlFor: "inputFocus"
    }, "Input Focus"), React.createElement("input", {
      type: "text",
      className: "form-control focus",
      id: "inputFocus",
      placeholder: "Input Focus"
    })), React.createElement("div", {
      className: "form-group form-material has-warning",
      "data-plugin": "formMaterial"
    }, React.createElement("label", {
      className: "form-control-label",
      htmlFor: "inputWarning"
    }, "Input Warning"), React.createElement("input", {
      type: "text",
      className: "form-control",
      id: "inputWarning",
      placeholder: "Input Warning"
    })), React.createElement("div", {
      className: "form-group form-material has-danger",
      "data-plugin": "formMaterial"
    }, React.createElement("label", {
      className: "form-control-label",
      htmlFor: "inputError"
    }, "Input Danger"), React.createElement("input", {
      type: "text",
      className: "form-control",
      id: "inputError",
      placeholder: "Input Error"
    })), React.createElement("div", {
      className: "form-group form-material has-success",
      "data-plugin": "formMaterial"
    }, React.createElement("label", {
      className: "form-control-label",
      htmlFor: "inputSuccess"
    }, "Input Success"), React.createElement("input", {
      type: "text",
      className: "form-control",
      id: "inputSuccess",
      placeholder: "Input Success"
    })), React.createElement("div", {
      className: "form-group form-material has-info",
      "data-plugin": "formMaterial"
    }, React.createElement("label", {
      className: "form-control-label",
      htmlFor: "inputInfo"
    }, "Input Info"), React.createElement("input", {
      type: "text",
      className: "form-control",
      id: "inputInfo",
      placeholder: "Input Info"
    })), React.createElement("div", {
      className: "form-group form-material",
      "data-plugin": "formMaterial"
    }, React.createElement("label", {
      className: "form-control-label",
      htmlFor: "inputSmall"
    }, "Small Input"), React.createElement("input", {
      type: "text",
      className: "form-control form-control-sm",
      id: "inputSmall",
      name: "inputSmall",
      placeholder: "Small Input"
    })), React.createElement("div", {
      className: "form-group form-material",
      "data-plugin": "formMaterial"
    }, React.createElement("label", {
      className: "form-control-label",
      htmlFor: "inputSmall"
    }, "Default Input"), React.createElement("input", {
      type: "text",
      className: "form-control",
      id: "inputDefault",
      name: "inputDefault",
      placeholder: "Default Input"
    })), React.createElement("div", {
      className: "form-group form-material",
      "data-plugin": "formMaterial"
    }, React.createElement("label", {
      className: "form-control-label",
      htmlFor: "inputSmall"
    }, "Large Input"), React.createElement("input", {
      type: "text",
      className: "form-control form-control-lg",
      id: "inputLarge",
      name: "inputLarge",
      placeholder: "Large Input"
    })), React.createElement("div", {
      className: "form-group form-material",
      "data-plugin": "formMaterial"
    }, React.createElement("label", {
      className: "form-control-label",
      htmlFor: "inputHint"
    }, "Input Hint"), React.createElement("input", {
      type: "text",
      className: "form-control",
      id: "inputHint",
      name: "inputHint",
      placeholder: "Input Hint",
      "data-hint": "Write here something cool"
    })), React.createElement("div", {
      className: "form-group form-material",
      "data-plugin": "formMaterial"
    }, React.createElement("label", {
      className: "form-control-label",
      htmlFor: "inputAddons"
    }, "Input addons"), React.createElement("div", {
      className: "input-group"
    }, React.createElement("span", {
      className: "input-group-addon"
    }, "$"), React.createElement("div", {
      className: "form-control-wrap"
    }, React.createElement("input", {
      type: "text",
      className: "form-control",
      id: "inputAddons"
    })), React.createElement("span", {
      className: "input-group-btn"
    }, React.createElement("button", {
      className: "btn btn-outline btn-default",
      type: "button"
    }, "Button")))), React.createElement("div", {
      className: "form-group form-material row",
      "data-plugin": "formMaterial"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("label", {
      className: "form-control-label",
      htmlFor: "inputGrid1"
    }, "Input Grid"), React.createElement("input", {
      type: "text",
      className: "form-control",
      id: "inputGrid1",
      name: "inputGrid1",
      placeholder: "col-md-6"
    })), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("label", {
      className: "form-control-label",
      htmlFor: "inputGrid2"
    }, "Input Grid"), React.createElement("input", {
      type: "text",
      className: "form-control",
      id: "inputGrid2",
      name: "inputGrid2",
      placeholder: "col-md-6"
    }))))))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-heading"
    }, React.createElement("h3", {
      className: "panel-title"
    }, "Floating Labels")), React.createElement("div", {
      className: "panel-body container-fluid"
    }, React.createElement("form", {
      autoComplete: "off"
    }, React.createElement("div", {
      className: "form-group form-material floating",
      "data-plugin": "formMaterial"
    }, React.createElement("input", {
      type: "text",
      className: "form-control",
      name: "inputFloatingText"
    }), React.createElement("label", {
      className: "floating-label"
    }, "Text")), React.createElement("div", {
      className: "form-group form-material floating",
      "data-plugin": "formMaterial"
    }, React.createElement("input", {
      type: "email",
      className: "form-control",
      name: "inputFloatingEmail"
    }), React.createElement("label", {
      className: "floating-label"
    }, "Email")), React.createElement("div", {
      className: "form-group form-material floating",
      "data-plugin": "formMaterial"
    }, React.createElement("input", {
      type: "password",
      className: "form-control",
      name: "inputFloatingPassword"
    }), React.createElement("label", {
      className: "floating-label"
    }, "Password")), React.createElement("div", {
      className: "form-group form-material floating",
      "data-plugin": "formMaterial"
    }, React.createElement("input", {
      type: "text",
      className: "form-control",
      readOnly: true
    }), React.createElement("input", {
      type: "file",
      name: "inputFloatingFile",
      multiple: true
    }), React.createElement("label", {
      className: "floating-label"
    }, "Browse..")), React.createElement("div", {
      className: "form-group form-material floating",
      "data-plugin": "formMaterial"
    }, React.createElement("textarea", {
      className: "form-control",
      rows: 3,
      name: "textareaFloating",
      defaultValue: ""
    }), React.createElement("label", {
      className: "floating-label"
    }, "Textarea")), React.createElement("div", {
      className: "form-group form-material floating",
      "data-plugin": "formMaterial"
    }, React.createElement("select", {
      className: "form-control"
    }, React.createElement("option", null, "\xA0"), React.createElement("option", null, "1"), React.createElement("option", null, "2"), React.createElement("option", null, "3"), React.createElement("option", null, "4"), React.createElement("option", null, "5")), React.createElement("label", {
      className: "floating-label"
    }, "Select")), React.createElement("div", {
      className: "form-group form-material floating",
      "data-plugin": "formMaterial"
    }, React.createElement("label", {
      className: "floating-label floating-label-static"
    }, "Multi Select"), React.createElement("select", {
      className: "form-control",
      multiple: true
    }, React.createElement("option", null, "1"), React.createElement("option", null, "2"), React.createElement("option", null, "3"), React.createElement("option", null, "4"), React.createElement("option", null, "5"))), React.createElement("div", {
      className: "form-group form-material floating",
      "data-plugin": "formMaterial"
    }, React.createElement("input", {
      type: "text",
      className: "form-control",
      disabled: true
    }), React.createElement("label", {
      className: "floating-label"
    }, "Input Disabled")), React.createElement("div", {
      className: "form-group form-material floating",
      "data-plugin": "formMaterial"
    }, React.createElement("input", {
      type: "text",
      className: "form-control focus"
    }), React.createElement("label", {
      className: "floating-label"
    }, "Input Focus")), React.createElement("div", {
      className: "form-group form-material floating has-warning",
      "data-plugin": "formMaterial"
    }, React.createElement("input", {
      type: "text",
      className: "form-control"
    }), React.createElement("label", {
      className: "floating-label"
    }, "Input Warning")), React.createElement("div", {
      className: "form-group form-material floating has-danger",
      "data-plugin": "formMaterial"
    }, React.createElement("input", {
      type: "text",
      className: "form-control"
    }), React.createElement("label", {
      className: "floating-label"
    }, "Input Danger")), React.createElement("div", {
      className: "form-group form-material floating has-success",
      "data-plugin": "formMaterial"
    }, React.createElement("input", {
      type: "text",
      className: "form-control"
    }), React.createElement("label", {
      className: "floating-label"
    }, "Input Success")), React.createElement("div", {
      className: "form-group form-material floating has-info",
      "data-plugin": "formMaterial"
    }, React.createElement("input", {
      type: "text",
      className: "form-control"
    }), React.createElement("label", {
      className: "floating-label"
    }, "Input Info")), React.createElement("div", {
      className: "form-group form-material floating",
      "data-plugin": "formMaterial"
    }, React.createElement("input", {
      type: "text",
      className: "form-control form-control-sm",
      name: "inputFloatingSmall"
    }), React.createElement("label", {
      className: "floating-label"
    }, "Small Input")), React.createElement("div", {
      className: "form-group form-material floating",
      "data-plugin": "formMaterial"
    }, React.createElement("input", {
      type: "text",
      className: "form-control",
      name: "inputFloatingSmall"
    }), React.createElement("label", {
      className: "floating-label"
    }, "Default Input")), React.createElement("div", {
      className: "form-group form-material floating",
      "data-plugin": "formMaterial"
    }, React.createElement("input", {
      type: "text",
      className: "form-control form-control-lg",
      name: "inputFloatingLarge"
    }), React.createElement("label", {
      className: "floating-label"
    }, "Large Input")), React.createElement("div", {
      className: "form-group form-material floating",
      "data-plugin": "formMaterial"
    }, React.createElement("input", {
      type: "text",
      className: "form-control",
      name: "inputFloatingHint",
      "data-hint": "Write here something cool"
    }), React.createElement("label", {
      className: "floating-label"
    }, "Input Hint")), React.createElement("div", {
      className: "form-group form-material floating",
      "data-plugin": "formMaterial"
    }, React.createElement("div", {
      className: "input-group"
    }, React.createElement("span", {
      className: "input-group-addon"
    }, "$"), React.createElement("div", {
      className: "form-control-wrap"
    }, React.createElement("input", {
      type: "text",
      className: "form-control"
    }), React.createElement("label", {
      className: "floating-label"
    }, "Input addons")), React.createElement("span", {
      className: "input-group-btn"
    }, React.createElement("button", {
      className: "btn btn-outline btn-default",
      type: "button"
    }, "Button")))), React.createElement("div", {
      className: "form-group form-material floating row",
      "data-plugin": "formMaterial"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("input", {
      type: "text",
      className: "form-control",
      name: "inputFloatingGrid1"
    }), React.createElement("label", {
      className: "floating-label"
    }, "Input Grid")), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("input", {
      type: "text",
      className: "form-control",
      name: "inputFloatingGrid2"
    }), React.createElement("label", {
      className: "floating-label"
    }, "Input Grid"))))))))));
  }

}

module.exportDefault(MaterialExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"validation.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/forms/validation.jsx                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class ValidationExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "ValidationExample")), React.createElement("div", {
      className: "page-content container-fluid"
    }));
  }

}

module.exportDefault(ValidationExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"wizard.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/forms/wizard.jsx                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class WizardExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "WizardExample")), React.createElement("div", {
      className: "page-content container-fluid"
    }));
  }

}

module.exportDefault(WizardExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"pages":{"email.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/pages/email.jsx                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class EmailExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", {
      className: "page-content"
    }, React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-body container-fluid"
    }, React.createElement("div", {
      className: "email-title"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/base/assets/images/logo-blue.png",
      alt: "..."
    }), React.createElement("h4", {
      className: "blue-grey-400 font-weight-400"
    }, "Remark")), React.createElement("div", {
      className: "card"
    }, React.createElement("div", {
      className: "card-img-top cover"
    }, React.createElement("img", {
      className: "cover-image",
      src: "http://getbootstrapadmin.com/remark/global/photos/placeholder.png",
      alt: "..."
    })), React.createElement("div", {
      className: "card-block"
    }, React.createElement("h4", {
      className: "card-title"
    }, "Dissensio placebit bonarum"), React.createElement("p", {
      className: "card-text"
    }, "Fecerit amici quale arte opinor homero, amaret amici audeam locupletiorem timidiores. Insipientiam potitur hae solemus, mortis iactare debilitati opinemur effici, eruditi laetitiam verterem dictum audeam disputationi, chaere credo discere sin confidet complectitur hominem, quantum fabellas, habuit convenire possunt constringendos amicum. "), React.createElement("a", {
      className: "btn btn-primary card-link",
      href: "javascript:void(0)"
    }, "Read More"))), React.createElement("div", {
      className: "card"
    }, React.createElement("div", {
      className: "card-img-top cover"
    }, React.createElement("img", {
      className: "cover-image",
      src: "http://getbootstrapadmin.com/remark/global/photos/placeholder.png",
      alt: "..."
    })), React.createElement("div", {
      className: "card-block"
    }, React.createElement("h4", {
      className: "card-title"
    }, "Huius existimare ferantur"), React.createElement("p", {
      className: "card-text"
    }, "Inquam maluisti corrigere operosam expectamus, sic facilis aiebat. Magnam malit silano albuci vix poetis pedalis falli sequatur, eruditionem notissima depulsa notissima, istis tradit omne. Provident fortitudinem natura adversa suam, dedocendi inflammat eisque verear, labefactetur patrioque errorem probo consequamur erit brute. "), React.createElement("a", {
      className: "btn btn-primary card-link",
      href: "javascript:void(0)"
    }, "Read More"))), React.createElement("div", {
      className: "card"
    }, React.createElement("div", {
      className: "card-img-top cover"
    }, React.createElement("img", {
      className: "cover-image",
      src: "http://getbootstrapadmin.com/remark/global/photos/placeholder.png",
      alt: "..."
    })), React.createElement("div", {
      className: "card-block"
    }, React.createElement("h4", {
      className: "card-title"
    }, "Assiduitas totum sanciret"), React.createElement("p", {
      className: "card-text"
    }, "Multis vestra feci clariora caret proprius totum quaeso nati iudex, nimis dissensio sensu nati cupio maius iustitiam oportere, videro excepturi, delectari amici atomus falli pedalis imperii graeci anteponant movet tempora, contentus qua amplificarique horreat aspernari legat ergo rudem litteras utuntur. "), React.createElement("a", {
      className: "btn btn-primary card-link",
      href: "javascript:void(0)"
    }, "Read More"))), React.createElement("div", {
      className: "email-more"
    }, React.createElement("h2", {
      className: "email-more-title"
    }, "You May Want To Learn"), React.createElement("div", {
      className: "row email-more-content"
    }, React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("a", {
      className: "card",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      className: "img-fluid width-full",
      src: "http://getbootstrapadmin.com/remark/global/photos/placeholder.png",
      alt: "..."
    }))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("a", {
      className: "card",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      className: "img-fluid width-full",
      src: "http://getbootstrapadmin.com/remark/global/photos/placeholder.png",
      alt: "..."
    }))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("a", {
      className: "card",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      className: "img-fluid width-full",
      src: "http://getbootstrapadmin.com/remark/global/photos/placeholder.png",
      alt: "..."
    }))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("a", {
      className: "card",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      className: "img-fluid width-full",
      src: "http://getbootstrapadmin.com/remark/global/photos/placeholder.png",
      alt: "..."
    }))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("a", {
      className: "card",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      className: "img-fluid width-full",
      src: "http://getbootstrapadmin.com/remark/global/photos/placeholder.png",
      alt: "..."
    }))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("a", {
      className: "card",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      className: "img-fluid width-full",
      src: "http://getbootstrapadmin.com/remark/global/photos/placeholder.png",
      alt: "..."
    })))), React.createElement("p", null, "You are currently signed up to Company\u2019s newsletters as: youremail@gmail.com to ", React.createElement("a", {
      className: "email-unsubscribe",
      href: "javascript:void(0)"
    }, "unsubscribe")), React.createElement("div", {
      className: "email-more-social"
    }, React.createElement("a", {
      href: "javascript:void(0)"
    }, React.createElement("i", {
      className: "icon bd-twitter",
      "aria-hidden": "true"
    })), React.createElement("a", {
      href: "javascript:void(0)"
    }, React.createElement("i", {
      className: "icon bd-facebook",
      "aria-hidden": "true"
    })), React.createElement("a", {
      href: "javascript:void(0)"
    }, React.createElement("i", {
      className: "icon bd-linkedin",
      "aria-hidden": "true"
    })), React.createElement("a", {
      href: "javascript:void(0)"
    }, React.createElement("i", {
      className: "icon bd-pinterest",
      "aria-hidden": "true"
    })))))));
  }

}

module.exportDefault(EmailExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"faq.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/pages/faq.jsx                                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class FaqExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "Faq")), React.createElement("div", {
      className: "page-content container-fluid"
    }));
  }

}

module.exportDefault(FaqExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"gallery-grid.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/pages/gallery-grid.jsx                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class GalleryGridExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "Gallery Grid")), React.createElement("div", {
      className: "page-content container-fluid"
    }));
  }

}

module.exportDefault(GalleryGridExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"gallery.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/pages/gallery.jsx                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class GalleryExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("ol", {
      className: "breadcrumb"
    }, React.createElement("li", null, React.createElement("a", {
      href: "#/"
    }, "Home")), React.createElement("li", {
      className: "active"
    }, "Pages")), React.createElement("h1", {
      className: "page-title"
    }, "Gallery"), React.createElement("div", {
      className: "page-header-actions"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-sm btn-icon btn-inverse btn-round",
      "data-toggle": "tooltip",
      "data-original-title": "Edit"
    }, React.createElement("i", {
      className: "icon wb-pencil",
      "aria-hidden": "true"
    })), React.createElement("button", {
      type: "button",
      className: "btn btn-sm btn-icon btn-inverse btn-round",
      "data-toggle": "tooltip",
      "data-original-title": "Refresh"
    }, React.createElement("i", {
      className: "icon wb-refresh",
      "aria-hidden": "true"
    })), React.createElement("button", {
      type: "button",
      className: "btn btn-sm btn-icon btn-inverse btn-round",
      "data-toggle": "tooltip",
      "data-original-title": "Setting"
    }, React.createElement("i", {
      className: "icon wb-settings",
      "aria-hidden": "true"
    })))), React.createElement("div", {
      className: "page-content container-fluid"
    }, React.createElement("ul", {
      className: "blocks blocks-100 blocks-xlg-4 blocks-md-3 blocks-sm-2",
      id: "exampleList"
    }, React.createElement("li", {
      "data-type": "animal"
    }, React.createElement("div", {
      className: "widget widget-shadow"
    }, React.createElement("figure", {
      className: "widget-header overlay-hover overlay"
    }, React.createElement("img", {
      className: "overlay-figure overlay-scale",
      src: "http://getbootstrapadmin.com/remark/global/photos/animal-5-720x480.jpg",
      alt: "..."
    }), React.createElement("figcaption", {
      className: "overlay-panel overlay-background overlay-fade overlay-icon"
    }, React.createElement("a", {
      className: "icon wb-search",
      href: "../../global/photos/animal-5-720x480.jpg"
    }))), React.createElement("h4", {
      className: "widget-title"
    }, "Animal Horse"))), React.createElement("li", {
      "data-type": "object"
    }, React.createElement("div", {
      className: "widget widget-shadow"
    }, React.createElement("figure", {
      className: "widget-header overlay-hover overlay"
    }, React.createElement("img", {
      className: "overlay-figure overlay-scale",
      src: "http://getbootstrapadmin.com/remark/global/photos/object-2-720x480.jpg",
      alt: "..."
    }), React.createElement("figcaption", {
      className: "overlay-panel overlay-background overlay-fade overlay-icon"
    }, React.createElement("a", {
      className: "icon wb-search",
      href: "../../global/photos/object-2-720x480.jpg"
    }))), React.createElement("h4", {
      className: "widget-title"
    }, "Object Coffee"))), React.createElement("li", {
      "data-type": "object"
    }, React.createElement("div", {
      className: "widget widget-shadow"
    }, React.createElement("figure", {
      className: "widget-header overlay-hover overlay"
    }, React.createElement("img", {
      className: "overlay-figure overlay-scale",
      src: "http://getbootstrapadmin.com/remark/global/photos/object-3-720x480.jpg",
      alt: "..."
    }), React.createElement("figcaption", {
      className: "overlay-panel overlay-background overlay-fade overlay-icon"
    }, React.createElement("a", {
      className: "icon wb-search",
      href: "../../global/photos/object-3-720x480.jpg"
    }))), React.createElement("h4", {
      className: "widget-title"
    }, "Object Cup"))), React.createElement("li", {
      "data-type": "city"
    }, React.createElement("div", {
      className: "widget widget-shadow"
    }, React.createElement("figure", {
      className: "widget-header overlay-hover overlay"
    }, React.createElement("img", {
      className: "overlay-figure overlay-scale",
      src: "http://getbootstrapadmin.com/remark/global/photos/city-1-720x480.jpg",
      alt: "..."
    }), React.createElement("figcaption", {
      className: "overlay-panel overlay-background overlay-fade overlay-icon"
    }, React.createElement("a", {
      className: "icon wb-search",
      href: "../../global/photos/city-1-720x480.jpg"
    }))), React.createElement("h4", {
      className: "widget-title"
    }, "City Nature"))), React.createElement("li", {
      "data-type": "scenery"
    }, React.createElement("div", {
      className: "widget widget-shadow"
    }, React.createElement("figure", {
      className: "widget-header overlay-hover overlay"
    }, React.createElement("img", {
      className: "overlay-figure overlay-scale",
      src: "http://getbootstrapadmin.com/remark/global/photos/city-2-720x480.jpg",
      alt: "..."
    }), React.createElement("figcaption", {
      className: "overlay-panel overlay-background overlay-fade overlay-icon"
    }, React.createElement("a", {
      className: "icon wb-search",
      href: "../../global/photos/city-2-720x480.jpg"
    }))), React.createElement("h4", {
      className: "widget-title"
    }, "City Station"))), React.createElement("li", {
      "data-type": "city"
    }, React.createElement("div", {
      className: "widget widget-shadow"
    }, React.createElement("figure", {
      className: "widget-header overlay-hover overlay"
    }, React.createElement("img", {
      className: "overlay-figure overlay-scale",
      src: "http://getbootstrapadmin.com/remark/global/photos/city-3-720x480.jpg",
      alt: "..."
    }), React.createElement("figcaption", {
      className: "overlay-panel overlay-background overlay-fade overlay-icon"
    }, React.createElement("a", {
      className: "icon wb-search",
      href: "../../global/photos/city-3-720x480.jpg"
    }))), React.createElement("h4", {
      className: "widget-title"
    }, "City Leaf"))), React.createElement("li", {
      "data-type": "animal"
    }, React.createElement("div", {
      className: "widget widget-shadow"
    }, React.createElement("figure", {
      className: "widget-header overlay-hover overlay"
    }, React.createElement("img", {
      className: "overlay-figure overlay-scale",
      src: "http://getbootstrapadmin.com/remark/global/photos/animal-3-720x480.jpg",
      alt: "..."
    }), React.createElement("figcaption", {
      className: "overlay-panel overlay-background overlay-fade overlay-icon"
    }, React.createElement("a", {
      className: "icon wb-search",
      href: "../../global/photos/animal-3-720x480.jpg"
    }))), React.createElement("h4", {
      className: "widget-title"
    }, "Animal Bird"))), React.createElement("li", {
      "data-type": "city"
    }, React.createElement("div", {
      className: "widget widget-shadow"
    }, React.createElement("figure", {
      className: "widget-header overlay-hover overlay"
    }, React.createElement("img", {
      className: "overlay-figure overlay-scale",
      src: "http://getbootstrapadmin.com/remark/global/photos/city-4-720x480.jpg",
      alt: "..."
    }), React.createElement("figcaption", {
      className: "overlay-panel overlay-background overlay-fade overlay-icon"
    }, React.createElement("a", {
      className: "icon wb-search",
      href: "../../global/photos/city-4-720x480.jpg"
    }))), React.createElement("h4", {
      className: "widget-title"
    }, "City Street"))), React.createElement("li", {
      "data-type": "animal"
    }, React.createElement("div", {
      className: "widget widget-shadow"
    }, React.createElement("figure", {
      className: "widget-header overlay-hover overlay"
    }, React.createElement("img", {
      className: "overlay-figure overlay-scale",
      src: "http://getbootstrapadmin.com/remark/global/photos/animal-1-720x480.jpg",
      alt: "..."
    }), React.createElement("figcaption", {
      className: "overlay-panel overlay-background overlay-fade overlay-icon"
    }, React.createElement("a", {
      className: "icon wb-search",
      href: "../../global/photos/animal-1-720x480.jpg"
    }))), React.createElement("h4", {
      className: "widget-title"
    }, "Animal Nature"))), React.createElement("li", {
      "data-type": "city"
    }, React.createElement("div", {
      className: "widget widget-shadow"
    }, React.createElement("figure", {
      className: "widget-header overlay-hover overlay"
    }, React.createElement("img", {
      className: "overlay-figure overlay-scale",
      src: "http://getbootstrapadmin.com/remark/global/photos/city-5-720x480.jpg",
      alt: "..."
    }), React.createElement("figcaption", {
      className: "overlay-panel overlay-background overlay-fade overlay-icon"
    }, React.createElement("a", {
      className: "icon wb-search",
      href: "../../global/photos/city-5-720x480.jpg"
    }))), React.createElement("h4", {
      className: "widget-title"
    }, "City Night"))), React.createElement("li", {
      "data-type": "object"
    }, React.createElement("div", {
      className: "widget widget-shadow"
    }, React.createElement("figure", {
      className: "widget-header overlay-hover overlay"
    }, React.createElement("img", {
      className: "overlay-figure overlay-scale",
      src: "http://getbootstrapadmin.com/remark/global/photos/object-1-720x480.jpg",
      alt: "..."
    }), React.createElement("figcaption", {
      className: "overlay-panel overlay-background overlay-fade overlay-icon"
    }, React.createElement("a", {
      className: "icon wb-search",
      href: "../../global/photos/object-1-720x480.jpg"
    }))), React.createElement("h4", {
      className: "widget-title"
    }, "Object Book"))), React.createElement("li", {
      "data-type": "object"
    }, React.createElement("div", {
      className: "widget widget-shadow"
    }, React.createElement("figure", {
      className: "widget-header overlay-hover overlay"
    }, React.createElement("img", {
      className: "overlay-figure overlay-scale",
      src: "http://getbootstrapadmin.com/remark/global/photos/object-4-720x480.jpg",
      alt: "..."
    }), React.createElement("figcaption", {
      className: "overlay-panel overlay-background overlay-fade overlay-icon"
    }, React.createElement("a", {
      className: "icon wb-search",
      href: "../../global/photos/object-4-720x480.jpg"
    }))), React.createElement("h4", {
      className: "widget-title"
    }, "Object Grape"))))));
  }

}

module.exportDefault(GalleryExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"invoice.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/pages/invoice.jsx                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class InvoiceExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "Invoice")), React.createElement("div", {
      className: "page-content"
    }, React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-body container-fluid"
    }, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-lg-3"
    }, React.createElement("h3", null, React.createElement("img", {
      className: "mr-10",
      src: "http://getbootstrapadmin.com/remark/base/assets/images/logo-blue.png",
      alt: "..."
    }), "Remark"), React.createElement("address", null, "795 Folsom Ave, Suite 600", React.createElement("br", null), " San Francisco, CA, 94107", React.createElement("br", null), React.createElement("abbr", {
      title: "Mail"
    }, "E-mail:"), "\xA0\xA0example@google.com", React.createElement("br", null), React.createElement("abbr", {
      title: "Phone"
    }, "Phone:"), "\xA0\xA0(123) 456-7890", React.createElement("br", null), React.createElement("abbr", {
      title: "Fax"
    }, "Fax:"), "\xA0\xA0800-692-7753")), React.createElement("div", {
      className: "col-lg-3 offset-lg-6 text-right"
    }, React.createElement("h4", null, "Invoice Info"), React.createElement("p", null, React.createElement("a", {
      className: "font-size-20",
      href: "javascript:void(0)"
    }, "#5669626"), React.createElement("br", null), " To:", React.createElement("br", null), React.createElement("span", {
      className: "font-size-20"
    }, "Machi")), React.createElement("address", null, "795 Folsom Ave, Suite 600", React.createElement("br", null), " San Francisco, CA, 94107", React.createElement("br", null), React.createElement("abbr", {
      title: "Phone"
    }, "P:"), "\xA0\xA0(123) 456-7890", React.createElement("br", null)), React.createElement("span", null, "Invoice Date: January 20, 2017"), React.createElement("br", null), React.createElement("span", null, "Due Date: January 22, 2017"))), React.createElement("div", {
      className: "page-invoice-table table-responsive"
    }, React.createElement("table", {
      className: "table table-hover text-right"
    }, React.createElement("thead", null, React.createElement("tr", null, React.createElement("th", {
      className: "text-center"
    }, "#"), React.createElement("th", null, "Description"), React.createElement("th", {
      className: "text-right"
    }, "Quantity"), React.createElement("th", {
      className: "text-right"
    }, "Unit Cost"), React.createElement("th", {
      className: "text-right"
    }, "Total"))), React.createElement("tbody", null, React.createElement("tr", null, React.createElement("td", {
      className: "text-center"
    }, "1"), React.createElement("td", {
      className: "text-left"
    }, "Server hardware purchase"), React.createElement("td", null, "32"), React.createElement("td", null, "$75"), React.createElement("td", null, "$2152")), React.createElement("tr", null, React.createElement("td", {
      className: "text-center"
    }, "2"), React.createElement("td", {
      className: "text-left"
    }, "Office furniture purchase"), React.createElement("td", null, "15"), React.createElement("td", null, "$169"), React.createElement("td", null, "$4169")), React.createElement("tr", null, React.createElement("td", {
      className: "text-center"
    }, "3"), React.createElement("td", {
      className: "text-left"
    }, "Company Anual Dinner Catering"), React.createElement("td", null, "69"), React.createElement("td", null, "$49"), React.createElement("td", null, "$1260")), React.createElement("tr", null, React.createElement("td", {
      className: "text-center"
    }, "4"), React.createElement("td", {
      className: "text-left"
    }, "Payment for Jan 2017"), React.createElement("td", null, "149"), React.createElement("td", null, "$12"), React.createElement("td", null, "$866"))))), React.createElement("div", {
      className: "text-right clearfix"
    }, React.createElement("div", {
      className: "float-right"
    }, React.createElement("p", null, "Sub - Total amount:", React.createElement("span", null, "$4800")), React.createElement("p", null, "VAT:", React.createElement("span", null, "$35")), React.createElement("p", {
      className: "page-invoice-amount"
    }, "Grand Total:", React.createElement("span", null, "$4835")))), React.createElement("div", {
      className: "text-right"
    }, React.createElement("button", {
      type: "submit",
      className: "btn btn-animate btn-animate-side btn-primary"
    }, React.createElement("span", null, React.createElement("i", {
      className: "icon wb-shopping-cart",
      "aria-hidden": "true"
    }), " Proceed to payment")), React.createElement("button", {
      type: "button",
      className: "btn btn-animate btn-animate-side btn-default btn-outline",
      onclick: "javascript:window.print();"
    }, React.createElement("span", null, React.createElement("i", {
      className: "icon wb-print",
      "aria-hidden": "true"
    }), " Print")))))));
  }

}

module.exportDefault(InvoiceExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"profile.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/pages/profile.jsx                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class ProfileExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "ProfileExample")), React.createElement("div", {
      className: "page-content container-fluid"
    }));
  }

}

module.exportDefault(ProfileExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"search-result.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/pages/search-result.jsx                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class SearchResultExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", {
      className: "page-content"
    }, React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-body"
    }, React.createElement("form", {
      className: "page-search-form",
      role: "search"
    }, React.createElement("div", {
      className: "input-search input-search-dark"
    }, React.createElement("i", {
      className: "input-search-icon wb-search",
      "aria-hidden": "true"
    }), React.createElement("input", {
      type: "text",
      className: "form-control",
      id: "inputSearch",
      name: "search",
      placeholder: "Search Pages"
    }), React.createElement("button", {
      type: "button",
      className: "input-search-close icon wb-close",
      "aria-label": "Close"
    }))), React.createElement("h1", {
      className: "page-search-title"
    }, "Search Results For \"Web Design\""), React.createElement("p", {
      className: "page-search-count"
    }, "About", React.createElement("span", null, "1,370"), " result (", React.createElement("span", null, "0.13"), " seconds)"), React.createElement("ul", {
      className: "list-group list-group-full list-group-dividered"
    }, React.createElement("li", {
      className: "list-group-item flex-column align-items-start"
    }, React.createElement("h4", null, React.createElement("a", {
      href: "https://github.com/amazingSurge?tab=repositories"
    }, "Eademque Virtutum Laudantium")), React.createElement("a", {
      className: "search-result-link",
      href: "https://github.com/amazingSurge?tab=repositories"
    }, "https://github.com/amazingSurge?tab=repositories"), React.createElement("p", null, "Praebeat pecunias viveremus probamus opus apeirian haec perveniri, memoriter.Praebeat pecunias viveremus probamus opus apeirian haec perveniri, memoriter.Praebeat pecunias viveremus probamus opus apeirian haec perveniri, memoriter.")), React.createElement("li", {
      className: "list-group-item flex-column align-items-start"
    }, React.createElement("h4", null, React.createElement("a", {
      href: "https://github.com/amazingSurge?tab=repositories"
    }, "Parum Interiret Consequatur")), React.createElement("a", {
      className: "search-result-link",
      href: "https://github.com/amazingSurge?tab=repositories"
    }, "https://github.com/amazingSurge?tab=repositories"), React.createElement("p", null, "Regula magnosque ait. Rebus intellegimus occulte instituendarum quoniam fabulae.Regula magnosque ait. Rebus intellegimus occulte instituendarum quoniam fabulae.")), React.createElement("li", {
      className: "list-group-item flex-column align-items-start"
    }, React.createElement("h4", null, React.createElement("a", {
      href: "https://github.com/amazingSurge?tab=repositories"
    }, "Afficitur Nos Veritus")), React.createElement("a", {
      className: "search-result-link",
      href: "https://github.com/amazingSurge?tab=repositories"
    }, "https://github.com/amazingSurge?tab=repositories"), React.createElement("p", null, "Elaboraret animum primo. Civibus assueverit consequatur affert viros scribi.Elaboraret animum primo. Civibus assueverit consequatur affert viros scribi.")), React.createElement("li", {
      className: "list-group-item flex-column align-items-start"
    }, React.createElement("h4", null, React.createElement("a", {
      href: "https://github.com/amazingSurge?tab=repositories"
    }, "Tamquam Secumque Nacti")), React.createElement("a", {
      className: "search-result-link",
      href: "https://github.com/amazingSurge?tab=repositories"
    }, "https://github.com/amazingSurge?tab=repositories"), React.createElement("p", null, "Pronuntiaret liberos probes horribiles acri ita seiunctum aristippus. Humili.Pronuntiaret liberos probes horribiles acri ita seiunctum aristippus. Humili.Pronuntiaret liberos probes horribiles acri ita seiunctum aristippus. Humili.")), React.createElement("li", {
      className: "list-group-item flex-column align-items-start"
    }, React.createElement("h4", null, React.createElement("a", {
      href: "https://github.com/amazingSurge?tab=repositories"
    }, "Aliquo Difficile In")), React.createElement("a", {
      className: "search-result-link",
      href: "https://github.com/amazingSurge?tab=repositories"
    }, "https://github.com/amazingSurge?tab=repositories"), React.createElement("p", null, "Omnes arbitrer ancillae fictae maximam renovata, fieri pecuniae mundus.Omnes arbitrer ancillae fictae maximam renovata, fieri pecuniae mundus.")), React.createElement("li", {
      className: "list-group-item flex-column align-items-start"
    }, React.createElement("h4", null, React.createElement("a", {
      href: "https://github.com/amazingSurge?tab=repositories"
    }, "Quale Momenti Eitam")), React.createElement("a", {
      className: "search-result-link",
      href: "https://github.com/amazingSurge?tab=repositories"
    }, "https://github.com/amazingSurge?tab=repositories"), React.createElement("p", null, "Perpetiuntur inportuno iudicio errem. Reperire aliud delectus referta fruuntur.Perpetiuntur inportuno iudicio errem. Reperire aliud delectus referta fruuntur."))), React.createElement("nav", null, React.createElement("ul", {
      "data-plugin": "paginator",
      "data-total": 50,
      "data-skin": "pagination-no-border"
    })))));
  }

}

module.exportDefault(SearchResultExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"site-map.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/pages/site-map.jsx                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class SiteMapExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("ol", {
      className: "breadcrumb"
    }, React.createElement("li", {
      className: "breadcrumb-item"
    }, React.createElement("a", {
      href: "../index.html"
    }, "Home")), React.createElement("li", {
      className: "breadcrumb-item active"
    }, "Pages")), React.createElement("h1", {
      className: "page-title"
    }, "Site Map")), React.createElement("div", {
      className: "page-content container-fluid"
    }, React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-body"
    }, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-xxl-3 col-lg-6 col-md-6"
    }, React.createElement("h4", null, "General"), React.createElement("ul", {
      className: "sitemap-list"
    }, React.createElement("li", null, React.createElement("a", {
      href: "#"
    }, React.createElement("i", {
      className: "wb-dashboard mr-10"
    }), React.createElement("span", null, "Dashboard")), React.createElement("ul", null, React.createElement("li", null, React.createElement("a", {
      href: "../index.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Dashboard v1"))), React.createElement("li", null, React.createElement("a", {
      href: "../dashboard/v2.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Dashboard v2"))), React.createElement("li", null, React.createElement("a", {
      href: "../dashboard/ecommerce.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Ecommerce"))), React.createElement("li", null, React.createElement("a", {
      href: "../dashboard/analytics.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Analytics"))), React.createElement("li", null, React.createElement("a", {
      href: "../dashboard/team.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Team"))))), React.createElement("li", null, React.createElement("a", {
      href: "#"
    }, React.createElement("i", {
      className: "wb-layout mr-10"
    }), React.createElement("span", null, "Layouts")), React.createElement("ul", null, React.createElement("li", null, React.createElement("a", {
      href: "../layouts/menu-collapsed.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Menu Collapsed"))), React.createElement("li", null, React.createElement("a", {
      href: "../layouts/menu-collapsed-alt.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Menu Collapsed Alt"))), React.createElement("li", null, React.createElement("a", {
      href: "../layouts/menu-expended.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Menu Expended"))), React.createElement("li", null, React.createElement("a", {
      href: "../layouts/grids.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Grid Scaffolding"))), React.createElement("li", null, React.createElement("a", {
      href: "../layouts/layout-grid.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Layout Grid"))), React.createElement("li", null, React.createElement("a", {
      href: "../layouts/headers.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Different Headers"))), React.createElement("li", null, React.createElement("a", {
      href: "../layouts/panel-transition.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Panel Transition"))), React.createElement("li", null, React.createElement("a", {
      href: "../layouts/boxed.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Boxed Layout"))), React.createElement("li", null, React.createElement("a", {
      href: "../layouts/two-columns.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Two Columns"))), React.createElement("li", null, React.createElement("a", {
      href: "../layouts/menubar-flipped.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Menubar Flipped"))), React.createElement("li", null, React.createElement("a", {
      href: "../layouts/menubar-native-scrolling.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Menubar Native Scrolling"))), React.createElement("li", null, React.createElement("a", {
      href: "../layouts/bordered-header.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Bordered Header"))), React.createElement("li", null, React.createElement("a", {
      href: "javascript:void(0)"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Page Aside"))), React.createElement("ul", {
      className: "sitemap-list-sub"
    }, React.createElement("li", null, React.createElement("a", {
      href: "../layouts/aside-left-static.html"
    }, "Left Static")), React.createElement("li", null, React.createElement("a", {
      href: "../layouts/aside-right-static.html"
    }, "Right Static")), React.createElement("li", null, React.createElement("a", {
      href: "../layouts/aside-left-fixed.html"
    }, "Left Fixed")), React.createElement("li", null, React.createElement("a", {
      href: "../layouts/aside-right-fixed.html"
    }, "Right Fixed"))))), React.createElement("li", null, React.createElement("a", {
      href: "#"
    }, React.createElement("i", {
      className: "wb-file mr-10"
    }), React.createElement("span", null, "Pages")), React.createElement("ul", null, React.createElement("li", null, React.createElement("a", {
      href: "javascript:void(0)"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Errors"))), React.createElement("ul", {
      className: "sitemap-list-sub"
    }, React.createElement("li", null, React.createElement("a", {
      href: "../pages/error-400.html"
    }, "400 Bad Request")), React.createElement("li", null, React.createElement("a", {
      href: "../pages/error-403.html"
    }, "403 Forbidden")), React.createElement("li", null, React.createElement("a", {
      href: "../pages/error-404.html"
    }, "404 Not Found")), React.createElement("li", null, React.createElement("a", {
      href: "../pages/error-500.html"
    }, "500 Internal Server Error")), React.createElement("li", null, React.createElement("a", {
      href: "../pages/error-503.html"
    }, "503 Service Unavailable"))), React.createElement("li", null, React.createElement("a", {
      href: "../pages/faq.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "FAQ"))), React.createElement("li", null, React.createElement("a", {
      href: "../pages/gallery.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Gallery"))), React.createElement("li", null, React.createElement("a", {
      href: "../pages/gallery-grid.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Gallery Grid"))), React.createElement("li", null, React.createElement("a", {
      href: "../pages/search-result.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Search Result"))), React.createElement("li", null, React.createElement("a", {
      href: "javascript:void(0)"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Maps"))), React.createElement("ul", {
      className: "sitemap-list-sub"
    }, React.createElement("li", null, React.createElement("a", {
      href: "../pages/map-google.html"
    }, "Google Maps")), React.createElement("li", null, React.createElement("a", {
      href: "../pages/map-vector.html"
    }, "Vector Maps"))), React.createElement("li", null, React.createElement("a", {
      href: "../pages/maintenance.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Maintenance"))), React.createElement("li", null, React.createElement("a", {
      href: "../pages/forgot-password.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Forgot Password"))), React.createElement("li", null, React.createElement("a", {
      href: "../pages/lockscreen.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Lockscreen"))), React.createElement("li", null, React.createElement("a", {
      href: "../pages/login.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Login"))), React.createElement("li", null, React.createElement("a", {
      href: "../pages/register.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Register"))), React.createElement("li", null, React.createElement("a", {
      href: "../pages/login-v2.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Login V2"))), React.createElement("li", null, React.createElement("a", {
      href: "../pages/register-v2.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Register V2"))), React.createElement("li", null, React.createElement("a", {
      href: "../pages/login-v3.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Login V3"))), React.createElement("li", null, React.createElement("a", {
      href: "../pages/register-v3.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Register V3"))), React.createElement("li", null, React.createElement("a", {
      href: "../pages/user.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "User List"))), React.createElement("li", null, React.createElement("a", {
      href: "../pages/invoice.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Invoice"))), React.createElement("li", null, React.createElement("a", {
      href: "../pages/blank.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Blank Page"))), React.createElement("li", null, React.createElement("a", {
      href: "javascript:void(0)"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Email"))), React.createElement("ul", {
      className: "sitemap-list-sub"
    }, React.createElement("li", null, React.createElement("a", {
      href: "../pages/email-articles.html"
    }, "Articles")), React.createElement("li", null, React.createElement("a", {
      href: "../pages/email-welcome.html"
    }, "Welcome")), React.createElement("li", null, React.createElement("a", {
      href: "../pages/email-post.html"
    }, "Post")), React.createElement("li", null, React.createElement("a", {
      href: "../pages/email-thumbnail.html"
    }, "Thumbnail")), React.createElement("li", null, React.createElement("a", {
      href: "../pages/email-news.html"
    }, "News"))), React.createElement("li", null, React.createElement("a", {
      href: "../pages/code-editor.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Code Editor"))), React.createElement("li", null, React.createElement("a", {
      href: "../pages/profile.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Profile"))), React.createElement("li", null, React.createElement("a", {
      href: "../pages/profile-v2.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Profile V2"))), React.createElement("li", null, React.createElement("a", {
      href: "../pages/profile-v3.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Profile V3"))), React.createElement("li", null, React.createElement("a", {
      href: "../pages/site-map.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Sitemap"))), React.createElement("li", null, React.createElement("a", {
      href: "../pages/project.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Project"))))))), React.createElement("div", {
      className: "col-xxl-3 col-lg-6 col-md-6"
    }, React.createElement("h4", null, "Elements"), React.createElement("ul", {
      className: "sitemap-list"
    }, React.createElement("li", null, React.createElement("a", {
      href: "#"
    }, React.createElement("i", {
      className: "wb-bookmark mr-10"
    }), React.createElement("span", null, "Basic UI")), React.createElement("ul", null, React.createElement("li", null, React.createElement("a", {
      href: "javascript:void(0)"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Panel"))), React.createElement("ul", {
      className: "sitemap-list-sub"
    }, React.createElement("li", null, React.createElement("a", {
      href: "../uikit/panel-structure.html"
    }, "Panel Structure")), React.createElement("li", null, React.createElement("a", {
      href: "../uikit/panel-actions.html"
    }, "Panel Actions")), React.createElement("li", null, React.createElement("a", {
      href: "../uikit/panel-portlets.html"
    }, "Panel Portlets"))), React.createElement("li", null, React.createElement("a", {
      href: "../uikit/buttons.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Buttons"))), React.createElement("li", null, React.createElement("a", {
      href: "../uikit/cards.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Cards"))), React.createElement("li", null, React.createElement("a", {
      href: "../uikit/dropdowns.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Dropdowns"))), React.createElement("li", null, React.createElement("a", {
      href: "../uikit/icons.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Icons"))), React.createElement("li", null, React.createElement("a", {
      href: "../uikit/list.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "List"))), React.createElement("li", null, React.createElement("a", {
      href: "../uikit/tooltip-popover.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Tooltip & Popover"))), React.createElement("li", null, React.createElement("a", {
      href: "../uikit/modals.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Modals"))), React.createElement("li", null, React.createElement("a", {
      href: "../uikit/tabs-accordions.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Tabs & Accordions"))), React.createElement("li", null, React.createElement("a", {
      href: "../uikit/images.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Images"))), React.createElement("li", null, React.createElement("a", {
      href: "../uikit/badges.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Badges"))), React.createElement("li", null, React.createElement("a", {
      href: "../uikit/progress-bars.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Progress Bars"))), React.createElement("li", null, React.createElement("a", {
      href: "../uikit/carousel.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Carousel"))), React.createElement("li", null, React.createElement("a", {
      href: "../uikit/typography.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Typography"))), React.createElement("li", null, React.createElement("a", {
      href: "../uikit/colors.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Colors"))), React.createElement("li", null, React.createElement("a", {
      href: "../uikit/utilities.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Utilties"))))), React.createElement("li", null, React.createElement("a", {
      href: "#"
    }, React.createElement("i", {
      className: "wb-hammer mr-10"
    }), React.createElement("span", null, "Advanced UI")), React.createElement("ul", null, React.createElement("li", null, React.createElement("a", {
      href: "javascript:void(0)"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Tour"))), React.createElement("li", null, React.createElement("a", {
      href: "../advanced/animation.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Animation"))), React.createElement("li", null, React.createElement("a", {
      href: "../advanced/highlight.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Highlight"))), React.createElement("li", null, React.createElement("a", {
      href: "../advanced/lightbox.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Lightbox"))), React.createElement("li", null, React.createElement("a", {
      href: "../advanced/scrollable.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Scrollable"))), React.createElement("li", null, React.createElement("a", {
      href: "../advanced/rating.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Rating"))), React.createElement("li", null, React.createElement("a", {
      href: "../advanced/context-menu.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Context Menu"))), React.createElement("li", null, React.createElement("a", {
      href: "../advanced/alertify.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Alertify"))), React.createElement("li", null, React.createElement("a", {
      href: "../advanced/masonry.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Masonry"))), React.createElement("li", null, React.createElement("a", {
      href: "../advanced/treeview.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Treeview"))), React.createElement("li", null, React.createElement("a", {
      href: "../advanced/toastr.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Toastr"))), React.createElement("li", null, React.createElement("a", {
      href: "../advanced/maps-vector.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Vector Maps"))), React.createElement("li", null, React.createElement("a", {
      href: "../advanced/maps-google.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Google Maps"))), React.createElement("li", null, React.createElement("a", {
      href: "../advanced/sortable-nestable.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Sortable & Nestable"))), React.createElement("li", null, React.createElement("a", {
      href: "../advanced/bootbox-sweetalert.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Bootbox & Sweetalert"))))), React.createElement("li", null, React.createElement("a", {
      href: "#"
    }, React.createElement("i", {
      className: "wb-plugin mr-10"
    }), React.createElement("span", null, "Structure")), React.createElement("ul", null, React.createElement("li", null, React.createElement("a", {
      href: "../structure/alerts.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Alerts"))), React.createElement("li", null, React.createElement("a", {
      href: "../structure/ribbon.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Ribbon"))), React.createElement("li", null, React.createElement("a", {
      href: "../structure/pricing-tables.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Pricing Tables"))), React.createElement("li", null, React.createElement("a", {
      href: "../structure/overlay.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Overlay"))), React.createElement("li", null, React.createElement("a", {
      href: "../structure/cover.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Cover"))), React.createElement("li", null, React.createElement("a", {
      href: "../structure/timeline-simple.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Simple Timeline"))), React.createElement("li", null, React.createElement("a", {
      href: "../structure/timeline.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Timeline"))), React.createElement("li", null, React.createElement("a", {
      href: "../structure/step.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Step"))), React.createElement("li", null, React.createElement("a", {
      href: "../structure/comments.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Comments"))), React.createElement("li", null, React.createElement("a", {
      href: "../structure/media.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Media"))), React.createElement("li", null, React.createElement("a", {
      href: "../structure/chat.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Chat"))), React.createElement("li", null, React.createElement("a", {
      href: "../structure/testimonials.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Testimonials"))), React.createElement("li", null, React.createElement("a", {
      href: "../structure/nav.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Nav"))), React.createElement("li", null, React.createElement("a", {
      href: "../structure/navbars.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Navbars"))), React.createElement("li", null, React.createElement("a", {
      href: "../structure/blockquotes.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Blockquotes"))), React.createElement("li", null, React.createElement("a", {
      href: "../structure/pagination.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Pagination"))), React.createElement("li", null, React.createElement("a", {
      href: "../structure/breadcrumbs.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Breadcrumbs"))))), React.createElement("li", null, React.createElement("a", {
      href: "#"
    }, React.createElement("i", {
      className: "wb-extension mr-10"
    }), React.createElement("span", null, "Widgets")), React.createElement("ul", null, React.createElement("li", null, React.createElement("a", {
      href: "../widgets/statistics.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Statistics Widgets"))), React.createElement("li", null, React.createElement("a", {
      href: "../widgets/data.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Data Widgets"))), React.createElement("li", null, React.createElement("a", {
      href: "../widgets/blog.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Blog Widgets"))), React.createElement("li", null, React.createElement("a", {
      href: "../widgets/chart.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Chart Widgets"))), React.createElement("li", null, React.createElement("a", {
      href: "../widgets/social.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Social Widgets"))), React.createElement("li", null, React.createElement("a", {
      href: "../widgets/weather.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Weather Widgets"))))), React.createElement("li", null, React.createElement("a", {
      href: "#"
    }, React.createElement("i", {
      className: "wb-library mr-10"
    }), React.createElement("span", null, "Forms")), React.createElement("ul", null, React.createElement("li", null, React.createElement("a", {
      href: "../forms/general.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "General Elements"))), React.createElement("li", null, React.createElement("a", {
      href: "../forms/material.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Material Elements"))), React.createElement("li", null, React.createElement("a", {
      href: "../forms/advanced.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Advanced Elements"))), React.createElement("li", null, React.createElement("a", {
      href: "../forms/layouts.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Form Layouts"))), React.createElement("li", null, React.createElement("a", {
      href: "../forms/wizard.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Form Wizard"))), React.createElement("li", null, React.createElement("a", {
      href: "../forms/validation.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Form Validation"))), React.createElement("li", null, React.createElement("a", {
      href: "../forms/masks.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Form Masks"))), React.createElement("li", null, React.createElement("a", {
      href: "javascript:void(0)"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Editors"))), React.createElement("ul", {
      className: "sitemap-list-sub"
    }, React.createElement("li", null, React.createElement("a", {
      href: "../forms/editor-summernote.html"
    }, "Summernote")), React.createElement("li", null, React.createElement("a", {
      href: "../forms/editor-markdown.html"
    }, "Markdown")), React.createElement("li", null, React.createElement("a", {
      href: "../forms/editor-ace.html"
    }, "Ace Editor"))), React.createElement("li", null, React.createElement("a", {
      href: "../forms/image-cropping.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Image Cropping"))), React.createElement("li", null, React.createElement("a", {
      href: "../forms/file-uploads.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "File Uploads"))))), React.createElement("li", null, React.createElement("a", {
      href: "#"
    }, React.createElement("i", {
      className: "wb-table mr-10"
    }), React.createElement("span", null, "Tables")), React.createElement("ul", null, React.createElement("li", null, React.createElement("a", {
      href: "../tables/basic.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Basic Tables"))), React.createElement("li", null, React.createElement("a", {
      href: "../tables/bootstrap.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Bootstrap Tables"))), React.createElement("li", null, React.createElement("a", {
      href: "../tables/floatthead.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "floatThead"))), React.createElement("li", null, React.createElement("a", {
      href: "../tables/responsive.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Responsive Tables"))), React.createElement("li", null, React.createElement("a", {
      href: "../tables/editable.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Editable Tables"))), React.createElement("li", null, React.createElement("a", {
      href: "../tables/jsgrid.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "jsGrid"))), React.createElement("li", null, React.createElement("a", {
      href: "../tables/footable.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "FooTable"))), React.createElement("li", null, React.createElement("a", {
      href: "../tables/datatable.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "DataTables"))), React.createElement("li", null, React.createElement("a", {
      href: "../tables/jqtabledit.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Jquery Tabledit"))), React.createElement("li", null, React.createElement("a", {
      href: "../tables/table-dragger.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Table Dragger"))))), React.createElement("li", null, React.createElement("a", {
      href: "#"
    }, React.createElement("i", {
      className: "wb-pie-chart mr-10"
    }), React.createElement("span", null, "Chart")), React.createElement("ul", null, React.createElement("li", null, React.createElement("a", {
      href: "../charts/chartjs.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Chart.js"))), React.createElement("li", null, React.createElement("a", {
      href: "../charts/gauges.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Gauges"))), React.createElement("li", null, React.createElement("a", {
      href: "../charts/flot.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Flot"))), React.createElement("li", null, React.createElement("a", {
      href: "../charts/peity.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Peity"))), React.createElement("li", null, React.createElement("a", {
      href: "../charts/sparkline.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Sparkline"))), React.createElement("li", null, React.createElement("a", {
      href: "../charts/morris.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Morris"))), React.createElement("li", null, React.createElement("a", {
      href: "../charts/chartist.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Chartist.js"))), React.createElement("li", null, React.createElement("a", {
      href: "../charts/rickshaw.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Rickshaw"))), React.createElement("li", null, React.createElement("a", {
      href: "../charts/pie-progress.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Pie Progress"))), React.createElement("li", null, React.createElement("a", {
      href: "../charts/c3.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "C3"))))))), React.createElement("div", {
      className: "col-xxl-3 col-lg-6 col-md-6"
    }, React.createElement("h4", null, "Apps"), React.createElement("ul", {
      className: "sitemap-list"
    }, React.createElement("li", null, React.createElement("a", {
      href: "#"
    }, React.createElement("i", {
      className: "wb-grid-4 mr-10"
    }), React.createElement("span", null, "Apps")), React.createElement("ul", null, React.createElement("li", null, React.createElement("a", {
      href: "../apps/contacts/contacts.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Contacts"))), React.createElement("li", null, React.createElement("a", {
      href: "../apps/calendar/calendar.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Calendar"))), React.createElement("li", null, React.createElement("a", {
      href: "../apps/notebook/notebook.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Notebook"))), React.createElement("li", null, React.createElement("a", {
      href: "../apps/taskboard/taskboard.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Taskboard"))), React.createElement("li", null, React.createElement("a", {
      href: "javascript:void(0)"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Documents"))), React.createElement("ul", {
      className: "sitemap-list-sub"
    }, React.createElement("li", null, React.createElement("a", {
      href: "../apps/documents/articles.html"
    }, "Articles")), React.createElement("li", null, React.createElement("a", {
      href: "../apps/documents/categories.html"
    }, "Categories")), React.createElement("li", null, React.createElement("a", {
      href: "../apps/documents/article.html"
    }, "Article"))), React.createElement("li", null, React.createElement("a", {
      href: "../apps/forum/forum.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Forum"))), React.createElement("li", null, React.createElement("a", {
      href: "../apps/message/message.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Message"))), React.createElement("li", null, React.createElement("a", {
      href: "../apps/projects/projects.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Projects"))), React.createElement("li", null, React.createElement("a", {
      href: "../apps/mailbox/mailbox.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Mailbox"))), React.createElement("li", null, React.createElement("a", {
      href: "../apps/media/overview.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Media"))), React.createElement("li", null, React.createElement("a", {
      href: "../apps/work/work.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Work"))), React.createElement("li", null, React.createElement("a", {
      href: "../apps/location/location.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Location"))), React.createElement("li", null, React.createElement("a", {
      href: "../apps/travel/travel.html"
    }, React.createElement("i", {
      className: "icon wb-link float-right"
    }), React.createElement("span", null, "Travel"))))))))))));
  }

}

module.exportDefault(SiteMapExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"user-list.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/pages/user-list.jsx                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class UserListExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "UserListExample")), React.createElement("div", {
      className: "page-content container-fluid"
    }));
  }

}

module.exportDefault(UserListExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"structure":{"alerts.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/structure/alerts.jsx                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class AlertsExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "Alerts"), React.createElement("ol", {
      className: "breadcrumb"
    }, React.createElement("li", {
      className: "breadcrumb-item"
    }, React.createElement("a", {
      href: "../index.html"
    }, "Home")), React.createElement("li", {
      className: "breadcrumb-item active"
    }, "Structure")), React.createElement("div", {
      className: "page-header-actions"
    }, React.createElement("form", null, React.createElement("div", {
      className: "input-search input-search-dark"
    }, React.createElement("i", {
      className: "input-search-icon wb-search",
      "aria-hidden": "true"
    }), React.createElement("input", {
      type: "text",
      className: "form-control",
      name: true,
      placeholder: "Search..."
    }))))), React.createElement("div", {
      className: "page-content"
    }, React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-body container-fluid"
    }, React.createElement("div", {
      className: "row row-lg"
    }, React.createElement("div", {
      className: "col-md-6 col-lg-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Simple"), React.createElement("p", null, "Add color contextual class."), React.createElement("div", {
      className: "alert alert-primary alert-dismissible",
      role: "alert"
    }, React.createElement("button", {
      type: "button",
      className: "close",
      "data-dismiss": "alert",
      "aria-label": "Close"
    }, React.createElement("span", {
      "aria-hidden": "true"
    }, "\xD7")), "NEWS : You have done 5 actions."), React.createElement("div", {
      className: "alert alert-info alert-dismissible",
      role: "alert"
    }, React.createElement("button", {
      type: "button",
      className: "close",
      "data-dismiss": "alert",
      "aria-label": "Close"
    }, React.createElement("span", {
      "aria-hidden": "true"
    }, "\xD7")), "INFO : You have 198 messages"), React.createElement("div", {
      className: "alert alert-success alert-dismissible",
      role: "alert"
    }, React.createElement("button", {
      type: "button",
      className: "close",
      "data-dismiss": "alert",
      "aria-label": "Close"
    }, React.createElement("span", {
      "aria-hidden": "true"
    }, "\xD7")), "SUCCESS : The page has been added."), React.createElement("div", {
      className: "alert alert-danger alert-dismissible",
      role: "alert"
    }, React.createElement("button", {
      type: "button",
      className: "close",
      "data-dismiss": "alert",
      "aria-label": "Close"
    }, React.createElement("span", {
      "aria-hidden": "true"
    }, "\xD7")), "DANGER : The daily report has failed"), React.createElement("div", {
      className: "alert alert-warning alert-dismissible",
      role: "alert"
    }, React.createElement("button", {
      type: "button",
      className: "close",
      "data-dismiss": "alert",
      "aria-label": "Close"
    }, React.createElement("span", {
      "aria-hidden": "true"
    }, "\xD7")), "WARNING : Bandwidth limit exceeded"))), React.createElement("div", {
      className: "col-md-6 col-lg-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Dark"), React.createElement("p", null, "Add ", React.createElement("code", null, ".dark"), " class to change the style."), React.createElement("div", {
      className: "alert dark alert-primary alert-dismissible",
      role: "alert"
    }, React.createElement("button", {
      type: "button",
      className: "close",
      "data-dismiss": "alert",
      "aria-label": "Close"
    }, React.createElement("span", {
      "aria-hidden": "true"
    }, "\xD7")), "NEWS : You have done 5 actions."), React.createElement("div", {
      className: "alert dark alert-info alert-dismissible",
      role: "alert"
    }, React.createElement("button", {
      type: "button",
      className: "close",
      "data-dismiss": "alert",
      "aria-label": "Close"
    }, React.createElement("span", {
      "aria-hidden": "true"
    }, "\xD7")), "INFO : You have 198 messages"), React.createElement("div", {
      className: "alert dark alert-success alert-dismissible",
      role: "alert"
    }, React.createElement("button", {
      type: "button",
      className: "close",
      "data-dismiss": "alert",
      "aria-label": "Close"
    }, React.createElement("span", {
      "aria-hidden": "true"
    }, "\xD7")), "SUCCESS : The page has been added."), React.createElement("div", {
      className: "alert dark alert-danger alert-dismissible",
      role: "alert"
    }, React.createElement("button", {
      type: "button",
      className: "close",
      "data-dismiss": "alert",
      "aria-label": "Close"
    }, React.createElement("span", {
      "aria-hidden": "true"
    }, "\xD7")), "DANGER : The daily report has failed"), React.createElement("div", {
      className: "alert dark alert-warning alert-dismissible",
      role: "alert"
    }, React.createElement("button", {
      type: "button",
      className: "close",
      "data-dismiss": "alert",
      "aria-label": "Close"
    }, React.createElement("span", {
      "aria-hidden": "true"
    }, "\xD7")), "WARNING : Bandwidth limit exceeded"))), React.createElement("div", {
      className: "col-md-6 col-lg-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "With Icon"), React.createElement("p", null, "Add ", React.createElement("code", null, ".alert-icon"), " class."), React.createElement("div", {
      className: "alert dark alert-icon alert-primary alert-dismissible",
      role: "alert"
    }, React.createElement("button", {
      type: "button",
      className: "close",
      "data-dismiss": "alert",
      "aria-label": "Close"
    }, React.createElement("span", {
      "aria-hidden": "true"
    }, "\xD7")), React.createElement("i", {
      className: "icon wb-bell",
      "aria-hidden": "true"
    }), " You have done 5 actions."), React.createElement("div", {
      className: "alert dark alert-icon alert-info alert-dismissible",
      role: "alert"
    }, React.createElement("button", {
      type: "button",
      className: "close",
      "data-dismiss": "alert",
      "aria-label": "Close"
    }, React.createElement("span", {
      "aria-hidden": "true"
    }, "\xD7")), React.createElement("i", {
      className: "icon wb-info",
      "aria-hidden": "true"
    }), " You have 198 messages"), React.createElement("div", {
      className: "alert dark alert-icon alert-success alert-dismissible",
      role: "alert"
    }, React.createElement("button", {
      type: "button",
      className: "close",
      "data-dismiss": "alert",
      "aria-label": "Close"
    }, React.createElement("span", {
      "aria-hidden": "true"
    }, "\xD7")), React.createElement("i", {
      className: "icon wb-check",
      "aria-hidden": "true"
    }), " The page has been added."), React.createElement("div", {
      className: "alert dark alert-icon alert-danger alert-dismissible",
      role: "alert"
    }, React.createElement("button", {
      type: "button",
      className: "close",
      "data-dismiss": "alert",
      "aria-label": "Close"
    }, React.createElement("span", {
      "aria-hidden": "true"
    }, "\xD7")), React.createElement("i", {
      className: "icon wb-close",
      "aria-hidden": "true"
    }), " The daily report has failed"), React.createElement("div", {
      className: "alert dark alert-icon alert-warning alert-dismissible",
      role: "alert"
    }, React.createElement("button", {
      type: "button",
      className: "close",
      "data-dismiss": "alert",
      "aria-label": "Close"
    }, React.createElement("span", {
      "aria-hidden": "true"
    }, "\xD7")), React.createElement("i", {
      className: "icon wb-alert",
      "aria-hidden": "true"
    }), " Bandwidth limit exceeded"))), React.createElement("div", {
      className: "col-md-6 col-lg-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "With Title"), React.createElement("p", null, "Add title."), React.createElement("div", {
      role: "alert",
      className: "alert alert-success alert-dismissible"
    }, React.createElement("button", {
      "aria-label": "Close",
      "data-dismiss": "alert",
      className: "close",
      type: "button"
    }, React.createElement("span", {
      "aria-hidden": "true"
    }, "\xD7")), React.createElement("h4", null, "Some Message"), React.createElement("p", null, "Lorem ipsum Minim ad pariatur eiusmod ea ut nulla aliqua est quis id dolore minim voluptate.")), React.createElement("div", {
      role: "alert",
      className: "alert dark alert-warning alert-dismissible"
    }, React.createElement("button", {
      "aria-label": "Close",
      "data-dismiss": "alert",
      className: "close",
      type: "button"
    }, React.createElement("span", {
      "aria-hidden": "true"
    }, "\xD7")), React.createElement("h4", null, "Some Message"), React.createElement("p", null, "Lorem ipsum Minim ad pariatur eiusmod ea ut nulla aliqua est quis id dolore minim voluptate.")), React.createElement("div", {
      role: "alert",
      className: "alert dark alert-info alert-icon alert-dismissible"
    }, React.createElement("button", {
      "aria-label": "Close",
      "data-dismiss": "alert",
      className: "close",
      type: "button"
    }, React.createElement("span", {
      "aria-hidden": "true"
    }, "\xD7")), React.createElement("i", {
      className: "icon wb-bell",
      "aria-hidden": "true"
    }), React.createElement("h4", null, "Some Message"), React.createElement("p", null, "Lorem ipsum Minim ad pariatur eiusmod ea ut nulla aliqua est quis id dolore minim voluptate.")))), React.createElement("div", {
      className: "col-md-6 col-lg-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "With Button"), React.createElement("p", null, "Add buttons."), React.createElement("div", {
      className: "alert alert-icon alert-danger alert-dismissible",
      role: "alert"
    }, React.createElement("button", {
      type: "button",
      className: "close",
      "data-dismiss": "alert",
      "aria-label": "Close"
    }, React.createElement("span", {
      "aria-hidden": "true"
    }, "\xD7")), React.createElement("i", {
      className: "icon wb-bell",
      "aria-hidden": "true"
    }), " You have done 5 actions.", React.createElement("p", {
      className: "mt-15"
    }, React.createElement("button", {
      className: "btn btn-danger",
      type: "button"
    }, "Do this"), React.createElement("button", {
      className: "btn btn-link blue-grey-500",
      type: "button"
    }, "Or this"))), React.createElement("div", {
      role: "alert",
      className: "alert dark alert-primary alert-dismissible"
    }, React.createElement("button", {
      "aria-label": "Close",
      "data-dismiss": "alert",
      className: "close",
      type: "button"
    }, React.createElement("span", {
      "aria-hidden": "true"
    }, "\xD7")), React.createElement("h4", null, "Some Message"), React.createElement("p", null, "Lorem ipsum Minim ad pariatur eiusmod ea ut nulla aliqua est quis id dolore minim voluptate."), React.createElement("p", {
      className: "mt-15"
    }, React.createElement("button", {
      className: "btn btn-primary btn-inverse btn-outline",
      type: "button"
    }, "Do this"), React.createElement("button", {
      className: "btn btn-link white",
      type: "button"
    }, "Or this"))), React.createElement("div", {
      role: "alert",
      className: "alert dark alert-success alert-dismissible"
    }, React.createElement("button", {
      "aria-label": "Close",
      "data-dismiss": "alert",
      className: "close",
      type: "button"
    }, React.createElement("span", {
      "aria-hidden": "true"
    }, "\xD7")), React.createElement("h4", null, "Some Message"), React.createElement("p", null, "Lorem ipsum Minim ad pariatur eiusmod ea ut nulla aliqua est quis id dolore minim voluptate."), React.createElement("p", {
      className: "mt-15"
    }, React.createElement("button", {
      className: "btn btn-success btn-inverse btn-outline",
      type: "button"
    }, "Do this"), React.createElement("button", {
      className: "btn btn-link white",
      type: "button"
    }, "Or this"))))), React.createElement("div", {
      className: "col-md-6 col-lg-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "With Avatar"), React.createElement("p", null, "Add ", React.createElement("code", null, ".alert-avatar"), " class."), React.createElement("div", {
      className: "alert alert-primary alert-avatar alert-dismissible",
      role: "alert"
    }, React.createElement("button", {
      type: "button",
      className: "close",
      "data-dismiss": "alert",
      "aria-label": "Close"
    }, React.createElement("span", {
      "aria-hidden": "true"
    }, "\xD7")), React.createElement("span", {
      className: "avatar"
    }, React.createElement("img", {
      alt: "...",
      src: "../../../global/portraits/5.jpg"
    })), "You have done 5 actions."), React.createElement("div", {
      role: "alert",
      className: "alert dark alert-info alert-avatar alert-dismissible"
    }, React.createElement("button", {
      "aria-label": "Close",
      "data-dismiss": "alert",
      className: "close",
      type: "button"
    }, React.createElement("span", {
      "aria-hidden": "true"
    }, "\xD7")), React.createElement("span", {
      className: "avatar"
    }, React.createElement("img", {
      alt: "...",
      src: "../../../global/portraits/5.jpg"
    })), React.createElement("h4", null, "Some Message"), React.createElement("p", null, "Lorem ipsum Minim ad pariatur eiusmod ea ut nulla aliqua est quis id dolore minim voluptate.")), React.createElement("div", {
      role: "alert",
      className: "alert dark alert-danger alert-avatar alert-dismissible"
    }, React.createElement("button", {
      "aria-label": "Close",
      "data-dismiss": "alert",
      className: "close",
      type: "button"
    }, React.createElement("span", {
      "aria-hidden": "true"
    }, "\xD7")), React.createElement("span", {
      className: "avatar"
    }, React.createElement("img", {
      alt: "...",
      src: "../../../global/portraits/5.jpg"
    })), React.createElement("h4", null, "Some Message"), React.createElement("p", null, "Lorem ipsum Minim ad pariatur eiusmod ea ut nulla aliqua est quis id dolore minim voluptate."), React.createElement("p", {
      className: "mt-15"
    }, React.createElement("button", {
      className: "btn btn-danger btn-inverse btn-outline",
      type: "button"
    }, "Do this"), React.createElement("button", {
      className: "btn btn-link white",
      type: "button"
    }, "Or this"))))), React.createElement("div", {
      className: "col-md-6 col-lg-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Dismissible and Click"), React.createElement("p", null, "Build on any alert by adding an optional ", React.createElement("code", null, ".alert-dismissible"), "                  and close button."), React.createElement("div", {
      className: "alert alert-primary alert-dismissible",
      role: "alert"
    }, React.createElement("button", {
      type: "button",
      className: "close",
      "data-dismiss": "alert",
      "aria-label": "Close"
    }, React.createElement("span", {
      "aria-hidden": "true"
    }, "\xD7")), React.createElement("strong", null, "Heads up!"), " This alert needs your attention, but it's not super important."), React.createElement("div", {
      className: "alert dark alert-primary",
      role: "alert"
    }, React.createElement("h4", null, "Some Message"), React.createElement("p", null, "Lorem ipsum Minim ad pariatur eiusmod ea ut nulla aliqua est quis id dolore minim voluptate.")))), React.createElement("div", {
      className: "col-md-6 col-lg-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Link In Alerts"), React.createElement("p", null, "Use the ", React.createElement("code", null, ".alert-link"), " utility class to quickly provide matching colored links within any alert."), React.createElement("div", {
      className: "alert alert-warning alert-dismissible",
      role: "alert"
    }, React.createElement("button", {
      type: "button",
      className: "close",
      "data-dismiss": "alert",
      "aria-label": "Close"
    }, React.createElement("span", {
      "aria-hidden": "true"
    }, "\xD7")), "Lorem ipsum dolor sit amet, consectetur adipiscing elit.", React.createElement("a", {
      className: "alert-link",
      href: "javascript:void(0)"
    }, "not looking too good")), React.createElement("div", {
      className: "alert dark alert-warning alert-dismissible",
      role: "alert"
    }, React.createElement("button", {
      type: "button",
      className: "close",
      "data-dismiss": "alert",
      "aria-label": "Close"
    }, React.createElement("span", {
      "aria-hidden": "true"
    }, "\xD7")), React.createElement("h4", null, "Some Message"), React.createElement("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit.", React.createElement("a", {
      className: "alert-link",
      href: "javascript:void(0)"
    }, "not looking too good"))))), React.createElement("div", {
      className: "col-md-6 col-lg-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "With List"), React.createElement("p", null, "An alert include title and item list with close button."), React.createElement("div", {
      className: "alert alert-info alert-dismissible",
      role: "alert"
    }, React.createElement("button", {
      type: "button",
      className: "close",
      "data-dismiss": "alert",
      "aria-label": "Close"
    }, React.createElement("span", {
      "aria-hidden": "true"
    }, "\xD7")), React.createElement("h4", null, "Alert With List"), React.createElement("ul", null, React.createElement("li", null, "Cras justo odio"), React.createElement("li", null, "Dapibus ac facilisis in"))), React.createElement("div", {
      className: "alert dark alert-info alert-dismissible",
      role: "alert"
    }, React.createElement("button", {
      type: "button",
      className: "close",
      "data-dismiss": "alert",
      "aria-label": "Close"
    }, React.createElement("span", {
      "aria-hidden": "true"
    }, "\xD7")), React.createElement("h4", null, "Alert With List"), React.createElement("ul", null, React.createElement("li", null, "Cras justo odio"), React.createElement("li", null, "Dapibus ac facilisis in"))))), React.createElement("div", {
      className: "col-md-6 col-lg-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Alt Alerts"), React.createElement("p", null, "Swap modifier class ", React.createElement("code", null, ".alert-alt"), " to switch another four contextual feedback message style below. "), React.createElement("div", {
      className: "alert alert-alt alert-primary alert-dismissible",
      role: "alert"
    }, React.createElement("button", {
      type: "button",
      className: "close",
      "data-dismiss": "alert",
      "aria-label": "Close"
    }, React.createElement("span", {
      "aria-hidden": "true"
    }, "\xD7")), "Lorem ipsum dolor sit amet, ", React.createElement("a", {
      className: "alert-link",
      href: "javascript:void(0)"
    }, "consectetur adipisicing elit"), "."), React.createElement("div", {
      className: "alert alert-alt alert-info alert-dismissible",
      role: "alert"
    }, React.createElement("button", {
      type: "button",
      className: "close",
      "data-dismiss": "alert",
      "aria-label": "Close"
    }, React.createElement("span", {
      "aria-hidden": "true"
    }, "\xD7")), "Lorem ipsum dolor sit amet, ", React.createElement("a", {
      className: "alert-link",
      href: "javascript:void(0)"
    }, "consectetur adipisicing elit"), "."), React.createElement("div", {
      className: "alert alert-alt alert-success alert-dismissible",
      role: "alert"
    }, React.createElement("button", {
      type: "button",
      className: "close",
      "data-dismiss": "alert",
      "aria-label": "Close"
    }, React.createElement("span", {
      "aria-hidden": "true"
    }, "\xD7")), "Lorem ipsum dolor sit amet, ", React.createElement("a", {
      className: "alert-link",
      href: "javascript:void(0)"
    }, "consectetur adipisicing elit"), "."), React.createElement("div", {
      className: "alert alert-alt alert-danger alert-dismissible",
      role: "alert"
    }, React.createElement("button", {
      type: "button",
      className: "close",
      "data-dismiss": "alert",
      "aria-label": "Close"
    }, React.createElement("span", {
      "aria-hidden": "true"
    }, "\xD7")), "Lorem ipsum dolor sit amet, ", React.createElement("a", {
      className: "alert-link",
      href: "javascript:void(0)"
    }, "consectetur adipisicing elit"), "."), React.createElement("div", {
      className: "alert alert-alt alert-warning alert-dismissible",
      role: "alert"
    }, React.createElement("button", {
      type: "button",
      className: "close",
      "data-dismiss": "alert",
      "aria-label": "Close"
    }, React.createElement("span", {
      "aria-hidden": "true"
    }, "\xD7")), "Lorem ipsum dolor sit amet, ", React.createElement("a", {
      className: "alert-link",
      href: "javascript:void(0)"
    }, "consectetur adipisicing elit"), "."))), React.createElement("div", {
      className: "col-md-6 col-lg-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Dark Alt"), React.createElement("p", null, "Swap modifier class ", React.createElement("code", null, ".alert-alt"), " and ", React.createElement("code", null, ".dark"), "                  to switch another four contextual feedback message style below."), React.createElement("div", {
      className: "alert dark alert-alt alert-primary alert-dismissible",
      role: "alert"
    }, React.createElement("button", {
      type: "button",
      className: "close",
      "data-dismiss": "alert",
      "aria-label": "Close"
    }, React.createElement("span", {
      "aria-hidden": "true"
    }, "\xD7")), "Lorem ipsum dolor sit amet, ", React.createElement("a", {
      className: "alert-link",
      href: "javascript:void(0)"
    }, "consectetur adipisicing elit"), "."), React.createElement("div", {
      className: "alert dark alert-alt alert-info alert-dismissible",
      role: "alert"
    }, React.createElement("button", {
      type: "button",
      className: "close",
      "data-dismiss": "alert",
      "aria-label": "Close"
    }, React.createElement("span", {
      "aria-hidden": "true"
    }, "\xD7")), "Lorem ipsum dolor sit amet, ", React.createElement("a", {
      className: "alert-link",
      href: "javascript:void(0)"
    }, "consectetur adipisicing elit"), "."), React.createElement("div", {
      className: "alert dark alert-alt alert-success alert-dismissible",
      role: "alert"
    }, React.createElement("button", {
      type: "button",
      className: "close",
      "data-dismiss": "alert",
      "aria-label": "Close"
    }, React.createElement("span", {
      "aria-hidden": "true"
    }, "\xD7")), "Lorem ipsum dolor sit amet, ", React.createElement("a", {
      className: "alert-link",
      href: "javascript:void(0)"
    }, "consectetur adipisicing elit"), "."), React.createElement("div", {
      className: "alert dark alert-alt alert-danger alert-dismissible",
      role: "alert"
    }, React.createElement("button", {
      type: "button",
      className: "close",
      "data-dismiss": "alert",
      "aria-label": "Close"
    }, React.createElement("span", {
      "aria-hidden": "true"
    }, "\xD7")), "Lorem ipsum dolor sit amet, ", React.createElement("a", {
      className: "alert-link",
      href: "javascript:void(0)"
    }, "consectetur adipisicing elit"), "."), React.createElement("div", {
      className: "alert dark alert-alt alert-warning alert-dismissible",
      role: "alert"
    }, React.createElement("button", {
      type: "button",
      className: "close",
      "data-dismiss": "alert",
      "aria-label": "Close"
    }, React.createElement("span", {
      "aria-hidden": "true"
    }, "\xD7")), "Lorem ipsum dolor sit amet, ", React.createElement("a", {
      className: "alert-link",
      href: "javascript:void(0)"
    }, "consectetur adipisicing elit"), "."))), React.createElement("div", {
      className: "col-md-6 col-lg-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Social Messages"), React.createElement("p", null, "Add ", React.createElement("code", null, ".alert-social"), " class."), React.createElement("div", {
      role: "alert",
      className: "alert alert-social alert-facebook alert-dismissible"
    }, React.createElement("button", {
      "aria-label": "Close",
      "data-dismiss": "alert",
      className: "close",
      type: "button"
    }, React.createElement("span", {
      "aria-hidden": "true"
    }, "\xD7")), React.createElement("i", {
      className: "icon bd-facebook",
      "aria-hidden": "true"
    }), React.createElement("h4", null, "Some Message"), React.createElement("p", null, "Lorem ipsum Minim ad pariatur eiusmod ea ut nulla aliqua est quis id dolore minim voluptate.")), React.createElement("div", {
      role: "alert",
      className: "alert alert-social alert-twitter alert-dismissible"
    }, React.createElement("button", {
      "aria-label": "Close",
      "data-dismiss": "alert",
      className: "close",
      type: "button"
    }, React.createElement("span", {
      "aria-hidden": "true"
    }, "\xD7")), React.createElement("i", {
      className: "icon bd-twitter",
      "aria-hidden": "true"
    }), React.createElement("h4", null, "Some Message"), React.createElement("p", null, "Lorem ipsum Minim ad pariatur eiusmod ea ut nulla aliqua est quis id dolore minim voluptate.")), React.createElement("div", {
      role: "alert",
      className: "alert alert-social alert-google-plus alert-dismissible"
    }, React.createElement("button", {
      "aria-label": "Close",
      "data-dismiss": "alert",
      className: "close",
      type: "button"
    }, React.createElement("span", {
      "aria-hidden": "true"
    }, "\xD7")), React.createElement("i", {
      className: "icon bd-google-plus",
      "aria-hidden": "true"
    }), React.createElement("h4", null, "Some Message"), React.createElement("p", null, "Lorem ipsum Minim ad pariatur eiusmod ea ut nulla aliqua est quis id dolore minim voluptate.")), React.createElement("div", {
      role: "alert",
      className: "alert alert-social alert-linkedin alert-dismissible"
    }, React.createElement("button", {
      "aria-label": "Close",
      "data-dismiss": "alert",
      className: "close",
      type: "button"
    }, React.createElement("span", {
      "aria-hidden": "true"
    }, "\xD7")), React.createElement("i", {
      className: "icon bd-linkedin",
      "aria-hidden": "true"
    }), React.createElement("h4", null, "Some Message"), React.createElement("p", null, "Lorem ipsum Minim ad pariatur eiusmod ea ut nulla aliqua est quis id dolore minim voluptate.")))))))));
  }

}

module.exportDefault(AlertsExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"blockquotes.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/structure/blockquotes.jsx                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class BlockquotesExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "Blockquotes"), React.createElement("ol", {
      className: "breadcrumb"
    }, React.createElement("li", {
      className: "breadcrumb-item"
    }, React.createElement("a", {
      href: "../index.html"
    }, "Home")), React.createElement("li", {
      className: "breadcrumb-item active"
    }, "Structure")), React.createElement("div", {
      className: "page-header-actions"
    }, React.createElement("form", null, React.createElement("div", {
      className: "input-search input-search-dark"
    }, React.createElement("i", {
      className: "input-search-icon wb-search",
      "aria-hidden": "true"
    }), React.createElement("input", {
      type: "text",
      className: "form-control",
      name: true,
      placeholder: "Search..."
    }))))), React.createElement("div", {
      className: "page-content"
    }, React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-body container-fluid"
    }, React.createElement("div", {
      className: "row row-lg"
    }, React.createElement("div", {
      className: "col-xl-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Default"), React.createElement("p", null, "Wrap ", React.createElement("code", null, "<blockquote>"), " around any HTML as the quote. For straight quotes, we recommend a ", React.createElement("code", null, "<p>"), "."), React.createElement("div", {
      className: "example"
    }, React.createElement("blockquote", {
      className: "blockquote"
    }, React.createElement("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit integer."))))), React.createElement("div", {
      className: "col-xl-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Naming A Source"), React.createElement("p", null, "Add a ", React.createElement("code", null, "<footer>"), " for identifying the source. Wrap the name of the source work in ", React.createElement("code", null, "<cite>"), "."), React.createElement("div", {
      className: "example"
    }, React.createElement("blockquote", {
      className: "blockquote"
    }, React.createElement("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit integer."), React.createElement("footer", {
      className: "blockquote-footer"
    }, "Someone famous in", React.createElement("cite", {
      title: "Source Title"
    }, "Source Title"))))))), React.createElement("div", {
      className: "row row-lg"
    }, React.createElement("div", {
      className: "col-xl-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Alternate Displays"), React.createElement("p", null, "Add ", React.createElement("code", null, ".blockquote-reverse"), " for a blockquote with right-aligned content."), React.createElement("div", {
      className: "example"
    }, React.createElement("blockquote", {
      className: "blockquote blockquote-reverse"
    }, React.createElement("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit integer."), React.createElement("footer", {
      className: "blockquote-footer"
    }, "Someone famous in", React.createElement("cite", {
      title: "Source Title"
    }, "Source Title")))))), React.createElement("div", {
      className: "col-xl-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Cover Quote"), React.createElement("p", null, "Add ", React.createElement("code", null, ".cover-quote"), " for a blockquote with left-aligned content and additional class .blockquote-reverse for right-aligned content."), React.createElement("div", {
      className: "example"
    }, React.createElement("blockquote", {
      className: "blockquote cover-quote"
    }, "Lorem ipsum dolor sit amet, consectetur adipiscing elit integer.", React.createElement("footer", {
      className: "blockquote-footer"
    }, "Someone famous in", React.createElement("cite", {
      title: "Source Title"
    }, "Source Title"))))))), React.createElement("div", {
      className: "row row-lg"
    }, React.createElement("div", {
      className: "col-md-12"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Styles"), React.createElement("p", null, "Use any of the available blockquote classes to quickly create a styled button."), React.createElement("div", {
      className: "row row-lg"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "example"
    }, React.createElement("blockquote", {
      className: "blockquote custom-blockquote blockquote-success"
    }, React.createElement("p", {
      className: "mb-0"
    }, "Lorem ipsum dolor sit amet, consectetur adipiscing elit integer."), React.createElement("footer", {
      className: "blockquote-footer"
    }, "Someone famous in", React.createElement("cite", {
      title: "Source Title"
    }, "Source Title"))))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "example"
    }, React.createElement("blockquote", {
      className: "blockquote custom-blockquote blockquote-info"
    }, React.createElement("p", {
      className: "mb-0"
    }, "Lorem ipsum dolor sit amet, consectetur adipiscing elit integer."), React.createElement("footer", {
      className: "blockquote-footer"
    }, "Someone famous in", React.createElement("cite", {
      title: "Source Title"
    }, "Source Title"))))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "example"
    }, React.createElement("blockquote", {
      className: "blockquote custom-blockquote blockquote-warning"
    }, React.createElement("p", {
      className: "mb-0"
    }, "Lorem ipsum dolor sit amet, consectetur adipiscing elit integer."), React.createElement("footer", {
      className: "blockquote-footer"
    }, "Someone famous in", React.createElement("cite", {
      title: "Source Title"
    }, "Source Title"))))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "example"
    }, React.createElement("blockquote", {
      className: "blockquote custom-blockquote blockquote-danger"
    }, React.createElement("p", {
      className: "mb-0"
    }, "Lorem ipsum dolor sit amet, consectetur adipiscing elit integer."), React.createElement("footer", {
      className: "blockquote-footer"
    }, "Someone famous in", React.createElement("cite", {
      title: "Source Title"
    }, "Source Title")))))))))))));
  }

}

module.exportDefault(BlockquotesExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"breadcrumbs.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/structure/breadcrumbs.jsx                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class BreadcrumbsExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "Breadcrumbs"), React.createElement("ol", {
      className: "breadcrumb"
    }, React.createElement("li", {
      className: "breadcrumb-item"
    }, React.createElement("a", {
      href: "../index.html"
    }, "Home")), React.createElement("li", {
      className: "breadcrumb-item active"
    }, "Structure")), React.createElement("div", {
      className: "page-header-actions"
    }, React.createElement("form", null, React.createElement("div", {
      className: "input-search input-search-dark"
    }, React.createElement("i", {
      className: "input-search-icon wb-search",
      "aria-hidden": "true"
    }), React.createElement("input", {
      type: "text",
      className: "form-control",
      name: true,
      placeholder: "Search..."
    }))))), React.createElement("div", {
      className: "page-content"
    }, React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-body container-fluid"
    }, React.createElement("div", {
      className: "row row-lg"
    }, React.createElement("div", {
      className: "col-xl-4 col-md-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Default Style"), React.createElement("p", null, "Separators are automatically added in CSS through ", React.createElement("code", null, ":before"), "                  and content."), React.createElement("div", {
      className: "example"
    }, React.createElement("ol", {
      className: "breadcrumb"
    }, React.createElement("li", {
      className: "breadcrumb-item"
    }, React.createElement("a", {
      href: "javascript:void(0)"
    }, "Home")), React.createElement("li", {
      className: "breadcrumb-item active"
    }, "Library")), React.createElement("ol", {
      className: "breadcrumb"
    }, React.createElement("li", {
      className: "breadcrumb-item"
    }, React.createElement("a", {
      href: "javascript:void(0)"
    }, "Home")), React.createElement("li", {
      className: "breadcrumb-item"
    }, React.createElement("a", {
      href: "javascript:void(0)"
    }, "Library")), React.createElement("li", {
      className: "breadcrumb-item active"
    }, "Data"))))), React.createElement("div", {
      className: "col-xl-4 col-md-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Arrow Style"), React.createElement("p", null, "Add modifier class ", React.createElement("code", null, ".breadcrumb-arrow"), " to switch slash or arrow style."), React.createElement("div", {
      className: "example"
    }, React.createElement("ol", {
      className: "breadcrumb breadcrumb-arrow"
    }, React.createElement("li", {
      className: "breadcrumb-item"
    }, React.createElement("a", {
      href: "javascript:void(0)"
    }, "Home")), React.createElement("li", {
      className: "breadcrumb-item active"
    }, "Library")), React.createElement("ol", {
      className: "breadcrumb breadcrumb-arrow"
    }, React.createElement("li", {
      className: "breadcrumb-item"
    }, React.createElement("a", {
      href: "javascript:void(0)"
    }, "Home")), React.createElement("li", {
      className: "breadcrumb-item"
    }, React.createElement("a", {
      href: "javascript:void(0)"
    }, "Library")), React.createElement("li", {
      className: "breadcrumb-item active"
    }, "Data"))))), React.createElement("div", {
      className: "col-xl-4 col-md-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Items With Icon"), React.createElement("p", null, "An icon used in breadcrumb to convey that it\u2019s an home page, with additional ", React.createElement("code", null, ".wb-home"), " class."), React.createElement("div", {
      className: "example"
    }, React.createElement("ol", {
      className: "breadcrumb"
    }, React.createElement("li", {
      className: "breadcrumb-item"
    }, React.createElement("a", {
      className: "icon wb-home",
      href: "javascript:void(0)"
    }, "Home")), React.createElement("li", {
      className: "breadcrumb-item active"
    }, "Data")), React.createElement("ol", {
      className: "breadcrumb breadcrumb-arrow"
    }, React.createElement("li", {
      className: "breadcrumb-item"
    }, React.createElement("a", {
      className: "icon wb-home",
      href: "javascript:void(0)"
    }, "Home")), React.createElement("li", {
      className: "breadcrumb-item"
    }, React.createElement("a", {
      href: "javascript:void(0)"
    }, "Library")), React.createElement("li", {
      className: "breadcrumb-item active"
    }, "Data"))))), React.createElement("div", {
      className: "col-xl-4 col-md-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Accessibility"), React.createElement("p", null, "Use this snippet to make breadcrumbs more accessible. Adding the role attribute gives context to a screen reader. The ", React.createElement("code", null, "aria-label"), "                  attribute will allow a screen reader to call out what the component is to the user."), React.createElement("div", {
      className: "example"
    }, React.createElement("ol", {
      className: "breadcrumb",
      "aria-label": "breadcrumbs",
      role: "menubar"
    }, React.createElement("li", {
      className: "breadcrumb-item"
    }, React.createElement("a", {
      href: "javascript:void(0)"
    }, "Home")), React.createElement("li", {
      className: "breadcrumb-item"
    }, React.createElement("a", {
      href: "javascript:void(0)"
    }, "Getting Started")), React.createElement("li", {
      className: "breadcrumb-item"
    }, React.createElement("a", {
      href: "javascript:void(0)"
    }, "Library")), React.createElement("li", {
      className: "breadcrumb-item disable",
      "aria-disabled": "true"
    }, React.createElement("a", {
      href: "javascript:void(0)"
    }, "Customize")), React.createElement("li", {
      className: "breadcrumb-item active"
    }, "Data"))))))))));
  }

}

module.exportDefault(BreadcrumbsExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"chat.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/structure/chat.jsx                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class ChatExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "Chat"), React.createElement("ol", {
      className: "breadcrumb"
    }, React.createElement("li", {
      className: "breadcrumb-item"
    }, React.createElement("a", {
      href: "../index.html"
    }, "Home")), React.createElement("li", {
      className: "breadcrumb-item active"
    }, "Structure")), React.createElement("div", {
      className: "page-header-actions"
    }, React.createElement("form", null, React.createElement("div", {
      className: "input-search input-search-dark"
    }, React.createElement("i", {
      className: "input-search-icon wb-search",
      "aria-hidden": "true"
    }), React.createElement("input", {
      type: "text",
      className: "form-control",
      name: true,
      placeholder: "Search..."
    }))))), React.createElement("div", {
      className: "page-content"
    }, React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-body"
    }, React.createElement("div", {
      className: "chat-box"
    }, React.createElement("div", {
      className: "chats"
    }, React.createElement("div", {
      className: "chat"
    }, React.createElement("div", {
      className: "chat-avatar"
    }, React.createElement("a", {
      className: "avatar",
      "data-toggle": "tooltip",
      href: "#",
      "data-placement": "right",
      title: "June Lane"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/4.jpg",
      alt: "June Lane"
    }))), React.createElement("div", {
      className: "chat-body"
    }, React.createElement("div", {
      className: "chat-content"
    }, React.createElement("p", null, "Hello. What can I do for you?"), React.createElement("time", {
      className: "chat-time",
      dateTime: "2017-06-01T08:30"
    }, "8:30 am")))), React.createElement("div", {
      className: "chat chat-left"
    }, React.createElement("div", {
      className: "chat-avatar"
    }, React.createElement("a", {
      className: "avatar",
      "data-toggle": "tooltip",
      href: "#",
      "data-placement": "left",
      title: "Edward Fletcher"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/5.jpg",
      alt: "Edward Fletcher"
    }))), React.createElement("div", {
      className: "chat-body"
    }, React.createElement("div", {
      className: "chat-content"
    }, React.createElement("p", null, "I'm just looking around."), React.createElement("p", null, "Will you tell me something about yourself? "), React.createElement("time", {
      className: "chat-time",
      dateTime: "2017-06-01T08:35"
    }, "8:35 am")), React.createElement("div", {
      className: "chat-content"
    }, React.createElement("p", null, "Are you there? That time!"), React.createElement("time", {
      className: "chat-time",
      dateTime: "2017-06-01T08:40"
    }, "8:40 am")))), React.createElement("div", {
      className: "chat"
    }, React.createElement("div", {
      className: "chat-avatar"
    }, React.createElement("a", {
      className: "avatar",
      "data-toggle": "tooltip",
      href: "#",
      "data-placement": "right",
      title: "June Lane"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/4.jpg",
      alt: "June Lane"
    }))), React.createElement("div", {
      className: "chat-body"
    }, React.createElement("div", {
      className: "chat-content"
    }, React.createElement("p", null, "Where?"), React.createElement("time", {
      className: "chat-time",
      dateTime: "2017-06-01T08:35"
    }, "8:35 am")), React.createElement("div", {
      className: "chat-content"
    }, React.createElement("p", null, "OK, my name is Limingqiang. I like singing, playing basketballand so on."), React.createElement("time", {
      className: "chat-time",
      dateTime: "2017-06-01T08:42"
    }, "8:42 am")))), React.createElement("div", {
      className: "chat chat-left"
    }, React.createElement("div", {
      className: "chat-avatar"
    }, React.createElement("a", {
      className: "avatar",
      "data-toggle": "tooltip",
      href: "#",
      "data-placement": "left",
      title: "Edward Fletcher"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/5.jpg",
      alt: "Edward Fletcher"
    }))), React.createElement("div", {
      className: "chat-body"
    }, React.createElement("div", {
      className: "chat-content"
    }, React.createElement("p", null, "You wait for notice.")), React.createElement("div", {
      className: "chat-content"
    }, React.createElement("p", null, "Consectetuorem ipsum dolor sit?"), React.createElement("time", {
      className: "chat-time",
      dateTime: "2017-06-01T08:50"
    }, "8:50 am")), React.createElement("div", {
      className: "chat-content"
    }, React.createElement("p", null, "OK?"), React.createElement("time", {
      className: "chat-time",
      dateTime: "2017-06-01T08:55"
    }, "8:55 am")))), React.createElement("div", {
      className: "chat"
    }, React.createElement("div", {
      className: "chat-avatar"
    }, React.createElement("a", {
      className: "avatar",
      "data-toggle": "tooltip",
      href: "#",
      "data-placement": "right",
      title: "June Lane"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/4.jpg",
      alt: "June Lane"
    }))), React.createElement("div", {
      className: "chat-body"
    }, React.createElement("div", {
      className: "chat-content"
    }, React.createElement("p", null, "OK!"), React.createElement("time", {
      className: "chat-time",
      dateTime: "2017-06-01T09:00"
    }, "9:00 am"))))))), React.createElement("div", {
      className: "panel-footer"
    }, React.createElement("form", null, React.createElement("div", {
      className: "input-group"
    }, React.createElement("input", {
      type: "text",
      className: "form-control",
      placeholder: "Say something"
    }), React.createElement("span", {
      className: "input-group-btn"
    }, React.createElement("button", {
      className: "btn btn-primary",
      type: "button"
    }, "Send"))))))));
  }

}

module.exportDefault(ChatExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"comments.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/structure/comments.jsx                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class CommentsExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "Comments"), React.createElement("ol", {
      className: "breadcrumb"
    }, React.createElement("li", {
      className: "breadcrumb-item"
    }, React.createElement("a", {
      href: "../index.html"
    }, "Home")), React.createElement("li", {
      className: "breadcrumb-item active"
    }, "Structure")), React.createElement("div", {
      className: "page-header-actions"
    }, React.createElement("form", null, React.createElement("div", {
      className: "input-search input-search-dark"
    }, React.createElement("i", {
      className: "input-search-icon wb-search",
      "aria-hidden": "true"
    }), React.createElement("input", {
      type: "text",
      className: "form-control",
      name: true,
      placeholder: "Search..."
    }))))), React.createElement("div", {
      className: "page-content"
    }, React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-heading"
    }, React.createElement("h3", {
      className: "panel-title"
    }, "Comments")), React.createElement("div", {
      className: "panel-body container-fluid"
    }, React.createElement("p", null, "User comment style for using various pages of components (like blog, tweets, etc) that feature a left- or right-aligned avatar avatar-lgalongside textual content. You can use the basic class ", React.createElement("code", null, ".comments"), "."), React.createElement("div", {
      className: "row row-lg"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Avatar"), React.createElement("p", null, "A comment can contain an image or avatar"), React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "comment media"
    }, React.createElement("div", {
      className: "pr-20"
    }, React.createElement("a", {
      className: "avatar avatar-lg",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/1.jpg",
      alt: "..."
    }))), React.createElement("div", {
      className: "comment-body media-body"
    }, React.createElement("a", {
      className: "comment-author",
      href: "javascript:void(0)"
    }, "Herman Beck")))))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Metadata"), React.createElement("p", null, "A comment can contain metadata about the comment, an arbitrary amount of metadata may be defined."), React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "comment media"
    }, React.createElement("div", {
      className: "pr-20"
    }, React.createElement("a", {
      className: "avatar avatar-lg",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/2.jpg",
      alt: "..."
    }))), React.createElement("div", {
      className: "comment-body media-body"
    }, React.createElement("a", {
      className: "comment-author",
      href: "javascript:void(0)"
    }, "Mary Adams"), React.createElement("div", {
      className: "comment-meta"
    }, React.createElement("span", {
      className: "date"
    }, "Just now"))))))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Actions"), React.createElement("p", null, "A comment can contain an list of actions a user may perform related to this comment."), React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "comment media"
    }, React.createElement("div", {
      className: "pr-20"
    }, React.createElement("a", {
      className: "avatar avatar-lg",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/3.jpg",
      alt: "..."
    }))), React.createElement("div", {
      className: "comment-body media-body"
    }, React.createElement("a", {
      className: "comment-author",
      href: "javascript:void(0)"
    }, "Caleb Richards"), React.createElement("div", {
      className: "comment-content"
    }, React.createElement("p", null, "Elliot you are always so right :)")), React.createElement("div", {
      className: "comment-actions"
    }, React.createElement("a", {
      className: "text-like icon wb-heart",
      href: "javascript:void(0)",
      role: "button"
    }), React.createElement("a", {
      href: "javascript:void(0)",
      role: "button"
    }, "Reply"), React.createElement("a", {
      href: "javascript:void(0)",
      role: "button"
    }, "Edit"))))))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Reply Form"), React.createElement("p", null, "A comment can contain a form to reply to a comment. This may have arbitrary content."), React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "comment media"
    }, React.createElement("div", {
      className: "pr-20"
    }, React.createElement("a", {
      className: "avatar avatar-lg",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/4.jpg",
      alt: "..."
    }))), React.createElement("div", {
      className: "comment-body media-body"
    }, React.createElement("a", {
      className: "comment-author",
      href: "javascript:void(0)"
    }, "June Lane"), React.createElement("div", {
      className: "comment-meta"
    }, React.createElement("span", {
      className: "date"
    }, "5 days ago")), React.createElement("div", {
      className: "comment-content"
    }, React.createElement("p", null, "Dude, this is awesome. Thanks so much")), React.createElement("div", {
      className: "comment-actions"
    }, React.createElement("a", {
      className: "active",
      href: "javascript:void(0)",
      role: "button"
    }, "Reply")), React.createElement("form", {
      className: "comment-reply",
      action: "#",
      method: "post"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("textarea", {
      className: "form-control",
      rows: 5,
      placeholder: "Comment here",
      defaultValue: ""
    })), React.createElement("div", {
      className: "form-group"
    }, React.createElement("button", {
      type: "submit",
      className: "btn btn-primary"
    }, "Reply"), React.createElement("button", {
      type: "button",
      className: "btn btn-link blue-grey-500"
    }, "Close"))))))))))), React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-body"
    }, React.createElement("div", {
      className: "comments mx-20"
    }, React.createElement("h3", null, "Comments"), React.createElement("div", {
      className: "comment media"
    }, React.createElement("div", {
      className: "pr-20"
    }, React.createElement("a", {
      className: "avatar avatar-lg",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/5.jpg",
      alt: "..."
    }))), React.createElement("div", {
      className: "media-body"
    }, React.createElement("div", {
      className: "comment-body"
    }, React.createElement("a", {
      className: "comment-author",
      href: "javascript:void(0)"
    }, "Edward Fletcher"), React.createElement("div", {
      className: "comment-meta"
    }, React.createElement("span", {
      className: "date"
    }, "Yesterday at 12:30AM")), React.createElement("div", {
      className: "comment-content"
    }, React.createElement("p", null, "eniam ipsum pariatur anim labore sunt duis officia labore. Occaecat sunt ipsum eu ad nostrud do in. Ea aliqua officia magna laborum quis proident. Irure ullamco aliquip esse ipsum. Exercitation enim dolore commodo mollit non laboris et velit adipisicing. Nulla labore sint aliqua minim ad qui. Minim sint aliqua magna anim duis laborum quis officia. Veniam nostrud aliqua in anim. Pariatur elit ad ea incididunt aliquip. Mollit Lorem in magna magna irure commodo do est ullamco.")), React.createElement("div", {
      className: "comment-actions"
    }, React.createElement("a", {
      className: "text-like active icon wb-heart",
      href: "javascript:void(0)",
      role: "button"
    }), React.createElement("a", {
      href: "javascript:void(0)",
      role: "button"
    }, "Reply"))), React.createElement("div", {
      className: "comments"
    }, React.createElement("div", {
      className: "comment media"
    }, React.createElement("div", {
      className: "pr-20"
    }, React.createElement("a", {
      className: "avatar avatar-lg",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/6.jpg",
      alt: "..."
    }))), React.createElement("div", {
      className: "comment-body media-body"
    }, React.createElement("a", {
      className: "comment-author",
      href: "javascript:void(0)"
    }, "Crystal Bates"), React.createElement("div", {
      className: "comment-meta"
    }, React.createElement("span", {
      className: "date"
    }, "Just now")), React.createElement("div", {
      className: "comment-content"
    }, React.createElement("p", null, "Fletcher you are always so right :)")), React.createElement("div", {
      className: "comment-actions"
    }, React.createElement("a", {
      className: "text-like icon wb-heart",
      href: "javascript:void(0)",
      role: "button"
    }), React.createElement("a", {
      href: "javascript:void(0)",
      role: "button"
    }, "Reply")))), React.createElement("div", {
      className: "comment media"
    }, React.createElement("div", {
      className: "pr-20"
    }, React.createElement("a", {
      className: "avatar avatar-lg",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/5.jpg",
      alt: "..."
    }))), React.createElement("div", {
      className: "comment-body media-body"
    }, React.createElement("a", {
      className: "comment-author",
      href: "javascript:void(0)"
    }, "Edward Fletcher"), React.createElement("div", {
      className: "comment-meta"
    }, React.createElement("span", {
      className: "date"
    }, "Just now")), React.createElement("div", {
      className: "comment-content"
    }, React.createElement("p", null, "Yes, That's really awesome!")), React.createElement("div", {
      className: "comment-actions"
    }, React.createElement("a", {
      className: "text-like icon wb-heart",
      href: "javascript:void(0)",
      role: "button"
    }), React.createElement("a", {
      href: "javascript:void(0)",
      role: "button"
    }, "Reply"))))))), React.createElement("div", {
      className: "comment media"
    }, React.createElement("div", {
      className: "pr-20"
    }, React.createElement("a", {
      className: "avatar avatar-lg",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/7.jpg",
      alt: "..."
    }))), React.createElement("div", {
      className: "comment-body media-body"
    }, React.createElement("a", {
      className: "comment-author",
      href: "javascript:void(0)"
    }, "Nathan Watts"), React.createElement("div", {
      className: "comment-meta"
    }, React.createElement("span", {
      className: "date"
    }, "5 days ago")), React.createElement("div", {
      className: "comment-content"
    }, React.createElement("p", null, "Dude, this is awesome. Thanks so much")), React.createElement("div", {
      className: "comment-actions"
    }, React.createElement("a", {
      className: "text-like icon wb-heart",
      href: "javascript:void(0)",
      role: "button"
    }), React.createElement("a", {
      className: "active",
      href: "javascript:void(0)",
      role: "button"
    }, "Reply")), React.createElement("form", {
      className: "comment-reply",
      action: "#",
      method: "post"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("textarea", {
      className: "form-control",
      rows: 5,
      placeholder: "Comment here",
      defaultValue: ""
    })), React.createElement("div", {
      className: "form-group"
    }, React.createElement("button", {
      type: "submit",
      className: "btn btn-primary"
    }, "Comment"), React.createElement("button", {
      type: "button",
      className: "btn btn-link blue-grey-500"
    }, "close"))))), React.createElement("div", {
      className: "comment media"
    }, React.createElement("div", {
      className: "pr-20"
    }, React.createElement("a", {
      className: "avatar avatar-lg",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/8.jpg",
      alt: "..."
    }))), React.createElement("div", {
      className: "comment-body media-body"
    }, React.createElement("a", {
      className: "comment-author",
      href: "javascript:void(0)"
    }, "Heather Harper"), React.createElement("div", {
      className: "comment-meta"
    }, React.createElement("span", {
      className: "date"
    }, "5 days ago")), React.createElement("div", {
      className: "comment-content"
    }, React.createElement("p", null, "Lorem ipsum Ullamco fugiat esse culpa consequat velit veniam incididunt incididunt nostrud labore nostrud sit dolore in nulla sit non laborum.")), React.createElement("div", {
      className: "comment-actions"
    }, React.createElement("a", {
      className: "text-like icon wb-heart",
      href: "javascript:void(0)",
      role: "button"
    }), React.createElement("a", {
      href: "javascript:void(0)",
      role: "button"
    }, "Reply")))), React.createElement("form", {
      className: "comments-add mt-35",
      action: "#",
      method: "post"
    }, React.createElement("h3", {
      className: "mb-35"
    }, "Leave A Reply"), React.createElement("div", {
      className: "form-group"
    }, React.createElement("input", {
      type: "text",
      className: "form-control",
      name: "name",
      placeholder: "Name"
    })), React.createElement("div", {
      className: "form-group"
    }, React.createElement("input", {
      type: "email",
      className: "form-control",
      name: "email",
      placeholder: "Email"
    })), React.createElement("div", {
      className: "form-group"
    }, React.createElement("input", {
      type: "text",
      className: "form-control",
      name: "email",
      placeholder: "Website"
    })), React.createElement("div", {
      className: "form-group"
    }, React.createElement("textarea", {
      className: "form-control",
      rows: 5,
      placeholder: "Comment here",
      defaultValue: ""
    })), React.createElement("div", {
      className: "form-group"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-primary"
    }, "Comment"))))))));
  }

}

module.exportDefault(CommentsExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"cover.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/structure/cover.jsx                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class CoverExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "Cover"), React.createElement("ol", {
      className: "breadcrumb"
    }, React.createElement("li", {
      className: "breadcrumb-item"
    }, React.createElement("a", {
      href: "../index.html"
    }, "Home")), React.createElement("li", {
      className: "breadcrumb-item active"
    }, "Structure")), React.createElement("div", {
      className: "page-header-actions"
    }, React.createElement("form", null, React.createElement("div", {
      className: "input-search input-search-dark"
    }, React.createElement("i", {
      className: "input-search-icon wb-search",
      "aria-hidden": "true"
    }), React.createElement("input", {
      type: "text",
      className: "form-control",
      name: true,
      placeholder: "Search..."
    }))))), React.createElement("div", {
      className: "page-content"
    }, React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-body container-fluid"
    }, React.createElement("div", {
      className: "row row-lg"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Video & Audio"), React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "cover player",
      "data-plugin": "plyr"
    }, React.createElement("video", {
      poster: "../../assets/examples/images/poster.jpg",
      controls: true,
      crossOrigin: true
    }, React.createElement("source", {
      type: "video/mp4",
      src: "https://cdn.selz.com/plyr/1.0/movie.mp4"
    }), React.createElement("source", {
      type: "video/webm",
      src: "https://cdn.selz.com/plyr/1.0/movie.webm"
    }), React.createElement("track", {
      kind: "captions",
      label: "English",
      srcLang: "en",
      src: "//cdn.selz.com/plyr/1.0/en.vtt",
      default: true
    }), React.createElement("a", {
      href: "https://cdn.selz.com/plyr/1.0/movie.mp4"
    }, "Download")))), React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "cover player",
      "data-plugin": "plyr"
    }, React.createElement("audio", {
      controls: true,
      style: {
        height: 40
      }
    }, React.createElement("source", {
      type: "audio/mp3",
      src: "https://cdn.selz.com/plyr/1.0/logistics-96-sample.mp3"
    }), React.createElement("source", {
      type: "audio/ogg",
      src: "https://cdn.selz.com/plyr/1.0/logistics-96-sample.ogg"
    }), React.createElement("a", {
      href: "https://cdn.selz.com/plyr/1.0/logistics-96-sample.mp3"
    }, "Download")))))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Quote"), React.createElement("p", null, "Add the ", React.createElement("code", null, ".cover-quote"), " class to a text."), React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "cover"
    }, React.createElement("blockquote", {
      className: "blockquote cover-quote"
    }, "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer nec odio. "))), React.createElement("p", null, "Quote with background"), React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "cover"
    }, React.createElement("div", {
      className: "cover-background py-30",
      style: {
        backgroundImage: 'url("http://getbootstrapadmin.com/remark/global/photos/placeholder.png")'
      }
    }, React.createElement("blockquote", {
      className: "blockquote cover-quote white"
    }, "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer nec odio. ")))))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Iframe"), React.createElement("p", null, "Add the ", React.createElement("code", null, ".cover-iframe"), " class to the iframe item."), React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "cover"
    }, React.createElement("iframe", {
      className: "cover-iframe h-500 h-only-sm-300 h-only-xs-300",
      src: "http://www.youtube.com/embed/YE7VzlLtp-4?autoplay=0&controls=0&showinfo=0&rel=0&loop=1&modestbranding=1&wmode=transparent&enablejsapi=1&api=1"
    }))))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Background Image"), React.createElement("p", null, "Add the ", React.createElement("code", null, ".cover-background"), " class to an element with a background image."), React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "cover h-500 h-only-sm-300 h-only-xs-300"
    }, React.createElement("div", {
      className: "cover-background",
      style: {
        backgroundImage: 'url("http://getbootstrapadmin.com/remark/global/photos/placeholder.png")'
      }
    }))))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "example-wrap m-sm-0"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Responsive Image"), React.createElement("p", null, "Add the ", React.createElement("code", null, ".cover-image"), " class to a responsive image."), React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "cover"
    }, React.createElement("img", {
      className: "cover-image",
      src: "http://getbootstrapadmin.com/remark/global/photos/placeholder.png",
      alt: "..."
    }))))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Gallery"), React.createElement("p", null, "Add the ", React.createElement("code", null, ".cover-gallery"), " class to a gallery."), React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "cover"
    }, React.createElement("div", {
      className: "cover-gallery carousel slide",
      id: "cover-gallery-example",
      "data-ride": "carousel"
    }, React.createElement("ol", {
      className: "carousel-indicators"
    }, React.createElement("li", {
      className: "active",
      "data-target": "#cover-gallery-example",
      "data-slide-to": 0
    }), React.createElement("li", {
      "data-target": "#cover-gallery-example",
      "data-slide-to": 1
    }), React.createElement("li", {
      "data-target": "#cover-gallery-example",
      "data-slide-to": 2
    })), React.createElement("div", {
      className: "carousel-inner",
      role: "listbox"
    }, React.createElement("div", {
      className: "carousel-item active"
    }, React.createElement("img", {
      className: "h-full",
      alt: "First slide",
      src: "http://getbootstrapadmin.com/remark/global/photos/placeholder.png"
    })), React.createElement("div", {
      className: "carousel-item"
    }, React.createElement("img", {
      className: "h-full",
      alt: "Second  slide",
      src: "http://getbootstrapadmin.com/remark/global/photos/placeholder.png"
    })), React.createElement("div", {
      className: "carousel-item"
    }, React.createElement("img", {
      className: "h-full",
      alt: "Third  slide",
      src: "http://getbootstrapadmin.com/remark/global/photos/placeholder.png"
    }))), React.createElement("a", {
      className: "carousel-control-prev",
      href: "#cover-gallery-example",
      "data-slide": "prev",
      role: "button"
    }, React.createElement("span", {
      className: "carousel-control-prev-icon wb-chevron-left",
      "aria-hidden": "true"
    }), React.createElement("span", {
      className: "sr-only"
    }, "Previous")), React.createElement("a", {
      className: "carousel-control-next",
      href: "#cover-gallery-example",
      "data-slide": "next",
      role: "button"
    }, React.createElement("span", {
      className: "carousel-control-next-icon wb-chevron-right",
      "aria-hidden": "true"
    }), React.createElement("span", {
      className: "sr-only"
    }, "Next"))))))))))));
  }

}

module.exportDefault(CoverExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"media.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/structure/media.jsx                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class MediaExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "Media"), React.createElement("ol", {
      className: "breadcrumb"
    }, React.createElement("li", {
      className: "breadcrumb-item"
    }, React.createElement("a", {
      href: "../index.html"
    }, "Home")), React.createElement("li", {
      className: "breadcrumb-item active"
    }, "Structure")), React.createElement("div", {
      className: "page-header-actions"
    }, React.createElement("form", null, React.createElement("div", {
      className: "input-search input-search-dark"
    }, React.createElement("i", {
      className: "input-search-icon wb-search",
      "aria-hidden": "true"
    }), React.createElement("input", {
      type: "text",
      className: "form-control",
      name: true,
      placeholder: "Search..."
    }))))), React.createElement("div", {
      className: "page-content"
    }, React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-body container-fluid"
    }, React.createElement("div", {
      className: "row row-lg"
    }, React.createElement("div", {
      className: "col-xl-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Default Media Object"), React.createElement("p", null, "The default media displays a media object (images, video, audio) to the left or right of a content block."), React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "media"
    }, React.createElement("div", {
      className: "pr-20"
    }, React.createElement("a", {
      href: "javascript:void(0)"
    }, React.createElement("img", {
      className: "w-120",
      src: "http://getbootstrapadmin.com/remark/global/photos/placeholder.png",
      alt: "..."
    }))), React.createElement("div", {
      className: "media-body"
    }, React.createElement("h4", {
      className: "mt-0 mb-5"
    }, "Media Heading"), "Diogenem. Utuntur iudicabit meo dicent idem tenere infinitis naturae diligant attico, placet homero futuris cognita platone inesse adolescens optio, ennius ego voluptati.")), React.createElement("div", {
      className: "media mt-20"
    }, React.createElement("div", {
      className: "pr-20"
    }, React.createElement("a", {
      href: "javascript:void(0)"
    }, React.createElement("img", {
      className: "w-120",
      src: "http://getbootstrapadmin.com/remark/global/photos/placeholder.png",
      alt: "..."
    }))), React.createElement("div", {
      className: "media-body"
    }, React.createElement("h4", {
      className: "mt-0 mb-5"
    }, "Media Heading"), "Epicureum, uti cognitionem novi inprobitas angatur assentior, videtisne dicturum meam praeterierunt desistemus laudatur gravissimis. Simul pertineant, libris timiditatem potiendi.", React.createElement("div", {
      className: "media mt-20"
    }, React.createElement("div", {
      className: "pr-20"
    }, React.createElement("a", {
      href: "javascript:void(0)"
    }, React.createElement("img", {
      className: "w-120",
      src: "http://getbootstrapadmin.com/remark/global/photos/placeholder.png",
      alt: "..."
    }))), React.createElement("div", {
      className: "media-body"
    }, React.createElement("h4", {
      className: "mt-0 mb-5"
    }, "Media Heading"), "Fecerint iniuste, vituperatoribus aequum videbitur ignem, eaque certissimam asperum adhuc oratoribus pueriliter mediocrem. Dirigentur. Ocurreret turpis quiete tanta alter.")))), React.createElement("div", {
      className: "media mt-20"
    }, React.createElement("div", {
      className: "pr-20"
    }, React.createElement("a", {
      href: "javascript:void(0)"
    }, React.createElement("img", {
      className: "w-120",
      src: "http://getbootstrapadmin.com/remark/global/photos/placeholder.png",
      alt: "..."
    }))), React.createElement("div", {
      className: "media-body"
    }, React.createElement("h4", {
      className: "mt-0 mb-5"
    }, "Media Heading"), "Approbantibus aequi eitam miser omittam relinqueret adolescens statu cognitionem dixisset, vacillare plus atomus, inanes putamus aliquod, praeterierunt sentiant teneam universas."))))), React.createElement("div", {
      className: "col-xl-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Media List"), React.createElement("p", null, "With a bit of extra markup, you can use media inside list (useful for comment threads or articles lists)."), React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "media"
    }, React.createElement("div", {
      className: "pr-20"
    }, React.createElement("a", {
      href: "javascript:void(0)"
    }, React.createElement("img", {
      className: "w-120",
      src: "http://getbootstrapadmin.com/remark/global/photos/placeholder.png",
      alt: "..."
    }))), React.createElement("div", {
      className: "media-body"
    }, React.createElement("h4", {
      className: "mt-0 mb-5"
    }, "Media Heading"), "Democritum id tenebo non est nostrud id nulla ullamco ut cillum consectetur aliquip ex cillum ut consequat velit elit eu veniam elit esse deserunt esse.", React.createElement("div", {
      className: "media mt-20"
    }, React.createElement("div", {
      className: "pr-20"
    }, React.createElement("a", {
      href: "javascript:void(0)"
    }, React.createElement("img", {
      className: "w-120",
      src: "http://getbootstrapadmin.com/remark/global/photos/placeholder.png",
      alt: "..."
    }))), React.createElement("div", {
      className: "media-body"
    }, React.createElement("h4", {
      className: "mt-0 mb-5"
    }, "Nested Media Heading"), "Grata quidam levis suspicor sententiae videtisne traditur centurionum rerum eram pellat, sublata maiorem porrecta ferreum. Unam soliditatem oritur omnibus inane faciend.")), React.createElement("div", {
      className: "media mt-20"
    }, React.createElement("div", {
      className: "pr-20"
    }, React.createElement("a", {
      href: "javascript:void(0)"
    }, React.createElement("img", {
      className: "w-120",
      src: "http://getbootstrapadmin.com/remark/global/photos/placeholder.png",
      alt: "..."
    }))), React.createElement("div", {
      className: "media-body"
    }, React.createElement("h4", {
      className: "mt-0 mb-5"
    }, "Nested Media Heading"), "Delectu, commenticiam potius non poetarum iucunditas corrupte eaque eae, earum adolescens nihilo individua, malunt congressus his, modus asperum desideret moveat degendae amicitiae.")))), React.createElement("div", {
      className: "media mt-20"
    }, React.createElement("div", {
      className: "pr-20"
    }, React.createElement("a", {
      href: "javascript:void(0)"
    }, React.createElement("img", {
      className: "w-120",
      src: "http://getbootstrapadmin.com/remark/global/photos/placeholder.png",
      alt: "..."
    }))), React.createElement("div", {
      className: "media-body"
    }, React.createElement("h4", {
      className: "mt-0 mb-5"
    }, "Nested Media Heading"), "Iudicat infinito nominant consuetudine intervalla malint res quosdam postea meque, voluptatis multam degendae leguntur ipsi democriti iucunditatem optimus expedita errore.")))))), React.createElement("div", {
      className: "row row-lg"
    }, React.createElement("div", {
      className: "col-xl-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Media List With Avatar"), React.createElement("p", null, "This media displayed by avatar style which can be used in social user profile page or projects."), React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "media"
    }, React.createElement("div", {
      className: "pr-20"
    }, React.createElement("a", {
      className: "avatar avatar-lg",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/2.jpg",
      alt: "..."
    }))), React.createElement("div", {
      className: "media-body"
    }, React.createElement("h4", {
      className: "mt-0 mb-5"
    }, "Media Heading"), "Gravissimis iniurias gravissimis admodum puto fidelissimae veterum crudeli desiderat, libenter vituperata, discordia maiorum amori oblique videor. Perfruique commodis atque servare.")), React.createElement("div", {
      className: "media mt-20"
    }, React.createElement("div", {
      className: "pr-20"
    }, React.createElement("a", {
      className: "avatar avatar-lg",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/3.jpg",
      alt: "..."
    }))), React.createElement("div", {
      className: "media-body"
    }, React.createElement("h4", {
      className: "mt-0 mb-5"
    }, "Nested Media Heading"), "Testibus intellegamus gerendarum fecisse, iactare sanguinem inopem inscientia, meo situm, detrimenti hominibus, privatione praetore que affectus egregios audaces percipit cernantur.")), React.createElement("div", {
      className: "media mt-20"
    }, React.createElement("div", {
      className: "pr-20"
    }, React.createElement("a", {
      className: "avatar avatar-lg",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/4.jpg",
      alt: "..."
    }))), React.createElement("div", {
      className: "media-body"
    }, React.createElement("h4", {
      className: "mt-0 mb-5"
    }, "Nested Media Heading"), "Aliquod virtus admonitionem cyrenaicos maximam, unam vivatur praeterea partis migrare cui adhibenda ludicra industriae, ratio pro, perspiciatis aptior amicis videretur vendibiliora.")), React.createElement("div", {
      className: "media mt-20"
    }, React.createElement("div", {
      className: "pr-20"
    }, React.createElement("a", {
      className: "avatar avatar-lg",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/5.jpg",
      alt: "..."
    }))), React.createElement("div", {
      className: "media-body"
    }, React.createElement("h4", {
      className: "mt-0 mb-5"
    }, "Nested Media Heading"), "Quaeso privamur, honeste paulo, offendimur comparandae dum inpendente ruinae liber ferrentur quietus. Quondam laboriosam impedit mortem cogitarent te, talem modus existimare locupletiorem."))))), React.createElement("div", {
      className: "col-xl-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Media Object Sizes"), React.createElement("p", null, "Add another four optional classes to change a media object\u2019s size."), React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "media"
    }, React.createElement("div", {
      className: "pr-20"
    }, React.createElement("a", {
      href: "javascript:void(0)"
    }, React.createElement("img", {
      className: "w-60",
      src: "http://getbootstrapadmin.com/remark/global/photos/placeholder.png",
      alt: "..."
    }))), React.createElement("div", {
      className: "media-body"
    }, React.createElement("h4", {
      className: "mt-0 mb-5"
    }, "Media Heading"), "Admonere ludus scriptorem malo denique tertium totum omne alliciat depravare, suas iudico d plurimum appellant solitudo patrius, arridens numquid causa aristoteli veniamus reformidans.")), React.createElement("div", {
      className: "media mt-20"
    }, React.createElement("div", {
      className: "pr-20"
    }, React.createElement("a", {
      href: "javascript:void(0)"
    }, React.createElement("img", {
      className: "w-80",
      src: "http://getbootstrapadmin.com/remark/global/photos/placeholder.png",
      alt: "..."
    }))), React.createElement("div", {
      className: "media-body"
    }, React.createElement("h4", {
      className: "mt-0 mb-5"
    }, "Media Heading"), "Intellegaturque bonum aliquip dolore nostrud labore in amet culpa tempor dolore sunt id in cupidatat laborum voluptate occaecat commodo officia reprehenderit veniam non est laboris.")), React.createElement("div", {
      className: "media mt-20"
    }, React.createElement("div", {
      className: "pr-20"
    }, React.createElement("a", {
      href: "javascript:void(0)"
    }, React.createElement("img", {
      className: "w-120",
      src: "http://getbootstrapadmin.com/remark/global/photos/placeholder.png",
      alt: "..."
    }))), React.createElement("div", {
      className: "media-body"
    }, React.createElement("h4", {
      className: "mt-0 mb-5"
    }, "Media Heading"), "Periculis dicitis intemperantes cohaerescent nostras moveat etenim sanguinem, ferae huc labor fruuntur fortunae monet chrysippo octavio ponunt politus optabilem Etiam.")), React.createElement("div", {
      className: "media mt-20"
    }, React.createElement("div", {
      className: "pr-20"
    }, React.createElement("a", {
      href: "javascript:void(0)"
    }, React.createElement("img", {
      className: "w-160",
      src: "http://getbootstrapadmin.com/remark/global/photos/placeholder.png",
      alt: "..."
    }))), React.createElement("div", {
      className: "media-body"
    }, React.createElement("h4", {
      className: "mt-0 mb-5"
    }, "Media Heading"), "Filio levitatibus graecos discenda videntur, falli instituendarum vester dedocendi partus quis videri honoris. Maximeque splendore sint dixit Tantopere praeclarorum nimis.")))))), React.createElement("div", {
      className: "row row-lg"
    }, React.createElement("div", {
      className: "col-xl-6"
    }, React.createElement("div", {
      className: "example-wrap m-lg-0"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Media List With Button"), React.createElement("p", null, "This object styles for building various types of components (like user profile) that feature a left- or right-aligned image alongside textual content."), React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "media"
    }, React.createElement("div", {
      className: "pr-20"
    }, React.createElement("a", {
      className: "avatar avatar-lg",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/2.jpg",
      alt: "..."
    }))), React.createElement("div", {
      className: "media-body"
    }, React.createElement("h4", {
      className: "mt-0 mb-5"
    }, "Media Heading"), "Bono delectus persius diceretur. Cyrenaicisque fortitudinis consuetudinum vitam concupiscunt controversia neglegit, totus praestabiliorem me, corrigere bonarum inter iisque numeranda allevatio.", React.createElement("p", {
      className: "mt-10"
    }, React.createElement("a", {
      className: "btn btn-sm btn-warning",
      href: "javascript:void(0)",
      role: "button"
    }, "Edit"), React.createElement("a", {
      className: "btn btn-sm btn-default",
      href: "javascript:void(0)",
      role: "button"
    }, "Cancel")))), React.createElement("div", {
      className: "media mt-20"
    }, React.createElement("div", {
      className: "pr-20"
    }, React.createElement("a", {
      className: "avatar avatar-lg",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/3.jpg",
      alt: "..."
    }))), React.createElement("div", {
      className: "media-body"
    }, React.createElement("h4", {
      className: "mt-0 mb-5"
    }, "Media Heading"), "Sententia minorem, vivere ferae corrumpit adhaesiones fecisse atomum poenis atomorum novi ludus, veterum, modi habendus percipi sanciret operam. Lictores corpus.", React.createElement("p", {
      className: "mt-10"
    }, React.createElement("a", {
      className: "btn btn-sm btn-danger",
      href: "javascript:void(0)",
      role: "button"
    }, "Confirm"), React.createElement("a", {
      className: "btn btn-sm btn-default",
      href: "javascript:void(0)",
      role: "button"
    }, "Cancel")))), React.createElement("div", {
      className: "media mt-20"
    }, React.createElement("div", {
      className: "pr-20"
    }, React.createElement("a", {
      className: "avatar avatar-lg",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/4.jpg",
      alt: "..."
    }))), React.createElement("div", {
      className: "media-body"
    }, React.createElement("h4", {
      className: "mt-0 mb-5"
    }, "Media Heading"), "Tuemur imperii pugnare regula calere dominorum falso erroribus, temporibus illustribus eveniunt, sequitur disserunt compluribus studio concederetur tractatas quosdam repugnantibus tractavissent.", React.createElement("p", {
      className: "mt-10"
    }, React.createElement("a", {
      className: "btn btn-sm btn-primary",
      href: "javascript:void(0)",
      role: "button"
    }, "Save"), React.createElement("a", {
      className: "btn btn-sm btn-default",
      href: "javascript:void(0)",
      role: "button"
    }, "Cancel"))))))), React.createElement("div", {
      className: "col-xl-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Media Alignment"), React.createElement("p", null, "The images or other media can be aligned top, middle, or bottom. The default is top aligned."), React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "media"
    }, React.createElement("div", {
      className: "pr-20"
    }, React.createElement("a", {
      href: "javascript:void(0)"
    }, React.createElement("img", {
      className: "w-120",
      src: "http://getbootstrapadmin.com/remark/global/photos/placeholder.png",
      alt: "..."
    }))), React.createElement("div", {
      className: "media-body"
    }, React.createElement("h4", {
      className: "mt-0 mb-5"
    }, "Top Aligned Media"), React.createElement("p", null, "Tractat audita quantumcumque atilii, aegritudo neque iactant nominata disputari appellantur studiis. Quaeri prospexit expectant repugnantiumve inportuno, angore, arbitrarer suscipit epularum potiendi, tali copiosae signiferumque fingitur cognitione, animumque recte praetore studium. Utinam torqueantur aequo sitisque illud fugiat, manilium faciendumve ipsi erunt doloris persius difficilem indignius. Maximam evolutio repugnantiumve generis splendore diceretur quaeso, verbum erga liquidae historiae perfunctio eveniunt, concursionibus duce usus disserui declinare angoribus cognitio nihilo municipem, iucundo consequuntur bonum occulte quidam, comit attingere sollicitare praeterea atqui ceterorum molita, inimicus consedit, dominorum dixissem viris disputata, de consul, aspernari autem turbulentaeque concordia consentientis labor electram, vituperatoribus sapientium."))), React.createElement("div", {
      className: "media mt-20"
    }, React.createElement("div", {
      className: " pr-20 media-middle"
    }, React.createElement("a", {
      href: "javascript:void(0)"
    }, React.createElement("img", {
      className: "w-120",
      src: "http://getbootstrapadmin.com/remark/global/photos/placeholder.png",
      alt: "..."
    }))), React.createElement("div", {
      className: "media-body"
    }, React.createElement("h4", {
      className: "mt-0 mb-5"
    }, "Middle Aligned Media"), React.createElement("p", null, "Suam suscipiantur maius propositum atomi. Quia nondum similia accedit tueri iuste, tibique aegritudo quaerenda illa honesto dicas poenis dissentientium. Tranquilli suspicio finitas usque optime alienus, sentiunt plerumque, laetitiam proprius suam maluisti asperiores discordans voluptaria referenda inprobitas atomus. Multo provincia conspiratione loquerer perspici imperitos, appetendum turpis geometrica singulos optimi partiendo. Gerendarum atilii censes nulli stabilitas finis falso nusquam ignavia, secumque tertio fruuntur familias litteris suscipiantur benivole putat, umbram frustra instructior permulta aeternum sermone posset interiret, afferre pararetur difficile, delectant simplicem partis finiri locus expetenda voluptatem. Dicenda accusantibus doctissimos intellegi adversantur egregios nostra veniamus, discordiae dolorem amicitias.")))))))))));
  }

}

module.exportDefault(MediaExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"nav.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/structure/nav.jsx                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class NavExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "NavExample")), React.createElement("div", {
      className: "page-content container-fluid"
    }));
  }

}

module.exportDefault(NavExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"navbars.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/structure/navbars.jsx                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class NavBarsExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "NavBarsExample")), React.createElement("div", {
      className: "page-content container-fluid"
    }));
  }

}

module.exportDefault(NavBarsExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"overlay.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/structure/overlay.jsx                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class OverlayExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "Overlay"), React.createElement("ol", {
      className: "breadcrumb"
    }, React.createElement("li", {
      className: "breadcrumb-item"
    }, React.createElement("a", {
      href: "../index.html"
    }, "Home")), React.createElement("li", {
      className: "breadcrumb-item active"
    }, "Structure")), React.createElement("div", {
      className: "page-header-actions"
    }, React.createElement("form", null, React.createElement("div", {
      className: "input-search input-search-dark"
    }, React.createElement("i", {
      className: "input-search-icon wb-search",
      "aria-hidden": "true"
    }), React.createElement("input", {
      type: "text",
      className: "form-control",
      name: true,
      placeholder: "Search..."
    }))))), React.createElement("div", {
      className: "page-content"
    }, React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-body container-fluid"
    }, React.createElement("div", {
      className: "row row-lg"
    }, React.createElement("div", {
      className: "col-lg-6 col-xl-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Basic"), React.createElement("p", null, "To create a position context, add the ", React.createElement("code", null, ".overlay"), " class to a container element around an image. Add the ", React.createElement("code", null, ".overlay-panel"), "                  class to a child element to create the actual overlay panel."), React.createElement("div", {
      className: "example"
    }, React.createElement("figure", {
      className: "overlay"
    }, React.createElement("img", {
      className: "overlay-figure",
      src: "http://getbootstrapadmin.com/remark/global/photos/placeholder.png",
      alt: "..."
    }), React.createElement("figcaption", {
      className: "overlay-panel"
    }, React.createElement("h3", null, "Title"), React.createElement("p", null, "Lorem ", React.createElement("a", {
      href: "javascript:void(0)"
    }, "ipsum dolor"), " sit amet, consetetur sadipscing elitr.")))))), React.createElement("div", {
      className: "col-lg-6 col-xl-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Toggle Overlay On Hover"), React.createElement("p", null, "By default, the overlay is always visible. To hide the overlay and display it on hover, add the ", React.createElement("code", null, ".overlay-hover"), "                  class to the overlay container."), React.createElement("div", {
      className: "example"
    }, React.createElement("figure", {
      className: "overlay overlay-hover"
    }, React.createElement("img", {
      className: "overlay-figure",
      src: "http://getbootstrapadmin.com/remark/global/photos/placeholder.png",
      alt: "..."
    }), React.createElement("figcaption", {
      className: "overlay-panel overlay-fade"
    }, React.createElement("h3", null, "Title"), React.createElement("p", null, "Lorem ", React.createElement("a", {
      href: "javascript:void(0)"
    }, "ipsum dolor"), " sit amet, consetetur sadipscing elitr.")))))), React.createElement("div", {
      className: "col-lg-6 col-xl-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Overlay Background"), React.createElement("p", null, "To give the overlay a background just add the ", React.createElement("code", null, ".overlay-background"), "                  class to the overlay container."), React.createElement("div", {
      className: "example"
    }, React.createElement("figure", {
      className: "overlay"
    }, React.createElement("img", {
      className: "overlay-figure",
      src: "http://getbootstrapadmin.com/remark/global/photos/placeholder.png",
      alt: "..."
    }), React.createElement("figcaption", {
      className: "overlay-panel overlay-background"
    }, React.createElement("h3", null, "Title"), React.createElement("p", null, "Lorem ", React.createElement("a", {
      href: "javascript:void(0)"
    }, "ipsum dolor"), " sit amet, consetetur sadipscing elitr.")))))), React.createElement("div", {
      className: "col-lg-6 col-xl-4"
    }, React.createElement("div", {
      className: "example-wrap m-lg-0"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Overlay Icon"), React.createElement("p", null, "To display an icon you can add the ", React.createElement("code", null, ".overlay-icon"), " class to the overlay panel."), React.createElement("div", {
      className: "example"
    }, React.createElement("figure", {
      className: "overlay"
    }, React.createElement("img", {
      className: "overlay-figure",
      src: "http://getbootstrapadmin.com/remark/global/photos/placeholder.png",
      alt: "..."
    }), React.createElement("div", {
      className: "overlay-panel overlay-icon overlay-background"
    }, React.createElement("i", {
      className: "icon wb-search",
      "aria-hidden": "true"
    })))))), React.createElement("div", {
      className: "col-lg-6 col-xl-4"
    }, React.createElement("div", {
      className: "example-wrap m-md-0"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Overlay Image"), React.createElement("p", null, "To apply an image as an overlay, add the ", React.createElement("code", null, ".overlay-image"), "                  class to an ", React.createElement("code", null, "<img>"), " element with the ", React.createElement("code", null, ".overlay-panel"), "                  class."), React.createElement("div", {
      className: "example"
    }, React.createElement("figure", {
      className: "overlay overlay-hover"
    }, React.createElement("img", {
      className: "overlay-figure",
      src: "http://getbootstrapadmin.com/remark/global/photos/placeholder.png",
      alt: "..."
    }), React.createElement("img", {
      className: "overlay-panel overlay-image overlay-fade",
      src: "../../../global/photos/placeholder.png",
      alt: "..."
    }))))), React.createElement("div", {
      className: "col-lg-6 col-xl-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Overlay Anchor"), React.createElement("p", null, "To use the entire overlay as a link, just place an ", React.createElement("code", null, "<a>"), "                  element inside the overlay container and add the ", React.createElement("code", null, ".overlay-anchor"), "."), React.createElement("div", {
      className: "example"
    }, React.createElement("figure", {
      className: "overlay overlay-hover"
    }, React.createElement("img", {
      className: "overlay-figure",
      src: "http://getbootstrapadmin.com/remark/global/photos/placeholder.png",
      alt: "..."
    }), React.createElement("div", {
      className: "overlay-panel overlay-fade"
    }, React.createElement("h3", null, "Title"), React.createElement("p", null, "Lorem ", React.createElement("a", {
      href: "javascript:void(0)"
    }, "ipsum dolor"), " sit amet, consetetur sadipscing elitr.")), React.createElement("a", {
      className: "overlay-anchor",
      href: "javascript:void(0)"
    })))))))), React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-heading"
    }, React.createElement("h3", {
      className: "panel-title"
    }, "Overlay Positon")), React.createElement("div", {
      className: "panel-body container-fluid"
    }, React.createElement("div", {
      className: "row row-lg"
    }, React.createElement("div", {
      className: "col-lg-6 col-xl-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Overlay Top"), React.createElement("div", {
      className: "example"
    }, React.createElement("figure", {
      className: "overlay overlay-hover"
    }, React.createElement("img", {
      className: "overlay-figure",
      src: "http://getbootstrapadmin.com/remark/global/photos/placeholder.png",
      alt: "..."
    }), React.createElement("figcaption", {
      className: "overlay-top overlay-panel overlay-background overlay-slide-top"
    }, React.createElement("h4", null, "Overlay Top")))))), React.createElement("div", {
      className: "col-lg-6 col-xl-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Overlay Bottom"), React.createElement("div", {
      className: "example"
    }, React.createElement("figure", {
      className: "overlay overlay-hover"
    }, React.createElement("img", {
      className: "overlay-figure",
      src: "http://getbootstrapadmin.com/remark/global/photos/placeholder.png",
      alt: "..."
    }), React.createElement("figcaption", {
      className: "overlay-bottom overlay-panel overlay-background overlay-slide-top"
    }, React.createElement("h4", null, "Overlay Bottom")))))), React.createElement("div", {
      className: "col-lg-6 col-xl-4"
    }, React.createElement("div", {
      className: "example-wrap m-md-0"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Overlay Left"), React.createElement("div", {
      className: "example"
    }, React.createElement("figure", {
      className: "overlay overlay-hover"
    }, React.createElement("img", {
      className: "overlay-figure",
      src: "http://getbootstrapadmin.com/remark/global/photos/placeholder.png",
      alt: "..."
    }), React.createElement("figcaption", {
      className: "overlay-left overlay-panel overlay-background overlay-slide-left"
    }, React.createElement("h4", null, "Overlay Left")))))), React.createElement("div", {
      className: "col-lg-6 col-xl-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Overlay Right"), React.createElement("div", {
      className: "example"
    }, React.createElement("figure", {
      className: "overlay overlay-hover"
    }, React.createElement("img", {
      className: "overlay-figure",
      src: "http://getbootstrapadmin.com/remark/global/photos/placeholder.png",
      alt: "..."
    }), React.createElement("figcaption", {
      className: "overlay-right overlay-panel overlay-background overlay-slide-right"
    }, React.createElement("h4", null, "Overlay Right"))))))))), React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-heading"
    }, React.createElement("h3", {
      className: "panel-title"
    }, "Overlay Transition")), React.createElement("div", {
      className: "panel-body container-fluid"
    }, React.createElement("div", {
      className: "row row-lg"
    }, React.createElement("div", {
      className: "col-lg-6 col-xl-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Overlay Fade"), React.createElement("p", null, "Add this class to the overlay panel or image to fade it in."), React.createElement("div", {
      className: "example"
    }, React.createElement("figure", {
      className: "overlay overlay-hover"
    }, React.createElement("img", {
      className: "overlay-figure",
      src: "http://getbootstrapadmin.com/remark/global/photos/placeholder.png",
      alt: "..."
    }), React.createElement("figcaption", {
      className: "overlay-panel overlay-background overlay-fade"
    }, React.createElement("h3", null, "Title"), React.createElement("p", null, "Lorem ", React.createElement("a", {
      href: "javascript:void(0)"
    }, "ipsum dolor"), " sit amet, consetetur sadipscing elitr.")))))), React.createElement("div", {
      className: "col-lg-6 col-xl-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Overlay Scale"), React.createElement("p", null, "Add this class to the image to scale it up."), React.createElement("div", {
      className: "example"
    }, React.createElement("figure", {
      className: "overlay overlay-hover"
    }, React.createElement("img", {
      className: "overlay-figure overlay-scale",
      src: "http://getbootstrapadmin.com/remark/global/photos/placeholder.png",
      alt: "..."
    }), React.createElement("figcaption", {
      className: "overlay-panel overlay-background"
    }, React.createElement("h3", null, "Title"), React.createElement("p", null, "Lorem ", React.createElement("a", {
      href: "javascript:void(0)"
    }, "ipsum dolor"), " sit amet, consetetur sadipscing elitr.")))))), React.createElement("div", {
      className: "col-lg-6 col-xl-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Overlay Spin"), React.createElement("p", null, "Add this class to the image to slightly rotate it to the right."), React.createElement("div", {
      className: "example"
    }, React.createElement("figure", {
      className: "overlay overlay-hover"
    }, React.createElement("img", {
      className: "overlay-figure overlay-spin",
      src: "http://getbootstrapadmin.com/remark/global/photos/placeholder.png",
      alt: "..."
    }), React.createElement("figcaption", {
      className: "overlay-panel overlay-background overlay-fade"
    }, React.createElement("h3", null, "Title"), React.createElement("p", null, "Lorem ", React.createElement("a", {
      href: "javascript:void(0)"
    }, "ipsum dolor"), " sit amet, consetetur sadipscing elitr.")))))), React.createElement("div", {
      className: "col-lg-6 col-xl-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Overlay Grayscale"), React.createElement("p", null, "Add this class to the image to desaturate it and color it on hover."), React.createElement("div", {
      className: "example"
    }, React.createElement("figure", {
      className: "overlay overlay-hover"
    }, React.createElement("img", {
      className: "overlay-figure overlay-grayscale",
      src: "http://getbootstrapadmin.com/remark/global/photos/placeholder.png",
      alt: "..."
    }), React.createElement("figcaption", {
      className: "overlay-panel overlay-background overlay-fade"
    }, React.createElement("h3", null, "Title"), React.createElement("p", null, "Lorem ", React.createElement("a", {
      href: "javascript:void(0)"
    }, "ipsum dolor"), " sit amet, consetetur sadipscing elitr.")))))), React.createElement("div", {
      className: "col-lg-6 col-xl-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Overlay Slide Top"), React.createElement("p", null, "Add this class to the overlay panel to slide it in from the top."), React.createElement("div", {
      className: "example"
    }, React.createElement("figure", {
      className: "overlay overlay-hover"
    }, React.createElement("img", {
      className: "overlay-figure",
      src: "http://getbootstrapadmin.com/remark/global/photos/placeholder.png",
      alt: "..."
    }), React.createElement("figcaption", {
      className: "overlay-panel overlay-background overlay-slide-top"
    }, React.createElement("h3", null, "Title"), React.createElement("p", null, "Lorem ", React.createElement("a", {
      href: "javascript:void(0)"
    }, "ipsum dolor"), " sit amet, consetetur sadipscing elitr.")))))), React.createElement("div", {
      className: "col-lg-6 col-xl-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Overlay Slide Bottom"), React.createElement("p", null, "Add this class to the overlay panel to slide it in from the bottom."), React.createElement("div", {
      className: "example"
    }, React.createElement("figure", {
      className: "overlay overlay-hover"
    }, React.createElement("img", {
      className: "overlay-figure",
      src: "http://getbootstrapadmin.com/remark/global/photos/placeholder.png",
      alt: "..."
    }), React.createElement("figcaption", {
      className: "overlay-panel overlay-background overlay-slide-bottom"
    }, React.createElement("h3", null, "Title"), React.createElement("p", null, "Lorem ", React.createElement("a", {
      href: "javascript:void(0)"
    }, "ipsum dolor"), " sit amet, consetetur sadipscing elitr.")))))), React.createElement("div", {
      className: "col-lg-6 col-xl-4"
    }, React.createElement("div", {
      className: "example-wrap m-md-0"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Overlay Slide Top"), React.createElement("p", null, "Add this class to the overlay panel to slide it in from the left."), React.createElement("div", {
      className: "example"
    }, React.createElement("figure", {
      className: "overlay overlay-hover"
    }, React.createElement("img", {
      className: "overlay-figure",
      src: "http://getbootstrapadmin.com/remark/global/photos/placeholder.png",
      alt: "..."
    }), React.createElement("figcaption", {
      className: "overlay-panel overlay-background overlay-slide-left"
    }, React.createElement("h3", null, "Title"), React.createElement("p", null, "Lorem ", React.createElement("a", {
      href: "javascript:void(0)"
    }, "ipsum dolor"), " sit amet, consetetur sadipscing elitr.")))))), React.createElement("div", {
      className: "col-lg-6 col-xl-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Overlay Slide Top"), React.createElement("p", null, "Add this class to the overlay panel to slide it in from the right."), React.createElement("div", {
      className: "example"
    }, React.createElement("figure", {
      className: "overlay overlay-hover"
    }, React.createElement("img", {
      className: "overlay-figure",
      src: "http://getbootstrapadmin.com/remark/global/photos/placeholder.png",
      alt: "..."
    }), React.createElement("figcaption", {
      className: "overlay-panel overlay-background overlay-slide-right"
    }, React.createElement("h3", null, "Title"), React.createElement("p", null, "Lorem ", React.createElement("a", {
      href: "javascript:void(0)"
    }, "ipsum dolor"), " sit amet, consetetur sadipscing elitr."))))))))), React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-heading"
    }, React.createElement("h3", {
      className: "panel-title"
    }, "More Examples")), React.createElement("div", {
      className: "panel-body container-fluid"
    }, React.createElement("div", {
      className: "row row-lg"
    }, React.createElement("div", {
      className: "col-lg-6 col-xl-4"
    }, React.createElement("div", {
      className: "example-wrap m-lg-0"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Animation"), React.createElement("div", {
      className: "example"
    }, React.createElement("figure", {
      className: "overlay overlay-hover animation-hover"
    }, React.createElement("img", {
      className: "overlay-figure overlay-scale",
      src: "http://getbootstrapadmin.com/remark/global/photos/placeholder.png",
      alt: "..."
    }), React.createElement("figcaption", {
      className: "overlay-panel overlay-background overlay-fade"
    }, React.createElement("h3", {
      className: "animation-slide-bottom"
    }, "Title"), React.createElement("p", {
      className: "animation-slide-bottom animation-delay-200"
    }, "Lorem ", React.createElement("a", {
      href: "javascript:void(0)"
    }, "ipsum dolor"), " sit amet, consetetur sadipscing elitr.")))))), React.createElement("div", {
      className: "col-lg-6 col-xl-4"
    }, React.createElement("div", {
      className: "example-wrap m-lg-0"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Vertical Align"), React.createElement("div", {
      className: "example"
    }, React.createElement("figure", {
      className: "overlay overlay-hover animation-hover"
    }, React.createElement("img", {
      className: "overlay-figure overlay-scale",
      src: "http://getbootstrapadmin.com/remark/global/photos/placeholder.png",
      alt: "..."
    }), React.createElement("figcaption", {
      className: "overlay-panel overlay-background overlay-fade text-center vertical-align"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-outline btn-inverse vertical-align-middle"
    }, "View")))))), React.createElement("div", {
      className: "col-lg-6 col-xl-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Icons"), React.createElement("div", {
      className: "example"
    }, React.createElement("figure", {
      className: "overlay overlay-hover"
    }, React.createElement("img", {
      className: "overlay-figure",
      src: "http://getbootstrapadmin.com/remark/global/photos/placeholder.png",
      alt: "..."
    }), React.createElement("figcaption", {
      className: "overlay-panel overlay-background overlay-fade overlay-icon"
    }, React.createElement("a", {
      className: "icon wb-search",
      href: "#search"
    }), React.createElement("a", {
      className: "icon wb-upload",
      href: "#upload"
    })))))))))));
  }

}

module.exportDefault(OverlayExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"pagination.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/structure/pagination.jsx                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class PaginationExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "Pagination"), React.createElement("ol", {
      className: "breadcrumb"
    }, React.createElement("li", {
      className: "breadcrumb-item"
    }, React.createElement("a", {
      href: "../index.html"
    }, "Home")), React.createElement("li", {
      className: "breadcrumb-item active"
    }, "Structure")), React.createElement("div", {
      className: "page-header-actions"
    }, React.createElement("form", null, React.createElement("div", {
      className: "input-search input-search-dark"
    }, React.createElement("i", {
      className: "input-search-icon wb-search",
      "aria-hidden": "true"
    }), React.createElement("input", {
      type: "text",
      className: "form-control",
      name: true,
      placeholder: "Search..."
    }))))), React.createElement("div", {
      className: "page-content"
    }, React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-heading"
    }, React.createElement("h3", {
      className: "panel-title"
    }, "Pagination")), React.createElement("div", {
      className: "panel-body container-fluid"
    }, React.createElement("div", {
      className: "row row-lg"
    }, React.createElement("div", {
      className: "col-lg-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Basic Pagination"), React.createElement("p", null, "Simple pagination inspired by Rdio, great for apps and search results. The large block is hard to miss, easily scalable, and provides large click areas."), React.createElement("div", {
      className: "example"
    }, React.createElement("nav", null, React.createElement("ul", {
      className: "pagination"
    }, React.createElement("li", {
      className: "page-item"
    }, React.createElement("a", {
      className: "page-link",
      href: "javascript:void(0)",
      "aria-label": "Previous"
    }, React.createElement("span", {
      "aria-hidden": "true"
    }, "\xAB"))), React.createElement("li", {
      className: "page-item"
    }, React.createElement("a", {
      className: "page-link",
      href: "javascript:void(0)"
    }, "1")), React.createElement("li", {
      className: "page-item"
    }, React.createElement("a", {
      className: "page-link",
      href: "javascript:void(0)"
    }, "2")), React.createElement("li", {
      className: "page-item"
    }, React.createElement("a", {
      className: "page-link",
      href: "javascript:void(0)"
    }, "3")), React.createElement("li", {
      className: "page-item"
    }, React.createElement("a", {
      className: "page-link",
      href: "javascript:void(0)"
    }, "4")), React.createElement("li", {
      className: "page-item"
    }, React.createElement("a", {
      className: "page-link",
      href: "javascript:void(0)"
    }, "5")), React.createElement("li", {
      className: "page-item"
    }, React.createElement("a", {
      className: "page-link",
      href: "javascript:void(0)",
      "aria-label": "Next"
    }, React.createElement("span", {
      "aria-hidden": "true"
    }, "\xBB")))))))), React.createElement("div", {
      className: "col-lg-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Disabled And Active States"), React.createElement("p", null, "Links are customizable for different circumstances. Use ", React.createElement("code", null, ".disabled"), "                  for unclickable links and ", React.createElement("code", null, ".active"), " to indicate the current page."), React.createElement("div", {
      className: "example"
    }, React.createElement("nav", null, React.createElement("ul", {
      className: "pagination"
    }, React.createElement("li", {
      className: "disabled page-item"
    }, React.createElement("a", {
      className: "page-link",
      href: "javascript:void(0)",
      "aria-label": "Previous"
    }, React.createElement("span", {
      "aria-hidden": "true"
    }, "\xAB"))), React.createElement("li", {
      className: "active page-item"
    }, React.createElement("a", {
      className: "page-link",
      href: "javascript:void(0)"
    }, "1 ", React.createElement("span", {
      className: "sr-only"
    }, "(current)"))), React.createElement("li", {
      className: "page-item"
    }, React.createElement("a", {
      className: "page-link",
      href: "javascript:void(0)"
    }, "2")), React.createElement("li", {
      className: "page-item"
    }, React.createElement("a", {
      className: "page-link",
      href: "javascript:void(0)"
    }, "3")), React.createElement("li", {
      className: "page-item"
    }, React.createElement("a", {
      className: "page-link",
      href: "javascript:void(0)"
    }, "4")), React.createElement("li", {
      className: "page-item"
    }, React.createElement("a", {
      className: "page-link",
      href: "javascript:void(0)"
    }, "5")), React.createElement("li", {
      className: "page-item"
    }, React.createElement("a", {
      className: "page-link",
      href: "javascript:void(0)",
      "aria-label": "Next"
    }, React.createElement("span", {
      "aria-hidden": "true"
    }, "\xBB")))))))), React.createElement("div", {
      className: "col-lg-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Pagination With Gap"), React.createElement("p", null, "This pagination style has large clickable areas for each page, the current page clearly stands out from the links."), React.createElement("div", {
      className: "example"
    }, React.createElement("nav", null, React.createElement("ul", {
      className: "pagination pagination-gap"
    }, React.createElement("li", {
      className: "disabled page-item"
    }, React.createElement("a", {
      className: "page-link",
      href: "javascript:void(0)",
      "aria-label": "Previous"
    }, React.createElement("span", {
      "aria-hidden": "true"
    }, "\xAB"))), React.createElement("li", {
      className: "active page-item"
    }, React.createElement("a", {
      className: "page-link",
      href: "javascript:void(0)"
    }, "1 ", React.createElement("span", {
      className: "sr-only"
    }, "(current)"))), React.createElement("li", {
      className: "page-item"
    }, React.createElement("a", {
      className: "page-link",
      href: "javascript:void(0)"
    }, "2")), React.createElement("li", {
      className: "page-item"
    }, React.createElement("a", {
      className: "page-link",
      href: "javascript:void(0)"
    }, "3")), React.createElement("li", {
      className: "page-item"
    }, React.createElement("a", {
      className: "page-link",
      href: "javascript:void(0)"
    }, "4")), React.createElement("li", {
      className: "page-item"
    }, React.createElement("a", {
      className: "page-link",
      href: "javascript:void(0)"
    }, "5")), React.createElement("li", {
      className: "page-item"
    }, React.createElement("a", {
      className: "page-link",
      href: "javascript:void(0)",
      "aria-label": "Next"
    }, React.createElement("span", {
      "aria-hidden": "true"
    }, "\xBB")))))))), React.createElement("div", {
      className: "col-lg-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Pagination No Border"), React.createElement("p", null, "The previous and next buttons are nicely detached from the rest of the pagination through their style."), React.createElement("div", {
      className: "example"
    }, React.createElement("nav", null, React.createElement("ul", {
      className: "pagination pagination-no-border"
    }, React.createElement("li", {
      className: "disabled page-item"
    }, React.createElement("a", {
      className: "page-link",
      href: "javascript:void(0)",
      "aria-label": "Previous"
    }, React.createElement("span", {
      "aria-hidden": "true"
    }, "\xAB"))), React.createElement("li", {
      className: "active page-item"
    }, React.createElement("a", {
      className: "page-link",
      href: "javascript:void(0)"
    }, "1 ", React.createElement("span", {
      className: "sr-only"
    }, "(current)"))), React.createElement("li", {
      className: "page-item"
    }, React.createElement("a", {
      className: "page-link",
      href: "javascript:void(0)"
    }, "2")), React.createElement("li", {
      className: "page-item"
    }, React.createElement("a", {
      className: "page-link",
      href: "javascript:void(0)"
    }, "3")), React.createElement("li", {
      className: "page-item"
    }, React.createElement("a", {
      className: "page-link",
      href: "javascript:void(0)"
    }, "4")), React.createElement("li", {
      className: "page-item"
    }, React.createElement("a", {
      className: "page-link",
      href: "javascript:void(0)"
    }, "5")), React.createElement("li", {
      className: "page-item"
    }, React.createElement("a", {
      className: "page-link",
      href: "javascript:void(0)",
      "aria-label": "Next"
    }, React.createElement("span", {
      "aria-hidden": "true"
    }, "\xBB")))))))), React.createElement("div", {
      className: "col-lg-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Sizing"), React.createElement("p", null, "Fancy larger or smaller pagination? Add ", React.createElement("code", null, ".pagination-lg"), "                  or ", React.createElement("code", null, ".pagination-sm"), " for additional sizes."), React.createElement("div", {
      className: "example"
    }, React.createElement("nav", null, React.createElement("ul", {
      className: "pagination pagination-lg"
    }, React.createElement("li", {
      className: "page-item"
    }, React.createElement("a", {
      className: "page-link",
      href: "javascript:void(0)",
      "aria-label": "Previous"
    }, React.createElement("span", {
      "aria-hidden": "true"
    }, "\xAB"))), React.createElement("li", {
      className: "page-item"
    }, React.createElement("a", {
      className: "page-link",
      href: "javascript:void(0)"
    }, "1")), React.createElement("li", {
      className: "page-item"
    }, React.createElement("a", {
      className: "page-link",
      href: "javascript:void(0)"
    }, "2")), React.createElement("li", {
      className: "page-item"
    }, React.createElement("a", {
      className: "page-link",
      href: "javascript:void(0)"
    }, "3")), React.createElement("li", {
      className: "page-item"
    }, React.createElement("a", {
      className: "page-link",
      href: "javascript:void(0)"
    }, "4")), React.createElement("li", {
      className: "page-item"
    }, React.createElement("a", {
      className: "page-link",
      href: "javascript:void(0)"
    }, "5")), React.createElement("li", {
      className: "page-item"
    }, React.createElement("a", {
      className: "page-link",
      href: "javascript:void(0)",
      "aria-label": "Next"
    }, React.createElement("span", {
      "aria-hidden": "true"
    }, "\xBB"))))), React.createElement("nav", null, React.createElement("ul", {
      className: "pagination"
    }, React.createElement("li", {
      className: "page-item"
    }, React.createElement("a", {
      className: "page-link",
      href: "javascript:void(0)",
      "aria-label": "Previous"
    }, React.createElement("span", {
      "aria-hidden": "true"
    }, "\xAB"))), React.createElement("li", {
      className: "page-item"
    }, React.createElement("a", {
      className: "page-link",
      href: "javascript:void(0)"
    }, "1")), React.createElement("li", {
      className: "page-item"
    }, React.createElement("a", {
      className: "page-link",
      href: "javascript:void(0)"
    }, "2")), React.createElement("li", {
      className: "page-item"
    }, React.createElement("a", {
      className: "page-link",
      href: "javascript:void(0)"
    }, "3")), React.createElement("li", {
      className: "page-item"
    }, React.createElement("a", {
      className: "page-link",
      href: "javascript:void(0)"
    }, "4")), React.createElement("li", {
      className: "page-item"
    }, React.createElement("a", {
      className: "page-link",
      href: "javascript:void(0)"
    }, "5")), React.createElement("li", {
      className: "page-item"
    }, React.createElement("a", {
      className: "page-link",
      href: "javascript:void(0)",
      "aria-label": "Next"
    }, React.createElement("span", {
      "aria-hidden": "true"
    }, "\xBB"))))), React.createElement("nav", null, React.createElement("ul", {
      className: "pagination pagination-sm"
    }, React.createElement("li", {
      className: "page-item"
    }, React.createElement("a", {
      className: "page-link",
      href: "javascript:void(0)",
      "aria-label": "Previous"
    }, React.createElement("span", {
      "aria-hidden": "true"
    }, "\xAB"))), React.createElement("li", {
      className: "page-item"
    }, React.createElement("a", {
      className: "page-link",
      href: "javascript:void(0)"
    }, "1")), React.createElement("li", {
      className: "page-item"
    }, React.createElement("a", {
      className: "page-link",
      href: "javascript:void(0)"
    }, "2")), React.createElement("li", {
      className: "page-item"
    }, React.createElement("a", {
      className: "page-link",
      href: "javascript:void(0)"
    }, "3")), React.createElement("li", {
      className: "page-item"
    }, React.createElement("a", {
      className: "page-link",
      href: "javascript:void(0)"
    }, "4")), React.createElement("li", {
      className: "page-item"
    }, React.createElement("a", {
      className: "page-link",
      href: "javascript:void(0)"
    }, "5")), React.createElement("li", {
      className: "page-item"
    }, React.createElement("a", {
      className: "page-link",
      href: "javascript:void(0)",
      "aria-label": "Next"
    }, React.createElement("span", {
      "aria-hidden": "true"
    }, "\xBB"))))))))))), React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-heading"
    }, React.createElement("h3", {
      className: "panel-title"
    }, "Pager")), React.createElement("div", {
      className: "panel-body container-fluid"
    }, React.createElement("div", {
      className: "row row-lg"
    }, React.createElement("div", {
      className: "col-lg-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Default Example"), React.createElement("p", null, "By default, the pager centers links."), React.createElement("div", {
      className: "example"
    }, React.createElement("nav", null, React.createElement("ul", {
      className: "pagination"
    }, React.createElement("li", {
      className: "page-item"
    }, React.createElement("a", {
      className: "page-link",
      href: "javascript:void(0)"
    }, "Previous")), React.createElement("li", {
      className: "page-item"
    }, React.createElement("a", {
      className: "page-link",
      href: "javascript:void(0)"
    }, "Next"))))))), React.createElement("div", {
      className: "col-lg-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Optional disabled state"), React.createElement("p", null, "Pager links also use the general ", React.createElement("code", null, ".disabled"), " utility class from the pagination."), React.createElement("div", {
      className: "example"
    }, React.createElement("nav", null, React.createElement("ul", {
      className: "pagination"
    }, React.createElement("li", {
      className: "page-item disabled"
    }, React.createElement("a", {
      className: "page-link",
      href: "javascript:void(0)"
    }, React.createElement("span", {
      "aria-hidden": "true"
    }, "\u2190"), " Older")), React.createElement("li", {
      className: "page-item"
    }, React.createElement("a", {
      className: "page-link",
      href: "javascript:void(0)"
    }, "Newer ", React.createElement("span", {
      "aria-hidden": "true"
    }, "\u2192")))))))))))));
  }

}

module.exportDefault(PaginationExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"pricing-tables.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/structure/pricing-tables.jsx                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class PricingTablesExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "Pricing Tables"), React.createElement("ol", {
      className: "breadcrumb"
    }, React.createElement("li", {
      className: "breadcrumb-item"
    }, React.createElement("a", {
      href: "../index.html"
    }, "Home")), React.createElement("li", {
      className: "breadcrumb-item active"
    }, "Structure")), React.createElement("div", {
      className: "page-header-actions"
    }, React.createElement("form", null, React.createElement("div", {
      className: "input-search input-search-dark"
    }, React.createElement("i", {
      className: "input-search-icon wb-search",
      "aria-hidden": "true"
    }), React.createElement("input", {
      type: "text",
      className: "form-control",
      name: true,
      placeholder: "Search..."
    }))))), React.createElement("div", {
      className: "page-content"
    }, React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-body container-fluid"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Pricing-List - Bg In Title"), React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-6 col-xl-3"
    }, React.createElement("div", {
      className: "pricing-list"
    }, React.createElement("div", {
      className: "pricing-header"
    }, React.createElement("div", {
      className: "pricing-title"
    }, "Standard"), React.createElement("div", {
      className: "pricing-price"
    }, React.createElement("span", {
      className: "pricing-currency"
    }, "$"), React.createElement("span", {
      className: "pricing-amount"
    }, "40"), React.createElement("span", {
      className: "pricing-period"
    }, "/ mo"))), React.createElement("ul", {
      className: "pricing-features"
    }, React.createElement("li", null, React.createElement("strong", null, "10GB"), " of Lorem ipsum"), React.createElement("li", null, React.createElement("strong", null, "200MB"), " Max File Size"), React.createElement("li", null, React.createElement("strong", null, "2GHZ"), " CPU"), React.createElement("li", null, React.createElement("strong", null, "256MB"), " Memory")), React.createElement("div", {
      className: "pricing-footer"
    }, React.createElement("a", {
      className: "btn btn-primary btn-outline",
      role: "button",
      href: "#"
    }, React.createElement("i", {
      className: "icon wb-arrow-right font-size-16 mr-15",
      "aria-hidden": "true"
    }), "Add to card")))), React.createElement("div", {
      className: "col-md-6 col-xl-3"
    }, React.createElement("div", {
      className: "pricing-list"
    }, React.createElement("div", {
      className: "pricing-header"
    }, React.createElement("div", {
      className: "pricing-title bg-blue-600"
    }, "Premium"), React.createElement("div", {
      className: "pricing-price"
    }, React.createElement("span", {
      className: "pricing-currency blue-600"
    }, "$"), React.createElement("span", {
      className: "pricing-amount blue-600"
    }, "50"), React.createElement("span", {
      className: "pricing-period"
    }, "/ mo"))), React.createElement("ul", {
      className: "pricing-features"
    }, React.createElement("li", null, React.createElement("strong", null, "10GB"), " of Lorem ipsum"), React.createElement("li", null, React.createElement("strong", null, "200MB"), " Max File Size"), React.createElement("li", null, React.createElement("strong", null, "2GHZ"), " CPU"), React.createElement("li", null, React.createElement("strong", null, "256MB"), " Memory")), React.createElement("div", {
      className: "pricing-footer"
    }, React.createElement("a", {
      className: "btn btn-primary btn-outline",
      role: "button",
      href: "#"
    }, React.createElement("i", {
      className: "icon wb-arrow-right font-size-16 mr-15",
      "aria-hidden": "true"
    }), "Add to card")))), React.createElement("div", {
      className: "col-md-6 col-xl-3"
    }, React.createElement("div", {
      className: "pricing-list"
    }, React.createElement("div", {
      className: "pricing-header"
    }, React.createElement("div", {
      className: "pricing-title"
    }, "Professional"), React.createElement("div", {
      className: "pricing-price"
    }, React.createElement("span", {
      className: "pricing-currency"
    }, "$"), React.createElement("span", {
      className: "pricing-amount"
    }, "60"), React.createElement("span", {
      className: "pricing-period"
    }, "/ mo"))), React.createElement("ul", {
      className: "pricing-features"
    }, React.createElement("li", null, React.createElement("strong", null, "10GB"), " of Lorem ipsum"), React.createElement("li", null, React.createElement("strong", null, "200MB"), " Max File Size"), React.createElement("li", null, React.createElement("strong", null, "2GHZ"), " CPU"), React.createElement("li", null, React.createElement("strong", null, "256MB"), " Memory")), React.createElement("div", {
      className: "pricing-footer"
    }, React.createElement("a", {
      className: "btn btn-primary btn-outline",
      role: "button",
      href: "#"
    }, React.createElement("i", {
      className: "icon wb-arrow-right font-size-16 mr-15",
      "aria-hidden": "true"
    }), "Add to card")))), React.createElement("div", {
      className: "col-md-6 col-xl-3"
    }, React.createElement("div", {
      className: "pricing-list"
    }, React.createElement("div", {
      className: "pricing-header"
    }, React.createElement("div", {
      className: "pricing-title"
    }, "Flagship"), React.createElement("div", {
      className: "pricing-price"
    }, React.createElement("span", {
      className: "pricing-currency"
    }, "$"), React.createElement("span", {
      className: "pricing-amount"
    }, "70"), React.createElement("span", {
      className: "pricing-period"
    }, "/ mo"))), React.createElement("ul", {
      className: "pricing-features"
    }, React.createElement("li", null, React.createElement("strong", null, "10GB"), " of Lorem ipsum"), React.createElement("li", null, React.createElement("strong", null, "200MB"), " Max File Size"), React.createElement("li", null, React.createElement("strong", null, "2GHZ"), " CPU"), React.createElement("li", null, React.createElement("strong", null, "256MB"), " Memory")), React.createElement("div", {
      className: "pricing-footer"
    }, React.createElement("a", {
      className: "btn btn-primary btn-outline",
      role: "button",
      href: "#"
    }, React.createElement("i", {
      className: "icon wb-arrow-right font-size-16 mr-15",
      "aria-hidden": "true"
    }), "Add to card"))))))), React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Pricing-List - Bg In Head"), React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-6 col-xxl-3"
    }, React.createElement("div", {
      className: "pricing-list text-left"
    }, React.createElement("div", {
      className: "pricing-header bg-blue-grey-600"
    }, React.createElement("div", {
      className: "pricing-title"
    }, "Standard"), React.createElement("div", {
      className: "pricing-price"
    }, React.createElement("span", {
      className: "pricing-currency"
    }, "$"), React.createElement("span", {
      className: "pricing-amount"
    }, "40"), React.createElement("span", {
      className: "pricing-period"
    }, "/ mo")), React.createElement("p", {
      className: "px-30 pb-25"
    }, "Vestibulum lacinia arcu eget nulla. Class aptent taciti")), React.createElement("ul", {
      className: "pricing-features"
    }, React.createElement("li", null, React.createElement("strong", null, "10GB"), " of Lorem ipsum"), React.createElement("li", null, React.createElement("strong", null, "200MB"), " Max File Size"), React.createElement("li", null, React.createElement("strong", null, "2GHZ"), " CPU"), React.createElement("li", null, React.createElement("strong", null, "256MB"), " Memory"), React.createElement("li", null, React.createElement("strong", null, "1 GB"), " Storage"), React.createElement("li", null, React.createElement("strong", null, "*"), " Sed dignissim lacinia nunc. Curabitur tortor. Pellentesque nibh.")), React.createElement("div", {
      className: "pricing-footer text-center bg-blue-grey-100"
    }, React.createElement("a", {
      className: "btn btn-primary btn-lg",
      href: "#"
    }, React.createElement("i", {
      className: "icon wb-arrow-right font-size-16 mr-15",
      "aria-hidden": "true"
    }), " Add to card")))), React.createElement("div", {
      className: "col-md-6 col-xxl-3"
    }, React.createElement("div", {
      className: "pricing-list text-left"
    }, React.createElement("div", {
      className: "pricing-header bg-blue-600"
    }, React.createElement("div", {
      className: "pricing-title"
    }, "Premium"), React.createElement("div", {
      className: "pricing-price"
    }, React.createElement("span", {
      className: "pricing-currency"
    }, "$"), React.createElement("span", {
      className: "pricing-amount"
    }, "50"), React.createElement("span", {
      className: "pricing-period"
    }, "/ mo")), React.createElement("p", {
      className: "px-30 pb-25"
    }, "Vestibulum lacinia arcu eget nulla. Class aptent taciti")), React.createElement("ul", {
      className: "pricing-features"
    }, React.createElement("li", null, React.createElement("strong", null, "10GB"), " of Lorem ipsum"), React.createElement("li", null, React.createElement("strong", null, "200MB"), " Max File Size"), React.createElement("li", null, React.createElement("strong", null, "2GHZ"), " CPU"), React.createElement("li", null, React.createElement("strong", null, "256MB"), " Memory"), React.createElement("li", null, React.createElement("strong", null, "2 GB"), " Storage"), React.createElement("li", null, React.createElement("strong", null, "*"), " Sed dignissim lacinia nunc. Curabitur tortor. Pellentesque nibh.")), React.createElement("div", {
      className: "pricing-footer text-center bg-blue-grey-100"
    }, React.createElement("a", {
      className: "btn btn-primary btn-lg",
      href: "#"
    }, React.createElement("i", {
      className: "icon wb-arrow-right font-size-16 mr-15",
      "aria-hidden": "true"
    }), " Add to card")))), React.createElement("div", {
      className: "col-md-6 col-xxl-3"
    }, React.createElement("div", {
      className: "pricing-list text-left"
    }, React.createElement("div", {
      className: "pricing-header bg-red-600"
    }, React.createElement("div", {
      className: "pricing-title"
    }, "Professional"), React.createElement("div", {
      className: "pricing-price"
    }, React.createElement("span", {
      className: "pricing-currency"
    }, "$"), React.createElement("span", {
      className: "pricing-amount"
    }, "60"), React.createElement("span", {
      className: "pricing-period"
    }, "/ mo")), React.createElement("p", {
      className: "px-30 pb-25"
    }, "Vestibulum lacinia arcu eget nulla. Class aptent taciti")), React.createElement("ul", {
      className: "pricing-features"
    }, React.createElement("li", null, React.createElement("strong", null, "10GB"), " of Lorem ipsum"), React.createElement("li", null, React.createElement("strong", null, "200MB"), " Max File Size"), React.createElement("li", null, React.createElement("strong", null, "2GHZ"), " CPU"), React.createElement("li", null, React.createElement("strong", null, "256MB"), " Memory"), React.createElement("li", null, React.createElement("strong", null, "4 GB"), " Storage"), React.createElement("li", null, React.createElement("strong", null, "*"), " Sed dignissim lacinia nunc. Curabitur tortor. Pellentesque nibh.")), React.createElement("div", {
      className: "pricing-footer text-center bg-blue-grey-100"
    }, React.createElement("a", {
      className: "btn btn-primary btn-lg",
      href: "#"
    }, React.createElement("i", {
      className: "icon wb-arrow-right font-size-16 mr-15",
      "aria-hidden": "true"
    }), " Add to card")))), React.createElement("div", {
      className: "col-md-6 col-xxl-3"
    }, React.createElement("div", {
      className: "pricing-list text-left"
    }, React.createElement("div", {
      className: "pricing-header bg-orange-600"
    }, React.createElement("div", {
      className: "pricing-title"
    }, "Flagship"), React.createElement("div", {
      className: "pricing-price"
    }, React.createElement("span", {
      className: "pricing-currency"
    }, "$"), React.createElement("span", {
      className: "pricing-amount"
    }, "70"), React.createElement("span", {
      className: "pricing-period"
    }, "/ mo")), React.createElement("p", {
      className: "px-30 pb-25"
    }, "Vestibulum lacinia arcu eget nulla. Class aptent taciti")), React.createElement("ul", {
      className: "pricing-features"
    }, React.createElement("li", null, React.createElement("strong", null, "10GB"), " of Lorem ipsum"), React.createElement("li", null, React.createElement("strong", null, "200MB"), " Max File Size"), React.createElement("li", null, React.createElement("strong", null, "2GHZ"), " CPU"), React.createElement("li", null, React.createElement("strong", null, "256MB"), " Memory"), React.createElement("li", null, React.createElement("strong", null, "8 GB"), " Storage"), React.createElement("li", null, React.createElement("strong", null, "*"), " Sed dignissim lacinia nunc. Curabitur tortor. Pellentesque nibh.")), React.createElement("div", {
      className: "pricing-footer text-center bg-blue-grey-100"
    }, React.createElement("a", {
      className: "btn btn-primary btn-lg",
      href: "#"
    }, React.createElement("i", {
      className: "icon wb-arrow-right font-size-16 mr-15",
      "aria-hidden": "true"
    }), " Add to card"))))))), React.createElement("div", {
      className: "example-example"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Pricing Table"), React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "pricing-table"
    }, React.createElement("div", {
      className: "pricing-column-four"
    }, React.createElement("div", {
      className: "pricing-header"
    }, React.createElement("div", {
      className: "pricing-price"
    }, React.createElement("span", {
      className: "pricing-currency"
    }, "$"), React.createElement("span", {
      className: "pricing-amount"
    }, "40"), React.createElement("span", {
      className: "pricing-period"
    }, "/ mo")), React.createElement("div", {
      className: "pricing-title"
    }, "Standard")), React.createElement("ul", {
      className: "pricing-features"
    }, React.createElement("li", null, React.createElement("strong", null, "10GB"), " of Lorem ipsum"), React.createElement("li", null, React.createElement("strong", null, "200MB"), " Max File Size"), React.createElement("li", null, React.createElement("strong", null, "2GHZ"), " CPU"), React.createElement("li", null, React.createElement("strong", null, "256MB"), " Memory"), React.createElement("li", null, React.createElement("strong", null, "1 GB"), " Storage")), React.createElement("div", {
      className: "pricing-footer"
    }, React.createElement("a", {
      className: "btn btn-primary btn-outline",
      role: "button",
      href: "#"
    }, React.createElement("i", {
      className: "icon wb-arrow-right font-size-16 mr-15",
      "aria-hidden": "true"
    }), "Add to card"))), React.createElement("div", {
      className: "pricing-column-four featured"
    }, React.createElement("div", {
      className: "pricing-header"
    }, React.createElement("div", {
      className: "pricing-price"
    }, React.createElement("span", {
      className: "pricing-currency"
    }, "$"), React.createElement("span", {
      className: "pricing-amount"
    }, "50"), React.createElement("span", {
      className: "pricing-period"
    }, "/ mo")), React.createElement("div", {
      className: "pricing-title"
    }, "Premium")), React.createElement("ul", {
      className: "pricing-features"
    }, React.createElement("li", null, React.createElement("strong", null, "10GB"), " of Lorem ipsum"), React.createElement("li", null, React.createElement("strong", null, "200MB"), " Max File Size"), React.createElement("li", null, React.createElement("strong", null, "2GHZ"), " CPU"), React.createElement("li", null, React.createElement("strong", null, "256MB"), " Memory"), React.createElement("li", null, React.createElement("strong", null, "2 GB"), " Storage")), React.createElement("div", {
      className: "pricing-footer"
    }, React.createElement("a", {
      className: "btn btn-primary btn-outline",
      role: "button",
      href: "#"
    }, React.createElement("i", {
      className: "icon wb-arrow-right font-size-16 mr-15",
      "aria-hidden": "true"
    }), "Add to card"))), React.createElement("div", {
      className: "pricing-column-four"
    }, React.createElement("div", {
      className: "pricing-header"
    }, React.createElement("div", {
      className: "pricing-price"
    }, React.createElement("span", {
      className: "pricing-currency"
    }, "$"), React.createElement("span", {
      className: "pricing-amount"
    }, "60"), React.createElement("span", {
      className: "pricing-period"
    }, "/ mo")), React.createElement("div", {
      className: "pricing-title"
    }, "Professional")), React.createElement("ul", {
      className: "pricing-features"
    }, React.createElement("li", null, React.createElement("strong", null, "10GB"), " of Lorem ipsum"), React.createElement("li", null, React.createElement("strong", null, "200MB"), " Max File Size"), React.createElement("li", null, React.createElement("strong", null, "2GHZ"), " CPU"), React.createElement("li", null, React.createElement("strong", null, "256MB"), " Memory"), React.createElement("li", null, React.createElement("strong", null, "4 GB"), " Storage")), React.createElement("div", {
      className: "pricing-footer"
    }, React.createElement("a", {
      className: "btn btn-primary btn-outline",
      role: "button",
      href: "#"
    }, React.createElement("i", {
      className: "icon wb-arrow-right font-size-16 mr-15",
      "aria-hidden": "true"
    }), "Add to card"))), React.createElement("div", {
      className: "pricing-column-four"
    }, React.createElement("div", {
      className: "pricing-header"
    }, React.createElement("div", {
      className: "pricing-price"
    }, React.createElement("span", {
      className: "pricing-currency"
    }, "$"), React.createElement("span", {
      className: "pricing-amount"
    }, "70"), React.createElement("span", {
      className: "pricing-period"
    }, "/ mo")), React.createElement("div", {
      className: "pricing-title"
    }, "Flagship")), React.createElement("ul", {
      className: "pricing-features"
    }, React.createElement("li", null, React.createElement("strong", null, "10GB"), " of Lorem ipsum"), React.createElement("li", null, React.createElement("strong", null, "200MB"), " Max File Size"), React.createElement("li", null, React.createElement("strong", null, "2GHZ"), " CPU"), React.createElement("li", null, React.createElement("strong", null, "256MB"), " Memory"), React.createElement("li", null, React.createElement("strong", null, "8 GB"), " Storage")), React.createElement("div", {
      className: "pricing-footer"
    }, React.createElement("a", {
      className: "btn btn-primary btn-outline",
      role: "button",
      href: "#"
    }, React.createElement("i", {
      className: "icon wb-arrow-right font-size-16 mr-15",
      "aria-hidden": "true"
    }), "Add to card"))))))))));
  }

}

module.exportDefault(PricingTablesExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"ribbon.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/structure/ribbon.jsx                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class RibbonExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "Ribbon"), React.createElement("ol", {
      className: "breadcrumb"
    }, React.createElement("li", {
      className: "breadcrumb-item"
    }, React.createElement("a", {
      href: "../index.html"
    }, "Home")), React.createElement("li", {
      className: "breadcrumb-item active"
    }, "Structure")), React.createElement("div", {
      className: "page-header-actions"
    }, React.createElement("form", null, React.createElement("div", {
      className: "input-search input-search-dark"
    }, React.createElement("i", {
      className: "input-search-icon wb-search",
      "aria-hidden": "true"
    }), React.createElement("input", {
      type: "text",
      className: "form-control",
      name: true,
      placeholder: "Search..."
    }))))), React.createElement("div", {
      className: "page-content"
    }, React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-body container-fluid"
    }, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-12"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Basic"), React.createElement("p", null, "Ribbons have shared markup, starting with the default ", React.createElement("code", null, ".ribbons"), "                  class, as well as shared states. Swap modifier classes ", React.createElement("code", null, ".vertical"), "                  to switch ribbon direction. Add any of the below mentioned modifier classes (example, ", React.createElement("code", null, ".ribbon-danger"), " and", React.createElement("code", null, ".ribbon-warning"), ") to change the appearance of a ribbon."), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-xl-2 col-md-4"
    }, React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "ribbon"
    }, React.createElement("span", {
      className: "ribbon-inner"
    }, "Ribbon")), React.createElement("p", null, "Integer nec odio. Praesent libero. Sed cursus ante dapibus diam."))), React.createElement("div", {
      className: "col-xl-2 col-md-4"
    }, React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "ribbon ribbon-primary"
    }, React.createElement("span", {
      className: "ribbon-inner"
    }, "Ribbon")), React.createElement("p", null, "Integer nec odio. Praesent libero. Sed cursus ante dapibus diam."))), React.createElement("div", {
      className: "col-xl-2 col-md-4"
    }, React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "ribbon ribbon-danger"
    }, React.createElement("span", {
      className: "ribbon-inner"
    }, "Ribbon")), React.createElement("p", null, "Integer nec odio. Praesent libero. Sed cursus ante dapibus diam."))), React.createElement("div", {
      className: "col-xl-2 col-md-4"
    }, React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "ribbon ribbon-vertical ribbon-warning"
    }, React.createElement("span", {
      className: "ribbon-inner"
    }, React.createElement("i", {
      className: "icon wb-heart",
      "aria-hidden": "true"
    }))), React.createElement("p", null, "Integer nec odio. Praesent libero. Sed cursus ante dapibus diam."))), React.createElement("div", {
      className: "col-xl-2 col-md-4"
    }, React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "ribbon ribbon-vertical ribbon-success"
    }, React.createElement("span", {
      className: "ribbon-inner"
    }, React.createElement("i", {
      className: "icon wb-heart",
      "aria-hidden": "true"
    }))), React.createElement("p", null, "Integer nec odio. Praesent libero. Sed cursus ante dapibus diam."))), React.createElement("div", {
      className: "col-xl-2 col-md-4"
    }, React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "ribbon ribbon-vertical ribbon-info"
    }, React.createElement("span", {
      className: "ribbon-inner"
    }, React.createElement("i", {
      className: "icon wb-heart",
      "aria-hidden": "true"
    }))), React.createElement("p", null, "Integer nec odio. Praesent libero. Sed cursus ante dapibus diam."))))))), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-12"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Reverse"), React.createElement("p", null, " Alternatively, you can align ribbons to the right by using ", React.createElement("code", null, ".ribbon-reverse"), "                  utility classes."), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-xl-2 col-md-4"
    }, React.createElement("div", {
      className: "example example-reverse"
    }, React.createElement("div", {
      className: "ribbon ribbon-reverse"
    }, React.createElement("span", {
      className: "ribbon-inner"
    }, "Ribbon")), React.createElement("p", null, "Integer nec odio. Praesent libero. Sed cursus ante dapibus diam."))), React.createElement("div", {
      className: "col-xl-2 col-md-4"
    }, React.createElement("div", {
      className: "example example-reverse"
    }, React.createElement("div", {
      className: "ribbon ribbon-reverse ribbon-primary"
    }, React.createElement("span", {
      className: "ribbon-inner"
    }, "Ribbon")), React.createElement("p", null, "Integer nec odio. Praesent libero. Sed cursus ante dapibus diam."))), React.createElement("div", {
      className: "col-xl-2 col-md-4"
    }, React.createElement("div", {
      className: "example example-reverse"
    }, React.createElement("div", {
      className: "ribbon ribbon-reverse ribbon-danger"
    }, React.createElement("span", {
      className: "ribbon-inner"
    }, "Ribbon")), React.createElement("p", null, "Integer nec odio. Praesent libero. Sed cursus ante dapibus diam."))), React.createElement("div", {
      className: "col-xl-2 col-md-4"
    }, React.createElement("div", {
      className: "example example-reverse"
    }, React.createElement("div", {
      className: "ribbon ribbon-vertical ribbon-reverse ribbon-warning"
    }, React.createElement("span", {
      className: "ribbon-inner"
    }, React.createElement("i", {
      className: "icon wb-heart",
      "aria-hidden": "true"
    }))), React.createElement("p", null, "Integer nec odio. Praesent libero. Sed cursus ante dapibus diam."))), React.createElement("div", {
      className: "col-xl-2 col-md-4"
    }, React.createElement("div", {
      className: "example example-reverse"
    }, React.createElement("div", {
      className: "ribbon ribbon-vertical ribbon-reverse ribbon-success"
    }, React.createElement("span", {
      className: "ribbon-inner"
    }, React.createElement("i", {
      className: "icon wb-heart",
      "aria-hidden": "true"
    }))), React.createElement("p", null, "Integer nec odio. Praesent libero. Sed cursus ante dapibus diam."))), React.createElement("div", {
      className: "col-xl-2 col-md-4"
    }, React.createElement("div", {
      className: "example example-reverse"
    }, React.createElement("div", {
      className: "ribbon ribbon-vertical ribbon-reverse ribbon-info"
    }, React.createElement("span", {
      className: "ribbon-inner"
    }, React.createElement("i", {
      className: "icon wb-heart",
      "aria-hidden": "true"
    }))), React.createElement("p", null, "Integer nec odio. Praesent libero. Sed cursus ante dapibus diam."))))))), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-12"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Bookmark"), React.createElement("p", null, "Use ", React.createElement("code", null, ".ribbon-bookmark"), " class to quickly switch a bookmark styled ribbons."), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-3"
    }, React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "ribbon ribbon-bookmark"
    }, React.createElement("span", {
      className: "ribbon-inner"
    }, "Ribbon")), React.createElement("p", null, "Integer nec odio. Praesent libero. Sed cursus ante dapibus diam."))), React.createElement("div", {
      className: "col-md-3"
    }, React.createElement("div", {
      className: "example example-reverse"
    }, React.createElement("div", {
      className: "ribbon ribbon-bookmark ribbon-reverse ribbon-primary"
    }, React.createElement("span", {
      className: "ribbon-inner"
    }, "Ribbon")), React.createElement("p", null, "Integer nec odio. Praesent libero. Sed cursus ante dapibus diam."))), React.createElement("div", {
      className: "col-md-3"
    }, React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "ribbon ribbon-vertical ribbon-bookmark ribbon-danger"
    }, React.createElement("span", {
      className: "ribbon-inner"
    }, React.createElement("i", {
      className: "icon wb-heart",
      "aria-hidden": "true"
    }))), React.createElement("p", null, "Integer nec odio. Praesent libero. Sed cursus ante dapibus diam."))), React.createElement("div", {
      className: "col-md-3"
    }, React.createElement("div", {
      className: "example example-reverse"
    }, React.createElement("div", {
      className: "ribbon ribbon-vertical ribbon-bookmark ribbon-reverse ribbon-warning"
    }, React.createElement("span", {
      className: "ribbon-inner"
    }, React.createElement("i", {
      className: "icon wb-heart",
      "aria-hidden": "true"
    }))), React.createElement("p", null, "Integer nec odio. Praesent libero. Sed cursus ante dapibus diam."))))))), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-12"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Clip"), React.createElement("p", null, "Use ", React.createElement("code", null, ".ribbon-clip"), " class to quickly switch a clip styled ribbons, add ", React.createElement("code", null, ".ribbon-bottom"), " to switch the ribbon direction."), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-3"
    }, React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "ribbon ribbon-clip"
    }, React.createElement("span", {
      className: "ribbon-inner"
    }, "Ribbon")), React.createElement("p", null, "Integer nec odio. Praesent libero. Sed cursus ante dapibus diam."))), React.createElement("div", {
      className: "col-md-3"
    }, React.createElement("div", {
      className: "example example-reverse"
    }, React.createElement("div", {
      className: "ribbon ribbon-clip ribbon-reverse ribbon-primary"
    }, React.createElement("span", {
      className: "ribbon-inner"
    }, "Ribbon")), React.createElement("p", null, "Integer nec odio. Praesent libero. Sed cursus ante dapibus diam."))), React.createElement("div", {
      className: "col-md-3"
    }, React.createElement("div", {
      className: "example example-bottom"
    }, React.createElement("div", {
      className: "ribbon ribbon-clip ribbon-bottom ribbon-danger"
    }, React.createElement("span", {
      className: "ribbon-inner"
    }, "Ribbon")), React.createElement("p", null, "Integer nec odio. Praesent libero. Sed cursus ante dapibus diam."))), React.createElement("div", {
      className: "col-md-3"
    }, React.createElement("div", {
      className: "example example-bottom-reverse"
    }, React.createElement("div", {
      className: "ribbon ribbon-clip ribbon-reverse ribbon-bottom ribbon-warning"
    }, React.createElement("span", {
      className: "ribbon-inner"
    }, "Ribbon")), React.createElement("p", null, "Integer nec odio. Praesent libero. Sed cursus ante dapibus diam."))))))), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "example-wrap m-sm-0"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Badge"), React.createElement("p", null, "Use ", React.createElement("code", null, ".ribbon-badge"), " class to quickly switch a badge styled ribbons, add ", React.createElement("code", null, ".ribbon-bottom"), " to switch the ribbon direction."), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "ribbon ribbon-badge ribbon-primary"
    }, React.createElement("span", {
      className: "ribbon-inner"
    }, "Ribbon")), React.createElement("p", null, "Integer nec odio. Praesent libero. Sed cursus ante dapibus diam."))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "example example-reverse"
    }, React.createElement("div", {
      className: "ribbon ribbon-badge ribbon-primary ribbon-reverse"
    }, React.createElement("span", {
      className: "ribbon-inner"
    }, "Ribbon")), React.createElement("p", null, "Integer nec odio. Praesent libero. Sed cursus ante dapibus diam."))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "example example-bottom"
    }, React.createElement("div", {
      className: "ribbon ribbon-badge ribbon-primary ribbon-bottom"
    }, React.createElement("span", {
      className: "ribbon-inner"
    }, "Ribbon")), React.createElement("p", null, "Integer nec odio. Praesent libero. Sed cursus ante dapibus diam."))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "example example-bottom-reverse"
    }, React.createElement("div", {
      className: "ribbon ribbon-badge ribbon-primary ribbon-reverse ribbon-bottom"
    }, React.createElement("span", {
      className: "ribbon-inner"
    }, "Ribbon")), React.createElement("p", null, "Integer nec odio. Praesent libero. Sed cursus ante dapibus diam.")))))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Corner"), React.createElement("p", null, "Use ", React.createElement("code", null, ".ribbon-corner"), " class to quickly switch a corner styled ribbons, add ", React.createElement("code", null, ".ribbon-bottom"), " to switch the ribbon direction. An icon used in an ribbon with additional .wb-heart class."), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "ribbon ribbon-corner ribbon-primary"
    }, React.createElement("span", {
      className: "ribbon-inner"
    }, React.createElement("i", {
      className: "icon wb-heart",
      "aria-hidden": "true"
    }))), React.createElement("p", null, "Integer nec odio. Praesent libero. Sed cursus ante dapibus diam."))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "example example-reverse"
    }, React.createElement("div", {
      className: "ribbon ribbon-corner ribbon-primary ribbon-reverse"
    }, React.createElement("span", {
      className: "ribbon-inner"
    }, React.createElement("i", {
      className: "icon wb-heart",
      "aria-hidden": "true"
    }))), React.createElement("p", null, "Integer nec odio. Praesent libero. Sed cursus ante dapibus diam."))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "example example-bottom"
    }, React.createElement("div", {
      className: "ribbon ribbon-corner ribbon-primary ribbon-bottom"
    }, React.createElement("span", {
      className: "ribbon-inner"
    }, React.createElement("i", {
      className: "icon wb-heart",
      "aria-hidden": "true"
    }))), React.createElement("p", null, "Integer nec odio. Praesent libero. Sed cursus ante dapibus diam."))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "example example-bottom-reverse"
    }, React.createElement("div", {
      className: "ribbon ribbon-corner ribbon-primary ribbon-reverse ribbon-bottom"
    }, React.createElement("span", {
      className: "ribbon-inner"
    }, React.createElement("i", {
      className: "icon wb-heart",
      "aria-hidden": "true"
    }))), React.createElement("p", null, "Integer nec odio. Praesent libero. Sed cursus ante dapibus diam.")))))))))));
  }

}

module.exportDefault(RibbonExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"step.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/structure/step.jsx                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class StepExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "Step"), React.createElement("ol", {
      className: "breadcrumb"
    }, React.createElement("li", {
      className: "breadcrumb-item"
    }, React.createElement("a", {
      href: "../index.html"
    }, "Home")), React.createElement("li", {
      className: "breadcrumb-item active"
    }, "Structure")), React.createElement("div", {
      className: "page-header-actions"
    }, React.createElement("form", null, React.createElement("div", {
      className: "input-search input-search-dark"
    }, React.createElement("i", {
      className: "input-search-icon wb-search",
      "aria-hidden": "true"
    }), React.createElement("input", {
      type: "text",
      className: "form-control",
      name: true,
      placeholder: "Search..."
    }))))), React.createElement("div", {
      className: "page-content"
    }, React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-body container-fluid"
    }, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-lg-12"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Default"), React.createElement("p", null, "A set of step."), React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "steps row"
    }, React.createElement("div", {
      className: "step col-lg-4"
    }, React.createElement("span", {
      className: "step-number"
    }, "1"), React.createElement("div", {
      className: "step-desc"
    }, React.createElement("span", {
      className: "step-title"
    }, "Shopping"), React.createElement("p", null, "Choose what you want"))), React.createElement("div", {
      className: "step col-lg-4 current"
    }, React.createElement("span", {
      className: "step-number"
    }, "2"), React.createElement("div", {
      className: "step-desc"
    }, React.createElement("span", {
      className: "step-title"
    }, "Billing"), React.createElement("p", null, "Pay for the bill"))), React.createElement("div", {
      className: "step col-lg-4"
    }, React.createElement("span", {
      className: "step-number"
    }, "3"), React.createElement("div", {
      className: "step-desc"
    }, React.createElement("span", {
      className: "step-title"
    }, "Getting"), React.createElement("p", null, "Waiting for the goods"))))))), React.createElement("div", {
      className: "col-lg-12"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "STEPS WITH ICONS"), React.createElement("p", null, "A set of steps with a available icon."), React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "steps row"
    }, React.createElement("div", {
      className: "step col-md-4"
    }, React.createElement("span", {
      className: "step-icon icon wb-shopping-cart",
      "aria-hidden": "true"
    }), React.createElement("div", {
      className: "step-desc"
    }, React.createElement("span", {
      className: "step-title"
    }, "Shopping"))), React.createElement("div", {
      className: "step col-md-4 current"
    }, React.createElement("span", {
      className: "step-icon icon wb-pluse",
      "aria-hidden": "true"
    }), React.createElement("div", {
      className: "step-desc"
    }, React.createElement("span", {
      className: "step-title"
    }, "Billing"))), React.createElement("div", {
      className: "step col-md-4"
    }, React.createElement("span", {
      className: "step-icon icon wb-time",
      "aria-hidden": "true"
    }), React.createElement("div", {
      className: "step-desc"
    }, React.createElement("span", {
      className: "step-title"
    }, "Getting")))))))), React.createElement("div", {
      className: "row row-lg"
    }, React.createElement("div", {
      className: "col-xl-3 col-lg-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "States Done"), React.createElement("p", null, "A step with classname ", React.createElement("code", null, ".done")), React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "step done"
    }, React.createElement("span", {
      className: "step-number"
    }, "1"), React.createElement("div", {
      className: "step-desc"
    }, React.createElement("span", {
      className: "step-title"
    }, "Getting"), React.createElement("p", null, "Waiting for the goods")))))), React.createElement("div", {
      className: "col-xl-3 col-lg-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "States Error"), React.createElement("p", null, "A step with classname ", React.createElement("code", null, ".error")), React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "step error"
    }, React.createElement("span", {
      className: "step-number"
    }, "2"), React.createElement("div", {
      className: "step-desc"
    }, React.createElement("span", {
      className: "step-title"
    }, "Getting"), React.createElement("p", null, "Waiting for the goods")))))), React.createElement("div", {
      className: "col-xl-3 col-lg-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "States Current"), React.createElement("p", null, "A step with classname ", React.createElement("code", null, ".current")), React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "step current"
    }, React.createElement("span", {
      className: "step-number"
    }, "3"), React.createElement("div", {
      className: "step-desc"
    }, React.createElement("span", {
      className: "step-title"
    }, "Getting"), React.createElement("p", null, "Waiting for the goods")))))), React.createElement("div", {
      className: "col-xl-3 col-lg-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "States Disabled"), React.createElement("p", null, "A step with classname ", React.createElement("code", null, ".disabled")), React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "step disabled"
    }, React.createElement("span", {
      className: "step-number"
    }, "4"), React.createElement("div", {
      className: "step-desc"
    }, React.createElement("span", {
      className: "step-title"
    }, "Getting"), React.createElement("p", null, "Waiting for the goods"))))))), React.createElement("div", {
      className: "row row-lg"
    }, React.createElement("div", {
      className: "col-lg-8"
    }, React.createElement("div", {
      className: "example-wrap m-md-0"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Sizing"), React.createElement("p", null, "Steps can have different sizes."), React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "steps row steps-xs"
    }, React.createElement("div", {
      className: "step col-md-4"
    }, React.createElement("span", {
      className: "step-icon icon wb-shopping-cart",
      "aria-hidden": "true"
    }), React.createElement("div", {
      className: "step-desc"
    }, React.createElement("span", {
      className: "step-title"
    }, "Shopping"))), React.createElement("div", {
      className: "step col-md-4 current"
    }, React.createElement("span", {
      className: "step-icon icon wb-pluse",
      "aria-hidden": "true"
    }), React.createElement("div", {
      className: "step-desc"
    }, React.createElement("span", {
      className: "step-title"
    }, "Billing"))), React.createElement("div", {
      className: "step col-md-4"
    }, React.createElement("span", {
      className: "step-icon icon wb-time",
      "aria-hidden": "true"
    }), React.createElement("div", {
      className: "step-desc"
    }, React.createElement("span", {
      className: "step-title"
    }, "Getting"))))), React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "steps row steps-sm"
    }, React.createElement("div", {
      className: "step col-md-4"
    }, React.createElement("span", {
      className: "step-icon icon wb-shopping-cart",
      "aria-hidden": "true"
    }), React.createElement("div", {
      className: "step-desc"
    }, React.createElement("span", {
      className: "step-title"
    }, "Shopping"))), React.createElement("div", {
      className: "step col-md-4 current"
    }, React.createElement("span", {
      className: "step-icon icon wb-pluse",
      "aria-hidden": "true"
    }), React.createElement("div", {
      className: "step-desc"
    }, React.createElement("span", {
      className: "step-title"
    }, "Billing"))), React.createElement("div", {
      className: "step col-md-4"
    }, React.createElement("span", {
      className: "step-icon icon wb-time",
      "aria-hidden": "true"
    }), React.createElement("div", {
      className: "step-desc"
    }, React.createElement("span", {
      className: "step-title"
    }, "Getting"))))), React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "steps row"
    }, React.createElement("div", {
      className: "step col-md-4"
    }, React.createElement("span", {
      className: "step-icon icon wb-shopping-cart",
      "aria-hidden": "true"
    }), React.createElement("div", {
      className: "step-desc"
    }, React.createElement("span", {
      className: "step-title"
    }, "Shopping"))), React.createElement("div", {
      className: "step col-md-4 current"
    }, React.createElement("span", {
      className: "step-icon icon wb-pluse",
      "aria-hidden": "true"
    }), React.createElement("div", {
      className: "step-desc"
    }, React.createElement("span", {
      className: "step-title"
    }, "Billing"))), React.createElement("div", {
      className: "step col-md-4"
    }, React.createElement("span", {
      className: "step-icon icon wb-time",
      "aria-hidden": "true"
    }), React.createElement("div", {
      className: "step-desc"
    }, React.createElement("span", {
      className: "step-title"
    }, "Getting"))))), React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "steps row steps-lg"
    }, React.createElement("div", {
      className: "step col-md-4"
    }, React.createElement("span", {
      className: "step-icon icon wb-shopping-cart",
      "aria-hidden": "true"
    }), React.createElement("div", {
      className: "step-desc"
    }, React.createElement("span", {
      className: "step-title"
    }, "Shopping"))), React.createElement("div", {
      className: "step col-md-4 current"
    }, React.createElement("span", {
      className: "step-icon icon wb-pluse",
      "aria-hidden": "true"
    }), React.createElement("div", {
      className: "step-desc"
    }, React.createElement("span", {
      className: "step-title"
    }, "Billing"))), React.createElement("div", {
      className: "step col-md-4"
    }, React.createElement("span", {
      className: "step-icon icon wb-time",
      "aria-hidden": "true"
    }), React.createElement("div", {
      className: "step-desc"
    }, React.createElement("span", {
      className: "step-title"
    }, "Getting"))))))), React.createElement("div", {
      className: "col-lg-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "VERTICAL"), React.createElement("p", null, "A step can be displayed stacked vertically."), React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "steps steps-vertical"
    }, React.createElement("div", {
      className: "step"
    }, React.createElement("span", {
      className: "step-number"
    }, "1"), React.createElement("div", {
      className: "step-desc"
    }, React.createElement("span", {
      className: "step-title"
    }, "Shopping"), React.createElement("p", null, "Choose what you want"))), React.createElement("div", {
      className: "step current"
    }, React.createElement("span", {
      className: "step-number"
    }, "2"), React.createElement("div", {
      className: "step-desc"
    }, React.createElement("span", {
      className: "step-title"
    }, "Billing"), React.createElement("p", null, "Pay for the bill"))), React.createElement("div", {
      className: "step"
    }, React.createElement("span", {
      className: "step-number"
    }, "3"), React.createElement("div", {
      className: "step-desc"
    }, React.createElement("span", {
      className: "step-title"
    }, "Getting"), React.createElement("p", null, "Waiting for the goods")))))))))), React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-heading"
    }, React.createElement("div", {
      className: "panel-title"
    }, "Pearls Steps")), React.createElement("div", {
      className: "panel-body container-fluid"
    }, React.createElement("div", {
      className: "row row-lg"
    }, React.createElement("div", {
      className: "col-lg-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Default"), React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "pearls row"
    }, React.createElement("div", {
      className: "pearl done col-4"
    }, React.createElement("span", {
      className: "pearl-number"
    }, "1"), React.createElement("span", {
      className: "pearl-title"
    }, "Account Info")), React.createElement("div", {
      className: "pearl current col-4"
    }, React.createElement("span", {
      className: "pearl-number"
    }, "2"), React.createElement("span", {
      className: "pearl-title"
    }, "Billing Info")), React.createElement("div", {
      className: "pearl col-4"
    }, React.createElement("span", {
      className: "pearl-number"
    }, "3"), React.createElement("span", {
      className: "pearl-title"
    }, "Confirmation")))))), React.createElement("div", {
      className: "col-lg-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Icon"), React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "pearls row"
    }, React.createElement("div", {
      className: "pearl done col-4"
    }, React.createElement("div", {
      className: "pearl-icon"
    }, React.createElement("i", {
      className: "icon wb-user",
      "aria-hidden": "true"
    })), React.createElement("span", {
      className: "pearl-title"
    }, "Account Info")), React.createElement("div", {
      className: "pearl current col-4"
    }, React.createElement("div", {
      className: "pearl-icon"
    }, React.createElement("i", {
      className: "icon wb-payment",
      "aria-hidden": "true"
    })), React.createElement("span", {
      className: "pearl-title"
    }, "Billing Info")), React.createElement("div", {
      className: "pearl col-4"
    }, React.createElement("div", {
      className: "pearl-icon"
    }, React.createElement("i", {
      className: "icon wb-check",
      "aria-hidden": "true"
    })), React.createElement("span", {
      className: "pearl-title"
    }, "Confirmation")))))), React.createElement("div", {
      className: "col-lg-6"
    }, React.createElement("div", {
      className: "example-wrap m-md-0"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Sizing"), React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "pearls pearls-xs row"
    }, React.createElement("div", {
      className: "pearl done col-4"
    }, React.createElement("span", {
      className: "pearl-number"
    }, "1"), React.createElement("span", {
      className: "pearl-title"
    }, "Account Info")), React.createElement("div", {
      className: "pearl current col-4"
    }, React.createElement("span", {
      className: "pearl-number"
    }, "2"), React.createElement("span", {
      className: "pearl-title"
    }, "Billing Info")), React.createElement("div", {
      className: "pearl col-4"
    }, React.createElement("span", {
      className: "pearl-number"
    }, "3"), React.createElement("span", {
      className: "pearl-title"
    }, "Confirmation")))), React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "pearls pearls-sm row"
    }, React.createElement("div", {
      className: "pearl done col-4"
    }, React.createElement("span", {
      className: "pearl-number"
    }, "1"), React.createElement("span", {
      className: "pearl-title"
    }, "Account Info")), React.createElement("div", {
      className: "pearl current col-4"
    }, React.createElement("span", {
      className: "pearl-number"
    }, "2"), React.createElement("span", {
      className: "pearl-title"
    }, "Billing Info")), React.createElement("div", {
      className: "pearl col-4"
    }, React.createElement("span", {
      className: "pearl-number"
    }, "3"), React.createElement("span", {
      className: "pearl-title"
    }, "Confirmation")))), React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "pearls row"
    }, React.createElement("div", {
      className: "pearl done col-4"
    }, React.createElement("span", {
      className: "pearl-number"
    }, "1"), React.createElement("span", {
      className: "pearl-title"
    }, "Account Info")), React.createElement("div", {
      className: "pearl current col-4"
    }, React.createElement("span", {
      className: "pearl-number"
    }, "2"), React.createElement("span", {
      className: "pearl-title"
    }, "Billing Info")), React.createElement("div", {
      className: "pearl col-4"
    }, React.createElement("span", {
      className: "pearl-number"
    }, "3"), React.createElement("span", {
      className: "pearl-title"
    }, "Confirmation")))), React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "pearls pearls-lg row"
    }, React.createElement("div", {
      className: "pearl done col-4"
    }, React.createElement("span", {
      className: "pearl-number"
    }, "1"), React.createElement("span", {
      className: "pearl-title"
    }, "Account Info")), React.createElement("div", {
      className: "pearl current col-4"
    }, React.createElement("span", {
      className: "pearl-number"
    }, "2"), React.createElement("span", {
      className: "pearl-title"
    }, "Billing Info")), React.createElement("div", {
      className: "pearl col-4"
    }, React.createElement("span", {
      className: "pearl-number"
    }, "3"), React.createElement("span", {
      className: "pearl-title"
    }, "Confirmation")))))), React.createElement("div", {
      className: "col-lg-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "States"), React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "pearls row"
    }, React.createElement("div", {
      className: "pearl current col-4"
    }, React.createElement("div", {
      className: "pearl-icon"
    }, React.createElement("i", {
      className: "icon wb-user",
      "aria-hidden": "true"
    })), React.createElement("span", {
      className: "pearl-title"
    }, "Account Info")), React.createElement("div", {
      className: "pearl disabled col-4"
    }, React.createElement("div", {
      className: "pearl-icon"
    }, React.createElement("i", {
      className: "icon wb-payment",
      "aria-hidden": "true"
    })), React.createElement("span", {
      className: "pearl-title"
    }, "Billing Info")), React.createElement("div", {
      className: "pearl disabled col-4"
    }, React.createElement("div", {
      className: "pearl-icon"
    }, React.createElement("i", {
      className: "icon wb-check",
      "aria-hidden": "true"
    })), React.createElement("span", {
      className: "pearl-title"
    }, "Confirmation")))), React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "pearls row"
    }, React.createElement("div", {
      className: "pearl done col-4"
    }, React.createElement("div", {
      className: "pearl-icon"
    }, React.createElement("i", {
      className: "icon wb-user",
      "aria-hidden": "true"
    })), React.createElement("span", {
      className: "pearl-title"
    }, "Account Info")), React.createElement("div", {
      className: "pearl current col-4"
    }, React.createElement("div", {
      className: "pearl-icon"
    }, React.createElement("i", {
      className: "icon wb-payment",
      "aria-hidden": "true"
    })), React.createElement("span", {
      className: "pearl-title"
    }, "Billing Info")), React.createElement("div", {
      className: "pearl disabled col-4"
    }, React.createElement("div", {
      className: "pearl-icon"
    }, React.createElement("i", {
      className: "icon wb-check",
      "aria-hidden": "true"
    })), React.createElement("span", {
      className: "pearl-title"
    }, "Confirmation")))), React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "pearls row"
    }, React.createElement("div", {
      className: "pearl done col-4"
    }, React.createElement("div", {
      className: "pearl-icon"
    }, React.createElement("i", {
      className: "icon wb-user",
      "aria-hidden": "true"
    })), React.createElement("span", {
      className: "pearl-title"
    }, "Account Info")), React.createElement("div", {
      className: "pearl current error col-4"
    }, React.createElement("div", {
      className: "pearl-icon"
    }, React.createElement("i", {
      className: "icon wb-payment",
      "aria-hidden": "true"
    })), React.createElement("span", {
      className: "pearl-title"
    }, "Billing Info")), React.createElement("div", {
      className: "pearl disabled col-4"
    }, React.createElement("div", {
      className: "pearl-icon"
    }, React.createElement("i", {
      className: "icon wb-check",
      "aria-hidden": "true"
    })), React.createElement("span", {
      className: "pearl-title"
    }, "Confirmation")))), React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "pearls row"
    }, React.createElement("div", {
      className: "pearl done col-4"
    }, React.createElement("div", {
      className: "pearl-icon"
    }, React.createElement("i", {
      className: "icon wb-user",
      "aria-hidden": "true"
    })), React.createElement("span", {
      className: "pearl-title"
    }, "Account Info")), React.createElement("div", {
      className: "pearl done col-4"
    }, React.createElement("div", {
      className: "pearl-icon"
    }, React.createElement("i", {
      className: "icon wb-payment",
      "aria-hidden": "true"
    })), React.createElement("span", {
      className: "pearl-title"
    }, "Billing Info")), React.createElement("div", {
      className: "pearl current col-4"
    }, React.createElement("div", {
      className: "pearl-icon"
    }, React.createElement("i", {
      className: "icon wb-check",
      "aria-hidden": "true"
    })), React.createElement("span", {
      className: "pearl-title"
    }, "Confirmation")))))))))));
  }

}

module.exportDefault(StepExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"testimonials.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/structure/testimonials.jsx                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class TestimonialsExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "Testimonials"), React.createElement("ol", {
      className: "breadcrumb"
    }, React.createElement("li", {
      className: "breadcrumb-item"
    }, React.createElement("a", {
      href: "../index.html"
    }, "Home")), React.createElement("li", {
      className: "breadcrumb-item active"
    }, "Structure")), React.createElement("div", {
      className: "page-header-actions"
    }, React.createElement("form", null, React.createElement("div", {
      className: "input-search input-search-dark"
    }, React.createElement("i", {
      className: "input-search-icon wb-search",
      "aria-hidden": "true"
    }), React.createElement("input", {
      type: "text",
      className: "form-control",
      name: true,
      placeholder: "Search..."
    }))))), React.createElement("div", {
      className: "page-content"
    }, React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-body container-fluid"
    }, React.createElement("div", {
      className: "row row-lg"
    }, React.createElement("div", {
      className: "col-12"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Default"), React.createElement("p", null, "Testimonials from customers who are not famous have been effectively used in marketing for as long as marketing has existed."), React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "testimonial"
    }, React.createElement("ul", {
      className: "testimonial-ul row"
    }, React.createElement("li", {
      className: "testimonial-item col-md-4"
    }, React.createElement("div", {
      className: "testimonial-content"
    }, React.createElement("p", null, "Nam nec ante. Sed lacinia, urna non tincidunt mattis, tortor neque adipiscing diam, a cursus ipsum ante quis turpis. ")), React.createElement("div", {
      className: "testimonial-image"
    }, React.createElement("a", {
      className: "avatar",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/1.jpg",
      alt: "image"
    }))), React.createElement("span", {
      className: "testimonial-author"
    }, "Herman Beck"), React.createElement("span", {
      className: "testimonial-company"
    }, "Web Designer")), React.createElement("li", {
      className: "testimonial-item col-md-4"
    }, React.createElement("div", {
      className: "testimonial-content"
    }, React.createElement("p", null, "Suspendisse in justo eu magna luctus suscipit. Sed lectus. Integer euismod lacus luctus magna. ")), React.createElement("div", {
      className: "testimonial-image"
    }, React.createElement("a", {
      className: "avatar",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/2.jpg",
      alt: "image"
    }))), React.createElement("span", {
      className: "testimonial-author"
    }, "Mary Adams"), React.createElement("span", {
      className: "testimonial-company"
    }, "Videographer")), React.createElement("li", {
      className: "testimonial-item col-md-4"
    }, React.createElement("div", {
      className: "testimonial-content"
    }, React.createElement("p", null, "Nulla quis sem at nibh elementum imperdiet. Duis sagittis ipsum. Praesent mauris. Fusce nec tellus sed augue semper porta.")), React.createElement("div", {
      className: "testimonial-image"
    }, React.createElement("a", {
      className: "avatar",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/3.jpg",
      alt: "image"
    }))), React.createElement("span", {
      className: "testimonial-author"
    }, "Owen Hunt"), React.createElement("span", {
      className: "testimonial-company"
    }, "Wordpress Ninja"))))))), React.createElement("div", {
      className: "col-12"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Reverse"), React.createElement("p", null, "The content, customer\u2019s avatar, author and company information can be align to bottom right side by using an additional class", React.createElement("code", null, ".testimonial-reverse"), "."), React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "testimonial testimonial-reverse"
    }, React.createElement("ul", {
      className: "testimonial-ul row"
    }, React.createElement("li", {
      className: "testimonial-item col-md-4"
    }, React.createElement("div", {
      className: "testimonial-content"
    }, React.createElement("p", null, "Nam nec ante. Sed lacinia, urna non tincidunt mattis, tortor neque adipiscing diam, a cursus ipsum ante quis turpis. ")), React.createElement("div", {
      className: "testimonial-image"
    }, React.createElement("a", {
      className: "avatar",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/4.jpg",
      alt: "image"
    }))), React.createElement("span", {
      className: "testimonial-author"
    }, "June Lane"), React.createElement("span", {
      className: "testimonial-company"
    }, "Web Designer")), React.createElement("li", {
      className: "testimonial-item col-md-4"
    }, React.createElement("div", {
      className: "testimonial-content"
    }, React.createElement("p", null, "Suspendisse in justo eu magna luctus suscipit. Sed lectus. Integer euismod lacus luctus magna. ")), React.createElement("div", {
      className: "testimonial-image"
    }, React.createElement("a", {
      className: "avatar",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/5.jpg",
      alt: "image"
    }))), React.createElement("span", {
      className: "testimonial-author"
    }, "Edward Fletcher"), React.createElement("span", {
      className: "testimonial-company"
    }, "Videographer")), React.createElement("li", {
      className: "testimonial-item col-md-4"
    }, React.createElement("div", {
      className: "testimonial-content"
    }, React.createElement("p", null, "Nulla quis sem at nibh elementum imperdiet. Duis sagittis ipsum. Praesent mauris. Fusce nec tellus sed augue semper porta.")), React.createElement("div", {
      className: "testimonial-image"
    }, React.createElement("a", {
      className: "avatar",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/6.jpg",
      alt: "image"
    }))), React.createElement("span", {
      className: "testimonial-author"
    }, "Crystal Bates"), React.createElement("span", {
      className: "testimonial-company"
    }, "Wordpress Ninja")))))))), React.createElement("div", {
      className: "row row-lg"
    }, React.createElement("div", {
      className: "col-12"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Top"), React.createElement("p", null, "The content, customer\u2019s avatar, author and company information can be align to top left side by using an additional class", React.createElement("code", null, ".testimonial-top"), "."), React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "testimonial testimonial-top"
    }, React.createElement("ul", {
      className: "testimonial-ul row"
    }, React.createElement("li", {
      className: "testimonial-item col-md-4"
    }, React.createElement("div", {
      className: "testimonial-image"
    }, React.createElement("a", {
      className: "avatar",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/7.jpg",
      alt: "image"
    }))), React.createElement("span", {
      className: "testimonial-author"
    }, "Nathan Watts"), React.createElement("span", {
      className: "testimonial-company"
    }, "Web Designer"), React.createElement("div", {
      className: "testimonial-content"
    }, React.createElement("p", null, "Nam nec ante. Sed lacinia, urna non tincidunt mattis, tortor neque adipiscing diam, a cursus ipsum ante quis turpis. "))), React.createElement("li", {
      className: "testimonial-item col-md-4"
    }, React.createElement("div", {
      className: "testimonial-image"
    }, React.createElement("a", {
      className: "avatar",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/8.jpg",
      alt: "image"
    }))), React.createElement("span", {
      className: "testimonial-author"
    }, "Heather Harper"), React.createElement("span", {
      className: "testimonial-company"
    }, "Videographer"), React.createElement("div", {
      className: "testimonial-content"
    }, React.createElement("p", null, "Suspendisse in justo eu magna luctus suscipit. Sed lectus. Integer euismod lacus luctus magna. "))), React.createElement("li", {
      className: "testimonial-item col-md-4"
    }, React.createElement("div", {
      className: "testimonial-image"
    }, React.createElement("a", {
      className: "avatar",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/9.jpg",
      alt: "image"
    }))), React.createElement("span", {
      className: "testimonial-author"
    }, "Willard Wood"), React.createElement("span", {
      className: "testimonial-company"
    }, "Wordpress Ninja"), React.createElement("div", {
      className: "testimonial-content"
    }, React.createElement("p", null, "Nulla quis sem at nibh elementum imperdiet. Duis sagittis ipsum. Praesent mauris. Fusce nec tellus sed augue semper porta.")))))))), React.createElement("div", {
      className: "col-12"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Top & Reverse"), React.createElement("p", null, "The content, customer\u2019s avatar, author and company information can be align to top right side by using an additional classes", React.createElement("code", null, ".testimonial-top"), " and ", React.createElement("code", null, ".testimonial-reverse"), "."), React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "testimonial testimonial-top testimonial-reverse"
    }, React.createElement("ul", {
      className: "testimonial-ul row"
    }, React.createElement("li", {
      className: "testimonial-item col-md-4"
    }, React.createElement("div", {
      className: "testimonial-image"
    }, React.createElement("a", {
      className: "avatar",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/10.jpg",
      alt: "image"
    }))), React.createElement("span", {
      className: "testimonial-author"
    }, "Ronnie Ellis"), React.createElement("span", {
      className: "testimonial-company"
    }, "Web Designer"), React.createElement("div", {
      className: "testimonial-content"
    }, React.createElement("p", null, "Nam nec ante. Sed lacinia, urna non tincidunt mattis, tortor neque adipiscing diam, a cursus ipsum ante quis turpis. "))), React.createElement("li", {
      className: "testimonial-item col-md-4"
    }, React.createElement("div", {
      className: "testimonial-image"
    }, React.createElement("a", {
      className: "avatar",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/11.jpg",
      alt: "image"
    }))), React.createElement("span", {
      className: "testimonial-author"
    }, "Gwendolyn Wheeler"), React.createElement("span", {
      className: "testimonial-company"
    }, "Videographer"), React.createElement("div", {
      className: "testimonial-content"
    }, React.createElement("p", null, "Suspendisse in justo eu magna luctus suscipit. Sed lectus. Integer euismod lacus luctus magna. "))), React.createElement("li", {
      className: "testimonial-item col-md-4"
    }, React.createElement("div", {
      className: "testimonial-image"
    }, React.createElement("a", {
      className: "avatar",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/12.jpg",
      alt: "image"
    }))), React.createElement("span", {
      className: "testimonial-author"
    }, "Daniel Russell"), React.createElement("span", {
      className: "testimonial-company"
    }, "Wordpress Ninja"), React.createElement("div", {
      className: "testimonial-content"
    }, React.createElement("p", null, "Nulla quis sem at nibh elementum imperdiet. Duis sagittis ipsum. Praesent mauris. Fusce nec tellus sed augue semper porta."))))))))), React.createElement("div", {
      className: "row row-lg"
    }, React.createElement("div", {
      className: "col-xl-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Slide Show - Default"), React.createElement("p", null, "This slideshow testimonial for cycling through person\u2019s written or spoken statement, like a carousel. The default content, customer\u2019s avatar, author and company information align to bottom left side."), React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "testimonial carousel",
      role: "listbox",
      id: "exampleDefault",
      "data-ride": "carousel"
    }, React.createElement("ul", {
      className: "testimonial-ul carousel-inner"
    }, React.createElement("li", {
      className: "testimonial-item carousel-item active"
    }, React.createElement("div", {
      className: "testimonial-content"
    }, React.createElement("p", null, "Nam nec ante. Sed lacinia, urna non tincidunt mattis, tortor neque adipiscing diam, a cursus ipsum ante quis turpis. ")), React.createElement("div", {
      className: "testimonial-image"
    }, React.createElement("a", {
      className: "avatar",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/13.jpg",
      alt: "image"
    }))), React.createElement("span", {
      className: "testimonial-author"
    }, "Sarah Graves"), React.createElement("span", {
      className: "testimonial-company"
    }, "Web Designer")), React.createElement("li", {
      className: "testimonial-item carousel-item"
    }, React.createElement("div", {
      className: "testimonial-content"
    }, React.createElement("p", null, "Suspendisse in justo eu magna luctus suscipit. Sed lectus. Integer euismod lacus luctus magna. ")), React.createElement("div", {
      className: "testimonial-image"
    }, React.createElement("a", {
      className: "avatar",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/14.jpg",
      alt: "image"
    }))), React.createElement("span", {
      className: "testimonial-author"
    }, "Andrew Hoffman"), React.createElement("span", {
      className: "testimonial-company"
    }, "Videographer")), React.createElement("li", {
      className: "testimonial-item carousel-item"
    }, React.createElement("div", {
      className: "testimonial-content"
    }, React.createElement("p", null, "Nulla quis sem at nibh elementum imperdiet. Duis sagittis ipsum. Praesent mauris. Fusce nec tellus sed augue semper porta.")), React.createElement("div", {
      className: "testimonial-image"
    }, React.createElement("a", {
      className: "avatar",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/15.jpg",
      alt: "image"
    }))), React.createElement("span", {
      className: "testimonial-author"
    }, "Camila Lynch"), React.createElement("span", {
      className: "testimonial-company"
    }, "Wordpress Ninja"))), React.createElement("div", {
      className: "testimonial-control"
    }, React.createElement("a", {
      className: "testimonial-control-left",
      "data-slide": "prev",
      href: "#exampleDefault",
      role: "button"
    }, React.createElement("span", {
      className: "icon wb-chevron-left",
      "aria-hidden": "true"
    }), React.createElement("span", {
      className: "sr-only"
    }, "Previous")), React.createElement("a", {
      className: "testimonial-control-right",
      "data-slide": "next",
      href: "#exampleDefault",
      role: "button"
    }, React.createElement("span", {
      className: "icon wb-chevron-right",
      "aria-hidden": "true"
    }), React.createElement("span", {
      className: "sr-only"
    }, "Next"))))))), React.createElement("div", {
      className: "col-xl-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Slide Show - Reverse"), React.createElement("p", null, "This slideshow testimonial\u2019s content, customer\u2019s avatar, author and company information can be align to bottom right side by using class ", React.createElement("code", null, ".testimonial-reverse"), "."), React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "testimonial testimonial-reverse carousel",
      role: "listbox",
      id: "exampleReverse",
      "data-ride": "carousel"
    }, React.createElement("ul", {
      className: "testimonial-ul carousel-inner"
    }, React.createElement("li", {
      className: "testimonial-item carousel-item active"
    }, React.createElement("div", {
      className: "testimonial-content"
    }, React.createElement("p", null, "Nam nec ante. Sed lacinia, urna non tincidunt mattis, tortor neque adipiscing diam, a cursus ipsum ante quis turpis. ")), React.createElement("div", {
      className: "testimonial-image"
    }, React.createElement("a", {
      className: "avatar",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/16.jpg",
      alt: "image"
    }))), React.createElement("span", {
      className: "testimonial-author"
    }, "Ramon Dunn"), React.createElement("span", {
      className: "testimonial-company"
    }, "Web Designer")), React.createElement("li", {
      className: "testimonial-item carousel-item"
    }, React.createElement("div", {
      className: "testimonial-content"
    }, React.createElement("p", null, "Suspendisse in justo eu magna luctus suscipit. Sed lectus. Integer euismod lacus luctus magna. ")), React.createElement("div", {
      className: "testimonial-image"
    }, React.createElement("a", {
      className: "avatar",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/17.jpg",
      alt: "image"
    }))), React.createElement("span", {
      className: "testimonial-author"
    }, "Scott Sanders"), React.createElement("span", {
      className: "testimonial-company"
    }, "Videographer")), React.createElement("li", {
      className: "testimonial-item carousel-item"
    }, React.createElement("div", {
      className: "testimonial-content"
    }, React.createElement("p", null, "Nulla quis sem at nibh elementum imperdiet. Duis sagittis ipsum. Praesent mauris. Fusce nec tellus sed augue semper porta.")), React.createElement("div", {
      className: "testimonial-image"
    }, React.createElement("a", {
      className: "avatar",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/18.jpg",
      alt: "image"
    }))), React.createElement("span", {
      className: "testimonial-author"
    }, "Nina Wells"), React.createElement("span", {
      className: "testimonial-company"
    }, "Wordpress Ninja"))), React.createElement("div", {
      className: "testimonial-control"
    }, React.createElement("a", {
      className: "testimonial-control-left",
      "data-slide": "prev",
      href: "#exampleReverse",
      role: "button"
    }, React.createElement("span", {
      className: "icon wb-chevron-left",
      "aria-hidden": "true"
    }), React.createElement("span", {
      className: "sr-only"
    }, "Previous")), React.createElement("a", {
      className: "testimonial-control-right",
      "data-slide": "next",
      href: "#exampleReverse",
      role: "button"
    }, React.createElement("span", {
      className: "icon wb-chevron-right",
      "aria-hidden": "true"
    }), React.createElement("span", {
      className: "sr-only"
    }, "Next")))))))), React.createElement("div", {
      className: "row row-lg"
    }, React.createElement("div", {
      className: "col-xl-6"
    }, React.createElement("div", {
      className: "example-wrap m-lg-0"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Slide Show - Top"), React.createElement("p", null, "This slideshow testimonial\u2019s content, customer\u2019s avatar, author and company information can be align to top left side by using class ", React.createElement("code", null, ".testimonial-top"), "."), React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "testimonial testimonial-top carousel",
      role: "listbox",
      id: "exampleTop",
      "data-ride": "carousel"
    }, React.createElement("ul", {
      className: "testimonial-ul carousel-inner"
    }, React.createElement("li", {
      className: "testimonial-item carousel-item active"
    }, React.createElement("div", {
      className: "testimonial-image"
    }, React.createElement("a", {
      className: "avatar",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/20.jpg",
      alt: "image"
    }))), React.createElement("span", {
      className: "testimonial-author"
    }, "Marvin Nelson"), React.createElement("span", {
      className: "testimonial-company"
    }, "Web Designer"), React.createElement("div", {
      className: "testimonial-content"
    }, React.createElement("p", null, "Nam nec ante. Sed lacinia, urna non tincidunt mattis, tortor neque adipiscing diam, a cursus ipsum ante quis turpis. "))), React.createElement("li", {
      className: "testimonial-item carousel-item"
    }, React.createElement("div", {
      className: "testimonial-image"
    }, React.createElement("a", {
      className: "avatar",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/3.jpg",
      alt: "image"
    }))), React.createElement("span", {
      className: "testimonial-author"
    }, "Caleb Richards"), React.createElement("span", {
      className: "testimonial-company"
    }, "Videographer"), React.createElement("div", {
      className: "testimonial-content"
    }, React.createElement("p", null, "Suspendisse in justo eu magna luctus suscipit. Sed lectus. Integer euismod lacus luctus magna. "))), React.createElement("li", {
      className: "testimonial-item carousel-item"
    }, React.createElement("div", {
      className: "testimonial-image"
    }, React.createElement("a", {
      className: "avatar",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/4.jpg",
      alt: "image"
    }))), React.createElement("span", {
      className: "testimonial-author"
    }, "June Lane"), React.createElement("span", {
      className: "testimonial-company"
    }, "Wordpress Ninja"), React.createElement("div", {
      className: "testimonial-content"
    }, React.createElement("p", null, "Nulla quis sem at nibh elementum imperdiet. Duis sagittis ipsum. Praesent mauris. Fusce nec tellus sed augue semper porta.")))), React.createElement("div", {
      className: "testimonial-control"
    }, React.createElement("a", {
      className: "testimonial-control-left",
      "data-slide": "prev",
      href: "#exampleTop",
      role: "button"
    }, React.createElement("span", {
      className: "icon wb-chevron-left",
      "aria-hidden": "true"
    }), React.createElement("span", {
      className: "sr-only"
    }, "Previous")), React.createElement("a", {
      className: "testimonial-control-right",
      "data-slide": "next",
      href: "#exampleTop",
      role: "button"
    }, React.createElement("span", {
      className: "icon wb-chevron-right",
      "aria-hidden": "true"
    }), React.createElement("span", {
      className: "sr-only"
    }, "Next"))))))), React.createElement("div", {
      className: "col-xl-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Slide Show - Top & Reverse"), React.createElement("p", null, "This slideshow testimonial\u2019s content, customer\u2019s avatar, author and company information can be align to top right side by using classes ", React.createElement("code", null, ".testimonial-top"), " and ", React.createElement("code", null, ".testimonial-reverse"), "."), React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "testimonial testimonial-reverse testimonial-top carousel",
      role: "listbox",
      "data-ride": "carousel",
      id: "exampleTopReverse"
    }, React.createElement("ul", {
      className: "testimonial-ul carousel-inner"
    }, React.createElement("li", {
      className: "testimonial-item carousel-item active"
    }, React.createElement("div", {
      className: "testimonial-image"
    }, React.createElement("a", {
      className: "avatar",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/2.jpg",
      alt: "image"
    }))), React.createElement("span", {
      className: "testimonial-author"
    }, "Mary Adams"), React.createElement("span", {
      className: "testimonial-company"
    }, "Web Designer"), React.createElement("div", {
      className: "testimonial-content"
    }, React.createElement("p", null, "Nam nec ante. Sed lacinia, urna non tincidunt mattis, tortor neque adipiscing diam, a cursus ipsum ante quis turpis. "))), React.createElement("li", {
      className: "testimonial-item carousel-item"
    }, React.createElement("div", {
      className: "testimonial-image"
    }, React.createElement("a", {
      className: "avatar",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/6.jpg",
      alt: "image"
    }))), React.createElement("span", {
      className: "testimonial-author"
    }, "Crystal Bates"), React.createElement("span", {
      className: "testimonial-company"
    }, "Videographer"), React.createElement("div", {
      className: "testimonial-content"
    }, React.createElement("p", null, "Suspendisse in justo eu magna luctus suscipit. Sed lectus. Integer euismod lacus luctus magna. "))), React.createElement("li", {
      className: "testimonial-item carousel-item"
    }, React.createElement("div", {
      className: "testimonial-image"
    }, React.createElement("a", {
      className: "avatar",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/15.jpg",
      alt: "image"
    }))), React.createElement("span", {
      className: "testimonial-author"
    }, "Camila Lynch"), React.createElement("span", {
      className: "testimonial-company"
    }, "Wordpress Ninja"), React.createElement("div", {
      className: "testimonial-content"
    }, React.createElement("p", null, "Nulla quis sem at nibh elementum imperdiet. Duis sagittis ipsum. Praesent mauris. Fusce nec tellus sed augue semper porta.")))), React.createElement("div", {
      className: "testimonial-control"
    }, React.createElement("a", {
      className: "testimonial-control-left",
      "data-slide": "prev",
      href: "#exampleTopReverse",
      role: "button"
    }, React.createElement("span", {
      className: "icon wb-chevron-left",
      "aria-hidden": "true"
    }), React.createElement("span", {
      className: "sr-only"
    }, "Previous")), React.createElement("a", {
      className: "testimonial-control-right",
      "data-slide": "next",
      href: "#exampleTopReverse",
      role: "button"
    }, React.createElement("span", {
      className: "icon wb-chevron-right",
      "aria-hidden": "true"
    }), React.createElement("span", {
      className: "sr-only"
    }, "Next"))))))))))));
  }

}

module.exportDefault(TestimonialsExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"timeline-simple.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/structure/timeline-simple.jsx                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class TimelineSimpleExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header page-header-bordered"
    }, React.createElement("h1", {
      className: "page-title"
    }, "Simple Timeline"), React.createElement("ol", {
      className: "breadcrumb"
    }, React.createElement("li", {
      className: "breadcrumb-item"
    }, React.createElement("a", {
      href: "../index.html"
    }, "Home")), React.createElement("li", {
      className: "breadcrumb-item active"
    }, "Structure")), React.createElement("div", {
      className: "page-header-actions"
    }, React.createElement("form", null, React.createElement("div", {
      className: "input-search input-search-dark"
    }, React.createElement("i", {
      className: "input-search-icon wb-search",
      "aria-hidden": "true"
    }), React.createElement("input", {
      type: "text",
      className: "form-control",
      name: true,
      placeholder: "Search..."
    }))))), React.createElement("div", {
      className: "page-content container"
    }, React.createElement("ul", {
      className: "timeline timeline-simple"
    }, React.createElement("li", {
      className: "timeline-period"
    }, "MAY 2017"), React.createElement("li", {
      className: "timeline-item"
    }, React.createElement("div", {
      className: "timeline-dot",
      "data-placement": "right",
      "data-toggle": "tooltip",
      "data-trigger": "hover",
      "data-original-title": "2 Days ago"
    }), React.createElement("div", {
      className: "timeline-content"
    }, React.createElement("div", {
      className: "card card-shadow"
    }, React.createElement("div", {
      className: "card-img-top cover"
    }, React.createElement("img", {
      className: "cover-image",
      src: "http://getbootstrapadmin.com/remark/global/photos/placeholder.png",
      alt: "..."
    }))))), React.createElement("li", {
      className: "timeline-item timeline-reverse"
    }, React.createElement("div", {
      className: "timeline-dot bg-green-500",
      "data-placement": "left",
      "data-toggle": "tooltip",
      "data-trigger": "hover",
      "data-original-title": "2 Days ago"
    }), React.createElement("div", {
      className: "timeline-content"
    }, React.createElement("div", {
      className: "card card-shadow"
    }, React.createElement("div", {
      className: "card-img-top cover"
    }, React.createElement("img", {
      className: "cover-image",
      src: "http://getbootstrapadmin.com/remark/global/photos/placeholder.png",
      alt: "..."
    })), React.createElement("div", {
      className: "card-block p-30"
    }, React.createElement("h3", {
      className: "card-title"
    }, "Lorem Ipsum Dolor"), React.createElement("p", {
      className: "card-text"
    }, React.createElement("small", null, "MAY 15, 2017")), React.createElement("p", null, "Dubium sequatur declinare fecit securi emolumento ait habere tutiorem neglegentur, pugnantibus simplicem propemodum atqui suo licet confirmat. Iudicium ipso debent panaetium exorsus, vacuitate artifex confirmavit asperner posuit sollicitant contentam probamus perdiderunt. Coniuncta appetendi quo operis, iniucundus, putat magnis, invitat diceret. ")), React.createElement("div", {
      className: "card-block"
    }, React.createElement("div", {
      className: "card-actions float-right"
    }, React.createElement("a", {
      href: "javascript:void(0)"
    }, React.createElement("i", {
      className: "icon wb-chat-working",
      "aria-hidden": "true"
    }), React.createElement("span", null, "2500")), React.createElement("a", {
      href: "javascript:void(0)"
    }, React.createElement("i", {
      className: "icon wb-heart",
      "aria-hidden": "true"
    }), React.createElement("span", null, "20"))), React.createElement("a", {
      className: "btn btn-primary btn-outline card-link",
      href: "javascript:void(0)"
    }, "Read More"))))), React.createElement("li", {
      className: "timeline-item"
    }, React.createElement("div", {
      className: "timeline-dot bg-orange-500",
      "data-placement": "right",
      "data-toggle": "tooltip",
      "data-trigger": "hover",
      "data-original-title": "9 Days ago"
    }), React.createElement("div", {
      className: "timeline-content"
    }, React.createElement("div", {
      className: "card card-shadow"
    }, React.createElement("div", {
      className: "card-header cover"
    }, React.createElement("div", {
      className: "cover-background p-30",
      style: {
        backgroundImage: 'url("http://getbootstrapadmin.com/remark/global/photos/placeholder.png")'
      }
    }, React.createElement("blockquote", {
      className: "blockquote cover-quote white card-blockquote"
    }, "Fabulis timentis synephebos faciendum laetitia utamur consuevit tali hortatore videre, summa quasi, consequentis desideret. Constantia aptior consectetur credo audiebamus dissentiunt vivere moribus. ")))))), React.createElement("li", {
      className: "timeline-period"
    }, "Apr 2017"), React.createElement("li", {
      className: "timeline-item"
    }, React.createElement("div", {
      className: "timeline-dot bg-green-500",
      "data-placement": "right",
      "data-toggle": "tooltip",
      "data-trigger": "hover",
      "data-original-title": "1 Month ago"
    }), React.createElement("div", {
      className: "timeline-content"
    }, React.createElement("div", {
      className: "card card-shadow"
    }, React.createElement("div", {
      className: "card-img-top cover"
    }, React.createElement("img", {
      className: "cover-image",
      src: "http://getbootstrapadmin.com/remark/global/photos/placeholder.png",
      alt: "..."
    })), React.createElement("div", {
      className: "card-block"
    }, React.createElement("h3", {
      className: "card-title"
    }, "Lorem Ipsum Dolor"), React.createElement("p", {
      className: "card-text"
    }, React.createElement("small", null, "MAY 08, 2017")), React.createElement("p", null, "Sumus homo praetor intellegerem erga incidunt singulis, legam viveremus deorum, tertio frui tantum dedocendi profecto omittantur gravissimas cognitioque. Arbitrer negarent vocant disserui urbanitas, videtis commenticiam persequeris recteque data amoris opes. Discenda efficere diligi praesenti nostri adversantur pertinaces detractis levitatibus etiam. ")), React.createElement("div", {
      className: "card-block"
    }, React.createElement("div", {
      className: "card-actions float-right"
    }, React.createElement("a", {
      href: "javascript:void(0)"
    }, React.createElement("i", {
      className: "icon wb-chat-working",
      "aria-hidden": "true"
    }), React.createElement("span", null, "2500")), React.createElement("a", {
      href: "javascript:void(0)"
    }, React.createElement("i", {
      className: "icon wb-heart",
      "aria-hidden": "true"
    }), React.createElement("span", null, "20"))), React.createElement("a", {
      className: "btn btn-primary btn-outline card-link",
      href: "javascript:void(0)"
    }, "Read More"))))), React.createElement("li", {
      className: "timeline-item timeline-reverse"
    }, React.createElement("div", {
      className: "timeline-dot bg-orange-600",
      "data-placement": "left",
      "data-toggle": "tooltip",
      "data-trigger": "hover",
      "data-original-title": "1 Month ago"
    }), React.createElement("div", {
      className: "timeline-content"
    }, React.createElement("div", {
      className: "card card-shadow"
    }, React.createElement("div", {
      className: "card-header cover"
    }, React.createElement("div", {
      className: "cover-background p-30",
      style: {
        backgroundImage: 'url("http://getbootstrapadmin.com/remark/global/photos/placeholder.png")'
      }
    }, React.createElement("blockquote", {
      className: "blockquote cover-quote white card-blockquote"
    }, "Debilitati fugienda partitio esse debemus, erat segnitiae quaerimus iudicia aspernatur vis, perfunctio quae ludus commodius habemus inflammat. Distinguantur vera a tollatur desiderent. ")))))), React.createElement("li", {
      className: "timeline-item timeline-reverse"
    }, React.createElement("div", {
      className: "timeline-dot bg-cyan-600",
      "data-placement": "left",
      "data-toggle": "tooltip",
      "data-trigger": "hover",
      "data-original-title": "1 Month ago"
    }), React.createElement("div", {
      className: "timeline-content"
    }, React.createElement("div", {
      className: "card card-shadow"
    }, React.createElement("div", {
      className: "card-header cover player",
      "data-plugin": "plyr"
    }, React.createElement("video", {
      poster: "../../assets/examples/images/poster.jpg",
      controls: true,
      crossOrigin: true
    }, React.createElement("source", {
      type: "video/mp4",
      src: "https://cdn.selz.com/plyr/1.0/movie.mp4"
    }), React.createElement("source", {
      type: "video/webm",
      src: "https://cdn.selz.com/plyr/1.0/movie.webm"
    }), React.createElement("track", {
      kind: "captions",
      label: "English",
      srcLang: "en",
      src: "//cdn.selz.com/plyr/1.0/en.vtt",
      default: true
    }), React.createElement("a", {
      href: "https://cdn.selz.com/plyr/1.0/movie.mp4"
    }, "Download")))))))));
  }

}

module.exportDefault(TimelineSimpleExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"timeline.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/structure/timeline.jsx                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class TimelineExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header page-header-bordered"
    }, React.createElement("h1", {
      className: "page-title"
    }, "Timeline"), React.createElement("ol", {
      className: "breadcrumb"
    }, React.createElement("li", {
      className: "breadcrumb-item"
    }, React.createElement("a", {
      href: "../index.html"
    }, "Home")), React.createElement("li", {
      className: "breadcrumb-item active"
    }, "Structure")), React.createElement("div", {
      className: "page-header-actions"
    }, React.createElement("form", null, React.createElement("div", {
      className: "input-search input-search-dark"
    }, React.createElement("i", {
      className: "input-search-icon wb-search",
      "aria-hidden": "true"
    }), React.createElement("input", {
      type: "text",
      className: "form-control",
      name: true,
      placeholder: "Search..."
    }))))), React.createElement("div", {
      className: "page-content container"
    }, React.createElement("ul", {
      className: "timeline timeline-icon"
    }, React.createElement("li", {
      className: "timeline-period"
    }, "MAY 2017"), React.createElement("li", {
      className: "timeline-item"
    }, React.createElement("div", {
      className: "timeline-dot"
    }, React.createElement("i", {
      className: "icon wb-image",
      "aria-hidden": "true"
    })), React.createElement("div", {
      className: "timeline-info"
    }, React.createElement("time", {
      dateTime: "2017-05-15"
    }, "2 Days ago")), React.createElement("div", {
      className: "timeline-content"
    }, React.createElement("div", {
      className: "card card-shadow"
    }, React.createElement("div", {
      className: "card-img-top cover"
    }, React.createElement("img", {
      className: "cover-image",
      src: "http://getbootstrapadmin.com/remark/global/photos/placeholder.png",
      alt: "..."
    }))))), React.createElement("li", {
      className: "timeline-item timeline-reverse"
    }, React.createElement("div", {
      className: "timeline-dot bg-green-500"
    }, React.createElement("i", {
      className: "icon wb-file",
      "aria-hidden": "true"
    })), React.createElement("div", {
      className: "timeline-info"
    }, React.createElement("time", {
      dateTime: "2017-05-15"
    }, "2 Days ago")), React.createElement("div", {
      className: "timeline-content"
    }, React.createElement("div", {
      className: "card card-article card-shadow"
    }, React.createElement("div", {
      className: "card-img-top cover"
    }, React.createElement("img", {
      className: "cover-image",
      src: "http://getbootstrapadmin.com/remark/global/photos/placeholder.png",
      alt: "..."
    })), React.createElement("div", {
      className: "card-block"
    }, React.createElement("h3", {
      className: "card-title"
    }, "Lorem Ipsum Dolor"), React.createElement("p", {
      className: "card-text"
    }, React.createElement("small", null, "MAY 15, 2017")), React.createElement("p", null, "Novum formidines congressus atomorum nam permulta alterum delectatio gaudeat statim. Necessariae dicturam perspexit utrum modo amicitiae malum summumque, multis ante iudicia desiderat, civitas iudicare attingere, amori perpaulum mediocrium, dicere notae litteras plusque appareat, remotis fama futurove quandam assentiar integre poenis. ")), React.createElement("div", {
      className: "card-block"
    }, React.createElement("div", {
      className: "card-actions float-right"
    }, React.createElement("a", {
      href: "javascript:void(0)"
    }, React.createElement("i", {
      className: "icon wb-chat-working",
      "aria-hidden": "true"
    }), React.createElement("span", null, "2500")), React.createElement("a", {
      href: "javascript:void(0)"
    }, React.createElement("i", {
      className: "icon wb-heart",
      "aria-hidden": "true"
    }), React.createElement("span", null, "20"))), React.createElement("a", {
      className: "btn btn-primary btn-outline card-link",
      href: "javascript:void(0)"
    }, "Read More"))))), React.createElement("li", {
      className: "timeline-item"
    }, React.createElement("div", {
      className: "timeline-dot bg-orange-500"
    }, React.createElement("i", {
      className: "wb-quote-right"
    })), React.createElement("div", {
      className: "timeline-info"
    }, React.createElement("time", {
      dateTime: "2017-05-08"
    }, "9 Days ago")), React.createElement("div", {
      className: "timeline-content"
    }, React.createElement("div", {
      className: "card card-shadow"
    }, React.createElement("div", {
      className: "card-header cover"
    }, React.createElement("div", {
      className: "cover-background p-30",
      style: {
        backgroundImage: 'url("http://getbootstrapadmin.com/remark/global/photos/placeholder.png")'
      }
    }, React.createElement("blockquote", {
      className: "blockquote cover-quote white card-blockquote"
    }, "Asperner solvantur fere queo meam videtur temperantiam. Timorem asperner. Hortensio delicatissimi nihilo disserunt, contemnit mi amentur doctrinis logikh triario, appetendi utamur fames.")))))), React.createElement("li", {
      className: "timeline-period"
    }, "Apr 2017"), React.createElement("li", {
      className: "timeline-item"
    }, React.createElement("div", {
      className: "timeline-dot bg-green-500"
    }, React.createElement("i", {
      className: "icon wb-file",
      "aria-hidden": "true"
    })), React.createElement("div", {
      className: "timeline-info"
    }, React.createElement("time", {
      dateTime: "2017-04-08"
    }, "1 Month ago")), React.createElement("div", {
      className: "timeline-content"
    }, React.createElement("div", {
      className: "card card-shadow"
    }, React.createElement("div", {
      className: "card-img-top cover"
    }, React.createElement("img", {
      className: "cover-image",
      src: "http://getbootstrapadmin.com/remark/global/photos/placeholder.png",
      alt: "..."
    })), React.createElement("div", {
      className: "card-block"
    }, React.createElement("h3", {
      className: "card-title"
    }, "Lorem Ipsum Dolor"), React.createElement("p", {
      className: "card-text"
    }, React.createElement("small", null, "MAY 08, 2017")), React.createElement("p", null, "Signiferumque dixit, arbitrium iudicia nominis, potione aeterno genus conducunt deinde incidunt horrent forte voluptate pericula, mortis deleniti, circumcisaque mala sentit iucundius pedalis. Claudicare inanium fugiat contenta dixisset animumque iure quoquo dicturam, defendit militaris sollicitudines, verear, amicorum manum discedere indignae loqui. ")), React.createElement("div", {
      className: "card-block"
    }, React.createElement("div", {
      className: "card-actions float-right"
    }, React.createElement("a", {
      href: "javascript:void(0)"
    }, React.createElement("i", {
      className: "icon wb-chat-working",
      "aria-hidden": "true"
    }), React.createElement("span", null, "2500")), React.createElement("a", {
      href: "javascript:void(0)"
    }, React.createElement("i", {
      className: "icon wb-heart",
      "aria-hidden": "true"
    }), React.createElement("span", null, "20"))), React.createElement("a", {
      className: "btn btn-primary btn-outline card-link",
      href: "javascript:void(0)"
    }, "Read More"))))), React.createElement("li", {
      className: "timeline-item timeline-reverse"
    }, React.createElement("div", {
      className: "timeline-dot bg-orange-600"
    }, React.createElement("i", {
      className: "wb-quote-right"
    })), React.createElement("div", {
      className: "timeline-info"
    }, React.createElement("time", {
      dateTime: "2017-04-08"
    }, "1 Month ago")), React.createElement("div", {
      className: "timeline-content"
    }, React.createElement("div", {
      className: "card card-shadow"
    }, React.createElement("div", {
      className: "card-header cover"
    }, React.createElement("div", {
      className: "cover-background p-30",
      style: {
        backgroundImage: 'url("http://getbootstrapadmin.com/remark/global/photos/placeholder.png")'
      }
    }, React.createElement("blockquote", {
      className: "blockquote cover-quote white card-blockquote"
    }, "Ostendis peccandi pertinaces disputandum primus arare morbos noster, privamur alios perpetiuntur nulla est, effecerit corpora doctrina sentiunt hinc quasi, tradere perveniri erigimur.")))))), React.createElement("li", {
      className: "timeline-item timeline-reverse"
    }, React.createElement("div", {
      className: "timeline-dot bg-cyan-600"
    }, React.createElement("i", {
      className: "icon wb-video",
      "aria-hidden": "true"
    })), React.createElement("div", {
      className: "timeline-info"
    }, React.createElement("time", {
      dateTime: "2017-04-08"
    }, "1 Month ago")), React.createElement("div", {
      className: "timeline-content"
    }, React.createElement("div", {
      className: "card card-shadow"
    }, React.createElement("div", {
      className: "card-header cover player",
      "data-plugin": "plyr"
    }, React.createElement("video", {
      poster: "../../assets/examples/images/poster.jpg",
      controls: true,
      crossOrigin: true
    }, React.createElement("source", {
      type: "video/mp4",
      src: "https://cdn.selz.com/plyr/1.0/movie.mp4"
    }), React.createElement("source", {
      type: "video/webm",
      src: "https://cdn.selz.com/plyr/1.0/movie.webm"
    }), React.createElement("track", {
      kind: "captions",
      label: "English",
      srcLang: "en",
      src: "//cdn.selz.com/plyr/1.0/en.vtt",
      default: true
    }), React.createElement("a", {
      href: "https://cdn.selz.com/plyr/1.0/movie.mp4"
    }, "Download")))))))));
  }

}

module.exportDefault(TimelineExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"tables":{"basic.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/tables/basic.jsx                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class BasicExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "BasicExample")), React.createElement("div", {
      className: "page-content container-fluid"
    }));
  }

}

module.exportDefault(BasicExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"bootstrap.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/tables/bootstrap.jsx                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class BootstrapExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "BootstrapExample")), React.createElement("div", {
      className: "page-content container-fluid"
    }));
  }

}

module.exportDefault(BootstrapExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"datatable.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/tables/datatable.jsx                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class DatatableExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "DatatableExample")), React.createElement("div", {
      className: "page-content container-fluid"
    }));
  }

}

module.exportDefault(DatatableExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"editable.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/tables/editable.jsx                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class EditableExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "EditableExample")), React.createElement("div", {
      className: "page-content container-fluid"
    }));
  }

}

module.exportDefault(EditableExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"floatthead.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/tables/floatthead.jsx                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class FloatTheadExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "FloatTheadExample")), React.createElement("div", {
      className: "page-content container-fluid"
    }));
  }

}

module.exportDefault(FloatTheadExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"footable.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/tables/footable.jsx                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class FootableExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "FootableExample")), React.createElement("div", {
      className: "page-content container-fluid"
    }));
  }

}

module.exportDefault(FootableExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"jsgrid.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/tables/jsgrid.jsx                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class JSGridExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "JSGridExample")), React.createElement("div", {
      className: "page-content container-fluid"
    }));
  }

}

module.exportDefault(JSGridExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"responsive.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/tables/responsive.jsx                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class ResponsiveExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "ResponsiveExample")), React.createElement("div", {
      className: "page-content container-fluid"
    }));
  }

}

module.exportDefault(ResponsiveExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"uikit":{"buttons.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/uikit/buttons.jsx                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class ButtonsExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("ol", {
      className: "breadcrumb"
    }, React.createElement("li", {
      className: "breadcrumb-item"
    }, React.createElement("a", {
      href: "../index.html"
    }, "Home")), React.createElement("li", {
      className: "breadcrumb-item active"
    }, "Basic UI")), React.createElement("h1", {
      className: "page-title"
    }, "Buttons"), React.createElement("div", {
      className: "page-header-actions"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-sm btn-icon btn-inverse btn-round",
      "data-toggle": "tooltip",
      "data-original-title": "Edit"
    }, React.createElement("i", {
      className: "icon wb-pencil",
      "aria-hidden": "true"
    })), React.createElement("button", {
      type: "button",
      className: "btn btn-sm btn-icon btn-inverse btn-round",
      "data-toggle": "tooltip",
      "data-original-title": "Refresh"
    }, React.createElement("i", {
      className: "icon wb-refresh",
      "aria-hidden": "true"
    })), React.createElement("button", {
      type: "button",
      className: "btn btn-sm btn-icon btn-inverse btn-round",
      "data-toggle": "tooltip",
      "data-original-title": "Setting"
    }, React.createElement("i", {
      className: "icon wb-settings",
      "aria-hidden": "true"
    })))), React.createElement("div", {
      className: "page-content"
    }, React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-heading"
    }, React.createElement("h3", {
      className: "panel-title"
    }, "General Button")), React.createElement("div", {
      className: "panel-body container-fluid"
    }, React.createElement("div", {
      className: "row row-lg"
    }, React.createElement("div", {
      className: "col-12"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Default Button"), React.createElement("p", null, "Use any of the available button classes to quickly create a styled button . We provide a variety of colors for you to express different emotions."), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-sm-12 col-md-4 col-xl-2"
    }, React.createElement("div", {
      className: "example"
    }, React.createElement("ul", {
      className: "list-unstyled"
    }, React.createElement("li", {
      className: "mb-20"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-block btn-default"
    }, "Default")), React.createElement("li", {
      className: "mb-20"
    }, React.createElement("div", {
      className: "float-left color-box bg-blue-grey-200"
    }), React.createElement("div", {
      className: "ml-35"
    }, React.createElement("p", {
      className: "font-size-14 grey-600 m-0"
    }, "Normal"), React.createElement("span", {
      className: "font-size-12"
    }, "#e4eaec"))), React.createElement("li", {
      className: "mb-20"
    }, React.createElement("div", {
      className: "float-left color-box bg-blue-grey-300"
    }), React.createElement("div", {
      className: "ml-35"
    }, React.createElement("p", {
      className: "font-size-14 grey-600 m-0"
    }, "Hover"), React.createElement("span", {
      className: "font-size-12"
    }, "#ccd5db"))), React.createElement("li", {
      className: "mb-20"
    }, React.createElement("div", {
      className: "float-left color-box bg-blue-grey-400"
    }), React.createElement("div", {
      className: "ml-35"
    }, React.createElement("p", {
      className: "font-size-14 grey-600 m-0"
    }, "active"), React.createElement("span", {
      className: "font-size-12"
    }, "#76838f")))))), React.createElement("div", {
      className: "col-sm-12 col-md-4 col-xl-2"
    }, React.createElement("div", {
      className: "example"
    }, React.createElement("ul", {
      className: "list-unstyled"
    }, React.createElement("li", {
      className: "mb-20"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-block btn-primary"
    }, "Primary")), React.createElement("li", {
      className: "mb-20"
    }, React.createElement("div", {
      className: "float-left color-box bg-primary-600"
    }), React.createElement("div", {
      className: "ml-35"
    }, React.createElement("p", {
      className: "font-size-14 grey-600 m-0"
    }, "Normal"), React.createElement("span", {
      className: "font-size-12"
    }, "#62a8ea"))), React.createElement("li", {
      className: "mb-20"
    }, React.createElement("div", {
      className: "float-left color-box bg-primary-500"
    }), React.createElement("div", {
      className: "ml-35"
    }, React.createElement("p", {
      className: "font-size-14 grey-600 m-0"
    }, "Hover"), React.createElement("span", {
      className: "font-size-12"
    }, "#89bceb"))), React.createElement("li", {
      className: "mb-20"
    }, React.createElement("div", {
      className: "float-left color-box bg-primary-700"
    }), React.createElement("div", {
      className: "ml-35"
    }, React.createElement("p", {
      className: "font-size-14 grey-600 m-0"
    }, "active"), React.createElement("span", {
      className: "font-size-12"
    }, "#4e97d9")))))), React.createElement("div", {
      className: "col-sm-12 col-md-4 col-xl-2"
    }, React.createElement("div", {
      className: "example"
    }, React.createElement("ul", {
      className: "list-unstyled"
    }, React.createElement("li", {
      className: "mb-20"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-block btn-success"
    }, "Success")), React.createElement("li", {
      className: "mb-20"
    }, React.createElement("div", {
      className: "float-left color-box bg-green-600"
    }), React.createElement("div", {
      className: "ml-35"
    }, React.createElement("p", {
      className: "font-size-14 grey-600 m-0"
    }, "Normal"), React.createElement("span", {
      className: "font-size-12"
    }, "#46be8a"))), React.createElement("li", {
      className: "mb-20"
    }, React.createElement("div", {
      className: "float-left color-box bg-green-500"
    }), React.createElement("div", {
      className: "ml-35"
    }, React.createElement("p", {
      className: "font-size-14 grey-600 m-0"
    }, "Hover"), React.createElement("span", {
      className: "font-size-12"
    }, "#5cd29d"))), React.createElement("li", {
      className: "mb-20"
    }, React.createElement("div", {
      className: "float-left color-box bg-green-700"
    }), React.createElement("div", {
      className: "ml-35"
    }, React.createElement("p", {
      className: "font-size-14 grey-600 m-0"
    }, "active"), React.createElement("span", {
      className: "font-size-12"
    }, "#36ab7a")))))), React.createElement("div", {
      className: "col-sm-12 col-md-4 col-xl-2"
    }, React.createElement("div", {
      className: "example"
    }, React.createElement("ul", {
      className: "list-unstyled"
    }, React.createElement("li", {
      className: "mb-20"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-block btn-info"
    }, "Info")), React.createElement("li", {
      className: "mb-20"
    }, React.createElement("div", {
      className: "float-left color-box bg-cyan-600"
    }), React.createElement("div", {
      className: "ml-35"
    }, React.createElement("p", {
      className: "font-size-14 grey-600 m-0"
    }, "Normal"), React.createElement("span", {
      className: "font-size-12"
    }, "#57c7d4"))), React.createElement("li", {
      className: "mb-20"
    }, React.createElement("div", {
      className: "float-left color-box bg-cyan-500"
    }), React.createElement("div", {
      className: "ml-35"
    }, React.createElement("p", {
      className: "font-size-14 grey-600 m-0"
    }, "Hover"), React.createElement("span", {
      className: "font-size-12"
    }, "#77d6e1"))), React.createElement("li", {
      className: "mb-20"
    }, React.createElement("div", {
      className: "float-left color-box bg-cyan-700"
    }), React.createElement("div", {
      className: "ml-35"
    }, React.createElement("p", {
      className: "font-size-14 grey-600 m-0"
    }, "active"), React.createElement("span", {
      className: "font-size-12"
    }, "#47b8c6")))))), React.createElement("div", {
      className: "col-sm-12 col-md-4 col-xl-2"
    }, React.createElement("div", {
      className: "example"
    }, React.createElement("ul", {
      className: "list-unstyled"
    }, React.createElement("li", {
      className: "mb-20"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-block btn-warning"
    }, "Warning")), React.createElement("li", {
      className: "mb-20"
    }, React.createElement("div", {
      className: "float-left color-box bg-orange-600"
    }), React.createElement("div", {
      className: "ml-35"
    }, React.createElement("p", {
      className: "font-size-14 grey-600 m-0"
    }, "Normal"), React.createElement("span", {
      className: "font-size-12"
    }, "#f2a654"))), React.createElement("li", {
      className: "mb-20"
    }, React.createElement("div", {
      className: "float-left color-box bg-orange-500"
    }), React.createElement("div", {
      className: "ml-35"
    }, React.createElement("p", {
      className: "font-size-14 grey-600 m-0"
    }, "Hover"), React.createElement("span", {
      className: "font-size-12"
    }, "#f4b066"))), React.createElement("li", {
      className: "mb-20"
    }, React.createElement("div", {
      className: "float-left color-box bg-orange-700"
    }), React.createElement("div", {
      className: "ml-35"
    }, React.createElement("p", {
      className: "font-size-14 grey-600 m-0"
    }, "active"), React.createElement("span", {
      className: "font-size-12"
    }, "#e79857")))))), React.createElement("div", {
      className: "col-sm-12 col-md-4 col-xl-2"
    }, React.createElement("div", {
      className: "example"
    }, React.createElement("ul", {
      className: "list-unstyled"
    }, React.createElement("li", {
      className: "mb-20"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-block btn-danger"
    }, "Danger")), React.createElement("li", {
      className: "mb-20"
    }, React.createElement("div", {
      className: "float-left color-box bg-red-600"
    }), React.createElement("div", {
      className: "ml-35"
    }, React.createElement("p", {
      className: "font-size-14 grey-600 m-0"
    }, "Normal"), React.createElement("span", {
      className: "font-size-12"
    }, "#f96868"))), React.createElement("li", {
      className: "mb-20"
    }, React.createElement("div", {
      className: "float-left color-box bg-red-500"
    }), React.createElement("div", {
      className: "ml-35"
    }, React.createElement("p", {
      className: "font-size-14 grey-600 m-0"
    }, "Hover"), React.createElement("span", {
      className: "font-size-12"
    }, "#fa7a7a"))), React.createElement("li", {
      className: "mb-20"
    }, React.createElement("div", {
      className: "float-left color-box bg-red-700"
    }), React.createElement("div", {
      className: "ml-35"
    }, React.createElement("p", {
      className: "font-size-14 grey-600 m-0"
    }, "active"), React.createElement("span", {
      className: "font-size-12"
    }, "#e9595b")))))))))), React.createElement("div", {
      className: "row row-lg"
    }, React.createElement("div", {
      className: "col-lg-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Alternative Button"), React.createElement("p", null, "Use a classes ", React.createElement("code", null, ".btn-outline"), " to quickly create a outline."), React.createElement("div", {
      className: "example example-buttons"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-outline btn-default"
    }, "Default"), React.createElement("button", {
      type: "button",
      className: "btn btn-outline btn-primary"
    }, "Primary"), React.createElement("button", {
      type: "button",
      className: "btn btn-outline btn-success"
    }, "Success"), React.createElement("button", {
      type: "button",
      className: "btn btn-outline btn-info"
    }, "Info"), React.createElement("button", {
      type: "button",
      className: "btn btn-outline btn-warning"
    }, "Warning"), React.createElement("button", {
      type: "button",
      className: "btn btn-outline btn-danger"
    }, "Danger"), React.createElement("button", {
      type: "button",
      className: "btn btn-outline btn-dark"
    }, "dark")))), React.createElement("div", {
      className: "col-lg-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Rounded Button / Squard Button"), React.createElement("p", null, "Round button and the square button can be used to distinguish th different behavior or style."), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "example example-buttons"
    }, React.createElement("div", null, React.createElement("button", {
      type: "button",
      className: "btn btn-round btn-outline btn-default btn-lg"
    }, "Large")), React.createElement("div", null, React.createElement("button", {
      type: "button",
      className: "btn btn-round btn-outline btn-default"
    }, "Default")), React.createElement("div", null, React.createElement("button", {
      type: "button",
      className: "btn btn-round btn-outline btn-default btn-sm"
    }, "Small")))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "example example-buttons"
    }, React.createElement("div", null, React.createElement("button", {
      type: "button",
      className: "btn btn-squared btn-outline btn-default btn-lg"
    }, "Large")), React.createElement("div", null, React.createElement("button", {
      type: "button",
      className: "btn btn-squared btn-outline btn-default"
    }, "Default")), React.createElement("div", null, React.createElement("button", {
      type: "button",
      className: "btn btn-squared btn-outline btn-default btn-sm"
    }, "Small")))))))), React.createElement("div", {
      className: "row row-lg"
    }, React.createElement("div", {
      className: "col-lg-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Sizing"), React.createElement("p", null, "Size might vary from smaller screen to a larger screen. We made few sizes that are pixel perfect and resposive.", React.createElement("br", null), " Fancy larger or smaller buttons? Add ", React.createElement("code", null, ".btn-lg"), ",", React.createElement("code", null, ".btn-sm"), ", or ", React.createElement("code", null, ".btn-xs"), " for additional sizes."), React.createElement("div", {
      className: "example example-buttons"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-outline btn-default btn-lg"
    }, "Large Button"), React.createElement("button", {
      type: "button",
      className: "btn btn-outline btn-default"
    }, "Default Button"), React.createElement("button", {
      type: "button",
      className: "btn btn-outline btn-default btn-sm"
    }, "Small Button"), React.createElement("button", {
      type: "button",
      className: "btn btn-outline btn-default btn-xs"
    }, "Tiny Button")))), React.createElement("div", {
      className: "col-lg-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Block Button With Icon"), React.createElement("p", null, "Create block level buttons,with by adding add ", React.createElement("code", null, ".btn-block"), "                  ."), React.createElement("div", {
      className: "example example-buttons"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-default btn-outline btn-block"
    }, React.createElement("i", {
      className: "icon wb-menu float-right",
      "aria-hidden": "true"
    }), "Default"), React.createElement("button", {
      type: "button",
      className: "btn btn-primary btn-block btn-round"
    }, React.createElement("i", {
      className: "icon wb-menu",
      "aria-hidden": "true"
    }), "Primary"))))), React.createElement("div", {
      className: "row row-lg"
    }, React.createElement("div", {
      className: "col-lg-6 col-xl-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Button With Direction"), React.createElement("p", null, "Create buttons with directions by adding add ", React.createElement("code", null, ".btn-up"), ",", React.createElement("code", null, ".btn-right"), ", ", React.createElement("code", null, ".btn-bottom"), " or ", React.createElement("code", null, ".btn-left"), "                  ."), React.createElement("div", {
      className: "example example-buttons"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-direction btn-up btn-primary"
    }, "Up Button"), React.createElement("button", {
      type: "button",
      className: "btn btn-direction btn-right btn-warning"
    }, "Right Button"), React.createElement("button", {
      type: "button",
      className: "btn btn-direction btn-bottom btn-success btn-outline"
    }, "Down Button"), React.createElement("button", {
      type: "button",
      className: "btn btn-direction btn-left btn-danger btn-outline"
    }, "Left Button")))), React.createElement("div", {
      className: "col-lg-6 col-xl-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Button Animation"), React.createElement("p", null, "A button can animate to show hidden content. Modern and subtle styles & effects for buttons."), React.createElement("div", {
      className: "example example-buttons"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-animate btn-animate-side btn-success"
    }, React.createElement("span", null, React.createElement("i", {
      className: "icon wb-download",
      "aria-hidden": "true"
    }), "Side Animation")), React.createElement("button", {
      type: "button",
      className: "btn btn-animate btn-animate-vertical btn-success"
    }, React.createElement("span", null, React.createElement("i", {
      className: "icon wb-download",
      "aria-hidden": "true"
    }), "Vertical Animation"))))), React.createElement("div", {
      className: "col-lg-6 col-xl-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Floating Button"), React.createElement("p", null, "Floating action buttons are used for a special type of promoted action. They are distinguished by a circled icon floating above the UI and have special motion behaviors related to morphing, launching, and the transferring anchor point.", React.createElement("br", null), " Use the default class ", React.createElement("code", null, ".btn"), " with an additional class", React.createElement("code", null, ".btn-floating"), " ."), React.createElement("div", {
      className: "example example-buttons"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-floating btn-success"
    }, React.createElement("i", {
      className: "icon wb-pencil",
      "aria-hidden": "true"
    })), React.createElement("button", {
      type: "button",
      className: "btn btn-floating btn-success btn-sm"
    }, React.createElement("i", {
      className: "icon wb-pencil",
      "aria-hidden": "true"
    })), React.createElement("button", {
      type: "button",
      className: "btn btn-floating btn-danger"
    }, React.createElement("i", {
      className: "icon wb-plus",
      "aria-hidden": "true"
    })), React.createElement("button", {
      type: "button",
      className: "btn btn-floating btn-danger btn-sm"
    }, React.createElement("i", {
      className: "icon wb-plus",
      "aria-hidden": "true"
    }))))), React.createElement("div", {
      className: "col-lg-6 col-xl-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Flat And Raised Button"), React.createElement("p", null, "Raised buttons behave like a piece of material resting on another sheet \u2013 they lift and color on press.", React.createElement("br", null), " Flat buttons are printed on the material. They do not lift but fill with color on press."), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "example example-buttons"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-raised btn-primary btn-block"
    }, "Normal"), React.createElement("button", {
      type: "button",
      className: "btn btn-raised btn-primary btn-block active",
      style: {
        background: '#89bceb',
        borderColor: '#89bceb'
      }
    }, "Hover"), React.createElement("button", {
      type: "button",
      className: "btn btn-raised btn-primary btn-block active"
    }, "Active"), React.createElement("button", {
      type: "button",
      className: "btn btn-raised btn-primary btn-block disabled"
    }, "Disabled"))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "example example-buttons"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-flat btn-default btn-block"
    }, "Normal"), React.createElement("button", {
      type: "button",
      className: "btn btn-flat btn-default btn-block active",
      style: {
        background: '#f8f9f9',
        borderColor: '#f8f9f9>'
      }
    }, "Hover"), React.createElement("button", {
      type: "button",
      className: "btn btn-flat btn-default btn-block active"
    }, "Active"), React.createElement("button", {
      type: "button",
      className: "btn btn-flat btn-default btn-block disabled"
    }, "Disabled")))))), React.createElement("div", {
      className: "col-lg-6 col-xl-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Pill Left Or Right"), React.createElement("p", null, "Create a button like pill by ", React.createElement("code", null, ".btn-pill-left"), " or ", React.createElement("code", null, ".btn-pill-right"), "                  with ", React.createElement("code", null, ".btn-round"), "."), React.createElement("div", {
      className: "example example-buttons"
    }, React.createElement("div", null, React.createElement("button", {
      type: "button",
      className: "btn btn-round btn-default btn-outline btn-pill-left"
    }, "Pill Left"), React.createElement("button", {
      type: "button",
      className: "btn btn-round btn-default btn-outline btn-pill-right"
    }, "Pill Right")), React.createElement("div", null, React.createElement("button", {
      type: "button",
      className: "btn btn-round btn-primary btn-pill-left"
    }, "Pill Left"), React.createElement("button", {
      type: "button",
      className: "btn btn-round btn-primary btn-pill-right"
    }, "Pill Right"))))), React.createElement("div", {
      className: "col-lg-6 col-xl-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Button With Icon"), React.createElement("p", null, "Basic buttons are traditional buttons with borders and background with an extra commponent like an icon. You can place it either on the left or the right which ever you want with different color opitons."), React.createElement("div", {
      className: "example example-buttons"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-dark"
    }, React.createElement("i", {
      className: "icon wb-upload",
      "aria-hidden": "true"
    }), " Upload"), React.createElement("button", {
      type: "button",
      className: "btn btn-warning"
    }, React.createElement("i", {
      className: "icon wb-thumb-up",
      "aria-hidden": "true"
    }), " I like"), React.createElement("button", {
      type: "button",
      className: "btn btn-success"
    }, React.createElement("i", {
      className: "icon wb-check",
      "aria-hidden": "true"
    }), " I agree"), React.createElement("button", {
      type: "button",
      className: "btn btn-outline btn-primary"
    }, React.createElement("i", {
      className: "icon wb-plus",
      "aria-hidden": "true"
    }), " More"), React.createElement("button", {
      type: "button",
      className: "btn btn-danger"
    }, React.createElement("i", {
      className: "icon wb-link",
      "aria-hidden": "true"
    }), " Link"), React.createElement("button", {
      type: "button",
      className: "btn btn-info"
    }, React.createElement("i", {
      className: "icon wb-chat",
      "aria-hidden": "true"
    }), " Comment")))), React.createElement("div", {
      className: "col-lg-6 col-xl-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Icon Button"), React.createElement("p", null, "Icon only button."), React.createElement("div", {
      className: "example example-buttons"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-icon btn-default"
    }, React.createElement("i", {
      className: "icon wb-map",
      "aria-hidden": "true"
    })), React.createElement("button", {
      type: "button",
      className: "btn btn-icon btn-primary"
    }, React.createElement("i", {
      className: "icon wb-grid-9",
      "aria-hidden": "true"
    })), React.createElement("button", {
      type: "button",
      className: "btn btn-icon btn-success"
    }, React.createElement("i", {
      className: "icon wb-bell",
      "aria-hidden": "true"
    })), React.createElement("button", {
      type: "button",
      className: "btn btn-icon btn-info"
    }, React.createElement("i", {
      className: "icon wb-calendar",
      "aria-hidden": "true"
    })), React.createElement("button", {
      type: "button",
      className: "btn btn-icon btn-warning btn-round"
    }, React.createElement("i", {
      className: "icon wb-time",
      "aria-hidden": "true"
    })), React.createElement("button", {
      type: "button",
      className: "btn btn-icon btn-danger btn-round"
    }, React.createElement("i", {
      className: "icon wb-plugin",
      "aria-hidden": "true"
    })), React.createElement("button", {
      type: "button",
      className: "btn btn-icon btn-dark btn-round"
    }, React.createElement("i", {
      className: "icon wb-pie-chart",
      "aria-hidden": "true"
    })), React.createElement("button", {
      type: "button",
      className: "btn btn-icon btn-default btn-outline"
    }, React.createElement("i", {
      className: "icon wb-pencil",
      "aria-hidden": "true"
    })), React.createElement("button", {
      type: "button",
      className: "btn btn-icon btn-primary btn-outline"
    }, React.createElement("i", {
      className: "icon wb-eye",
      "aria-hidden": "true"
    })), React.createElement("button", {
      type: "button",
      className: "btn btn-icon btn-success btn-outline"
    }, React.createElement("i", {
      className: "icon wb-search",
      "aria-hidden": "true"
    })), React.createElement("button", {
      type: "button",
      className: "btn btn-icon btn-info btn-outline"
    }, React.createElement("i", {
      className: "icon wb-wrench",
      "aria-hidden": "true"
    })), React.createElement("button", {
      type: "button",
      className: "btn btn-icon btn-warning btn-outline btn-round"
    }, React.createElement("i", {
      className: "icon wb-musical",
      "aria-hidden": "true"
    })), React.createElement("button", {
      type: "button",
      className: "btn btn-icon btn-danger btn-outline btn-round"
    }, React.createElement("i", {
      className: "icon wb-heart",
      "aria-hidden": "true"
    })), React.createElement("button", {
      type: "button",
      className: "btn btn-icon btn-dark btn-outline btn-round"
    }, React.createElement("i", {
      className: "icon wb-refresh",
      "aria-hidden": "true"
    })), React.createElement("button", {
      type: "button",
      className: "btn btn-pure btn-default icon wb-lock"
    }), React.createElement("button", {
      type: "button",
      className: "btn btn-pure btn-primary icon wb-thumb-up"
    }), React.createElement("button", {
      type: "button",
      className: "btn btn-pure btn-success icon wb-share"
    }), React.createElement("button", {
      type: "button",
      className: "btn btn-pure btn-info icon wb-random"
    }), React.createElement("button", {
      type: "button",
      className: "btn btn-pure btn-warning icon wb-star"
    }), React.createElement("button", {
      type: "button",
      className: "btn btn-pure btn-danger icon wb-print"
    }), React.createElement("button", {
      type: "button",
      className: "btn btn-pure btn-dark icon wb-flag"
    })))), React.createElement("div", {
      className: "col-lg-6 col-xl-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Icon Dropdown"), React.createElement("p", null, "Icon used in the dropdown."), React.createElement("div", {
      className: "example example-buttons"
    }, React.createElement("div", {
      className: "btn-group",
      role: "group"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-primary dropdown-toggle",
      id: "exampleIconDropdown1",
      "data-toggle": "dropdown",
      "aria-expanded": "false"
    }, React.createElement("i", {
      className: "icon wb-grid-9",
      "aria-hidden": "true"
    })), React.createElement("div", {
      className: "dropdown-menu",
      "aria-labelledby": "exampleIconDropdown1",
      role: "menu"
    }, React.createElement("a", {
      className: "dropdown-item",
      href: "javascript:void(0)",
      role: "menuitem"
    }, "Dropdown link"), React.createElement("a", {
      className: "dropdown-item",
      href: "javascript:void(0)",
      role: "menuitem"
    }, "Dropdown link"))), React.createElement("div", {
      className: "btn-group",
      role: "group"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-warning dropdown-toggle",
      id: "exampleIconDropdown2",
      "data-toggle": "dropdown",
      "aria-expanded": "false"
    }, React.createElement("i", {
      className: "icon wb-heart",
      "aria-hidden": "true"
    })), React.createElement("div", {
      className: "dropdown-menu",
      "aria-labelledby": "exampleIconDropdown2",
      role: "menu"
    }, React.createElement("a", {
      className: "dropdown-item",
      href: "javascript:void(0)",
      role: "menuitem"
    }, "Dropdown link"), React.createElement("a", {
      className: "dropdown-item",
      href: "javascript:void(0)",
      role: "menuitem"
    }, "Dropdown link"))), React.createElement("div", {
      className: "btn-group",
      role: "group"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-danger dropdown-toggle",
      id: "exampleIconDropdown3",
      "data-toggle": "dropdown",
      "aria-expanded": "false"
    }, React.createElement("i", {
      className: "icon wb-calendar",
      "aria-hidden": "true"
    })), React.createElement("div", {
      className: "dropdown-menu",
      "aria-labelledby": "exampleIconDropdown3",
      role: "menu"
    }, React.createElement("a", {
      className: "dropdown-item",
      href: "javascript:void(0)",
      role: "menuitem"
    }, "Dropdown link"), React.createElement("a", {
      className: "dropdown-item",
      href: "javascript:void(0)",
      role: "menuitem"
    }, "Dropdown link"))), React.createElement("div", {
      className: "btn-group",
      role: "group"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-dark dropdown-toggle",
      id: "exampleIconDropdown4",
      "data-toggle": "dropdown",
      "aria-expanded": "false"
    }, React.createElement("i", {
      className: "icon wb-pie-chart",
      "aria-hidden": "true"
    })), React.createElement("div", {
      className: "dropdown-menu",
      "aria-labelledby": "exampleIconDropdown4",
      role: "menu"
    }, React.createElement("a", {
      className: "dropdown-item",
      href: "javascript:void(0)",
      role: "menuitem"
    }, "Dropdown link"), React.createElement("a", {
      className: "dropdown-item",
      href: "javascript:void(0)",
      role: "menuitem"
    }, "Dropdown link")))))), React.createElement("div", {
      className: "col-lg-6 col-xl-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Social Icon Button"), React.createElement("p", null, "Icon only button. But icon is social icon. "), React.createElement("div", {
      className: "example example-buttons"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-icon social-facebook"
    }, React.createElement("i", {
      className: "icon bd-facebook",
      "aria-hidden": "true"
    })), React.createElement("button", {
      type: "button",
      className: "btn btn-icon social-twitter"
    }, React.createElement("i", {
      className: "icon bd-twitter",
      "aria-hidden": "true"
    })), React.createElement("button", {
      type: "button",
      className: "btn btn-icon social-linkedin"
    }, React.createElement("i", {
      className: "icon bd-linkedin",
      "aria-hidden": "true"
    })), React.createElement("button", {
      type: "button",
      className: "btn btn-icon social-dribbble"
    }, React.createElement("i", {
      className: "icon bd-dribbble",
      "aria-hidden": "true"
    })), React.createElement("button", {
      type: "button",
      className: "btn btn-icon social-instagram"
    }, React.createElement("i", {
      className: "icon bd-instagram",
      "aria-hidden": "true"
    })), React.createElement("button", {
      type: "button",
      className: "btn btn-icon social-github"
    }, React.createElement("i", {
      className: "icon bd-github",
      "aria-hidden": "true"
    })), React.createElement("button", {
      type: "button",
      className: "btn btn-icon social-skype"
    }, React.createElement("i", {
      className: "icon bd-skype",
      "aria-hidden": "true"
    })), React.createElement("button", {
      type: "button",
      className: "btn btn-icon social-youtube"
    }, React.createElement("i", {
      className: "icon bd-youtube",
      "aria-hidden": "true"
    })), React.createElement("button", {
      type: "button",
      className: "btn btn-icon social-evernote"
    }, React.createElement("i", {
      className: "icon bd-evernote",
      "aria-hidden": "true"
    })), React.createElement("button", {
      type: "button",
      className: "btn btn-icon social-google-plus"
    }, React.createElement("i", {
      className: "icon bd-google-plus",
      "aria-hidden": "true"
    }))))), React.createElement("div", {
      className: "col-lg-6 col-xl-4"
    }, React.createElement("div", {
      className: "example-wrap m-lg-0"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Social In Labels"), React.createElement("p", null, "It is often used at the top of a page or section. An social icon must be with this variation."), React.createElement("div", {
      className: "example example-buttons"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-tagged social-facebook"
    }, React.createElement("span", {
      className: "btn-tag"
    }, React.createElement("i", {
      className: "icon bd-facebook",
      "aria-hidden": "true"
    })), "Facebook"), React.createElement("button", {
      type: "button",
      className: "btn btn-tagged social-twitter"
    }, React.createElement("span", {
      className: "btn-tag"
    }, React.createElement("i", {
      className: "icon bd-twitter",
      "aria-hidden": "true"
    })), "Twitter"), React.createElement("button", {
      type: "button",
      className: "btn btn-tagged social-google-plus"
    }, React.createElement("span", {
      className: "btn-tag"
    }, React.createElement("i", {
      className: "icon bd-google-plus",
      "aria-hidden": "true"
    })), "Google+"), React.createElement("button", {
      type: "button",
      className: "btn btn-tagged social-linkedin"
    }, React.createElement("span", {
      className: "btn-tag"
    }, React.createElement("i", {
      className: "icon bd-linkedin",
      "aria-hidden": "true"
    })), "Linkedin"), React.createElement("button", {
      type: "button",
      className: "btn btn-tagged social-flickr"
    }, React.createElement("span", {
      className: "btn-tag"
    }, React.createElement("i", {
      className: "icon bd-flickr",
      "aria-hidden": "true"
    })), "Flickr"), React.createElement("button", {
      type: "button",
      className: "btn btn-tagged social-tumblr"
    }, React.createElement("span", {
      className: "btn-tag"
    }, React.createElement("i", {
      className: "icon bd-tumblr",
      "aria-hidden": "true"
    })), "Tumblr")))), React.createElement("div", {
      className: "col-lg-6 col-xl-4"
    }, React.createElement("div", {
      className: "example-wrap m-md-0"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Social Button Sizes"), React.createElement("p", null, "Different Sizes for you to use with icon button or icon only button."), React.createElement("div", {
      className: "example example-buttons"
    }, React.createElement("ul", {
      className: "list-unstyled float-left"
    }, React.createElement("li", null, React.createElement("button", {
      type: "button",
      className: "btn btn-tagged btn-lg social-facebook"
    }, React.createElement("span", {
      className: "btn-tag"
    }, React.createElement("i", {
      className: "icon bd-facebook",
      "aria-hidden": "true"
    })), "Facebook")), React.createElement("li", null, React.createElement("button", {
      type: "button",
      className: "btn btn-tagged social-facebook"
    }, React.createElement("span", {
      className: "btn-tag"
    }, React.createElement("i", {
      className: "icon bd-facebook",
      "aria-hidden": "true"
    })), "Facebook")), React.createElement("li", null, React.createElement("button", {
      type: "button",
      className: "btn btn-tagged btn-sm social-facebook"
    }, React.createElement("span", {
      className: "btn-tag"
    }, React.createElement("i", {
      className: "icon bd-facebook",
      "aria-hidden": "true"
    })), "Facebook")), React.createElement("li", null, React.createElement("button", {
      type: "button",
      className: "btn btn-tagged btn-xs social-facebook"
    }, React.createElement("span", {
      className: "btn-tag"
    }, React.createElement("i", {
      className: "icon bd-facebook",
      "aria-hidden": "true"
    })), "Facebook"))), React.createElement("ul", {
      className: "list-unstyled"
    }, React.createElement("li", null, React.createElement("button", {
      type: "button",
      className: "btn btn-icon btn-lg social-facebook"
    }, React.createElement("i", {
      className: "icon bd-facebook",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("button", {
      type: "button",
      className: "btn btn-icon social-facebook"
    }, React.createElement("i", {
      className: "icon bd-facebook",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("button", {
      type: "button",
      className: "btn btn-icon btn-sm social-facebook"
    }, React.createElement("i", {
      className: "icon bd-facebook",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("button", {
      type: "button",
      className: "btn btn-icon btn-xs social-facebook"
    }, React.createElement("i", {
      className: "icon bd-facebook",
      "aria-hidden": "true"
    }))))))), React.createElement("div", {
      className: "col-lg-6 col-xl-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Icon Block Button"), React.createElement("p", null, "Icon only block button. "), React.createElement("div", {
      className: "example example-buttons"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-icon btn-block btn-primary btn-outline"
    }, React.createElement("i", {
      className: "icon wb-heart",
      "aria-hidden": "true"
    })), React.createElement("button", {
      type: "button",
      className: "btn btn-icon btn-block social-twitter"
    }, React.createElement("i", {
      className: "icon bd-twitter",
      "aria-hidden": "true"
    })))))))), React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-heading"
    }, React.createElement("h3", {
      className: "panel-title"
    }, "Button Group")), React.createElement("div", {
      className: "panel-body container-fluid"
    }, React.createElement("div", {
      className: "row row-lg"
    }, React.createElement("div", {
      className: "col-xl-4 col-lg-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Basic Button Group"), React.createElement("p", null, "Grouped buttons give users access to frequently performed actions of a focused task. Wrap a series of buttons with ", React.createElement("code", null, ".btn"), "                  in ", React.createElement("code", null, ".btn-group.")), React.createElement("div", {
      className: "example example-buttons"
    }, React.createElement("div", {
      className: "btn-group",
      "aria-label": "Basic example",
      role: "group"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-icon btn-pure btn-default"
    }, React.createElement("i", {
      className: "icon wb-play",
      "aria-hidden": "true"
    })), React.createElement("button", {
      type: "button",
      className: "btn btn-icon btn-pure btn-primary"
    }, React.createElement("i", {
      className: "icon wb-pause",
      "aria-hidden": "true"
    })), React.createElement("button", {
      type: "button",
      className: "btn btn-icon btn-pure btn-danger"
    }, React.createElement("i", {
      className: "icon wb-stop",
      "aria-hidden": "true"
    }))), React.createElement("div", {
      className: "btn-group",
      "aria-label": "Basic example",
      role: "group"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-icon btn-primary"
    }, React.createElement("i", {
      className: "icon wb-play",
      "aria-hidden": "true"
    })), React.createElement("button", {
      type: "button",
      className: "btn btn-icon btn-primary"
    }, React.createElement("i", {
      className: "icon wb-pause",
      "aria-hidden": "true"
    })), React.createElement("button", {
      type: "button",
      className: "btn btn-icon btn-primary"
    }, React.createElement("i", {
      className: "icon wb-stop",
      "aria-hidden": "true"
    }))), React.createElement("div", {
      className: "btn-group",
      "aria-label": "Basic example",
      role: "group"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-outline btn-default"
    }, React.createElement("i", {
      className: "icon wb-pencil",
      "aria-hidden": "true"
    }), "Edit"), React.createElement("button", {
      type: "button",
      className: "btn btn-outline btn-default"
    }, React.createElement("i", {
      className: "icon wb-reply",
      "aria-hidden": "true"
    }), "Reply"), React.createElement("button", {
      type: "button",
      className: "btn btn-outline btn-default"
    }, React.createElement("i", {
      className: "icon wb-share",
      "aria-hidden": "true"
    }), "Share")), React.createElement("div", {
      className: "btn-group",
      "aria-label": "Basic example",
      role: "group"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-outline btn-default"
    }, "Left"), React.createElement("button", {
      type: "button",
      className: "btn btn-outline btn-default"
    }, "Middle"), React.createElement("button", {
      type: "button",
      className: "btn btn-outline btn-default"
    }, "Right"))))), React.createElement("div", {
      className: "col-xl-4 col-lg-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Vertical Button Group"), React.createElement("p", null, "Order the buttons in a group for actions that are used regularly or are significant."), React.createElement("div", {
      className: "example example-buttons"
    }, React.createElement("div", {
      className: "btn-group-vertical",
      "aria-label": "Vertical button group",
      role: "group"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-outline btn-default"
    }, React.createElement("i", {
      className: "icon wb-flag",
      "aria-hidden": "true"
    })), React.createElement("button", {
      type: "button",
      className: "btn btn-outline btn-default"
    }, React.createElement("i", {
      className: "icon wb-wrench",
      "aria-hidden": "true"
    })), React.createElement("button", {
      type: "button",
      className: "btn btn-outline btn-default"
    }, React.createElement("i", {
      className: "icon wb-print",
      "aria-hidden": "true"
    }))), React.createElement("div", {
      className: "btn-group-vertical",
      "aria-label": "Vertical button group",
      role: "group"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-outline btn-default"
    }, "1"), React.createElement("button", {
      type: "button",
      className: "btn btn-outline btn-default"
    }, "2"), React.createElement("button", {
      type: "button",
      className: "btn btn-outline btn-default"
    }, "3")), React.createElement("div", {
      className: "btn-group-vertical",
      "aria-label": "Vertical button group",
      role: "group"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-primary"
    }, "Left"), React.createElement("button", {
      type: "button",
      className: "btn btn-primary"
    }, "Middle"), React.createElement("button", {
      type: "button",
      className: "btn btn-primary"
    }, "Right"))))), React.createElement("div", {
      className: "col-xl-4 col-lg-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Button Group Sizes"), React.createElement("p", null, "Instead of applying button sizing classes to every button in a group, just add ", React.createElement("code", null, ".btn-group-*"), " to each ", React.createElement("code", null, ".btn-group"), ", including when nesting multiple groups."), React.createElement("div", {
      className: "example example-buttons"
    }, React.createElement("div", null, React.createElement("div", {
      className: "btn-group btn-group-lg",
      "aria-label": "Large button group",
      role: "group"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-outline btn-default"
    }, "Left"), React.createElement("button", {
      type: "button",
      className: "btn btn-outline btn-default"
    }, "Middle"), React.createElement("button", {
      type: "button",
      className: "btn btn-outline btn-default"
    }, "Right"))), React.createElement("div", null, React.createElement("div", {
      className: "btn-group",
      "aria-label": "Default button group",
      role: "group"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-outline btn-default"
    }, "Left"), React.createElement("button", {
      type: "button",
      className: "btn btn-outline btn-default"
    }, "Middle"), React.createElement("button", {
      type: "button",
      className: "btn btn-outline btn-default"
    }, "Right"))), React.createElement("div", null, React.createElement("div", {
      className: "btn-group btn-group-sm",
      "aria-label": "Small button group",
      role: "group"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-outline btn-default"
    }, "Left"), React.createElement("button", {
      type: "button",
      className: "btn btn-outline btn-default"
    }, "Middle"), React.createElement("button", {
      type: "button",
      className: "btn btn-outline btn-default"
    }, "Right"))), React.createElement("div", null, React.createElement("div", {
      className: "btn-group btn-group-xs",
      "aria-label": "Extra-small button group",
      role: "group"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-outline btn-default"
    }, "Left"), React.createElement("button", {
      type: "button",
      className: "btn btn-outline btn-default"
    }, "Middle"), React.createElement("button", {
      type: "button",
      className: "btn btn-outline btn-default"
    }, "Right")))))), React.createElement("div", {
      className: "col-xl-4 col-lg-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Button Toolbar"), React.createElement("p", null, "This group button is used to show the close relationship between a number of buttons, and is usually used on edit page."), React.createElement("div", {
      className: "example example-buttons"
    }, React.createElement("div", {
      className: "btn-toolbar",
      "aria-label": "Toolbar with button groups",
      role: "toolbar"
    }, React.createElement("div", {
      className: "btn-group"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-icon btn-primary"
    }, React.createElement("i", {
      className: "icon wb-bold",
      "aria-hidden": "true"
    })), React.createElement("button", {
      type: "button",
      className: "btn btn-icon btn-primary"
    }, React.createElement("i", {
      className: "icon wb-italic",
      "aria-hidden": "true"
    })), React.createElement("button", {
      type: "button",
      className: "btn btn-icon btn-primary"
    }, React.createElement("i", {
      className: "icon wb-underline",
      "aria-hidden": "true"
    }))), React.createElement("div", {
      className: "btn-group"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-icon btn-primary"
    }, React.createElement("i", {
      className: "icon wb-align-left",
      "aria-hidden": "true"
    })), React.createElement("button", {
      type: "button",
      className: "btn btn-icon btn-primary"
    }, React.createElement("i", {
      className: "icon wb-align-center",
      "aria-hidden": "true"
    })), React.createElement("button", {
      type: "button",
      className: "btn btn-icon btn-primary"
    }, React.createElement("i", {
      className: "icon wb-align-right",
      "aria-hidden": "true"
    }))), React.createElement("div", {
      className: "btn-group"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-icon btn-primary dropdown-toggle",
      "data-toggle": "dropdown",
      "aria-expanded": "false",
      "aria-hidden": "true"
    }, React.createElement("i", {
      className: "icon wb-wrench",
      "aria-hidden": "true"
    })), React.createElement("div", {
      className: "dropdown-menu",
      role: "menu"
    }, React.createElement("a", {
      className: "dropdown-item",
      href: "javascript:void(0)",
      role: "menuitem"
    }, React.createElement("i", {
      className: "icon wb-scissor",
      "aria-hidden": "true"
    }), " Cut"), React.createElement("a", {
      className: "dropdown-item",
      href: "javascript:void(0)",
      role: "menuitem"
    }, React.createElement("i", {
      className: "icon wb-copy",
      "aria-hidden": "true"
    }), " Copy"), React.createElement("a", {
      className: "dropdown-item",
      href: "javascript:void(0)",
      role: "menuitem"
    }, React.createElement("i", {
      className: "icon wb-rubber",
      "aria-hidden": "true"
    }), " Eraser")))), React.createElement("div", {
      className: "btn-toolbar",
      "aria-label": "Toolbar with button groups",
      role: "toolbar"
    }, React.createElement("div", {
      className: "btn-group",
      role: "group"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-icon btn-default btn-outline"
    }, React.createElement("i", {
      className: "icon wb-file",
      "aria-hidden": "true"
    })), React.createElement("button", {
      type: "button",
      className: "btn btn-icon btn-default btn-outline"
    }, React.createElement("i", {
      className: "icon wb-pencil",
      "aria-hidden": "true"
    })), React.createElement("button", {
      type: "button",
      className: "btn btn-icon btn-default btn-outline"
    }, React.createElement("i", {
      className: "icon wb-folder",
      "aria-hidden": "true"
    })), React.createElement("button", {
      type: "button",
      className: "btn btn-icon btn-default btn-outline"
    }, React.createElement("i", {
      className: "icon wb-trash",
      "aria-hidden": "true"
    }))))))), React.createElement("div", {
      className: "col-xl-4 col-lg-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Nesting Button Group"), React.createElement("p", null, "Place a ", React.createElement("code", null, ".btn-group"), " within another ", React.createElement("code", null, ".btn-group"), "                  when you want dropdown menus mixed with a series of buttons."), React.createElement("div", {
      className: "example example-buttons"
    }, React.createElement("div", {
      className: "btn-group",
      "aria-label": "Button group with nested dropdown",
      role: "group"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-primary"
    }, "1"), React.createElement("button", {
      type: "button",
      className: "btn btn-primary"
    }, "2"), React.createElement("div", {
      className: "btn-group",
      role: "group"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-primary dropdown-toggle",
      id: "exampleGroupDrop1",
      "data-toggle": "dropdown",
      "aria-expanded": "false"
    }, "Dropdown"), React.createElement("div", {
      className: "dropdown-menu",
      "aria-labelledby": "exampleGroupDrop1",
      role: "menu"
    }, React.createElement("a", {
      className: "dropdown-item",
      href: "javascript:void(0)",
      role: "menuitem"
    }, "Dropdown link"), React.createElement("a", {
      className: "dropdown-item",
      href: "javascript:void(0)",
      role: "menuitem"
    }, "Dropdown link")))), React.createElement("div", {
      className: "btn-group",
      "aria-label": "Button group with nested dropdown",
      role: "group"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-outline btn-default"
    }, "1"), React.createElement("button", {
      type: "button",
      className: "btn btn-outline btn-default"
    }, "2"), React.createElement("div", {
      className: "btn-group",
      role: "group"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-outline btn-default dropdown-toggle",
      id: "exampleGroupDrop2",
      "data-toggle": "dropdown",
      "aria-expanded": "false"
    }, "Dropdown"), React.createElement("div", {
      className: "dropdown-menu",
      "aria-labelledby": "exampleGroupDrop2",
      role: "menu"
    }, React.createElement("a", {
      className: "dropdown-item",
      href: "javascript:void(0)",
      role: "menuitem"
    }, "Dropdown link"), React.createElement("a", {
      className: "dropdown-item",
      href: "javascript:void(0)",
      role: "menuitem"
    }, "Dropdown link"))))))), React.createElement("div", {
      className: "col-xl-4 col-lg-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Justified Button Group"), React.createElement("p", null, "To use justified button groups with ", React.createElement("code", null, "<button>"), "                  elements, you must wrap each button in a button group. Most browsers don't properly apply our CSS for justification to", React.createElement("code", null, "<button>"), " elements, but since we support button dropdowns, we can work around that."), React.createElement("div", {
      className: "example example-buttons"
    }, React.createElement("div", {
      className: "btn-group btn-group-justified"
    }, React.createElement("div", {
      className: "btn-group",
      role: "group"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-primary"
    }, React.createElement("i", {
      className: "icon wb-star",
      "aria-hidden": "true"
    }), React.createElement("br", null), React.createElement("span", {
      className: "text-uppercase hidden-sm-down"
    }, "Favourites"))), React.createElement("div", {
      className: "btn-group",
      role: "group"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-info"
    }, React.createElement("i", {
      className: "icon wb-time",
      "aria-hidden": "true"
    }), React.createElement("br", null), React.createElement("span", {
      className: "text-uppercase hidden-sm-down"
    }, "Recent"))), React.createElement("div", {
      className: "btn-group",
      role: "group"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-success"
    }, React.createElement("i", {
      className: "icon wb-user",
      "aria-hidden": "true"
    }), React.createElement("br", null), React.createElement("span", {
      className: "text-uppercase hidden-sm-down"
    }, "Contacts"))))))), React.createElement("div", {
      className: "col-xl-4 col-lg-6"
    }, React.createElement("div", {
      className: "example-wrap m-md-0"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Button.Js Componenents"), React.createElement("p", null, "There are a few easy ways to quickly get started with Bootstrap, each one ..."), React.createElement("p", {
      id: "exampleMoreless"
    }, "Appealing to a different skill level and use case. Read through to see what suits your particular needs."), React.createElement("div", {
      className: "example example-buttons"
    }, React.createElement("div", null, React.createElement("button", {
      type: "button",
      className: "btn btn-sm btn-primary",
      "data-toggle": "button",
      "data-plugin": "moreButton",
      "data-more": "#exampleMoreless"
    }, React.createElement("i", {
      className: "icon wb-plus text",
      "aria-hidden": "true"
    }), React.createElement("span", {
      className: "text"
    }, "More"), React.createElement("i", {
      className: "icon wb-minus text-active",
      "aria-hidden": "true"
    }), React.createElement("span", {
      className: "text-active"
    }, "Less"))), React.createElement("div", null, React.createElement("button", {
      type: "button",
      className: "btn btn-success",
      "data-toggle": "button"
    }, React.createElement("i", {
      className: "icon wb-upload text",
      "aria-hidden": "true"
    }), React.createElement("span", {
      className: "text"
    }, "Upload"), React.createElement("i", {
      className: "icon wb-check text-active",
      "aria-hidden": "true"
    }), React.createElement("span", {
      className: "text-active"
    }, "Success")), React.createElement("button", {
      type: "button",
      className: "btn btn-default btn-outline",
      "data-toggle": "button"
    }, React.createElement("i", {
      className: "icon wb-heart-outline text",
      "aria-hidden": "true"
    }), React.createElement("i", {
      className: "icon wb-heart text-active text-danger",
      "aria-hidden": "true"
    })), React.createElement("button", {
      type: "button",
      className: "btn btn-default btn-outline active",
      "data-toggle": "button"
    }, React.createElement("span", {
      className: "text"
    }, React.createElement("i", {
      className: "icon wb-thumb-up",
      "aria-hidden": "true"
    }), " 25"), React.createElement("span", {
      className: "text-active"
    }, React.createElement("i", {
      className: "icon wb-thumb-up text-danger",
      "aria-hidden": "true"
    }), "                        26"))), React.createElement("div", null, React.createElement("div", {
      className: "btn-group",
      "data-toggle": "buttons",
      role: "group"
    }, React.createElement("label", {
      className: "btn btn-outline btn-primary active"
    }, React.createElement("input", {
      type: "radio",
      name: "options",
      autoComplete: "off",
      defaultValue: "male",
      defaultChecked: true
    }), React.createElement("i", {
      className: "icon wb-check text-active",
      "aria-hidden": "true"
    }), "                        Male"), React.createElement("label", {
      className: "btn btn-outline btn-primary"
    }, React.createElement("input", {
      type: "radio",
      name: "options",
      autoComplete: "off",
      defaultValue: "female"
    }), React.createElement("i", {
      className: "icon wb-check text-active",
      "aria-hidden": "true"
    }), "                        Female"), React.createElement("label", {
      className: "btn btn-outline btn-primary"
    }, React.createElement("input", {
      type: "radio",
      name: "options",
      autoComplete: "off",
      defaultValue: "n/a"
    }), React.createElement("i", {
      className: "icon wb-check text-active",
      "aria-hidden": "true"
    }), "                        N/A"))), React.createElement("div", null, React.createElement("div", {
      className: "btn-group",
      "data-toggle": "buttons",
      role: "group"
    }, React.createElement("label", {
      className: "btn btn-primary active"
    }, React.createElement("input", {
      type: "checkbox",
      name: "multiples",
      defaultValue: "apple",
      defaultChecked: true
    }), " Apple"), React.createElement("label", {
      className: "btn btn-primary active"
    }, React.createElement("input", {
      type: "checkbox",
      name: "multiples",
      defaultValue: "banana",
      defaultChecked: true
    }), " Banana"), React.createElement("label", {
      className: "btn btn-primary"
    }, React.createElement("input", {
      type: "checkbox",
      name: "multiples",
      defaultValue: "orange"
    }), " Orange")))))), React.createElement("div", {
      className: "col-xl-4 col-lg-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Stateful"), React.createElement("p", null, "Add ", React.createElement("code", null, "data-loading-text=\"Loading...\""), " to use a loading state on a button."), React.createElement("div", {
      className: "example"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-primary",
      id: "exampleStatefulButton",
      "data-plugin": "loadingButton",
      "data-loading-text": "Loading..."
    }, "Loading state"))))))), React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-heading"
    }, React.createElement("h3", {
      className: "panel-title"
    }, "Ladda Buttons", React.createElement("small", null, React.createElement("a", {
      className: "example-plugin-link",
      href: "http://msurguy.github.io/ladda/",
      target: "_blank"
    }, "official website")))), React.createElement("div", {
      className: "panel-body container-fluid"
    }, React.createElement("div", {
      className: "row row-lg"
    }, React.createElement("div", {
      className: "col-xl-4 col-lg-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Expand"), React.createElement("div", {
      className: "example example-buttons"
    }, React.createElement("div", {
      className: "float-left"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-info ladda-button",
      "data-style": "expand-left",
      "data-plugin": "ladda"
    }, React.createElement("span", {
      className: "ladda-label"
    }, React.createElement("i", {
      className: "icon wb-arrow-expand mr-10",
      "aria-hidden": "true"
    }), "Expand left"))), React.createElement("div", {
      className: "float-left"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-success ladda-button",
      "data-style": "expand-right",
      "data-plugin": "ladda"
    }, React.createElement("span", {
      className: "ladda-label"
    }, React.createElement("i", {
      className: "icon wb-arrow-expand mr-10",
      "aria-hidden": "true"
    }), "Expand right"))), React.createElement("div", {
      className: "float-left"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-primary ladda-button",
      "data-style": "expand-up",
      "data-plugin": "ladda"
    }, React.createElement("span", {
      className: "ladda-label"
    }, React.createElement("i", {
      className: "icon wb-arrow-expand mr-10",
      "aria-hidden": "true"
    }), "Expand up"))), React.createElement("div", {
      className: "float-left"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-warning ladda-button",
      "data-style": "expand-down",
      "data-plugin": "ladda"
    }, React.createElement("span", {
      className: "ladda-label"
    }, React.createElement("i", {
      className: "icon wb-arrow-expand mr-10",
      "aria-hidden": "true"
    }), "Expand down")))))), React.createElement("div", {
      className: "col-xl-4 col-lg-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Zoom"), React.createElement("div", {
      className: "example example-buttons"
    }, React.createElement("div", {
      className: "float-left"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-warning ladda-button",
      "data-style": "zoom-in",
      "data-plugin": "ladda"
    }, React.createElement("span", {
      className: "ladda-label"
    }, React.createElement("i", {
      className: "icon wb-zoom-in mr-10",
      "aria-hidden": "true"
    }), "Zoom in"))), React.createElement("div", {
      className: "float-left"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-danger ladda-button",
      "data-style": "zoom-out",
      "data-plugin": "ladda"
    }, React.createElement("span", {
      className: "ladda-label"
    }, React.createElement("i", {
      className: "icon wb-zoom-out mr-10",
      "aria-hidden": "true"
    }), "Zoom out")))))), React.createElement("div", {
      className: "col-xl-4 col-lg-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Progress"), React.createElement("div", {
      className: "example example-buttons"
    }, React.createElement("div", {
      className: "float-left"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-success ladda-button",
      "data-style": "expand-left",
      "data-plugin": "ladda",
      "data-type": "progress"
    }, React.createElement("span", {
      className: "ladda-label"
    }, React.createElement("i", {
      className: "icon wb-arrow-expand mr-10",
      "aria-hidden": "true"
    }), "Expand"))), React.createElement("div", {
      className: "float-left"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-warning ladda-button",
      "data-style": "zoom-in",
      "data-plugin": "ladda",
      "data-type": "progress"
    }, React.createElement("span", {
      className: "ladda-label"
    }, React.createElement("i", {
      className: "icon wb-zoom-in mr-10",
      "aria-hidden": "true"
    }), "Zoom"))), React.createElement("div", {
      className: "float-left"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-primary ladda-button",
      "data-style": "slide-left",
      "data-plugin": "ladda",
      "data-type": "progress"
    }, React.createElement("span", {
      className: "ladda-label"
    }, React.createElement("i", {
      className: "icon wb-arrow-left mr-10",
      "aria-hidden": "true"
    }), "Slide")))))), React.createElement("div", {
      className: "col-lg-6"
    }, React.createElement("div", {
      className: "example-wrap m-md-0"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Slide"), React.createElement("div", {
      className: "example example-buttons"
    }, React.createElement("div", {
      className: "float-left"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-primary ladda-button",
      "data-style": "slide-left",
      "data-plugin": "ladda"
    }, React.createElement("span", {
      className: "ladda-label"
    }, React.createElement("i", {
      className: "icon wb-arrow-left mr-10",
      "aria-hidden": "true"
    }), "Slide left"))), React.createElement("div", {
      className: "float-left"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-primary ladda-button",
      "data-style": "slide-right",
      "data-plugin": "ladda"
    }, React.createElement("span", {
      className: "ladda-label"
    }, "Slide right", React.createElement("i", {
      className: "icon wb-arrow-right ml-10",
      "aria-hidden": "true"
    })))), React.createElement("div", {
      className: "float-left"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-primary ladda-button",
      "data-style": "slide-up",
      "data-plugin": "ladda"
    }, React.createElement("span", {
      className: "ladda-label"
    }, React.createElement("i", {
      className: "icon wb-arrow-up mr-10",
      "aria-hidden": "true"
    }), "Slide up"))), React.createElement("div", {
      className: "float-left"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-primary ladda-button",
      "data-style": "slide-down",
      "data-plugin": "ladda"
    }, React.createElement("span", {
      className: "ladda-label"
    }, React.createElement("i", {
      className: "icon wb-arrow-down mr-10",
      "aria-hidden": "true"
    }), "Slide down")))))), React.createElement("div", {
      className: "col-lg-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Sizing"), React.createElement("div", {
      className: "example example-buttons"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-primary btn-lg ladda-button",
      "data-style": "expand-left",
      "data-plugin": "ladda"
    }, React.createElement("span", {
      className: "ladda-label"
    }, "Large")), React.createElement("button", {
      type: "button",
      className: "btn btn-primary ladda-button",
      "data-style": "expand-left",
      "data-plugin": "ladda"
    }, React.createElement("span", {
      className: "ladda-label"
    }, "Default")), React.createElement("button", {
      type: "button",
      className: "btn btn-primary btn-sm ladda-button",
      "data-style": "expand-left",
      "data-plugin": "ladda"
    }, React.createElement("span", {
      className: "ladda-label"
    }, "Small")), React.createElement("button", {
      type: "button",
      className: "btn btn-primary btn-xs ladda-button",
      "data-style": "expand-left",
      "data-plugin": "ladda"
    }, React.createElement("span", {
      className: "ladda-label"
    }, "Tiny"))))))))));
  }

}

module.exportDefault(ButtonsExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"cards.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/uikit/cards.jsx                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class CardsExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("ol", {
      className: "breadcrumb"
    }, React.createElement("li", null, React.createElement("a", {
      href: "#/"
    }, "Home")), React.createElement("li", {
      className: "active"
    }, "Basic UI")), React.createElement("h1", {
      className: "page-title"
    }, "Cards"), React.createElement("div", {
      className: "page-header-actions"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-sm btn-icon btn-inverse btn-round",
      "data-toggle": "tooltip",
      "data-original-title": "Edit"
    }, React.createElement("i", {
      className: "icon wb-pencil",
      "aria-hidden": "true"
    })), React.createElement("button", {
      type: "button",
      className: "btn btn-sm btn-icon btn-inverse btn-round",
      "data-toggle": "tooltip",
      "data-original-title": "Refresh"
    }, React.createElement("i", {
      className: "icon wb-refresh",
      "aria-hidden": "true"
    })), React.createElement("button", {
      type: "button",
      className: "btn btn-sm btn-icon btn-inverse btn-round",
      "data-toggle": "tooltip",
      "data-original-title": "Setting"
    }, React.createElement("i", {
      className: "icon wb-settings",
      "aria-hidden": "true"
    })))), React.createElement("div", {
      className: "page-content container-fluid"
    }, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-xxl-4 col-lg-6 col-md-6 col-sm-12"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Example"), React.createElement("p", null, "Cards require a small amount of markup and classes to provide you with as much control as possible. These classes and markup are flexible though and can typically be remixed and extended with ease. For example, if your card has no flush content like images, feel free to put the", React.createElement("code", null, ".card-block"), " class on the ", React.createElement("code", null, ".card"), " element to consolidate your markup."), React.createElement("div", {
      className: "card"
    }, React.createElement("img", {
      className: "card-img-top img-fluid width-full",
      src: "http://localhost/remark-react/global/photos/focus-1-480x320.jpg",
      alt: "Card image cap"
    }), React.createElement("div", {
      className: "card-block"
    }, React.createElement("h4", {
      className: "card-title"
    }, "Card title"), React.createElement("p", {
      className: "card-text"
    }, "Some quick example text to build on the card title and make up the bulk of the card's content."), React.createElement("a", {
      href: "#",
      className: "btn btn-primary"
    }, "Button"))))), React.createElement("div", {
      className: "col-xxl-4 col-lg-6 col-md-6 col-sm-12"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Content types"), React.createElement("p", null, "Cards support a wide variety of content, including images, text, list groups, links, and more. Mix and match multiple content types to create the card you need."), React.createElement("div", {
      className: "card"
    }, React.createElement("img", {
      className: "card-img-top img-fluid width-full",
      src: "http://localhost/remark-react/global/photos/focus-1-480x320.jpg",
      alt: "Card image cap"
    }), React.createElement("div", {
      className: "card-block"
    }, React.createElement("h4", {
      className: "card-title"
    }, "Card title"), React.createElement("p", {
      className: "card-text"
    }, "Some quick example text to build on the card title and make up the bulk of the card's content.")), React.createElement("ul", {
      className: "list-group list-group-bordered list-group-flush margin-bottom-0"
    }, React.createElement("li", {
      className: "list-group-item"
    }, "Cras justo odio"), React.createElement("li", {
      className: "list-group-item"
    }, "Dapibus ac facilisis in"), React.createElement("li", {
      className: "list-group-item"
    }, "Vestibulum at eros")), React.createElement("div", {
      className: "card-block"
    }, React.createElement("a", {
      href: "#",
      className: "card-link"
    }, "Card link"), React.createElement("a", {
      href: "#",
      className: "card-link"
    }, "Another link"))))), React.createElement("div", {
      className: "clearfix hidden-sm-down hidden-xxl-up"
    }), React.createElement("div", {
      className: "col-xxl-4 col-lg-6 col-md-6 col-sm-12"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Image overlays & Inverted text"), React.createElement("p", null, "Turn an image into a card background and overlay your card\u2019s text. Depending on the image, you may or may not need ", React.createElement("code", null, ".card-inverse"), " (see below)."), React.createElement("p", null, "Cards include a class for quickly toggling the text color. By default, cards use dark text and assume a light background. Add ", React.createElement("code", null, ".card-inverse"), "            for white text and specify the background-color and border-color to go with it."), React.createElement("div", {
      className: "card card-inverse"
    }, React.createElement("img", {
      className: "card-img width-full",
      src: "http://localhost/remark-react/global/photos/focus-1-480x320.jpg",
      alt: "Card image"
    }), React.createElement("div", {
      className: "card-img-overlay"
    }, React.createElement("h4", {
      className: "card-title"
    }, "Card title"), React.createElement("p", {
      className: "card-text"
    }, "This is a wider card with supporting text below as a natural lead-in to additional content."), React.createElement("p", {
      className: "card-text"
    }, React.createElement("small", {
      className: "text-muted"
    }, "Last updated 3 mins ago")))), React.createElement("div", {
      className: "card card-inverse bg-blue-grey-800",
      style: {
        borderColor: '#263238'
      }
    }, React.createElement("div", {
      className: "card-block"
    }, React.createElement("h3", {
      className: "card-title"
    }, "Special title treatment"), React.createElement("p", {
      className: "card-text"
    }, "With supporting text below as a natural lead-in to additional content."), React.createElement("a", {
      href: "#",
      className: "btn btn-primary"
    }, "Button"))))), React.createElement("div", {
      className: "col-xxl-6 col-lg-6 col-md-6 col-sm-12"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Image caps top"), React.createElement("div", {
      className: "card"
    }, React.createElement("img", {
      className: "card-img-top width-full",
      src: "http://localhost/remark-react/global/photos/focus-1-480x320.jpg",
      alt: "Card image cap"
    }), React.createElement("div", {
      className: "card-block"
    }, React.createElement("h4", {
      className: "card-title"
    }, "Card title"), React.createElement("p", {
      className: "card-text"
    }, "This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer."), React.createElement("p", {
      className: "card-text"
    }, React.createElement("small", {
      className: "text-muted"
    }, "Last updated 3 mins ago")))))), React.createElement("div", {
      className: "col-xxl-6 col-lg-6 col-md-6 col-sm-12"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Image caps bottom"), React.createElement("div", {
      className: "card"
    }, React.createElement("div", {
      className: "card-block"
    }, React.createElement("h4", {
      className: "card-title"
    }, "Card title"), React.createElement("p", {
      className: "card-text"
    }, "This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer."), React.createElement("p", {
      className: "card-text"
    }, React.createElement("small", {
      className: "text-muted"
    }, "Last updated 3 mins ago"))), React.createElement("img", {
      className: "card-img-bottom width-full",
      src: "http://localhost/remark-react/global/photos/focus-1-480x320.jpg",
      alt: "Card image cap"
    })))), React.createElement("div", {
      className: "col-xxl-6 col-lg-6 col-md-6 col-sm-12"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Header and footer"), React.createElement("p", null, "Add an optional header and/or footer within a card."), React.createElement("div", {
      className: "card"
    }, React.createElement("div", {
      className: "card-header card-header-transparent"
    }, "Featured"), React.createElement("div", {
      className: "card-block"
    }, React.createElement("h4", {
      className: "card-title"
    }, "Special title treatment"), React.createElement("p", {
      className: "card-text"
    }, "With supporting text below as a natural lead-in to additional content."), React.createElement("a", {
      href: "#",
      className: "btn btn-primary"
    }, "Go somewhere"))), React.createElement("div", {
      className: "card"
    }, React.createElement("div", {
      className: "card-header card-header-transparent"
    }, "Quote"), React.createElement("div", {
      className: "card-block"
    }, React.createElement("blockquote", {
      className: "card-blockquote"
    }, React.createElement("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante."), React.createElement("footer", null, "Someone famous in", React.createElement("cite", {
      title: "Source Title"
    }, "Source Title"))))), React.createElement("div", {
      className: "card text-xs-center"
    }, React.createElement("div", {
      className: "card-header card-header-transparent"
    }, "Featured"), React.createElement("div", {
      className: "card-block"
    }, React.createElement("h4", {
      className: "card-title"
    }, "Special title treatment"), React.createElement("p", {
      className: "card-text"
    }, "With supporting text below as a natural lead-in to additional content."), React.createElement("a", {
      href: "#",
      className: "btn btn-primary"
    }, "Go somewhere")), React.createElement("div", {
      className: "card-footer card-footer-transparent text-muted"
    }, "2 days ago")))), React.createElement("div", {
      className: "col-xxl-6 col-lg-6 col-md-6 col-sm-12"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Text alignment"), React.createElement("p", null, "You can quickly change the text alignment of any card\u2014in its entirety or specific parts\u2014with our text align classes."), React.createElement("div", {
      className: "card card-block"
    }, React.createElement("h4", {
      className: "card-title"
    }, "Special title treatment"), React.createElement("p", {
      className: "card-text"
    }, "With supporting text below as a natural lead-in to additional content."), React.createElement("a", {
      href: "#",
      className: "btn btn-primary"
    }, "Go somewhere")), React.createElement("div", {
      className: "card card-block text-xs-center"
    }, React.createElement("h4", {
      className: "card-title"
    }, "Special title treatment"), React.createElement("p", {
      className: "card-text"
    }, "With supporting text below as a natural lead-in to additional content."), React.createElement("a", {
      href: "#",
      className: "btn btn-primary"
    }, "Go somewhere")), React.createElement("div", {
      className: "card card-block text-xs-right"
    }, React.createElement("h4", {
      className: "card-title"
    }, "Special title treatment"), React.createElement("p", {
      className: "card-text"
    }, "With supporting text below as a natural lead-in to additional content."), React.createElement("a", {
      href: "#",
      className: "btn btn-primary"
    }, "Go somewhere")))), React.createElement("div", {
      className: "clearfix"
    }), React.createElement("div", {
      className: "col-xxl-12"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Groups"), React.createElement("p", null, "Use card groups to render cards as a single, attached element with equal width and height columns. By default, card groups use ", React.createElement("code", null, "display: table;"), "            and ", React.createElement("code", null, "table-layout: fixed;"), " to achieve their uniform sizing. However, enabling flexbox mode can switch that to use ", React.createElement("code", null, "display: flex;"), "            and provide the same effect."), React.createElement("div", {
      className: "card-group"
    }, React.createElement("div", {
      className: "card"
    }, React.createElement("img", {
      className: "card-img-top width-full",
      src: "http://localhost/remark-react/global/photos/focus-1-480x320.jpg",
      alt: "Card image cap"
    }), React.createElement("div", {
      className: "card-block"
    }, React.createElement("h4", {
      className: "card-title"
    }, "Card title"), React.createElement("p", {
      className: "card-text"
    }, "This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer."), React.createElement("p", {
      className: "card-text"
    }, React.createElement("small", {
      className: "text-muted"
    }, "Last updated 3 mins ago")))), React.createElement("div", {
      className: "card"
    }, React.createElement("img", {
      className: "card-img-top width-full",
      src: "http://localhost/remark-react/global/photos/focus-1-480x320.jpg",
      alt: "Card image cap"
    }), React.createElement("div", {
      className: "card-block"
    }, React.createElement("h4", {
      className: "card-title"
    }, "Card title"), React.createElement("p", {
      className: "card-text"
    }, "This card has supporting text below as a natural lead-in to additional content."), React.createElement("p", {
      className: "card-text"
    }, React.createElement("small", {
      className: "text-muted"
    }, "Last updated 3 mins ago")))), React.createElement("div", {
      className: "card"
    }, React.createElement("img", {
      className: "card-img-top width-full",
      src: "http://localhost/remark-react/global/photos/focus-1-480x320.jpg",
      alt: "Card image cap"
    }), React.createElement("div", {
      className: "card-block"
    }, React.createElement("h4", {
      className: "card-title"
    }, "Card title"), React.createElement("p", {
      className: "card-text"
    }, "This is a wider card with supporting text below as a natural lead-in to additional content. This card has even longer content than the first to show that equal height action."), React.createElement("p", {
      className: "card-text"
    }, React.createElement("small", {
      className: "text-muted"
    }, "Last updated 3 mins ago"))))))), React.createElement("div", {
      className: "col-xxl-12"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Decks"), React.createElement("p", null, "Need a set of equal width and height cards that aren\u2019t attached to one another? Use card decks. By default, card decks require two wrapping elements: ", React.createElement("code", null, ".card-deck-wrapper"), " and a ", React.createElement("code", null, ".card-deck"), ". We use table styles for the sizing and the gutters on ", React.createElement("code", null, ".card-deck"), ". The ", React.createElement("code", null, ".card-deck-wrapper"), " is used to negative margin out the border-spacing on the ", React.createElement("code", null, ".card-deck"), "."), React.createElement("p", null, "ProTip! If you enable flexbox mode, you can remove the ", React.createElement("code", null, ".card-deck-wrapper"), "."), React.createElement("div", {
      className: "card-deck-wrapper"
    }, React.createElement("div", {
      className: "card-deck"
    }, React.createElement("div", {
      className: "card"
    }, React.createElement("img", {
      className: "card-img-top width-full",
      src: "http://localhost/remark-react/global/photos/focus-1-480x320.jpg",
      alt: "Card image cap"
    }), React.createElement("div", {
      className: "card-block"
    }, React.createElement("h4", {
      className: "card-title"
    }, "Card title"), React.createElement("p", {
      className: "card-text"
    }, "This is a longer card with supporting text below as a natural lead-in to additional content. This content is a little bit longer."), React.createElement("p", {
      className: "card-text"
    }, React.createElement("small", {
      className: "text-muted"
    }, "Last updated 3 mins ago")))), React.createElement("div", {
      className: "card"
    }, React.createElement("img", {
      className: "card-img-top width-full",
      src: "http://localhost/remark-react/global/photos/focus-1-480x320.jpg",
      alt: "Card image cap"
    }), React.createElement("div", {
      className: "card-block"
    }, React.createElement("h4", {
      className: "card-title"
    }, "Card title"), React.createElement("p", {
      className: "card-text"
    }, "This card has supporting text below as a natural lead-in to additional content."), React.createElement("p", {
      className: "card-text"
    }, React.createElement("small", {
      className: "text-muted"
    }, "Last updated 3 mins ago")))), React.createElement("div", {
      className: "card"
    }, React.createElement("img", {
      className: "card-img-top width-full",
      src: "http://localhost/remark-react/global/photos/focus-1-480x320.jpg",
      alt: "Card image cap"
    }), React.createElement("div", {
      className: "card-block"
    }, React.createElement("h4", {
      className: "card-title"
    }, "Card title"), React.createElement("p", {
      className: "card-text"
    }, "This is a wider card with supporting text below as a natural lead-in to additional content. This card has even longer content than the first to show that equal height action."), React.createElement("p", {
      className: "card-text"
    }, React.createElement("small", {
      className: "text-muted"
    }, "Last updated 3 mins ago")))))))), React.createElement("div", {
      className: "col-xxl-12"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Background variants"), React.createElement("p", null, "Cards include their own variant classes for quickly changing the background-color and border-color of a card. Darker colors require the use of ", React.createElement("code", null, ".card-inverse"), "."), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-sm-12 col-md-6"
    }, React.createElement("div", {
      className: "card card-inverse card-primary text-xs-center"
    }, React.createElement("div", {
      className: "card-block"
    }, React.createElement("blockquote", {
      className: "card-blockquote"
    }, React.createElement("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante."), React.createElement("footer", null, "Someone famous in", React.createElement("cite", {
      title: "Source Title"
    }, "Source Title"))))), React.createElement("div", {
      className: "card card-inverse card-success text-xs-center"
    }, React.createElement("div", {
      className: "card-block"
    }, React.createElement("blockquote", {
      className: "card-blockquote"
    }, React.createElement("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante."), React.createElement("footer", null, "Someone famous in", React.createElement("cite", {
      title: "Source Title"
    }, "Source Title"))))), React.createElement("div", {
      className: "card card-inverse card-info text-xs-center"
    }, React.createElement("div", {
      className: "card-block"
    }, React.createElement("blockquote", {
      className: "card-blockquote"
    }, React.createElement("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante."), React.createElement("footer", null, "Someone famous in", React.createElement("cite", {
      title: "Source Title"
    }, "Source Title")))))), React.createElement("div", {
      className: "col-sm-12 col-md-6"
    }, React.createElement("div", {
      className: "card card-inverse card-warning text-xs-center"
    }, React.createElement("div", {
      className: "card-block"
    }, React.createElement("blockquote", {
      className: "card-blockquote"
    }, React.createElement("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante."), React.createElement("footer", null, "Someone famous in", React.createElement("cite", {
      title: "Source Title"
    }, "Source Title"))))), React.createElement("div", {
      className: "card card-inverse card-danger text-xs-center"
    }, React.createElement("div", {
      className: "card-block"
    }, React.createElement("blockquote", {
      className: "card-blockquote"
    }, React.createElement("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante."), React.createElement("footer", null, "Someone famous in", React.createElement("cite", {
      title: "Source Title"
    }, "Source Title"))))))))), React.createElement("div", {
      className: "col-xxl-12"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Columns"), React.createElement("p", null, "Cards can be organized into Masonry-like columns with just CSS by wrapping them in .card-columns. Heads up! This is not available in IE9 and below as they have no support for the column CSS properties."), React.createElement("div", {
      className: "card-columns"
    }, React.createElement("div", {
      className: "card"
    }, React.createElement("img", {
      className: "card-img-top width-full",
      src: "http://localhost/remark-react/global/photos/focus-1-480x320.jpg",
      alt: "Card image cap"
    }), React.createElement("div", {
      className: "card-block"
    }, React.createElement("h4", {
      className: "card-title"
    }, "Card title that wraps to a new line"), React.createElement("p", {
      className: "card-text"
    }, "This is a longer card with supporting text below as a natural lead-in to additional content. This content is a little bit longer."))), React.createElement("div", {
      className: "card card-block"
    }, React.createElement("blockquote", {
      className: "card-blockquote"
    }, React.createElement("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante."), React.createElement("footer", null, React.createElement("small", {
      className: "text-muted"
    }, "Someone famous in", React.createElement("cite", {
      title: "Source Title"
    }, "Source Title"))))), React.createElement("div", {
      className: "card"
    }, React.createElement("img", {
      className: "card-img-top width-full",
      src: "http://localhost/remark-react/global/photos/focus-1-480x320.jpg",
      alt: "Card image cap"
    }), React.createElement("div", {
      className: "card-block"
    }, React.createElement("h4", {
      className: "card-title"
    }, "Card title"), React.createElement("p", {
      className: "card-text"
    }, "This card has supporting text below as a natural lead-in to additional content."), React.createElement("p", {
      className: "card-text"
    }, React.createElement("small", {
      className: "text-muted"
    }, "Last updated 3 mins ago")))), React.createElement("div", {
      className: "card card-block card-inverse card-primary text-xs-center"
    }, React.createElement("blockquote", {
      className: "card-blockquote"
    }, React.createElement("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat."), React.createElement("footer", null, React.createElement("small", null, "Someone famous in", React.createElement("cite", {
      title: "Source Title"
    }, "Source Title"))))), React.createElement("div", {
      className: "card card-block text-xs-center"
    }, React.createElement("h4", {
      className: "card-title"
    }, "Card title"), React.createElement("p", {
      className: "card-text"
    }, "This card has supporting text below as a natural lead-in to additional content."), React.createElement("p", {
      className: "card-text"
    }, React.createElement("small", {
      className: "text-muted"
    }, "Last updated 3 mins ago"))), React.createElement("div", {
      className: "card"
    }, React.createElement("img", {
      className: "card-img width-full",
      src: "http://localhost/remark-react/global/photos/focus-1-480x320.jpg",
      alt: "Card image"
    })), React.createElement("div", {
      className: "card card-block text-xs-right"
    }, React.createElement("blockquote", {
      className: "card-blockquote"
    }, React.createElement("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante."), React.createElement("footer", null, React.createElement("small", {
      className: "text-muted"
    }, "Someone famous in", React.createElement("cite", {
      title: "Source Title"
    }, "Source Title"))))), React.createElement("div", {
      className: "card card-block"
    }, React.createElement("h4", {
      className: "card-title"
    }, "Card title"), React.createElement("p", {
      className: "card-text"
    }, "This is a wider card with supporting text below as a natural lead-in to additional content. This card has even longer content than the first to show that equal height action."), React.createElement("p", {
      className: "card-text"
    }, React.createElement("small", {
      className: "text-muted"
    }, "Last updated 3 mins ago")))))))));
  }

}

module.exportDefault(CardsExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"carousel.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/uikit/carousel.jsx                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class CarouselExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "CarouselExample")), React.createElement("div", {
      className: "page-content container-fluid"
    }));
  }

}

module.exportDefault(CarouselExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"colors.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/uikit/colors.jsx                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class ColorsExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("ol", {
      className: "breadcrumb"
    }, React.createElement("li", {
      className: "breadcrumb-item"
    }, React.createElement("a", {
      href: "../index.html"
    }, "Home")), React.createElement("li", {
      className: "breadcrumb-item active"
    }, "Basic UI")), React.createElement("h1", {
      className: "page-title"
    }, "Colors"), React.createElement("div", {
      className: "page-header-actions"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-sm btn-icon btn-inverse btn-round",
      "data-toggle": "tooltip",
      "data-original-title": "Edit"
    }, React.createElement("i", {
      className: "icon wb-pencil",
      "aria-hidden": "true"
    })), React.createElement("button", {
      type: "button",
      className: "btn btn-sm btn-icon btn-inverse btn-round",
      "data-toggle": "tooltip",
      "data-original-title": "Refresh"
    }, React.createElement("i", {
      className: "icon wb-refresh",
      "aria-hidden": "true"
    })), React.createElement("button", {
      type: "button",
      className: "btn btn-sm btn-icon btn-inverse btn-round",
      "data-toggle": "tooltip",
      "data-original-title": "Setting"
    }, React.createElement("i", {
      className: "icon wb-settings",
      "aria-hidden": "true"
    })))), React.createElement("div", {
      className: "page-content"
    }, React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-heading"
    }, React.createElement("h3", {
      className: "panel-title"
    }, "Style")), React.createElement("div", {
      className: "panel-body container-fluid"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Base Color Palette"), React.createElement("p", null, "The dashboard will synergize with the colour selection made by the user and appropriately amend. Similarly, all other elements will sync according to the base colours."), React.createElement("div", {
      className: "example color-primaries"
    }, React.createElement("div", {
      className: "bg-blue-grey-200"
    }, "#e4eaec"), React.createElement("div", {
      className: "bg-blue-grey-600"
    }, "#526069"), React.createElement("div", {
      className: "bg-blue-600"
    }, "#62a8ea"), React.createElement("div", {
      className: "bg-cyan-600"
    }, "#57c7d4"), React.createElement("div", {
      className: "bg-teal-600"
    }, "#3aa99e"), React.createElement("div", {
      className: "bg-orange-600"
    }, "#f2a654"), React.createElement("div", {
      className: "bg-red-600"
    }, "#f96868"), React.createElement("div", {
      className: "bg-purple-600"
    }, "#926dde"))), React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Color Palette"), React.createElement("p", null, "This color palette comprises primary and accent colors that can be used for illustration or to develop your brand colors.", React.createElement("br", null), " They've been designed to work harmoniously with each other."), React.createElement("p", {
      className: "mb-30"
    }, "The color palette starts with primary colors and fills in the spectrum to create a complete and usable palette for web", React.createElement("br", null), " project. We suggests using the 500 colors as the primary colors in your project and the other colors as accents colors."), React.createElement("div", {
      className: "row row-lg color-palette"
    }, React.createElement("div", {
      className: "col-md-4 col-lg-3"
    }, React.createElement("h5", {
      className: "text-uppercase"
    }, "red"), React.createElement("ul", {
      className: "list-group"
    }, React.createElement("li", {
      className: "bg-red-800 list-group-item"
    }, React.createElement("span", null, "800"), " /", React.createElement("span", null, "#d6494b")), React.createElement("li", {
      className: "bg-red-700 list-group-item"
    }, React.createElement("span", null, "700"), " /", React.createElement("span", null, "#e9595b")), React.createElement("li", {
      className: "bg-red-600 list-group-item"
    }, React.createElement("span", null, "600"), " /", React.createElement("span", null, "#f96868")), React.createElement("li", {
      className: "bg-red-500 list-group-item"
    }, React.createElement("span", null, "500"), " /", React.createElement("span", null, "#fa7a7a")), React.createElement("li", {
      className: "bg-red-400 blue-grey-700 list-group-item"
    }, React.createElement("span", null, "400"), " /", React.createElement("span", null, "#fa9898")), React.createElement("li", {
      className: "bg-red-300 blue-grey-700 list-group-item"
    }, React.createElement("span", null, "300"), " /", React.createElement("span", null, "#fab4b4")), React.createElement("li", {
      className: "bg-red-200 blue-grey-700 list-group-item"
    }, React.createElement("span", null, "200"), " /", React.createElement("span", null, "#fad3d3")), React.createElement("li", {
      className: "bg-red-100 blue-grey-700 list-group-item"
    }, React.createElement("span", null, "100"), " /", React.createElement("span", null, "#ffeaea")))), React.createElement("div", {
      className: "col-md-4 col-lg-3"
    }, React.createElement("h5", {
      className: "text-uppercase"
    }, "pink"), React.createElement("ul", {
      className: "list-group"
    }, React.createElement("li", {
      className: "bg-pink-800 list-group-item"
    }, React.createElement("span", null, "800"), " /", React.createElement("span", null, "#e53b75")), React.createElement("li", {
      className: "bg-pink-700 list-group-item"
    }, React.createElement("span", null, "700"), " /", React.createElement("span", null, "#f44c87")), React.createElement("li", {
      className: "bg-pink-600 list-group-item"
    }, React.createElement("span", null, "600"), " /", React.createElement("span", null, "#f96197")), React.createElement("li", {
      className: "bg-pink-500 list-group-item"
    }, React.createElement("span", null, "500"), " /", React.createElement("span", null, "#f978a6")), React.createElement("li", {
      className: "bg-pink-400 blue-grey-700 list-group-item"
    }, React.createElement("span", null, "400"), " /", React.createElement("span", null, "#fb8db4")), React.createElement("li", {
      className: "bg-pink-300 blue-grey-700 list-group-item"
    }, React.createElement("span", null, "300"), " /", React.createElement("span", null, "#fba9c6")), React.createElement("li", {
      className: "bg-pink-200 blue-grey-700 list-group-item"
    }, React.createElement("span", null, "200"), " /", React.createElement("span", null, "#ffccde")), React.createElement("li", {
      className: "bg-pink-100 blue-grey-700 list-group-item"
    }, React.createElement("span", null, "100"), " /", React.createElement("span", null, "#fce4ec")))), React.createElement("div", {
      className: "col-md-4 col-lg-3"
    }, React.createElement("h5", {
      className: "text-uppercase"
    }, "purple"), React.createElement("ul", {
      className: "list-group"
    }, React.createElement("li", {
      className: "bg-purple-800 list-group-item"
    }, React.createElement("span", null, "800"), " /", React.createElement("span", null, "#6d45bc")), React.createElement("li", {
      className: "bg-purple-700 list-group-item"
    }, React.createElement("span", null, "700"), " /", React.createElement("span", null, "#7c51d1")), React.createElement("li", {
      className: "bg-purple-600 list-group-item"
    }, React.createElement("span", null, "600"), " /", React.createElement("span", null, "#926dde")), React.createElement("li", {
      className: "bg-purple-500 list-group-item"
    }, React.createElement("span", null, "500"), " /", React.createElement("span", null, "#a58add")), React.createElement("li", {
      className: "bg-purple-400 blue-grey-700 list-group-item"
    }, React.createElement("span", null, "400"), " /", React.createElement("span", null, "#bba7e4")), React.createElement("li", {
      className: "bg-purple-300 blue-grey-700 list-group-item"
    }, React.createElement("span", null, "300"), " /", React.createElement("span", null, "#d2c5ec")), React.createElement("li", {
      className: "bg-purple-200 blue-grey-700 list-group-item"
    }, React.createElement("span", null, "200"), " /", React.createElement("span", null, "#e3dbf4")), React.createElement("li", {
      className: "bg-purple-100 blue-grey-700 list-group-item"
    }, React.createElement("span", null, "100"), " /", React.createElement("span", null, "#f6f2ff")))), React.createElement("div", {
      className: "col-md-4 col-lg-3"
    }, React.createElement("h5", {
      className: "text-uppercase"
    }, "indigo"), React.createElement("ul", {
      className: "list-group"
    }, React.createElement("li", {
      className: "bg-indigo-800 list-group-item"
    }, React.createElement("span", null, "800"), " /", React.createElement("span", null, "#465bd4")), React.createElement("li", {
      className: "bg-indigo-700 list-group-item"
    }, React.createElement("span", null, "700"), " /", React.createElement("span", null, "#5166d6")), React.createElement("li", {
      className: "bg-indigo-600 list-group-item"
    }, React.createElement("span", null, "600"), " /", React.createElement("span", null, "#677ae4")), React.createElement("li", {
      className: "bg-indigo-500 list-group-item"
    }, React.createElement("span", null, "500"), " /", React.createElement("span", null, "#8897ec")), React.createElement("li", {
      className: "bg-indigo-400 blue-grey-700 list-group-item"
    }, React.createElement("span", null, "400"), " /", React.createElement("span", null, "#9daaf3")), React.createElement("li", {
      className: "bg-indigo-300 blue-grey-700 list-group-item"
    }, React.createElement("span", null, "300"), " /", React.createElement("span", null, "#bcc5f4")), React.createElement("li", {
      className: "bg-indigo-200 blue-grey-700 list-group-item"
    }, React.createElement("span", null, "200"), " /", React.createElement("span", null, "#dadef5")), React.createElement("li", {
      className: "bg-indigo-100 blue-grey-700 list-group-item"
    }, React.createElement("span", null, "100"), " /", React.createElement("span", null, "#edeff9")))), React.createElement("div", {
      className: "col-md-4 col-lg-3"
    }, React.createElement("h5", {
      className: "text-uppercase"
    }, "blue"), React.createElement("ul", {
      className: "list-group"
    }, React.createElement("li", {
      className: "bg-blue-800 list-group-item"
    }, React.createElement("span", null, "800"), " /", React.createElement("span", null, "#3583ca")), React.createElement("li", {
      className: "bg-blue-700 list-group-item"
    }, React.createElement("span", null, "700"), " /", React.createElement("span", null, "#4e97d9")), React.createElement("li", {
      className: "bg-blue-600 list-group-item"
    }, React.createElement("span", null, "600"), " /", React.createElement("span", null, "#62a8ea")), React.createElement("li", {
      className: "bg-blue-500 list-group-item"
    }, React.createElement("span", null, "500"), " /", React.createElement("span", null, "#89bceb")), React.createElement("li", {
      className: "bg-blue-400 blue-grey-700 list-group-item"
    }, React.createElement("span", null, "400"), " /", React.createElement("span", null, "#a2caee")), React.createElement("li", {
      className: "bg-blue-300 blue-grey-700 list-group-item"
    }, React.createElement("span", null, "300"), " /", React.createElement("span", null, "#bcd8f1")), React.createElement("li", {
      className: "bg-blue-200 blue-grey-700 list-group-item"
    }, React.createElement("span", null, "200"), " /", React.createElement("span", null, "#d5e4f1")), React.createElement("li", {
      className: "bg-blue-100 blue-grey-700 list-group-item"
    }, React.createElement("span", null, "100"), " /", React.createElement("span", null, "#e8f1f8")))), React.createElement("div", {
      className: "col-md-4 col-lg-3"
    }, React.createElement("h5", {
      className: "text-uppercase"
    }, "cyan"), React.createElement("ul", {
      className: "list-group"
    }, React.createElement("li", {
      className: "bg-cyan-800 list-group-item"
    }, React.createElement("span", null, "800"), " /", React.createElement("span", null, "#37a9b7")), React.createElement("li", {
      className: "bg-cyan-700 list-group-item"
    }, React.createElement("span", null, "700"), " /", React.createElement("span", null, "#47b8c6")), React.createElement("li", {
      className: "bg-cyan-600 list-group-item"
    }, React.createElement("span", null, "600"), " /", React.createElement("span", null, "#57c7d4")), React.createElement("li", {
      className: "bg-cyan-500 list-group-item"
    }, React.createElement("span", null, "500"), " /", React.createElement("span", null, "#77d6e1")), React.createElement("li", {
      className: "bg-cyan-400 blue-grey-700 list-group-item"
    }, React.createElement("span", null, "400"), " /", React.createElement("span", null, "#9ae1e9")), React.createElement("li", {
      className: "bg-cyan-300 blue-grey-700 list-group-item"
    }, React.createElement("span", null, "300"), " /", React.createElement("span", null, "#baeaef")), React.createElement("li", {
      className: "bg-cyan-200 blue-grey-700 list-group-item"
    }, React.createElement("span", null, "200"), " /", React.createElement("span", null, "#d3eff2")), React.createElement("li", {
      className: "bg-cyan-100 blue-grey-700 list-group-item"
    }, React.createElement("span", null, "100"), " /", React.createElement("span", null, "#ecf9fa")))), React.createElement("div", {
      className: "col-md-4 col-lg-3"
    }, React.createElement("h5", {
      className: "text-uppercase"
    }, "teal"), React.createElement("ul", {
      className: "list-group"
    }, React.createElement("li", {
      className: "bg-teal-800 list-group-item"
    }, React.createElement("span", null, "800"), " /", React.createElement("span", null, "#178d81")), React.createElement("li", {
      className: "bg-teal-700 list-group-item"
    }, React.createElement("span", null, "700"), " /", React.createElement("span", null, "#269b8f")), React.createElement("li", {
      className: "bg-teal-600 list-group-item"
    }, React.createElement("span", null, "600"), " /", React.createElement("span", null, "#3aa99e")), React.createElement("li", {
      className: "bg-teal-500 list-group-item"
    }, React.createElement("span", null, "500"), " /", React.createElement("span", null, "#56bfb5")), React.createElement("li", {
      className: "bg-teal-400 blue-grey-700 list-group-item"
    }, React.createElement("span", null, "400"), " /", React.createElement("span", null, "#79d1c9")), React.createElement("li", {
      className: "bg-teal-300 blue-grey-700 list-group-item"
    }, React.createElement("span", null, "300"), " /", React.createElement("span", null, "#99e1da")), React.createElement("li", {
      className: "bg-teal-200 blue-grey-700 list-group-item"
    }, React.createElement("span", null, "200"), " /", React.createElement("span", null, "#cdf4f1")), React.createElement("li", {
      className: "bg-teal-100 blue-grey-700 list-group-item"
    }, React.createElement("span", null, "100"), " /", React.createElement("span", null, "#ecfdfc")))), React.createElement("div", {
      className: "col-md-4 col-lg-3"
    }, React.createElement("h5", {
      className: "text-uppercase"
    }, "green"), React.createElement("ul", {
      className: "list-group"
    }, React.createElement("li", {
      className: "bg-green-800 list-group-item"
    }, React.createElement("span", null, "800"), " /", React.createElement("span", null, "#279566")), React.createElement("li", {
      className: "bg-green-700 list-group-item"
    }, React.createElement("span", null, "700"), " /", React.createElement("span", null, "#36ab7a")), React.createElement("li", {
      className: "bg-green-600 list-group-item"
    }, React.createElement("span", null, "600"), " /", React.createElement("span", null, "#46be8a")), React.createElement("li", {
      className: "bg-green-500 list-group-item"
    }, React.createElement("span", null, "500"), " /", React.createElement("span", null, "#5cd29d")), React.createElement("li", {
      className: "bg-green-400 blue-grey-700 list-group-item"
    }, React.createElement("span", null, "400"), " /", React.createElement("span", null, "#7dd3ae")), React.createElement("li", {
      className: "bg-green-300 blue-grey-700 list-group-item"
    }, React.createElement("span", null, "300"), " /", React.createElement("span", null, "#9fe5c5")), React.createElement("li", {
      className: "bg-green-200 blue-grey-700 list-group-item"
    }, React.createElement("span", null, "200"), " /", React.createElement("span", null, "#bfedd8")), React.createElement("li", {
      className: "bg-green-100 blue-grey-700 list-group-item"
    }, React.createElement("span", null, "100"), " /", React.createElement("span", null, "#e7faf2")))), React.createElement("div", {
      className: "col-md-4 col-lg-3"
    }, React.createElement("h5", {
      className: "text-uppercase"
    }, "light-green"), React.createElement("ul", {
      className: "list-group"
    }, React.createElement("li", {
      className: "bg-light-green-800 list-group-item"
    }, React.createElement("span", null, "800"), " /", React.createElement("span", null, "#70a532")), React.createElement("li", {
      className: "bg-light-green-700 list-group-item"
    }, React.createElement("span", null, "700"), " /", React.createElement("span", null, "#83b944")), React.createElement("li", {
      className: "bg-light-green-600 list-group-item"
    }, React.createElement("span", null, "600"), " /", React.createElement("span", null, "#9ece67")), React.createElement("li", {
      className: "bg-light-green-500 list-group-item"
    }, React.createElement("span", null, "500"), " /", React.createElement("span", null, "#acd57c")), React.createElement("li", {
      className: "bg-light-green-400 blue-grey-700 list-group-item"
    }, React.createElement("span", null, "400"), " /", React.createElement("span", null, "#bad896")), React.createElement("li", {
      className: "bg-light-green-300 blue-grey-700 list-group-item"
    }, React.createElement("span", null, "300"), " /", React.createElement("span", null, "#cadfb1")), React.createElement("li", {
      className: "bg-light-green-200 blue-grey-700 list-group-item"
    }, React.createElement("span", null, "200"), " /", React.createElement("span", null, "#e0ecd1")), React.createElement("li", {
      className: "bg-light-green-100 blue-grey-700 list-group-item"
    }, React.createElement("span", null, "100"), " /", React.createElement("span", null, "#f1f7ea")))), React.createElement("div", {
      className: "col-md-4 col-lg-3"
    }, React.createElement("h5", {
      className: "text-uppercase"
    }, "yellow"), React.createElement("ul", {
      className: "list-group"
    }, React.createElement("li", {
      className: "bg-yellow-800 list-group-item"
    }, React.createElement("span", null, "800"), " /", React.createElement("span", null, "#fbc02d")), React.createElement("li", {
      className: "bg-yellow-700 list-group-item"
    }, React.createElement("span", null, "700"), " /", React.createElement("span", null, "#f9cd48")), React.createElement("li", {
      className: "bg-yellow-600 list-group-item"
    }, React.createElement("span", null, "600"), " /", React.createElement("span", null, "#f7da64")), React.createElement("li", {
      className: "bg-yellow-500 list-group-item"
    }, React.createElement("span", null, "500"), " /", React.createElement("span", null, "#f7e083")), React.createElement("li", {
      className: "bg-yellow-400 blue-grey-700 list-group-item"
    }, React.createElement("span", null, "400"), " /", React.createElement("span", null, "#f8e59b")), React.createElement("li", {
      className: "bg-yellow-300 blue-grey-700 list-group-item"
    }, React.createElement("span", null, "300"), " /", React.createElement("span", null, "#f6e7a9")), React.createElement("li", {
      className: "bg-yellow-200 blue-grey-700 list-group-item"
    }, React.createElement("span", null, "200"), " /", React.createElement("span", null, "#f9eec1")), React.createElement("li", {
      className: "bg-yellow-100 blue-grey-700 list-group-item"
    }, React.createElement("span", null, "100"), " /", React.createElement("span", null, "#fffae7")))), React.createElement("div", {
      className: "col-md-4 col-lg-3"
    }, React.createElement("h5", {
      className: "text-uppercase"
    }, "orange"), React.createElement("ul", {
      className: "list-group"
    }, React.createElement("li", {
      className: "bg-orange-800 list-group-item"
    }, React.createElement("span", null, "800"), " /", React.createElement("span", null, "#e98f2e")), React.createElement("li", {
      className: "bg-orange-700 list-group-item"
    }, React.createElement("span", null, "700"), " /", React.createElement("span", null, "#ec9940")), React.createElement("li", {
      className: "bg-orange-600 list-group-item"
    }, React.createElement("span", null, "600"), " /", React.createElement("span", null, "#f2a654")), React.createElement("li", {
      className: "bg-orange-500 list-group-item"
    }, React.createElement("span", null, "500"), " /", React.createElement("span", null, "#f4b066")), React.createElement("li", {
      className: "bg-orange-400 blue-grey-700 list-group-item"
    }, React.createElement("span", null, "400"), " /", React.createElement("span", null, "#f6be80")), React.createElement("li", {
      className: "bg-orange-300 blue-grey-700 list-group-item"
    }, React.createElement("span", null, "300"), " /", React.createElement("span", null, "#fbce9d")), React.createElement("li", {
      className: "bg-orange-200 blue-grey-700 list-group-item"
    }, React.createElement("span", null, "200"), " /", React.createElement("span", null, "#ffddb9")), React.createElement("li", {
      className: "bg-orange-100 blue-grey-700 list-group-item"
    }, React.createElement("span", null, "100"), " /", React.createElement("span", null, "#fff3e6")))), React.createElement("div", {
      className: "col-md-4 col-lg-3"
    }, React.createElement("h5", {
      className: "text-uppercase"
    }, "brown"), React.createElement("ul", {
      className: "list-group"
    }, React.createElement("li", {
      className: "bg-brown-800 list-group-item"
    }, React.createElement("span", null, "800"), " /", React.createElement("span", null, "#715146")), React.createElement("li", {
      className: "bg-brown-700 list-group-item"
    }, React.createElement("span", null, "700"), " /", React.createElement("span", null, "#7d5b4f")), React.createElement("li", {
      className: "bg-brown-600 list-group-item"
    }, React.createElement("span", null, "600"), " /", React.createElement("span", null, "#8d6658")), React.createElement("li", {
      className: "bg-brown-500 list-group-item"
    }, React.createElement("span", null, "500"), " /", React.createElement("span", null, "#a17768")), React.createElement("li", {
      className: "bg-brown-400 blue-grey-700 list-group-item"
    }, React.createElement("span", null, "400"), " /", React.createElement("span", null, "#b98e7e")), React.createElement("li", {
      className: "bg-brown-300 blue-grey-700 list-group-item"
    }, React.createElement("span", null, "300"), " /", React.createElement("span", null, "#d3aa9c")), React.createElement("li", {
      className: "bg-brown-200 blue-grey-700 list-group-item"
    }, React.createElement("span", null, "200"), " /", React.createElement("span", null, "#e2bdaf")), React.createElement("li", {
      className: "bg-brown-100 blue-grey-700 list-group-item"
    }, React.createElement("span", null, "100"), " /", React.createElement("span", null, "#fae6df")))), React.createElement("div", {
      className: "col-md-4 col-lg-3"
    }, React.createElement("h5", {
      className: "text-uppercase"
    }, "grey"), React.createElement("ul", {
      className: "list-group"
    }, React.createElement("li", {
      className: "bg-grey-800 list-group-item"
    }, React.createElement("span", null, "800"), " /", React.createElement("span", null, "#424242")), React.createElement("li", {
      className: "bg-grey-700 list-group-item"
    }, React.createElement("span", null, "700"), " /", React.createElement("span", null, "#616161")), React.createElement("li", {
      className: "bg-grey-600 list-group-item"
    }, React.createElement("span", null, "600"), " /", React.createElement("span", null, "#757575")), React.createElement("li", {
      className: "bg-grey-500 list-group-item"
    }, React.createElement("span", null, "500"), " /", React.createElement("span", null, "#9e9e9e")), React.createElement("li", {
      className: "bg-grey-400 blue-grey-700 list-group-item"
    }, React.createElement("span", null, "400"), " /", React.createElement("span", null, "#bdbdbd")), React.createElement("li", {
      className: "bg-grey-300 blue-grey-700 list-group-item"
    }, React.createElement("span", null, "300"), " /", React.createElement("span", null, "#e0e0e0")), React.createElement("li", {
      className: "bg-grey-200 blue-grey-700 list-group-item"
    }, React.createElement("span", null, "200"), " /", React.createElement("span", null, "#eeeeee")), React.createElement("li", {
      className: "bg-grey-100 blue-grey-700 list-group-item"
    }, React.createElement("span", null, "100"), " /", React.createElement("span", null, "#fafafa")))), React.createElement("div", {
      className: "col-md-4 col-lg-3"
    }, React.createElement("h5", {
      className: "text-uppercase"
    }, "blue-grey"), React.createElement("ul", {
      className: "list-group"
    }, React.createElement("li", {
      className: "bg-blue-grey-800 list-group-item"
    }, React.createElement("span", null, "800"), " /", React.createElement("span", null, "#263238")), React.createElement("li", {
      className: "bg-blue-grey-700 list-group-item"
    }, React.createElement("span", null, "700"), " /", React.createElement("span", null, "#37474f")), React.createElement("li", {
      className: "bg-blue-grey-600 list-group-item"
    }, React.createElement("span", null, "600"), " /", React.createElement("span", null, "#526069")), React.createElement("li", {
      className: "bg-blue-grey-500 list-group-item"
    }, React.createElement("span", null, "500"), " /", React.createElement("span", null, "#76838f")), React.createElement("li", {
      className: "bg-blue-grey-400 blue-grey-700 list-group-item"
    }, React.createElement("span", null, "400"), " /", React.createElement("span", null, "#a3afb7")), React.createElement("li", {
      className: "bg-blue-grey-300 blue-grey-700 list-group-item"
    }, React.createElement("span", null, "300"), " /", React.createElement("span", null, "#ccd5db")), React.createElement("li", {
      className: "bg-blue-grey-200 blue-grey-700 list-group-item"
    }, React.createElement("span", null, "200"), " /", React.createElement("span", null, "#e4eaec")), React.createElement("li", {
      className: "bg-blue-grey-100 blue-grey-700 list-group-item"
    }, React.createElement("span", null, "100"), " /", React.createElement("span", null, "#f3f7f9")))))), React.createElement("div", {
      className: "color-application"
    }, React.createElement("h3", null, "Color Application"), React.createElement("div", {
      className: "row row-lg"
    }, React.createElement("div", {
      className: "col-xl-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Choose Your Palette"), React.createElement("p", null, "Limit your selection of colors by choosing three color hues from the primary palette and one accent color from the secondary palette. The accent may or may not need fallback options."), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("p", null, "Active color"), React.createElement("span", null, "#4e97d9")), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "bg-blue-700 color-box"
    }, "700"))), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("p", null, "Base color"), React.createElement("span", null, "#62a8ea")), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "bg-blue-600 color-box"
    }, "600"))), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("p", null, "Hover color"), React.createElement("span", null, "#89bceb")), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "bg-blue-500 color-box"
    }, "500"))), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("p", null, "Background opt."), React.createElement("span", null, "#e8f1f8")), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "bg-blue-100 color-box blue-grey-700"
    }, "100"))))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("p", null, "Active color"), React.createElement("span", null, "#e9595b")), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "bg-red-700 color-box"
    }, "700"))), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("p", null, "Base color"), React.createElement("span", null, "#f96868")), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "bg-red-600 color-box"
    }, "600"))), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("p", null, "Hover color"), React.createElement("span", null, "#fa7a7a")), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "bg-red-500 color-box"
    }, "500"))), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("p", null, "Background opt."), React.createElement("span", null, "#ffeaea")), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "bg-red-100 color-box blue-grey-700"
    }, "100")))))))), React.createElement("div", {
      className: "col-xl-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Text Color"), React.createElement("p", null, "To convey a hierarchy of information, you can use different shades for text. The standard content text color is #79838B."), React.createElement("div", {
      className: "row mb-20"
    }, React.createElement("div", {
      className: "col-md-3"
    }, React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "bg-blue-grey-700 text-color-box"
    }), React.createElement("p", null, "Title color"), React.createElement("span", null, "#37474f"))), React.createElement("div", {
      className: "col-md-3"
    }, React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "bg-blue-grey-600 text-color-box"
    }), React.createElement("p", null, "Subtitle color"), React.createElement("span", null, "#526069"))), React.createElement("div", {
      className: "col-md-3"
    }, React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "bg-blue-grey-500 text-color-box"
    }), React.createElement("p", null, "Text color"), React.createElement("span", null, "#76838f"))), React.createElement("div", {
      className: "col-md-3"
    }, React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "bg-blue-grey-400 text-color-box"
    }), React.createElement("p", null, "Prompt color"), React.createElement("span", null, "#a3afb7")))))), React.createElement("div", {
      className: "col-xl-6"
    }, React.createElement("div", {
      className: "example-wrap m-lg-0"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Use Alpha For Icons, And Dividers"), React.createElement("p", null, "Icons and dividers, also benefit from having an alpha value of black instead of a solid color, to make sure the color below."), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-xl-6 mb-10"
    }, React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "bg-blue-grey-700 example-alpha"
    }, "Grey Darkest"), React.createElement("div", {
      className: "row opacity-example"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("p", null, React.createElement("span", null, "Normal:"), React.createElement("span", {
      className: "opacity-four"
    }, React.createElement("i", {
      className: "icon wb-image",
      "aria-hidden": "true"
    }), "40%")), React.createElement("p", null, React.createElement("span", null, "Hover:"), React.createElement("span", {
      className: "opacity-six"
    }, React.createElement("i", {
      className: "icon wb-image",
      "aria-hidden": "true"
    }), "60%")), React.createElement("p", null, React.createElement("span", null, "Active:"), React.createElement("span", {
      className: "blue-grey-700"
    }, React.createElement("i", {
      className: "icon wb-image",
      "aria-hidden": "true"
    }), "100%"))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("p", null, React.createElement("span", null, "Normal:"), React.createElement("span", {
      className: "opacity-six"
    }, React.createElement("i", {
      className: "icon wb-image",
      "aria-hidden": "true"
    }), "60%")), React.createElement("p", null, React.createElement("span", null, "Hover:"), React.createElement("span", {
      className: "opacity-eight"
    }, React.createElement("i", {
      className: "icon wb-image",
      "aria-hidden": "true"
    }), "80%")), React.createElement("p", null, React.createElement("span", null, "Active:"), React.createElement("span", {
      className: "blue-grey-700"
    }, React.createElement("i", {
      className: "icon wb-image",
      "aria-hidden": "true"
    }), "100%")))))), React.createElement("div", {
      className: "col-xl-6"
    }, React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "bg-blue-grey-800 example-alpha"
    }, "Gray Base"), React.createElement("div", {
      className: "example-alpha example-divider blue-grey-600"
    }, "Dividers 10%")))))), React.createElement("div", {
      className: "col-xl-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Border Color"), React.createElement("p", null, "Border color should use the primary #E6E8EA color, which should be the main color of your project."), React.createElement("div", {
      className: "example-border"
    }, React.createElement("div", {
      className: "bg-blue-grey-200"
    }), React.createElement("div", null, React.createElement("p", null, "Border color"), React.createElement("span", null, "#e4eaec")))))))))));
  }

}

module.exportDefault(ColorsExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"dropdowns.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/uikit/dropdowns.jsx                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class DropdownsExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "DropdownsExample")), React.createElement("div", {
      className: "page-content container-fluid"
    }));
  }

}

module.exportDefault(DropdownsExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"icons.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/uikit/icons.jsx                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class IconsExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", {
      className: "page-content"
    }, React.createElement("div", {
      className: "padding-vertical-15"
    }, React.createElement("div", {
      className: "text-center"
    }, React.createElement("h3", null, "Browse 12 icons sets."), React.createElement("p", {
      className: "title-desc"
    }, "Web icons / Font awesome / 7-Stroke / Brand Icons / Glyphicons / Ion Icons / Material Design / Mfglabs / Open Iconic / Themify / Weather icons / Octicons"))), React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-body container-fluid"
    }, React.createElement("div", {
      className: "row row-lg"
    }, React.createElement("div", {
      className: "col-lg-4 col-sm-6"
    }, React.createElement("h4", {
      className: "example-title"
    }, "web-icons"), React.createElement("div", {
      className: "example example-well overlay overlay-hover"
    }, React.createElement("ul", {
      className: "blocks-xs-6 margin-0"
    }, React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon wb-dashboard",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon wb-inbox",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon wb-cloud",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon wb-bell",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon wb-book",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon wb-bookmark",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon wb-tag",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon wb-library",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon wb-share",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon wb-reply",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon wb-refresh",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon wb-move",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon wb-chat",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon wb-envelope",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon wb-user",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon wb-menu",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon wb-layout",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon wb-fullscreen",
      "aria-hidden": "true"
    })))), React.createElement("div", {
      className: "overlay-panel overlay-background overlay-fade text-center vertical-align"
    }, React.createElement("a", {
      className: "btn btn-outline btn-inverse vertical-align-middle",
      href: "./icons/web-icons.html"
    }, "Read More")))), React.createElement("div", {
      className: "col-lg-4 col-sm-6"
    }, React.createElement("h4", {
      className: "example-title"
    }, "font-awesome"), React.createElement("div", {
      className: "example example-well overlay overlay-hover"
    }, React.createElement("ul", {
      className: "blocks-xs-6 margin-0"
    }, React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon fa-glass",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon fa-music",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon fa-search",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon fa-envelope-o",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon fa-heart",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon fa-star",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon fa-user",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon fa-film",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon fa-check",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon fa-remove",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon fa-signal",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon fa-gear",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon fa-home",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon fa-road",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon fa-download",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon fa-inbox",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon fa-refresh",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon fa-lock",
      "aria-hidden": "true"
    })))), React.createElement("div", {
      className: "overlay-panel overlay-background overlay-fade text-center vertical-align"
    }, React.createElement("a", {
      className: "btn btn-outline btn-inverse vertical-align-middle",
      href: "./icons/font-awesome.html"
    }, "Read More")))), React.createElement("div", {
      className: "col-lg-4 col-sm-6"
    }, React.createElement("h4", {
      className: "example-title"
    }, "7-stroke"), React.createElement("div", {
      className: "example example-well overlay overlay-hover"
    }, React.createElement("ul", {
      className: "blocks-xs-6 margin-0"
    }, React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon pe-cash",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon pe-close",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon pe-bluetooth",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon pe-way",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon pe-wristwatch",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon pe-id",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon pe-volume",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon pe-users",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon pe-switch",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon pe-scissors",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon pe-wallet",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon pe-safe",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon pe-video",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon pe-upload",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon pe-umbrella",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon pe-tools",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon pe-trash",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon pe-unlock",
      "aria-hidden": "true"
    })))), React.createElement("div", {
      className: "overlay-panel overlay-background overlay-fade text-center vertical-align"
    }, React.createElement("a", {
      className: "btn btn-outline btn-inverse vertical-align-middle",
      href: "./icons/7-stroke.html"
    }, "Read More")))), React.createElement("div", {
      className: "col-lg-4 col-sm-6"
    }, React.createElement("h4", {
      className: "example-title"
    }, "brand-icons"), React.createElement("div", {
      className: "example example-well overlay overlay-hover"
    }, React.createElement("ul", {
      className: "blocks-xs-6 margin-0"
    }, React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon bd-behance",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon bd-blogger",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon bd-delicious",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon bd-deviantart",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon bd-dribbble",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon bd-facebook",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon bd-flickr",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon bd-foursquare",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon bd-github",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon bd-instagram",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon bd-lastfm",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon bd-linkedin",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon bd-pinterest",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon bd-stackoverflow",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon bd-reddit",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon bd-tumblr",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon bd-twitter",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon bd-vimeo",
      "aria-hidden": "true"
    })))), React.createElement("div", {
      className: "overlay-panel overlay-background overlay-fade text-center vertical-align"
    }, React.createElement("a", {
      className: "btn btn-outline btn-inverse vertical-align-middle",
      href: "./icons/brand-icons.html"
    }, "Read More")))), React.createElement("div", {
      className: "col-lg-4 col-sm-6"
    }, React.createElement("h4", {
      className: "example-title"
    }, "glyphicons"), React.createElement("div", {
      className: "example example-well overlay overlay-hover"
    }, React.createElement("ul", {
      className: "blocks-xs-6 margin-0"
    }, React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon glyphicon glyphicon-tags",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon glyphicon glyphicon-italic",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon glyphicon glyphicon-bold",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon glyphicon glyphicon-font",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon glyphicon glyphicon-glass",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon glyphicon glyphicon-envelope",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon glyphicon glyphicon-music",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon glyphicon glyphicon-search",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon glyphicon glyphicon-heart",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon glyphicon glyphicon-star",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon glyphicon glyphicon-user",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon glyphicon glyphicon-remove",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon glyphicon glyphicon-home",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon glyphicon glyphicon-road",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon glyphicon glyphicon-time",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon glyphicon glyphicon-upload",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon glyphicon glyphicon-inbox",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon glyphicon glyphicon-lock",
      "aria-hidden": "true"
    })))), React.createElement("div", {
      className: "overlay-panel overlay-background overlay-fade text-center vertical-align"
    }, React.createElement("a", {
      className: "btn btn-outline btn-inverse vertical-align-middle",
      href: "./icons/glyphicons.html"
    }, "Read More")))), React.createElement("div", {
      className: "col-lg-4 col-sm-6"
    }, React.createElement("h4", {
      className: "example-title"
    }, "ionicons"), React.createElement("div", {
      className: "example example-well overlay overlay-hover"
    }, React.createElement("ul", {
      className: "blocks-xs-6 margin-0"
    }, React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon ion-alert",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon ion-fireball",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon ion-eye",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon ion-eject",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon ion-egg",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon ion-drag",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon ion-document",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon ion-disc",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon ion-cube",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon ion-chatboxes",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon ion-checkmark",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon ion-clipboard",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon ion-clock",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon ion-close",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon ion-cloud",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon ion-coffee",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon ion-compass",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon ion-contrast",
      "aria-hidden": "true"
    })))), React.createElement("div", {
      className: "overlay-panel overlay-background overlay-fade text-center vertical-align"
    }, React.createElement("a", {
      className: "btn btn-outline btn-inverse vertical-align-middle",
      href: "./icons/ionicons.html"
    }, "Read More")))), React.createElement("div", {
      className: "col-lg-4 col-sm-6"
    }, React.createElement("h4", {
      className: "example-title"
    }, "material-design"), React.createElement("div", {
      className: "example example-well overlay overlay-hover"
    }, React.createElement("ul", {
      className: "blocks-xs-6 margin-0"
    }, React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon md-3d-rotation",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon md-album",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon md-archive",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon md-assignment-account",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon md-assignment-alert",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon md-assignment-check",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon md-assignment-o",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon md-assignment-return",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon md-assignment-returned",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon md-assignment",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon md-attachment-alt",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon md-attachment",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon md-audio",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon md-badge-check",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon md-balance-wallet",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon md-balance",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon md-battery-alert",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon md-bike",
      "aria-hidden": "true"
    })))), React.createElement("div", {
      className: "overlay-panel overlay-background overlay-fade text-center vertical-align"
    }, React.createElement("a", {
      className: "btn btn-outline btn-inverse vertical-align-middle",
      href: "./icons/material-design.html"
    }, "Read More")))), React.createElement("div", {
      className: "col-lg-4 col-sm-6"
    }, React.createElement("h4", {
      className: "example-title"
    }, "mfglabs"), React.createElement("div", {
      className: "example example-well overlay overlay-hover"
    }, React.createElement("ul", {
      className: "blocks-xs-6 margin-0"
    }, React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon ml-cloud",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon ml-arrow_up",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon ml-arrow_down",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon ml-arrow_right",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon ml-arrow_left",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon ml-reorder",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon ml-list",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon ml-reorder_square",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon ml-reorder_square_line",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon ml-coverflow",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon ml-coverflow_line",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon ml-pause",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon ml-play",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon ml-step_forward",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon ml-step_backward",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon ml-data_science",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon ml-globe",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon ml-paperplane_ico",
      "aria-hidden": "true"
    })))), React.createElement("div", {
      className: "overlay-panel overlay-background overlay-fade text-center vertical-align"
    }, React.createElement("a", {
      className: "btn btn-outline btn-inverse vertical-align-middle",
      href: "./icons/mfglabs.html"
    }, "Read More")))), React.createElement("div", {
      className: "col-lg-4 col-sm-6"
    }, React.createElement("h4", {
      className: "example-title"
    }, "open-iconic"), React.createElement("div", {
      className: "example example-well overlay overlay-hover"
    }, React.createElement("ul", {
      className: "blocks-xs-6 margin-0"
    }, React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon io-align-center",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon io-align-left",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon io-align-right",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon io-aperture",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon io-audio",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon io-badge",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon io-ban",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon io-basket",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon io-beaker",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon io-bell",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon io-bluetooth",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon io-bold",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon io-bolt",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon io-book",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon io-bookmark",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon io-box",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon io-briefcase",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon io-browser",
      "aria-hidden": "true"
    })))), React.createElement("div", {
      className: "overlay-panel overlay-background overlay-fade text-center vertical-align"
    }, React.createElement("a", {
      className: "btn btn-outline btn-inverse vertical-align-middle",
      href: "./icons/open-iconic.html"
    }, "Read More")))), React.createElement("div", {
      className: "col-lg-4 col-sm-6"
    }, React.createElement("h4", {
      className: "example-title"
    }, "themify"), React.createElement("div", {
      className: "example example-well overlay overlay-hover"
    }, React.createElement("ul", {
      className: "blocks-xs-6 margin-0"
    }, React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon ti-wand",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon ti-volume",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon ti-user",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon ti-unlock",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon ti-unlink",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon ti-trash",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon ti-thought",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon ti-target",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon ti-tablet",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon ti-star",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon ti-spray",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon ti-signal",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon ti-settings",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon ti-search",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon ti-cut",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon ti-bookmark",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon ti-reload",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon ti-pin",
      "aria-hidden": "true"
    })))), React.createElement("div", {
      className: "overlay-panel overlay-background overlay-fade text-center vertical-align"
    }, React.createElement("a", {
      className: "btn btn-outline btn-inverse vertical-align-middle",
      href: "./icons/themify.html"
    }, "Read More")))), React.createElement("div", {
      className: "col-lg-4 col-sm-6"
    }, React.createElement("h4", {
      className: "example-title"
    }, "weather-icons"), React.createElement("div", {
      className: "example example-well overlay overlay-hover"
    }, React.createElement("ul", {
      className: "blocks-xs-6 margin-0"
    }, React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon wi-cloudy",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon wi-fog",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon wi-hail",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon wi-lightning",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon wi-rain",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon wi-showers",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon wi-snow",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon wi-sprinkle",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon wi-thunderstorm",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon wi-windy",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon wi-cloud",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon wi-degrees",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon wi-fahrenheit",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon wi-horizon",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon wi-lightning",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon wi-sprinkles",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon wi-sunrise",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon wi-sunset",
      "aria-hidden": "true"
    })))), React.createElement("div", {
      className: "overlay-panel overlay-background overlay-fade text-center vertical-align"
    }, React.createElement("a", {
      className: "btn btn-outline btn-inverse vertical-align-middle",
      href: "./icons/weather-icons.html"
    }, "Read More")))), React.createElement("div", {
      className: "col-lg-4 col-sm-6"
    }, React.createElement("h4", {
      className: "example-title"
    }, "octicons"), React.createElement("div", {
      className: "example example-well overlay overlay-hover"
    }, React.createElement("ul", {
      className: "blocks-xs-6 margin-0"
    }, React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon oi-book",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon oi-bookmark",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon oi-clippy",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon oi-dashboard",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon oi-database",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon oi-file-code",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon oi-file-zip",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon oi-git-branch",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon oi-keyboard",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon oi-mark-github",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon oi-organization",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon oi-repo",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon oi-server",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon oi-settings",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon oi-terminal",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon oi-shield",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon oi-versions",
      "aria-hidden": "true"
    }))), React.createElement("li", null, React.createElement("div", {
      className: "icondemo"
    }, React.createElement("i", {
      className: "icon oi-watch",
      "aria-hidden": "true"
    })))), React.createElement("div", {
      className: "overlay-panel overlay-background overlay-fade text-center vertical-align"
    }, React.createElement("a", {
      className: "btn btn-outline btn-inverse vertical-align-middle",
      href: "./icons/octicons.html"
    }, "Read More"))))))));
  }

}

module.exportDefault(IconsExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"images.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/uikit/images.jsx                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class ImagesExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "ImagesExample")), React.createElement("div", {
      className: "page-content container-fluid"
    }));
  }

}

module.exportDefault(ImagesExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"labels.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/uikit/labels.jsx                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class LabelsExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("ol", {
      className: "breadcrumb"
    }, React.createElement("li", null, React.createElement("a", {
      href: "#/"
    }, "Home")), React.createElement("li", {
      className: "active"
    }, "Basic UI")), React.createElement("h1", {
      className: "page-title"
    }, "Labels"), React.createElement("div", {
      className: "page-header-actions"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-sm btn-icon btn-inverse btn-round",
      "data-toggle": "tooltip",
      "data-original-title": "Edit"
    }, React.createElement("i", {
      className: "icon wb-pencil",
      "aria-hidden": "true"
    })), React.createElement("button", {
      type: "button",
      className: "btn btn-sm btn-icon btn-inverse btn-round",
      "data-toggle": "tooltip",
      "data-original-title": "Refresh"
    }, React.createElement("i", {
      className: "icon wb-refresh",
      "aria-hidden": "true"
    })), React.createElement("button", {
      type: "button",
      className: "btn btn-sm btn-icon btn-inverse btn-round",
      "data-toggle": "tooltip",
      "data-original-title": "Setting"
    }, React.createElement("i", {
      className: "icon wb-settings",
      "aria-hidden": "true"
    })))), React.createElement("div", {
      className: "page-content"
    }, React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-heading"
    }, React.createElement("h3", {
      className: "panel-title"
    }, "Labels")), React.createElement("div", {
      className: "panel-body container-fluid"
    }, React.createElement("div", {
      className: "row row-lg"
    }, React.createElement("div", {
      className: "col-md-6 col-xl-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Labels Default"), React.createElement("p", null, "Add any of the default mentioned modifier classes to change the appearance of a label."), React.createElement("div", {
      className: "example"
    }, React.createElement("span", {
      className: "label label-default"
    }, "Default"), React.createElement("span", {
      className: "label label-primary"
    }, "Primary"), React.createElement("span", {
      className: "label label-success"
    }, "Success"), React.createElement("span", {
      className: "label label-info"
    }, "Info"), React.createElement("span", {
      className: "label label-warning"
    }, "Warning"), React.createElement("span", {
      className: "label label-danger"
    }, "Danger"), React.createElement("span", {
      className: "label label-dark"
    }, "Dark")))), React.createElement("div", {
      className: "col-md-6 col-xl-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Labels Round"), React.createElement("p", null, "Round labels can used in taxonomies to provide an ad-hoc, user-generated scheme for classification. Add ", React.createElement("code", null, ".label-round"), " to change its shape."), React.createElement("div", {
      className: "example"
    }, React.createElement("span", {
      className: "label label-round label-default"
    }, "Default"), React.createElement("span", {
      className: "label label-round label-primary"
    }, "Primary"), React.createElement("span", {
      className: "label label-round label-success"
    }, "Success"), React.createElement("span", {
      className: "label label-round label-info"
    }, "Info"), React.createElement("span", {
      className: "label label-round label-warning"
    }, "Warning"), React.createElement("span", {
      className: "label label-round label-danger"
    }, "Danger"), React.createElement("span", {
      className: "label label-round label-dark"
    }, "Dark")))), React.createElement("div", {
      className: "col-md-6 col-xl-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Labels Outline"), React.createElement("p", null, "The label can have outline style and different border color options. Add ", React.createElement("code", null, ".label-outline"), " to change its border style."), React.createElement("div", {
      className: "example"
    }, React.createElement("span", {
      className: "label label-outline label-default"
    }, "Default"), React.createElement("span", {
      className: "label label-outline label-primary"
    }, "Primary"), React.createElement("span", {
      className: "label label-outline label-success"
    }, "Success"), React.createElement("span", {
      className: "label label-outline label-info"
    }, "Info"), React.createElement("span", {
      className: "label label-outline label-warning"
    }, "Warning"), React.createElement("span", {
      className: "label label-outline label-danger"
    }, "Danger"), React.createElement("span", {
      className: "label label-outline label-dark"
    }, "Dark")))), React.createElement("div", {
      className: "clearfix hidden-lg-down"
    }), React.createElement("div", {
      className: "col-md-6 col-xl-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Labels Sizes"), React.createElement("p", null, "Various label sizes for common scenarios, from default size to large/small size, you can add additional class ", React.createElement("code", null, ".label-lg"), " or ", React.createElement("code", null, ".label-sm"), "."), React.createElement("div", {
      className: "example"
    }, React.createElement("span", {
      className: "label label-lg label-primary"
    }, "Large"), React.createElement("span", {
      className: "label label-primary"
    }, "Default"), React.createElement("span", {
      className: "label label-sm label-primary"
    }, "Small")))), React.createElement("div", {
      className: "clearfix hidden-sm-down hidden-xl-up"
    }), React.createElement("div", {
      className: "col-xl-8"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Labels In Header"), React.createElement("p", null, "They show the information in combination with other visual heading elements by adding ", React.createElement("code", null, "<span class=\u201Dlabel label-primary\u201D>"), "."), React.createElement("div", {
      className: "example"
    }, React.createElement("h1", null, "h1. Bootstrap heading", React.createElement("span", {
      className: "label label-primary"
    }, "New")), React.createElement("h2", null, "h2. Heading", React.createElement("span", {
      className: "label label-primary"
    }, "New")), React.createElement("h3", null, "h3. Heading", React.createElement("span", {
      className: "label label-primary"
    }, "New")), React.createElement("h4", null, "h4. Heading", React.createElement("span", {
      className: "label label-primary"
    }, "New")), React.createElement("h5", null, "h5. Heading", React.createElement("span", {
      className: "label label-primary"
    }, "New")), React.createElement("h6", null, "h6. Heading", React.createElement("span", {
      className: "label label-primary"
    }, "New")))))))), React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-heading"
    }, React.createElement("h3", {
      className: "panel-title"
    }, "Label-pills")), React.createElement("div", {
      className: "panel-body container-fluid"
    }, React.createElement("div", {
      className: "row row-lg"
    }, React.createElement("div", {
      className: "col-md-6 col-xl-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Label-pills Default"), React.createElement("p", null, "Wrap one of the seven contextual classes ( e.g. ", React.createElement("code", null, ".label-success"), "                ) for basic ", React.createElement("code", null, ".label"), " ", React.createElement("code", null, ".label-pill"), " class. Choose from success, info, warning, etc."), React.createElement("div", {
      className: "example"
    }, React.createElement("span", {
      className: "label label-pill label-default"
    }, "1"), React.createElement("span", {
      className: "label label-pill label-primary"
    }, "2"), React.createElement("span", {
      className: "label label-pill label-success"
    }, "3"), React.createElement("span", {
      className: "label label-pill label-info"
    }, "4"), React.createElement("span", {
      className: "label label-pill label-warning"
    }, "5"), React.createElement("span", {
      className: "label label-pill label-danger"
    }, "6"), React.createElement("span", {
      className: "label label-pill label-dark"
    }, "7")), React.createElement("div", {
      className: "example"
    }, React.createElement("span", {
      className: "label label-pill label-default"
    }, "11"), React.createElement("span", {
      className: "label label-pill label-primary"
    }, "12"), React.createElement("span", {
      className: "label label-pill label-success"
    }, "13"), React.createElement("span", {
      className: "label label-pill label-info"
    }, "14"), React.createElement("span", {
      className: "label label-pill label-warning"
    }, "15"), React.createElement("span", {
      className: "label label-pill label-danger"
    }, "16"), React.createElement("span", {
      className: "label label-pill label-dark"
    }, "17")))), React.createElement("div", {
      className: "col-md-6 col-xl-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Label-pills Sizes"), React.createElement("p", null, "Various label-pills sizes for common scenarios, from default size to large/small size, you can add additional class ", React.createElement("code", null, ".label-lg"), "                or ", React.createElement("code", null, ".label-sm"), "."), React.createElement("div", {
      className: "example"
    }, React.createElement("span", {
      className: "label label-pill label-lg label-primary"
    }, "Large"), React.createElement("span", {
      className: "label label-pill label-primary"
    }, "Default"), React.createElement("span", {
      className: "label label-pill label-sm label-primary"
    }, "Small")))), React.createElement("div", {
      className: "clearfix hidden-sm-down hidden-xl-up"
    }), React.createElement("div", {
      className: "col-md-6 col-xl-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Label-pills In Button"), React.createElement("p", null, "Easily highlight new or unread items by adding a ", React.createElement("code", null, "<span class=\"label label-pill\">"), "                to button div."), React.createElement("div", {
      className: "example example-buttons"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-primary"
    }, "Update", React.createElement("span", {
      className: "label label-pill"
    }, "5")), React.createElement("button", {
      type: "button",
      className: "btn btn-outline btn-primary"
    }, "Update", React.createElement("span", {
      className: "label label-pill"
    }, "5"))))), React.createElement("div", {
      className: "clearfix hidden-lg-down"
    }), React.createElement("div", {
      className: "col-md-6 col-xl-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Absolute Positioning"), React.createElement("p", null, "They\u2019re commonly found in email cilents like Mail.app or on mobile apps for push notifications. Highligh unread items by adding ", React.createElement("code", null, ".label"), ",", React.createElement("code", null, ".label-pill"), ", ", React.createElement("code", null, ".up"), ", ", React.createElement("code", null, ".label-warning"), "                class in ", React.createElement("code", null, "<span>"), " mark"), React.createElement("div", {
      className: "example-2 margin-top-25"
    }, React.createElement("span", null, React.createElement("i", {
      className: "icon wb-bell",
      "aria-hidden": "true"
    }), React.createElement("span", {
      className: "label label-pill up label-danger"
    }, "5")), React.createElement("span", null, React.createElement("i", {
      className: "icon wb-envelope",
      "aria-hidden": "true"
    }), React.createElement("span", {
      className: "label label-pill up label-warning"
    }, "3")), React.createElement("span", null, React.createElement("i", {
      className: "icon wb-user",
      "aria-hidden": "true"
    }), React.createElement("span", {
      className: "label label-pill up label-primary"
    }, "3")), React.createElement("span", null, React.createElement("i", {
      className: "icon wb-inbox",
      "aria-hidden": "true"
    }), React.createElement("span", {
      className: "label label-pill up label-info"
    }, "3"))))), React.createElement("div", {
      className: "clearfix hidden-sm-down hidden-xl-up"
    }), React.createElement("div", {
      className: "col-md-6 col-xl-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Status Label-pills"), React.createElement("p", null, "You can use this examples to create status indicator label-pills with ", React.createElement("code", null, "<div class=\"avatar-online\u201D>"), " for profile images or similar elements."), React.createElement("div", {
      className: "example example-avatars"
    }, React.createElement("div", {
      className: "avatar avatar-online"
    }, React.createElement("img", {
      src: "../.././global/portraits/2.jpg",
      alt: "..."
    }), React.createElement("i", null)), React.createElement("div", {
      className: "avatar avatar-off"
    }, React.createElement("img", {
      src: "../.././global/portraits/3.jpg",
      alt: "..."
    }), React.createElement("i", null)), React.createElement("div", {
      className: "avatar avatar-busy"
    }, React.createElement("img", {
      src: "../.././global/portraits/4.jpg",
      alt: "..."
    }), React.createElement("i", null)), React.createElement("div", {
      className: "avatar avatar-away"
    }, React.createElement("img", {
      src: "../.././global/portraits/5.jpg",
      alt: "..."
    }), React.createElement("i", null)))))), React.createElement("div", {
      className: "row row-lg"
    }, React.createElement("div", {
      className: "col-md-12"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Label-pills In Nav"), React.createElement("p", null, "Built-in styles are included for placing label-pills in active states in pill navigations. Highlight unread items by adding a ", React.createElement("code", null, "<span class=\"label label-pill\">"), "                to tab div."), React.createElement("div", {
      className: "example"
    }, React.createElement("ul", {
      className: "nav nav-tabs nav-tabs-line"
    }, React.createElement("li", {
      className: "nav-item",
      role: "presentation"
    }, React.createElement("a", {
      className: "nav-link active",
      href: "javascript:void(0)"
    }, React.createElement("span", null, "Home"), React.createElement("span", {
      className: "label label-pill label-danger"
    }, "5"))), React.createElement("li", {
      className: "nav-item",
      role: "presentation"
    }, React.createElement("a", {
      className: "nav-link",
      href: "javascript:void(0)"
    }, "Blog")), React.createElement("li", {
      className: "nav-item",
      role: "presentation"
    }, React.createElement("a", {
      className: "nav-link",
      href: "javascript:void(0)"
    }, "Profile")))))))))));
  }

}

module.exportDefault(LabelsExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"list.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/uikit/list.jsx                                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class ListExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("ol", {
      className: "breadcrumb"
    }, React.createElement("li", null, React.createElement("a", {
      href: "#/"
    }, "Home")), React.createElement("li", {
      className: "active"
    }, "Basic UI")), React.createElement("h1", {
      className: "page-title"
    }, "List"), React.createElement("div", {
      className: "page-header-actions"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-sm btn-icon btn-inverse btn-round",
      "data-toggle": "tooltip",
      "data-original-title": "Edit"
    }, React.createElement("i", {
      className: "icon wb-pencil",
      "aria-hidden": "true"
    })), React.createElement("button", {
      type: "button",
      className: "btn btn-sm btn-icon btn-inverse btn-round",
      "data-toggle": "tooltip",
      "data-original-title": "Refresh"
    }, React.createElement("i", {
      className: "icon wb-refresh",
      "aria-hidden": "true"
    })), React.createElement("button", {
      type: "button",
      className: "btn btn-sm btn-icon btn-inverse btn-round",
      "data-toggle": "tooltip",
      "data-original-title": "Setting"
    }, React.createElement("i", {
      className: "icon wb-settings",
      "aria-hidden": "true"
    })))), React.createElement("div", {
      className: "page-content"
    }, React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-heading"
    }, React.createElement("h3", {
      className: "panel-title"
    }, "List Style")), React.createElement("div", {
      className: "panel-body container-fluid"
    }, React.createElement("div", {
      className: "row row-lg"
    }, React.createElement("div", {
      className: "col-md-6 col-xl-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Basic List"), React.createElement("p", null, "The most basic list group is simply an ordered list with list items, and the proper classes. Build upon it with the options that follow, or your own CSS as needed."), React.createElement("ul", {
      className: "list-group list-group-full"
    }, React.createElement("li", {
      className: "list-group-item active"
    }, "1. Active"), React.createElement("li", {
      className: "list-group-item"
    }, "2. Dapibus ac facilisis in"), React.createElement("li", {
      className: "list-group-item"
    }, "3. Morbi leo risus"), React.createElement("li", {
      className: "list-group-item disabled"
    }, "4. Disabled"), React.createElement("li", {
      className: "list-group-item"
    }, "5. Vestibulum at eros")))), React.createElement("div", {
      className: "col-md-6 col-xl-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "List Group Bordered Style"), React.createElement("p", null, "Add the ", React.createElement("code", null, ".list-group-bordered"), " to the wrap."), React.createElement("ul", {
      className: "list-group list-group-bordered"
    }, React.createElement("li", {
      className: "list-group-item active"
    }, "1. Active"), React.createElement("li", {
      className: "list-group-item"
    }, "2. Dapibus ac facilisis in"), React.createElement("li", {
      className: "list-group-item"
    }, "3. Morbi leo risus"), React.createElement("li", {
      className: "list-group-item disabled"
    }, "4. Disabled"), React.createElement("li", {
      className: "list-group-item"
    }, "5. Vestibulum at eros")))), React.createElement("div", {
      className: "clearfix hidden-sm-down hidden-xl-up"
    }), React.createElement("div", {
      className: "col-md-6 col-xl-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "List Group With Divider line"), React.createElement("p", null, "Add the ", React.createElement("code", null, ".list-group-dividered"), " to the wrap."), React.createElement("ul", {
      className: "list-group list-group-dividered list-group-full"
    }, React.createElement("li", {
      className: "list-group-item active"
    }, "1. Active"), React.createElement("li", {
      className: "list-group-item"
    }, "2. Dapibus ac facilisis in"), React.createElement("li", {
      className: "list-group-item"
    }, "3. Morbi leo risus"), React.createElement("li", {
      className: "list-group-item disabled"
    }, "4. Disabled"), React.createElement("li", {
      className: "list-group-item"
    }, "5. Vestibulum at eros")))), React.createElement("div", {
      className: "clearfix hidden-lg-down"
    }), React.createElement("div", {
      className: "col-md-6 col-xl-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Label-pills List"), React.createElement("p", null, "Add the label-pills component to any list group item and it will automatically be positioned on the right."), React.createElement("ul", {
      className: "list-group list-group-full"
    }, React.createElement("li", {
      className: "list-group-item"
    }, React.createElement("span", {
      className: "label label-pill label-success"
    }, "6"), " Cras justo odio"), React.createElement("li", {
      className: "list-group-item"
    }, "Dapibus ac facilisis in"), React.createElement("li", {
      className: "list-group-item"
    }, React.createElement("span", {
      className: "label label-pill label-danger"
    }, "3"), " Morbi leo risus"), React.createElement("li", {
      className: "list-group-item active"
    }, React.createElement("span", {
      className: "label label-pill label-info"
    }, "10"), " Porta ac consectetur ac"), React.createElement("li", {
      className: "list-group-item"
    }, "Vestibulum at eros"), React.createElement("li", {
      className: "list-group-item"
    }, "Ibus ac facilis")))), React.createElement("div", {
      className: "clearfix hidden-sm-down hidden-xl-up"
    }), React.createElement("div", {
      className: "col-md-6 col-xl-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Linked Items"), React.createElement("p", null, "Linkify list group items by using anchor tags instead of list items (that also means a parent ", React.createElement("code", null, "<div>"), " instead of an", React.createElement("code", null, "<ul>"), "). No need for individual parents around each element."), React.createElement("div", {
      className: "list-group"
    }, React.createElement("a", {
      className: "list-group-item active",
      href: "javascript:void(0)"
    }, "Cras justo odio"), React.createElement("a", {
      className: "list-group-item",
      href: "javascript:void(0)"
    }, "Dapibus ac facilisis in"), React.createElement("a", {
      className: "list-group-item",
      href: "javascript:void(0)"
    }, "Morbi leo risus"), React.createElement("a", {
      className: "list-group-item disabled",
      href: "javascript:void(0)"
    }, "Porta ac consectetur ac"), React.createElement("a", {
      className: "list-group-item",
      href: "javascript:void(0)"
    }, "Vestibulum at eros")))), React.createElement("div", {
      className: "col-md-6 col-xl-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Background"), React.createElement("p", null, "Add the color by ", React.createElement("code", null, ".bg-*"), " to the wrap. Also your will be add the class with ", React.createElement("code", null, ".bg-inherit")), React.createElement("div", {
      className: "list-group bg-blue-grey-100 bg-inherit"
    }, React.createElement("a", {
      className: "list-group-item blue-grey-500",
      href: "javascript:void(0)"
    }, React.createElement("i", {
      className: "icon wb-inbox",
      "aria-hidden": "true"
    }), " Inbox"), React.createElement("a", {
      className: "list-group-item blue-grey-500",
      href: "javascript:void(0)"
    }, React.createElement("i", {
      className: "icon wb-user",
      "aria-hidden": "true"
    }), " Profile visits"), React.createElement("a", {
      className: "list-group-item blue-grey-500",
      href: "javascript:void(0)"
    }, React.createElement("i", {
      className: "icon wb-bell",
      "aria-hidden": "true"
    }), " Call"), React.createElement("a", {
      className: "list-group-item blue-grey-500",
      href: "javascript:void(0)"
    }, React.createElement("i", {
      className: "icon wb-envelope",
      "aria-hidden": "true"
    }), " Messages"), React.createElement("a", {
      className: "list-group-item blue-grey-500",
      href: "javascript:void(0)"
    }, React.createElement("i", {
      className: "icon wb-tag",
      "aria-hidden": "true"
    }), " Bookmarks")))), React.createElement("div", {
      className: "clearfix"
    }), React.createElement("div", {
      className: "col-md-6 col-xl-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Contextual Classes"), React.createElement("p", null, "Use contextual classes to style list items, default or linked. Also includes ", React.createElement("code", null, ".active"), " state."), React.createElement("ul", {
      className: "list-group list-group-gap"
    }, React.createElement("li", {
      className: "list-group-item list-group-item-warning"
    }, "Cras justo odio"), React.createElement("li", {
      className: "list-group-item list-group-item-success"
    }, "Dapibus ac facilisis in"), React.createElement("li", {
      className: "list-group-item list-group-item-info"
    }, "Cras sit amet nibh libero"), React.createElement("li", {
      className: "list-group-item list-group-item-danger"
    }, "Porta ac consectetur ac"), React.createElement("li", {
      className: "list-group-item list-group-item-dark"
    }, "Vestibulum at eros")))), React.createElement("div", {
      className: "col-md-6 col-xl-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Custom Content"), React.createElement("p", null, "Add nearly any HTML within, even for linked list groups like the one below."), React.createElement("div", {
      className: "list-group"
    }, React.createElement("a", {
      className: "list-group-item active",
      href: "javascript:void(0)"
    }, React.createElement("h4", {
      className: "list-group-item-heading"
    }, "List 1"), React.createElement("p", {
      className: "list-group-item-text"
    }, "Donec id elit non mi porta gravida at eget metus.")), React.createElement("a", {
      className: "list-group-item",
      href: "javascript:void(0)"
    }, React.createElement("h4", {
      className: "list-group-item-heading"
    }, "List 2"), React.createElement("p", {
      className: "list-group-item-text"
    }, "Donec id elit non mi porta gravida at eget metus.")), React.createElement("a", {
      className: "list-group-item",
      href: "javascript:void(0)"
    }, React.createElement("h4", {
      className: "list-group-item-heading"
    }, "List 3"), React.createElement("p", {
      className: "list-group-item-text"
    }, "Donec id elit non mi porta gravida at eget metus."))))), React.createElement("div", {
      className: "clearfix hidden-sm-down hidden-xl-up"
    }), React.createElement("div", {
      className: "col-md-6 col-xl-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "With Gap"), React.createElement("p", null, "Add the ", React.createElement("code", null, ".list-group-gap"), " to the wrap for gap the items."), React.createElement("ul", {
      className: "list-group list-group-gap"
    }, React.createElement("li", {
      className: "list-group-item bg-blue-grey-100"
    }, React.createElement("i", {
      className: "icon wb-inbox",
      "aria-hidden": "true"
    }), " Inbox"), React.createElement("li", {
      className: "list-group-item bg-blue-grey-100"
    }, React.createElement("i", {
      className: "icon wb-user",
      "aria-hidden": "true"
    }), " Profile visits"), React.createElement("li", {
      className: "list-group-item bg-blue-grey-100"
    }, React.createElement("i", {
      className: "icon wb-bell",
      "aria-hidden": "true"
    }), " Call"), React.createElement("li", {
      className: "list-group-item bg-blue-grey-100"
    }, React.createElement("i", {
      className: "icon wb-envelope",
      "aria-hidden": "true"
    }), " Messages"), React.createElement("li", {
      className: "list-group-item bg-blue-grey-100"
    }, React.createElement("i", {
      className: "icon wb-tag",
      "aria-hidden": "true"
    }), " Bookmarks")))), React.createElement("div", {
      className: "clearfix hidden-lg-down"
    }), React.createElement("div", {
      className: "col-md-6 col-xl-4"
    }, React.createElement("div", {
      className: "example-wrap margin-lg-0"
    }, React.createElement("h4", {
      className: "example-title"
    }, "User List"), React.createElement("p", null, "A list item can contain an image with state."), React.createElement("ul", {
      className: "list-group list-group-full"
    }, React.createElement("li", {
      className: "list-group-item"
    }, React.createElement("div", {
      className: "media"
    }, React.createElement("div", {
      className: "media-left"
    }, React.createElement("a", {
      className: "avatar",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      className: "img-fluid",
      src: "https://www.gravatar.com/avatar/5850bfd5fbe405631ce4fb6fef3a5021",
      alt: "..."
    }))), React.createElement("div", {
      className: "media-body"
    }, React.createElement("h4", {
      className: "media-heading"
    }, "Herman Beck"), React.createElement("small", null, "CEO")), React.createElement("div", {
      className: "media-right"
    }, React.createElement("span", {
      className: "status status-lg status-online"
    })))), React.createElement("li", {
      className: "list-group-item"
    }, React.createElement("div", {
      className: "media"
    }, React.createElement("div", {
      className: "media-left"
    }, React.createElement("a", {
      className: "avatar",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      className: "img-fluid",
      src: "https://www.gravatar.com/avatar/5850bfd5fbe405631ce4fb6fef3a5021",
      alt: "..."
    }))), React.createElement("div", {
      className: "media-body"
    }, React.createElement("h4", {
      className: "media-heading"
    }, "Mary Adams"), React.createElement("small", null, "CIO")), React.createElement("div", {
      className: "media-right"
    }, React.createElement("span", {
      className: "status status-lg status-busy"
    })))), React.createElement("li", {
      className: "list-group-item"
    }, React.createElement("div", {
      className: "media"
    }, React.createElement("div", {
      className: "media-left"
    }, React.createElement("a", {
      className: "avatar",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      className: "img-fluid",
      src: "https://www.gravatar.com/avatar/5850bfd5fbe405631ce4fb6fef3a5021",
      alt: "..."
    }))), React.createElement("div", {
      className: "media-body"
    }, React.createElement("h4", {
      className: "media-heading"
    }, "Caleb Richards"), React.createElement("small", null, "CTO")), React.createElement("div", {
      className: "media-right"
    }, React.createElement("span", {
      className: "status status-lg status-off"
    })))), React.createElement("li", {
      className: "list-group-item"
    }, React.createElement("div", {
      className: "media"
    }, React.createElement("div", {
      className: "media-left"
    }, React.createElement("a", {
      className: "avatar",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      className: "img-fluid",
      src: "https://www.gravatar.com/avatar/5850bfd5fbe405631ce4fb6fef3a5021",
      alt: "..."
    }))), React.createElement("div", {
      className: "media-body"
    }, React.createElement("h4", {
      className: "media-heading"
    }, "June Lane"), React.createElement("small", null, "CVO")), React.createElement("div", {
      className: "media-right"
    }, React.createElement("span", {
      className: "status status-lg status-away"
    }))))))), React.createElement("div", {
      className: "clearfix hidden-sm-down hidden-xl-up"
    }), React.createElement("div", {
      className: "col-md-6 col-xl-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Media List"), React.createElement("p", null, "A list item can contain an image, user name and description."), React.createElement("ul", {
      className: "list-group list-group-full"
    }, React.createElement("li", {
      className: "list-group-item"
    }, React.createElement("div", {
      className: "media"
    }, React.createElement("div", {
      className: "media-left"
    }, React.createElement("a", {
      className: "avatar avatar-online",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      className: "img-fluid",
      src: "https://www.gravatar.com/avatar/5850bfd5fbe405631ce4fb6fef3a5021",
      alt: "..."
    }), React.createElement("i", null))), React.createElement("div", {
      className: "media-body"
    }, React.createElement("h4", {
      className: "media-heading"
    }, "Edward Fletcher"), React.createElement("p", null, "Cras sit amet nibh libero, in gravida nulla. Nulla vel metus.")))), React.createElement("li", {
      className: "list-group-item"
    }, React.createElement("div", {
      className: "media"
    }, React.createElement("div", {
      className: "media-left"
    }, React.createElement("a", {
      className: "avatar avatar-away",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      className: "img-fluid",
      src: "https://www.gravatar.com/avatar/5850bfd5fbe405631ce4fb6fef3a5021",
      alt: "..."
    }), React.createElement("i", null))), React.createElement("div", {
      className: "media-body"
    }, React.createElement("h4", {
      className: "media-heading"
    }, "Crystal Bates"), React.createElement("p", null, "Porta ac consectetur ac. Porta ac consectetur ac.")))), React.createElement("li", {
      className: "list-group-item"
    }, React.createElement("div", {
      className: "media"
    }, React.createElement("div", {
      className: "media-left"
    }, React.createElement("a", {
      className: "avatar avatar-busy",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      className: "img-fluid",
      src: "https://www.gravatar.com/avatar/5850bfd5fbe405631ce4fb6fef3a5021",
      alt: "..."
    }), React.createElement("i", null))), React.createElement("div", {
      className: "media-body"
    }, React.createElement("h4", {
      className: "media-heading"
    }, "Nathan Watts"), React.createElement("p", null, "Cbh libero, in gravida nulla. Nulla vel metus.")))), React.createElement("li", {
      className: "list-group-item"
    }, React.createElement("div", {
      className: "media"
    }, React.createElement("div", {
      className: "media-left"
    }, React.createElement("a", {
      className: "avatar avatar-off",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      className: "img-fluid",
      src: "https://www.gravatar.com/avatar/5850bfd5fbe405631ce4fb6fef3a5021",
      alt: "..."
    }), React.createElement("i", null))), React.createElement("div", {
      className: "media-body"
    }, React.createElement("h4", {
      className: "media-heading"
    }, "Heather Harper"), React.createElement("p", null, "Bbh libero, in gravida nulla. Nulla vel metus."))))))))))));
  }

}

module.exportDefault(ListExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"modals.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/uikit/modals.jsx                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class ModalsExamples extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "ModalsExamples")), React.createElement("div", {
      className: "page-content container-fluid"
    }));
  }

}

module.exportDefault(ModalsExamples);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"panel-actions.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/uikit/panel-actions.jsx                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class PanelActionsExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "PanelActionsExample")), React.createElement("div", {
      className: "page-content container-fluid"
    }));
  }

}

module.exportDefault(PanelActionsExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"panel-portlets.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/uikit/panel-portlets.jsx                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class PanelPortletsExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "PanelPortletsExample")), React.createElement("div", {
      className: "page-content container-fluid"
    }));
  }

}

module.exportDefault(PanelPortletsExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"panel-structure.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/uikit/panel-structure.jsx                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class PanelStructureExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "PanelStructureExample")), React.createElement("div", {
      className: "page-content container-fluid"
    }));
  }

}

module.exportDefault(PanelStructureExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"progress-bars.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/uikit/progress-bars.jsx                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class ProgressBarsExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("ol", {
      className: "breadcrumb"
    }, React.createElement("li", null, React.createElement("a", {
      href: "#/"
    }, "Home")), React.createElement("li", {
      className: "active"
    }, "Basic UI")), React.createElement("h1", {
      className: "page-title"
    }, "Progress Bars"), React.createElement("div", {
      className: "page-header-actions"
    }, React.createElement("a", {
      className: "btn btn-sm btn-inverse btn-round",
      href: "https://github.com/amazingSurge/jquery-asProgress",
      target: "_blank"
    }, React.createElement("i", {
      className: "icon wb-link",
      "aria-hidden": "true"
    }), React.createElement("span", {
      className: "hidden-sm-down"
    }, "Official Website")))), React.createElement("div", {
      className: "page-content"
    }, React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-heading"
    }, React.createElement("h3", {
      className: "panel-title"
    }, "Progress")), React.createElement("div", {
      className: "panel-body container-fluid"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Styles"), React.createElement("p", null, "Progress bar is a graphical control element used to visualize the progression of an extended computer operation, such as a download, file transfer, or professional skill and work task. The graphic is accompanied by a textual representation of the progress in a percent format."), React.createElement("div", {
      className: "row row-lg"
    }, React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("div", {
      className: "example"
    }, React.createElement("h5", null, "Basic Progress"), React.createElement("div", {
      className: "progress progress-xs"
    }, React.createElement("div", {
      className: "progress-bar",
      style: {
        width: '80%'
      },
      role: "progressbar"
    }, React.createElement("span", {
      className: "sr-only"
    }, "80% Complete")))))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("div", {
      className: "example"
    }, React.createElement("h5", null, "With Label"), React.createElement("div", {
      className: "progress progress-lg"
    }, React.createElement("div", {
      className: "progress-bar progress-bar-danger",
      style: {
        width: '60%'
      },
      role: "progressbar"
    }, "60%"))))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("div", {
      className: "example"
    }, React.createElement("h5", null, "Striped"), React.createElement("div", {
      className: "progress"
    }, React.createElement("div", {
      className: "progress-bar progress-bar-info progress-bar-striped",
      "aria-valuenow": 80,
      "aria-valuemin": 0,
      "aria-valuemax": 100,
      style: {
        width: '80%'
      },
      role: "progressbar"
    }, React.createElement("span", {
      className: "sr-only"
    }, "80% Complete (success)"))))))), React.createElement("div", {
      className: "row row-lg"
    }, React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("div", {
      className: "example"
    }, React.createElement("h5", null, "Indicating"), React.createElement("div", {
      className: "progress progress-xs"
    }, React.createElement("div", {
      className: "progress-bar progress-bar-warning progress-bar-indicating active",
      style: {
        width: '80%'
      },
      role: "progressbar"
    }, React.createElement("span", {
      className: "sr-only"
    }, "80% Complete")))))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("div", {
      className: "example"
    }, React.createElement("h5", null, "Animated"), React.createElement("div", {
      className: "progress"
    }, React.createElement("div", {
      className: "progress-bar progress-bar-striped active",
      "aria-valuenow": 90,
      "aria-valuemin": 0,
      "aria-valuemax": 100,
      style: {
        width: '90%'
      },
      role: "progressbar"
    }, React.createElement("span", {
      className: "sr-only"
    }, "90% Complete")))))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("div", {
      className: "example"
    }, React.createElement("h5", null, "Stacked"), React.createElement("div", {
      className: "progress progress-xs"
    }, React.createElement("div", {
      className: "progress-bar progress-bar-success",
      style: {
        width: '35%'
      },
      role: "progressbar"
    }, React.createElement("span", {
      className: "sr-only"
    }, "35% Complete (success)")), React.createElement("div", {
      className: "progress-bar progress-bar-warning progress-bar-striped",
      style: {
        width: '20%'
      },
      role: "progressbar"
    }, React.createElement("span", {
      className: "sr-only"
    }, "20% Complete (warning)")), React.createElement("div", {
      className: "progress-bar progress-bar-danger",
      style: {
        width: '10%'
      },
      role: "progressbar"
    }, React.createElement("span", {
      className: "sr-only"
    }, "10% Complete (danger)")))))))), React.createElement("div", {
      className: "row row-lg"
    }, React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Color"), React.createElement("p", null, "You can also apply any colour suited according to the nature of the task."), React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "progress progress-xs"
    }, React.createElement("div", {
      className: "progress-bar progress-bar-default",
      style: {
        width: '15%'
      },
      role: "progressbar"
    }, React.createElement("span", {
      className: "sr-only"
    }, "15% Complete"))), React.createElement("div", {
      className: "progress progress-xs"
    }, React.createElement("div", {
      className: "progress-bar progress-bar-success",
      style: {
        width: '30%'
      },
      role: "progressbar"
    }, React.createElement("span", {
      className: "sr-only"
    }, "30% Complete"))), React.createElement("div", {
      className: "progress progress-xs"
    }, React.createElement("div", {
      className: "progress-bar progress-bar-info",
      style: {
        width: '45%'
      },
      role: "progressbar"
    }, React.createElement("span", {
      className: "sr-only"
    }, "45% Complete"))), React.createElement("div", {
      className: "progress progress-xs"
    }, React.createElement("div", {
      className: "progress-bar progress-bar-warning",
      style: {
        width: '60%'
      },
      role: "progressbar"
    }, React.createElement("span", {
      className: "sr-only"
    }, "60% Complete"))), React.createElement("div", {
      className: "progress progress-xs"
    }, React.createElement("div", {
      className: "progress-bar progress-bar-danger",
      style: {
        width: '75%'
      },
      role: "progressbar"
    }, React.createElement("span", {
      className: "sr-only"
    }, "75% Complete"))), React.createElement("div", {
      className: "progress progress-xs"
    }, React.createElement("div", {
      className: "progress-bar progress-bar-dark",
      style: {
        width: '90%'
      },
      role: "progressbar"
    }, React.createElement("span", {
      className: "sr-only"
    }, "90% Complete")))))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Bar Size"), React.createElement("p", null, "You can also use a thinner version of the default progress by simple changing the classes."), React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "progress progress-xs"
    }, React.createElement("div", {
      className: "progress-bar",
      style: {
        width: '60%'
      },
      role: "progressbar"
    }, React.createElement("span", {
      className: "sr-only"
    }, "60% Complete"))), React.createElement("div", {
      className: "progress progress-sm"
    }, React.createElement("div", {
      className: "progress-bar",
      style: {
        width: '60%'
      },
      role: "progressbar"
    }, React.createElement("span", {
      className: "sr-only"
    }, "60% Complete"))), React.createElement("div", {
      className: "progress"
    }, React.createElement("div", {
      className: "progress-bar",
      style: {
        width: '60%'
      },
      role: "progressbar"
    }, React.createElement("span", {
      className: "sr-only"
    }, "60% Complete"))), React.createElement("div", {
      className: "progress progress-lg"
    }, React.createElement("div", {
      className: "progress-bar",
      style: {
        width: '60%'
      },
      role: "progressbar"
    }, React.createElement("span", {
      className: "sr-only"
    }, "60% Complete")))))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Radius"), React.createElement("p", null, "You can also use a radius style of the default progress by simple changing the classes."), React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "progress progress-square"
    }, React.createElement("div", {
      className: "progress-bar progress-bar-primary",
      style: {
        width: '50%'
      },
      role: "progressbar"
    }, React.createElement("span", {
      className: "sr-only"
    }, "50% Complete"))), React.createElement("div", {
      className: "progress"
    }, React.createElement("div", {
      className: "progress-bar progress-bar-primary",
      style: {
        width: '50%'
      },
      role: "progressbar"
    }, React.createElement("span", {
      className: "sr-only"
    }, "50% Complete"))), React.createElement("div", {
      className: "progress progress-circle"
    }, React.createElement("div", {
      className: "progress-bar progress-bar-primary",
      style: {
        width: '50%'
      },
      role: "progressbar"
    }, React.createElement("span", {
      className: "sr-only"
    }, "50% Complete"))))))), React.createElement("div", {
      className: "row row-lg"
    }, React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Vertical Color"), React.createElement("div", {
      className: "example",
      style: {
        maxHeight: 250,
        overflow: 'hidden'
      }
    }, React.createElement("div", {
      className: "progress progress-xs progress-vertical"
    }, React.createElement("div", {
      className: "progress-bar progress-bar-default",
      style: {
        height: '15%'
      },
      role: "progressbar"
    }, React.createElement("span", {
      className: "sr-only"
    }, "15% Complete"))), React.createElement("div", {
      className: "progress progress-xs progress-vertical"
    }, React.createElement("div", {
      className: "progress-bar progress-bar-success",
      style: {
        height: '30%'
      },
      role: "progressbar"
    }, React.createElement("span", {
      className: "sr-only"
    }, "30% Complete"))), React.createElement("div", {
      className: "progress progress-xs progress-vertical"
    }, React.createElement("div", {
      className: "progress-bar progress-bar-info",
      style: {
        height: '45%'
      },
      role: "progressbar"
    }, React.createElement("span", {
      className: "sr-only"
    }, "45% Complete"))), React.createElement("div", {
      className: "progress progress-xs progress-vertical"
    }, React.createElement("div", {
      className: "progress-bar progress-bar-warning",
      style: {
        height: '60%'
      },
      role: "progressbar"
    }, React.createElement("span", {
      className: "sr-only"
    }, "60% Complete"))), React.createElement("div", {
      className: "progress progress-xs progress-vertical"
    }, React.createElement("div", {
      className: "progress-bar progress-bar-danger",
      style: {
        height: '75%'
      },
      role: "progressbar"
    }, React.createElement("span", {
      className: "sr-only"
    }, "75% Complete"))), React.createElement("div", {
      className: "progress progress-xs progress-vertical margin-right-0"
    }, React.createElement("div", {
      className: "progress-bar progress-bar-dark",
      style: {
        height: '90%'
      },
      role: "progressbar"
    }, React.createElement("span", {
      className: "sr-only"
    }, "90% Complete")))))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Vertical Bar Size"), React.createElement("div", {
      className: "example",
      style: {
        maxHeight: 250,
        overflow: 'hidden'
      }
    }, React.createElement("div", {
      className: "progress progress-xs progress-vertical"
    }, React.createElement("div", {
      className: "progress-bar",
      style: {
        height: '60%'
      },
      role: "progressbar"
    }, React.createElement("span", {
      className: "sr-only"
    }, "60% Complete"))), React.createElement("div", {
      className: "progress progress-sm progress-vertical"
    }, React.createElement("div", {
      className: "progress-bar",
      style: {
        height: '60%'
      },
      role: "progressbar"
    }, React.createElement("span", {
      className: "sr-only"
    }, "60% Complete"))), React.createElement("div", {
      className: "progress progress-vertical"
    }, React.createElement("div", {
      className: "progress-bar",
      style: {
        height: '60%'
      },
      role: "progressbar"
    }, React.createElement("span", {
      className: "sr-only"
    }, "60% Complete"))), React.createElement("div", {
      className: "progress progress-lg progress-vertical margin-right-0"
    }, React.createElement("div", {
      className: "progress-bar",
      style: {
        height: '60%'
      },
      role: "progressbar"
    }, React.createElement("span", {
      className: "sr-only"
    }, "60% Complete")))))), React.createElement("div", {
      className: "col-md-4"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Vertical Complex Usage"), React.createElement("div", {
      className: "example",
      style: {
        maxHeight: 250,
        overflow: 'hidden'
      }
    }, React.createElement("div", {
      className: "progress progress-xs progress-vertical"
    }, React.createElement("div", {
      className: "progress-bar progress-bar-success",
      style: {
        height: '25%'
      },
      role: "progressbar"
    }, React.createElement("span", {
      className: "sr-only"
    }, "35% Complete (success)")), React.createElement("div", {
      className: "progress-bar progress-bar-warning progress-bar-striped",
      style: {
        height: '15%'
      },
      role: "progressbar"
    }, React.createElement("span", {
      className: "sr-only"
    }, "20% Complete (warning)")), React.createElement("div", {
      className: "progress-bar progress-bar-danger",
      style: {
        height: '10%'
      },
      role: "progressbar"
    }, React.createElement("span", {
      className: "sr-only"
    }, "10% Complete (danger)"))), React.createElement("div", {
      className: "progress progress-xs progress-vertical"
    }, React.createElement("div", {
      className: "progress-bar progress-bar-warning progress-bar-indicating active",
      style: {
        height: '70%'
      },
      role: "progressbar"
    }, React.createElement("span", {
      className: "sr-only"
    }, "70% Complete"))), React.createElement("div", {
      className: "progress progress-lg progress-vertical"
    }, React.createElement("div", {
      className: "progress-bar progress-bar-danger",
      style: {
        height: '80%'
      },
      role: "progressbar"
    }, "80%")), React.createElement("div", {
      className: "progress progress-vertical"
    }, React.createElement("div", {
      className: "progress-bar progress-bar-striped active",
      "aria-valuenow": 90,
      "aria-valuemin": 0,
      "aria-valuemax": 100,
      style: {
        height: '90%'
      },
      role: "progressbar"
    }, React.createElement("span", {
      className: "sr-only"
    }, "90% Complete"))), React.createElement("div", {
      className: "progress progress-vertical margin-right-0"
    }, React.createElement("div", {
      className: "progress-bar progress-bar-info progress-bar-striped",
      "aria-valuenow": 80,
      "aria-valuemin": 0,
      "aria-valuemax": 100,
      style: {
        height: '95%'
      },
      role: "progressbar"
    }, React.createElement("span", {
      className: "sr-only"
    }, "95% Complete (success)"))))))), React.createElement("div", {
      className: "row row-lg"
    }, React.createElement("div", {
      className: "col-md-12"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Skill Bars"), React.createElement("div", {
      className: "row row-lg"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("p", null, "A more recent development is the professional skill bars, which is used in your professional situations where the extent of the skill can not be determined in a way that could be expressed as a percentage.This bar uses motion and title text to show that progress is taking place."))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h5", null, "Photoshop", React.createElement("span", {
      className: "pull-xs-right"
    }, "40%")), React.createElement("div", {
      className: "progress progress-sm"
    }, React.createElement("div", {
      className: "progress-bar progress-bar-indicating active",
      style: {
        width: '40%'
      },
      role: "progressbar"
    })), React.createElement("h5", null, "Html", React.createElement("span", {
      className: "pull-xs-right"
    }, "80%")), React.createElement("div", {
      className: "progress progress-sm"
    }, React.createElement("div", {
      className: "progress-bar progress-bar-indicating active",
      style: {
        width: '80%'
      },
      role: "progressbar"
    })), React.createElement("h5", null, "Javascript", React.createElement("span", {
      className: "pull-xs-right"
    }, "60%")), React.createElement("div", {
      className: "progress progress-sm"
    }, React.createElement("div", {
      className: "progress-bar progress-bar-indicating active",
      style: {
        width: '60%'
      },
      role: "progressbar"
    })))))))), React.createElement("div", {
      className: "row row-lg"
    }, React.createElement("div", {
      className: "col-md-12"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "asProgress", React.createElement("small", null, React.createElement("a", {
      className: "example-plugin-link",
      href: "https://github.com/amazingSurge/jquery-asProgress",
      target: "_blank"
    }, "official website"))), React.createElement("p", null, "Progress bar use a linear function, such that the advancement of a progress bar is directly proportional to the amount of work that has been completed. "), React.createElement("div", {
      className: "row row-lg"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h6", {
      className: "font-size-16 margin-top-0"
    }, "Numbers"), React.createElement("div", {
      className: "progress",
      "data-goal": 60,
      "data-plugin": "progress"
    }, React.createElement("div", {
      className: "progress-bar",
      "aria-valuemin": 15,
      "aria-valuemax": 115,
      "aria-valuenow": 25,
      role: "progressbar"
    }, React.createElement("span", {
      className: "progress-label"
    }))), React.createElement("h6", {
      className: "font-size-16"
    }, "Percentage"), React.createElement("div", {
      className: "progress",
      "data-labeltype": "percentage",
      "data-goal": -40,
      "data-plugin": "progress"
    }, React.createElement("div", {
      className: "progress-bar",
      "aria-valuemin": -100,
      "aria-valuemax": 0,
      "aria-valuenow": -80,
      role: "progressbar"
    }, React.createElement("span", {
      className: "progress-label"
    }))), React.createElement("h6", {
      className: "font-size-16"
    }, "Steps"), React.createElement("div", {
      className: "progress",
      "data-labeltype": "steps",
      "data-totalsteps": 8,
      "data-goal": 80,
      "data-plugin": "progress"
    }, React.createElement("div", {
      className: "progress-bar",
      "aria-valuemin": 0,
      "aria-valuemax": 100,
      style: {
        width: '50%'
      },
      "aria-valuenow": 60,
      role: "progressbar"
    }, React.createElement("span", {
      className: "progress-label"
    }))))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("div", {
      className: "contextual-progress"
    }, React.createElement("div", {
      className: "clearfix"
    }, React.createElement("div", {
      className: "progress-title"
    }, "Numbers"), React.createElement("div", {
      className: "progress-label"
    }, "25%")), React.createElement("div", {
      className: "progress",
      "data-goal": 60,
      "data-plugin": "progress"
    }, React.createElement("div", {
      className: "progress-bar",
      "aria-valuemin": 15,
      "aria-valuemax": 115,
      "aria-valuenow": 25,
      role: "progressbar"
    }, React.createElement("span", {
      className: "progress-label"
    })))), React.createElement("div", {
      className: "contextual-progress"
    }, React.createElement("div", {
      className: "clearfix"
    }, React.createElement("div", {
      className: "progress-title"
    }, "Percentage"), React.createElement("div", {
      className: "progress-label"
    }, "50%")), React.createElement("div", {
      className: "progress",
      "data-labeltype": "percentage",
      "data-goal": -40,
      "data-plugin": "progress"
    }, React.createElement("div", {
      className: "progress-bar",
      "aria-valuemin": -100,
      "aria-valuemax": 0,
      "aria-valuenow": -80,
      role: "progressbar"
    }, React.createElement("span", {
      className: "progress-label"
    })))), React.createElement("div", {
      className: "contextual-progress"
    }, React.createElement("div", {
      className: "clearfix"
    }, React.createElement("div", {
      className: "progress-title"
    }, "Steps"), React.createElement("div", {
      className: "progress-label"
    }, "50%")), React.createElement("div", {
      className: "progress",
      "data-labeltype": "steps",
      "data-totalsteps": 8,
      "data-goal": 80,
      "data-plugin": "progress"
    }, React.createElement("div", {
      className: "progress-bar",
      "aria-valuemin": 0,
      "aria-valuemax": 100,
      style: {
        width: '50%'
      },
      "aria-valuenow": 60,
      role: "progressbar"
    }, React.createElement("span", {
      className: "progress-label"
    }))))))), React.createElement("div", {
      className: "text-xs-center example example-buttons"
    }, React.createElement("button", {
      className: "btn btn-outline btn-primary",
      id: "exampleButtonStart",
      type: "button"
    }, "start"), React.createElement("button", {
      className: "btn btn-outline btn-primary",
      id: "exampleButtonStop",
      type: "button"
    }, "stop"), React.createElement("button", {
      className: "btn btn-outline btn-primary",
      id: "exampleButtonGoto",
      type: "button"
    }, "go to value 50"), React.createElement("button", {
      className: "btn btn-outline btn-primary",
      id: "exampleButtonGotoPercentage",
      type: "button"
    }, "go to 50%"), React.createElement("button", {
      className: "btn btn-outline btn-primary",
      id: "exampleButtonFinish",
      type: "button"
    }, "finish"), React.createElement("button", {
      className: "btn btn-outline btn-primary",
      id: "exampleButtonReset",
      type: "button"
    }, "reset"), React.createElement("button", {
      className: "btn btn-outline btn-primary",
      id: "exampleButtonRandom",
      type: "button"
    }, "random")))))))));
  }

}

module.exportDefault(ProgressBarsExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"tabs-accordions.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/uikit/tabs-accordions.jsx                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Tabs, Tab, TabContainer, TabContent, TabPane, Row, Col, Nav, NavItem, Accordion, Panel, Well;
module.watch(require("react-bootstrap"), {
  Tabs(v) {
    Tabs = v;
  },

  Tab(v) {
    Tab = v;
  },

  TabContainer(v) {
    TabContainer = v;
  },

  TabContent(v) {
    TabContent = v;
  },

  TabPane(v) {
    TabPane = v;
  },

  Row(v) {
    Row = v;
  },

  Col(v) {
    Col = v;
  },

  Nav(v) {
    Nav = v;
  },

  NavItem(v) {
    NavItem = v;
  },

  Accordion(v) {
    Accordion = v;
  },

  Panel(v) {
    Panel = v;
  },

  Well(v) {
    Well = v;
  }

}, 1);

class TabsAccordionsExample extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      openCollapse: false
    };
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("ol", {
      className: "breadcrumb"
    }, React.createElement("li", null, "Home"), React.createElement("li", null, "Examples"), React.createElement("li", {
      className: "active"
    }, "Basic UI")), React.createElement("h1", {
      className: "page-title"
    }, "Tabs & Accordions")), React.createElement("div", {
      className: "page-content container-fluid"
    }, React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-heading"
    }, React.createElement("h3", {
      className: "panel-title"
    }, "Tabs")), React.createElement("div", {
      className: "panel-body container-fluid"
    }, React.createElement("div", {
      className: "row row-lg"
    }, React.createElement("div", {
      className: "col-lg-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("div", {
      className: "nav-tabs-horizontal content-padding-top"
    }, React.createElement(Tabs, {
      defaultActiveKey: 2,
      id: "uncontrolled-tab-example",
      bsStyle: "tabs"
    }, React.createElement(Tab, {
      eventKey: 1,
      title: "Home"
    }, "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Neglegentur sabinum instructus fingitur accusantibus harum neque consuetudine intereant numeris, ipse tuemur suum apud mediocrem iactant. Libidinibus amatoriis dicta albuci manum, statue."), React.createElement(Tab, {
      eventKey: 2,
      title: "Components"
    }, "Negant parvos fructu nostram mutans supplicii ac dissentias, maius tibi licebit ruinae philosophia. Salutatus repellere titillaret expetendum ipsi. Cupiditates intellegam exercitumque privatio concederetur, sempiternum, verbis malint dissensio nullas noctesque earumque."), React.createElement(Tab, {
      eventKey: 3,
      title: "CSS"
    }, "Benivole horrent tantalo fuisset adamare fugiendam tractatos indicaverunt animis chaere, brevi minuendas, ubi angoribus iisque deorsum audita haec dedocendi utilitas. Panaetium erimus platonem varias imperitos animum, iudiciorumque operis multa disputando."), React.createElement(Tab, {
      eventKey: 4,
      title: "Javascript"
    }, "Metus subtilius texit consilio fugiendam, opinionum levius amici inertissimae pecuniae tribus ordiamur, alienus artes solitudo, minime praesidia proficiscuntur reiciat detracta involuta veterum. Rutilius quis honestatis hominum, quisquis percussit sibi explicari."))))), React.createElement("div", {
      className: "col-lg-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("div", {
      className: "nav-tabs-horizontal nav-tabs-reverse content-padding-top"
    }, React.createElement(Tabs, {
      defaultActiveKey: 2,
      id: "uncontrolled-tab-example",
      bsStyle: "tabs"
    }, React.createElement(Tab, {
      eventKey: 1,
      title: "Home"
    }, "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Neglegentur sabinum instructus fingitur accusantibus harum neque consuetudine intereant numeris, ipse tuemur suum apud mediocrem iactant. Libidinibus amatoriis dicta albuci manum, statue."), React.createElement(Tab, {
      eventKey: 2,
      title: "Components"
    }, "Negant parvos fructu nostram mutans supplicii ac dissentias, maius tibi licebit ruinae philosophia. Salutatus repellere titillaret expetendum ipsi. Cupiditates intellegam exercitumque privatio concederetur, sempiternum, verbis malint dissensio nullas noctesque earumque."), React.createElement(Tab, {
      eventKey: 3,
      title: "CSS"
    }, "Benivole horrent tantalo fuisset adamare fugiendam tractatos indicaverunt animis chaere, brevi minuendas, ubi angoribus iisque deorsum audita haec dedocendi utilitas. Panaetium erimus platonem varias imperitos animum, iudiciorumque operis multa disputando."), React.createElement(Tab, {
      eventKey: 4,
      title: "Javascript"
    }, "Metus subtilius texit consilio fugiendam, opinionum levius amici inertissimae pecuniae tribus ordiamur, alienus artes solitudo, minime praesidia proficiscuntur reiciat detracta involuta veterum. Rutilius quis honestatis hominum, quisquis percussit sibi explicari.")))))), React.createElement("div", {
      className: "row row-lg"
    }, React.createElement("div", {
      className: "col-lg-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("div", {
      className: "nav-tabs-vertical content-padding-vertical"
    }, React.createElement(Tabs, {
      defaultActiveKey: 2,
      id: "uncontrolled-tab-example",
      bsStyle: "tabs"
    }, React.createElement(Tab, {
      eventKey: 1,
      title: "Home"
    }, "Puto loqueretur maxime tuentur statuam quanta quamquam multoque cogitavisse, romano continens repellat omnis liquidae, inveneris aegritudine inesse dirigentur graece secundum ipso unam, cognitionis isdem mortem tantis opibus turma virtus legum, procedat accusantium ipse sine fuissent desideraturam. Naturalem virtutum familiari nasci tenebo provident convincere. Senserit ultima faciam deterius plurimum ornateque curiosi. Oratione sit, dices malunt quibusdam. Distinguique parendum contentam graecam sale."), React.createElement(Tab, {
      eventKey: 2,
      title: "Components"
    }, "Quaerat delectus arte exhorrescere summum disputando agatur perfunctio, e videntur repellere errorem opinor facete invidi perspici simul liberos, inhumanus. Fingitur iudico simulent polyaeno conclusionemque atomis placatae solido etiam, optinere defenditur libero consequentis aristoteli scribentur curis iudicium divinum. Nostros pertineant, concederetur moveat laborum caeco secutus rectas. Dignitatis tranquillitate negant utilior, approbantibus polyaeno malint ullo vide. Possum sane confidam cogitavisse. Sumitur. Diis."), React.createElement(Tab, {
      eventKey: 3,
      title: "CSS"
    }, "Chrysippe rebus institutionem utrisque dixisset manus quippiam ignorare defatigatio doctiores, essent doctus ipsam tamquam complexiones corporisque, ars umbram sentiri venandi. Ipsam. Reprehenderit tantum debent sicine assumenda comprobavit, assumenda primos fuerit atomos amicorum inducitur quaedam miserum, potitur numquid effluere haeret ipsos consuetudine, munere putet fugiendis orationis quantumcumque. Perferendis attento saluti liberatione contra, constituam efficeret quaeso accusamus quieti petat rem nisi amicum."), React.createElement(Tab, {
      eventKey: 4,
      title: "Javascript"
    }, "Laudabilis. At artes audiebamus firmam discordiae potione albam ferantur, epicureum loquerer videretur formidinum utrisque simulent postremo, praesidia variari fecerit ferantur. Hominibus doctissimos multi, ferentur, certissimam medicorum bonum iucundius depravare facile. Degendae istius perfunctio quisquis ordinem ornatum, praeda atomi degendae animus. Mens eximiae placuit terrore, sollicitant efficeret audeam tantalo, vulgo laudantium evertitur spe meminerunt timentis populo, senserit inprobitas facilius referri consiliisque."))))), React.createElement("div", {
      className: "col-lg-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("div", {
      className: "nav-tabs-vertical nav-tabs-reverse content-padding-vertical"
    }, React.createElement(Tabs, {
      defaultActiveKey: 2,
      id: "uncontrolled-tab-example",
      bsStyle: "tabs"
    }, React.createElement(Tab, {
      eventKey: 1,
      title: "Home"
    }, "Puto loqueretur maxime tuentur statuam quanta quamquam multoque cogitavisse, romano continens repellat omnis liquidae, inveneris aegritudine inesse dirigentur graece secundum ipso unam, cognitionis isdem mortem tantis opibus turma virtus legum, procedat accusantium ipse sine fuissent desideraturam. Naturalem virtutum familiari nasci tenebo provident convincere. Senserit ultima faciam deterius plurimum ornateque curiosi. Oratione sit, dices malunt quibusdam. Distinguique parendum contentam graecam sale."), React.createElement(Tab, {
      eventKey: 2,
      title: "Components"
    }, "Quaerat delectus arte exhorrescere summum disputando agatur perfunctio, e videntur repellere errorem opinor facete invidi perspici simul liberos, inhumanus. Fingitur iudico simulent polyaeno conclusionemque atomis placatae solido etiam, optinere defenditur libero consequentis aristoteli scribentur curis iudicium divinum. Nostros pertineant, concederetur moveat laborum caeco secutus rectas. Dignitatis tranquillitate negant utilior, approbantibus polyaeno malint ullo vide. Possum sane confidam cogitavisse. Sumitur. Diis."), React.createElement(Tab, {
      eventKey: 3,
      title: "CSS"
    }, "Chrysippe rebus institutionem utrisque dixisset manus quippiam ignorare defatigatio doctiores, essent doctus ipsam tamquam complexiones corporisque, ars umbram sentiri venandi. Ipsam. Reprehenderit tantum debent sicine assumenda comprobavit, assumenda primos fuerit atomos amicorum inducitur quaedam miserum, potitur numquid effluere haeret ipsos consuetudine, munere putet fugiendis orationis quantumcumque. Perferendis attento saluti liberatione contra, constituam efficeret quaeso accusamus quieti petat rem nisi amicum."), React.createElement(Tab, {
      eventKey: 4,
      title: "Javascript"
    }, "Laudabilis. At artes audiebamus firmam discordiae potione albam ferantur, epicureum loquerer videretur formidinum utrisque simulent postremo, praesidia variari fecerit ferantur. Hominibus doctissimos multi, ferentur, certissimam medicorum bonum iucundius depravare facile. Degendae istius perfunctio quisquis ordinem ornatum, praeda atomi degendae animus. Mens eximiae placuit terrore, sollicitant efficeret audeam tantalo, vulgo laudantium evertitur spe meminerunt timentis populo, senserit inprobitas facilius referri consiliisque.")))))), React.createElement("div", {
      className: "row row-lg"
    }, React.createElement("div", {
      className: "col-lg-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("div", {
      className: "nav-tabs-horizontal content-padding-top"
    }, React.createElement(Tabs, {
      defaultActiveKey: 2,
      id: "uncontrolled-tab-example",
      bsStyle: "tabs"
    }, React.createElement(Tab, {
      eventKey: 1,
      title: React.createElement("i", {
        className: "icon wb-home margin-0",
        "aria-hidden": "true"
      })
    }, "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Neglegentur sabinum instructus fingitur accusantibus harum neque consuetudine intereant numeris, ipse tuemur suum apud mediocrem iactant. Libidinibus amatoriis dicta albuci manum, statue."), React.createElement(Tab, {
      eventKey: 2,
      title: React.createElement("i", {
        className: "icon wb-settings margin-0",
        "aria-hidden": "true"
      })
    }, "Negant parvos fructu nostram mutans supplicii ac dissentias, maius tibi licebit ruinae philosophia. Salutatus repellere titillaret expetendum ipsi. Cupiditates intellegam exercitumque privatio concederetur, sempiternum, verbis malint dissensio nullas noctesque earumque."), React.createElement(Tab, {
      eventKey: 3,
      title: React.createElement("i", {
        className: "icon wb-star margin-0",
        "aria-hidden": "true"
      })
    }, "Benivole horrent tantalo fuisset adamare fugiendam tractatos indicaverunt animis chaere, brevi minuendas, ubi angoribus iisque deorsum audita haec dedocendi utilitas. Panaetium erimus platonem varias imperitos animum, iudiciorumque operis multa disputando."), React.createElement(Tab, {
      eventKey: 4,
      title: React.createElement("i", {
        className: "icon wb-cloud margin-0",
        "aria-hidden": "true"
      })
    }, "Metus subtilius texit consilio fugiendam, opinionum levius amici inertissimae pecuniae tribus ordiamur, alienus artes solitudo, minime praesidia proficiscuntur reiciat detracta involuta veterum. Rutilius quis honestatis hominum, quisquis percussit sibi explicari."))))), React.createElement("div", {
      className: "col-lg-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("div", {
      className: "nav-tabs-vertical content-padding-vertical"
    }, React.createElement(Tabs, {
      defaultActiveKey: 2,
      id: "uncontrolled-tab-example",
      bsStyle: "tabs"
    }, React.createElement(Tab, {
      eventKey: 1,
      title: React.createElement("i", {
        className: "icon wb-home margin-0",
        "aria-hidden": "true"
      })
    }, "Disseruerunt aiebat veterum universas politus corrigere pacto disputata, sabinum officia, status latinas monet optari quid animi arbitratu, inveniri caritatem adhibuit, putamus, electis parabilis nutu unam claris magna locum disputatum, tenuit gymnasia scripserit praetereat exedunt cyrenaicos reformidans. Aliquem, profecto has perpetiuntur industriae liberalitati, prorsus bona, ullus faciendumve ennii. Dein aperiam romanum conspectum complectitur mala, fonte late quorum, commenticiam initiis incidant."), React.createElement(Tab, {
      eventKey: 2,
      title: React.createElement("i", {
        className: "icon wb-settings margin-0",
        "aria-hidden": "true"
      })
    }, "Utrumvis angore, laudatur eligendi damna tanta ultimum quidque. Data philosophis efficitur. Etsi apte deorsum tradidisse. Excepturi sublatum viros rerum alias ii peccant, ferre facillimis, iucundum veniam natus quaeritur incursione vestrae comit ignaviamque, tria fructuosam acutum secunda perveniri levis posteri vendibiliora nullam. Probes cui appetendi causas, attico familiari rem tempus cn torquatum. Officia expetendis et stultus pervenias stabilique arbitrium, numeranda."), React.createElement(Tab, {
      eventKey: 3,
      title: React.createElement("i", {
        className: "icon wb-star margin-0",
        "aria-hidden": "true"
      })
    }, "Similique corporisque. Vitam erga videmus. Comparandae fecit. Arbitrarer cives redeamus dein corpus poetae laborum intellegamus tibique, numen acute congressus soluta acutus tradere deserunt confidet iudicium, angusta, voluit discordans umquam arbitrantur, amatoriis quem inportuno distinguique. Istae, referri. Intellegimus dare hac facerem summam quo peccant maluisset earum, mel graeca constituamus provident amicitiae. Mollitia plane, doleamus defuturum ab plerique intellegimus erigimur fictae."), React.createElement(Tab, {
      eventKey: 4,
      title: React.createElement("i", {
        className: "icon wb-cloud margin-0",
        "aria-hidden": "true"
      })
    }, "Consulatu sequimur persecuti quietus aristippi propter afflueret, quibusdam congressus neglegentur delectu optimus exeduntur aliquod interesset. Quaeque postea ceterorum incurreret copulatas quos. Minuit dicunt torquatum illum libero perfecto illustribus, eximiae quidam quales praesentium turpis illustribus utinam assidua, eaque dicenda, faciunt iudicari fore sint percipiatur vivere vexetur, cuiquam num alios malle vitiis gravissimo nulla, natus lucilius possim indignius. Fortibus ait, accuratius.")))))), React.createElement("div", {
      className: "row row-lg"
    }, React.createElement("div", {
      className: "col-lg-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("div", {
      className: "nav-tabs-horizontal nav-tabs-solid content-padding-top"
    }, React.createElement(Tabs, {
      defaultActiveKey: 2,
      id: "uncontrolled-tab-example",
      bsStyle: "tabs"
    }, React.createElement(Tab, {
      eventKey: 1,
      title: "Home"
    }, "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Neglegentur sabinum instructus fingitur accusantibus harum neque consuetudine intereant numeris, ipse tuemur suum apud mediocrem iactant. Libidinibus amatoriis dicta albuci manum, statue."), React.createElement(Tab, {
      eventKey: 2,
      title: "Components"
    }, "Negant parvos fructu nostram mutans supplicii ac dissentias, maius tibi licebit ruinae philosophia. Salutatus repellere titillaret expetendum ipsi. Cupiditates intellegam exercitumque privatio concederetur, sempiternum, verbis malint dissensio nullas noctesque earumque."), React.createElement(Tab, {
      eventKey: 3,
      title: "CSS"
    }, "Benivole horrent tantalo fuisset adamare fugiendam tractatos indicaverunt animis chaere, brevi minuendas, ubi angoribus iisque deorsum audita haec dedocendi utilitas. Panaetium erimus platonem varias imperitos animum, iudiciorumque operis multa disputando."), React.createElement(Tab, {
      eventKey: 4,
      title: "Javascript"
    }, "Metus subtilius texit consilio fugiendam, opinionum levius amici inertissimae pecuniae tribus ordiamur, alienus artes solitudo, minime praesidia proficiscuntur reiciat detracta involuta veterum. Rutilius quis honestatis hominum, quisquis percussit sibi explicari."))))), React.createElement("div", {
      className: "col-lg-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("div", {
      className: "nav-tabs-vertical content-padding-vertical nav-tabs-solid"
    }, React.createElement(Tabs, {
      defaultActiveKey: 2,
      id: "uncontrolled-tab-example",
      bsStyle: "tabs"
    }, React.createElement(Tab, {
      eventKey: 1,
      title: "Home"
    }, "Puto loqueretur maxime tuentur statuam quanta quamquam multoque cogitavisse, romano continens repellat omnis liquidae, inveneris aegritudine inesse dirigentur graece secundum ipso unam, cognitionis isdem mortem tantis opibus turma virtus legum, procedat accusantium ipse sine fuissent desideraturam. Naturalem virtutum familiari nasci tenebo provident convincere. Senserit ultima faciam deterius plurimum ornateque curiosi. Oratione sit, dices malunt quibusdam. Distinguique parendum contentam graecam sale."), React.createElement(Tab, {
      eventKey: 2,
      title: "Components"
    }, "Quaerat delectus arte exhorrescere summum disputando agatur perfunctio, e videntur repellere errorem opinor facete invidi perspici simul liberos, inhumanus. Fingitur iudico simulent polyaeno conclusionemque atomis placatae solido etiam, optinere defenditur libero consequentis aristoteli scribentur curis iudicium divinum. Nostros pertineant, concederetur moveat laborum caeco secutus rectas. Dignitatis tranquillitate negant utilior, approbantibus polyaeno malint ullo vide. Possum sane confidam cogitavisse. Sumitur. Diis."), React.createElement(Tab, {
      eventKey: 3,
      title: "CSS"
    }, "Chrysippe rebus institutionem utrisque dixisset manus quippiam ignorare defatigatio doctiores, essent doctus ipsam tamquam complexiones corporisque, ars umbram sentiri venandi. Ipsam. Reprehenderit tantum debent sicine assumenda comprobavit, assumenda primos fuerit atomos amicorum inducitur quaedam miserum, potitur numquid effluere haeret ipsos consuetudine, munere putet fugiendis orationis quantumcumque. Perferendis attento saluti liberatione contra, constituam efficeret quaeso accusamus quieti petat rem nisi amicum."), React.createElement(Tab, {
      eventKey: 4,
      title: "Javascript"
    }, "Laudabilis. At artes audiebamus firmam discordiae potione albam ferantur, epicureum loquerer videretur formidinum utrisque simulent postremo, praesidia variari fecerit ferantur. Hominibus doctissimos multi, ferentur, certissimam medicorum bonum iucundius depravare facile. Degendae istius perfunctio quisquis ordinem ornatum, praeda atomi degendae animus. Mens eximiae placuit terrore, sollicitant efficeret audeam tantalo, vulgo laudantium evertitur spe meminerunt timentis populo, senserit inprobitas facilius referri consiliisque.")))))), React.createElement("div", {
      className: "row row-lg"
    }, React.createElement("div", {
      className: "col-lg-6"
    }, React.createElement("div", {
      className: "example-wrap margin-lg-0"
    }, React.createElement("div", {
      className: "nav-tabs-horizontal nav-tabs-line content-padding-top"
    }, React.createElement(Tabs, {
      defaultActiveKey: 2,
      id: "uncontrolled-tab-example",
      bsStyle: "tabs"
    }, React.createElement(Tab, {
      eventKey: 1,
      title: "Home"
    }, "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Neglegentur sabinum instructus fingitur accusantibus harum neque consuetudine intereant numeris, ipse tuemur suum apud mediocrem iactant. Libidinibus amatoriis dicta albuci manum, statue."), React.createElement(Tab, {
      eventKey: 2,
      title: "Components"
    }, "Negant parvos fructu nostram mutans supplicii ac dissentias, maius tibi licebit ruinae philosophia. Salutatus repellere titillaret expetendum ipsi. Cupiditates intellegam exercitumque privatio concederetur, sempiternum, verbis malint dissensio nullas noctesque earumque."), React.createElement(Tab, {
      eventKey: 3,
      title: "CSS"
    }, "Benivole horrent tantalo fuisset adamare fugiendam tractatos indicaverunt animis chaere, brevi minuendas, ubi angoribus iisque deorsum audita haec dedocendi utilitas. Panaetium erimus platonem varias imperitos animum, iudiciorumque operis multa disputando."), React.createElement(Tab, {
      eventKey: 4,
      title: "Javascript"
    }, "Metus subtilius texit consilio fugiendam, opinionum levius amici inertissimae pecuniae tribus ordiamur, alienus artes solitudo, minime praesidia proficiscuntur reiciat detracta involuta veterum. Rutilius quis honestatis hominum, quisquis percussit sibi explicari."))))), React.createElement("div", {
      className: "col-lg-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("div", {
      className: "nav-tabs-vertical content-padding-vertical nav-tabs-line"
    }, React.createElement(Tabs, {
      defaultActiveKey: 2,
      id: "uncontrolled-tab-example",
      bsStyle: "tabs"
    }, React.createElement(Tab, {
      eventKey: 1,
      title: "Home"
    }, "Puto loqueretur maxime tuentur statuam quanta quamquam multoque cogitavisse, romano continens repellat omnis liquidae, inveneris aegritudine inesse dirigentur graece secundum ipso unam, cognitionis isdem mortem tantis opibus turma virtus legum, procedat accusantium ipse sine fuissent desideraturam. Naturalem virtutum familiari nasci tenebo provident convincere. Senserit ultima faciam deterius plurimum ornateque curiosi. Oratione sit, dices malunt quibusdam. Distinguique parendum contentam graecam sale."), React.createElement(Tab, {
      eventKey: 2,
      title: "Components"
    }, "Quaerat delectus arte exhorrescere summum disputando agatur perfunctio, e videntur repellere errorem opinor facete invidi perspici simul liberos, inhumanus. Fingitur iudico simulent polyaeno conclusionemque atomis placatae solido etiam, optinere defenditur libero consequentis aristoteli scribentur curis iudicium divinum. Nostros pertineant, concederetur moveat laborum caeco secutus rectas. Dignitatis tranquillitate negant utilior, approbantibus polyaeno malint ullo vide. Possum sane confidam cogitavisse. Sumitur. Diis."), React.createElement(Tab, {
      eventKey: 3,
      title: "CSS"
    }, "Chrysippe rebus institutionem utrisque dixisset manus quippiam ignorare defatigatio doctiores, essent doctus ipsam tamquam complexiones corporisque, ars umbram sentiri venandi. Ipsam. Reprehenderit tantum debent sicine assumenda comprobavit, assumenda primos fuerit atomos amicorum inducitur quaedam miserum, potitur numquid effluere haeret ipsos consuetudine, munere putet fugiendis orationis quantumcumque. Perferendis attento saluti liberatione contra, constituam efficeret quaeso accusamus quieti petat rem nisi amicum."), React.createElement(Tab, {
      eventKey: 4,
      title: "Javascript"
    }, "Laudabilis. At artes audiebamus firmam discordiae potione albam ferantur, epicureum loquerer videretur formidinum utrisque simulent postremo, praesidia variari fecerit ferantur. Hominibus doctissimos multi, ferentur, certissimam medicorum bonum iucundius depravare facile. Degendae istius perfunctio quisquis ordinem ornatum, praeda atomi degendae animus. Mens eximiae placuit terrore, sollicitant efficeret audeam tantalo, vulgo laudantium evertitur spe meminerunt timentis populo, senserit inprobitas facilius referri consiliisque.")))))))), React.createElement("h4", null, "Tabs With Inverse"), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-lg-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("div", {
      className: "nav-tabs-horizontal nav-tabs-inverse content-padding"
    }, React.createElement(Tabs, {
      defaultActiveKey: 2,
      id: "uncontrolled-tab-example",
      bsStyle: "tabs"
    }, React.createElement(Tab, {
      eventKey: 1,
      title: "Home"
    }, "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Neglegentur sabinum instructus fingitur accusantibus harum neque consuetudine intereant numeris, ipse tuemur suum apud mediocrem iactant. Libidinibus amatoriis dicta albuci manum, statue."), React.createElement(Tab, {
      eventKey: 2,
      title: "Components"
    }, "Negant parvos fructu nostram mutans supplicii ac dissentias, maius tibi licebit ruinae philosophia. Salutatus repellere titillaret expetendum ipsi. Cupiditates intellegam exercitumque privatio concederetur, sempiternum, verbis malint dissensio nullas noctesque earumque."), React.createElement(Tab, {
      eventKey: 3,
      title: "CSS"
    }, "Benivole horrent tantalo fuisset adamare fugiendam tractatos indicaverunt animis chaere, brevi minuendas, ubi angoribus iisque deorsum audita haec dedocendi utilitas. Panaetium erimus platonem varias imperitos animum, iudiciorumque operis multa disputando."), React.createElement(Tab, {
      eventKey: 4,
      title: "Javascript"
    }, "Metus subtilius texit consilio fugiendam, opinionum levius amici inertissimae pecuniae tribus ordiamur, alienus artes solitudo, minime praesidia proficiscuntur reiciat detracta involuta veterum. Rutilius quis honestatis hominum, quisquis percussit sibi explicari."))))), React.createElement("div", {
      className: "col-lg-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("div", {
      className: "nav-tabs-vertical content-padding-vertical nav-tabs-inverse"
    }, React.createElement(Tabs, {
      defaultActiveKey: 2,
      id: "uncontrolled-tab-example",
      bsStyle: "tabs"
    }, React.createElement(Tab, {
      eventKey: 1,
      title: "Home"
    }, "Puto loqueretur maxime tuentur statuam quanta quamquam multoque cogitavisse, romano continens repellat omnis liquidae, inveneris aegritudine inesse dirigentur graece secundum ipso unam, cognitionis isdem mortem tantis opibus turma virtus legum, procedat accusantium ipse sine fuissent desideraturam. Naturalem virtutum familiari nasci tenebo provident convincere. Senserit ultima faciam deterius plurimum ornateque curiosi. Oratione sit, dices malunt quibusdam. Distinguique parendum contentam graecam sale."), React.createElement(Tab, {
      eventKey: 2,
      title: "Components"
    }, "Quaerat delectus arte exhorrescere summum disputando agatur perfunctio, e videntur repellere errorem opinor facete invidi perspici simul liberos, inhumanus. Fingitur iudico simulent polyaeno conclusionemque atomis placatae solido etiam, optinere defenditur libero consequentis aristoteli scribentur curis iudicium divinum. Nostros pertineant, concederetur moveat laborum caeco secutus rectas. Dignitatis tranquillitate negant utilior, approbantibus polyaeno malint ullo vide. Possum sane confidam cogitavisse. Sumitur. Diis."), React.createElement(Tab, {
      eventKey: 3,
      title: "CSS"
    }, "Chrysippe rebus institutionem utrisque dixisset manus quippiam ignorare defatigatio doctiores, essent doctus ipsam tamquam complexiones corporisque, ars umbram sentiri venandi. Ipsam. Reprehenderit tantum debent sicine assumenda comprobavit, assumenda primos fuerit atomos amicorum inducitur quaedam miserum, potitur numquid effluere haeret ipsos consuetudine, munere putet fugiendis orationis quantumcumque. Perferendis attento saluti liberatione contra, constituam efficeret quaeso accusamus quieti petat rem nisi amicum."), React.createElement(Tab, {
      eventKey: 4,
      title: "Javascript"
    }, "Laudabilis. At artes audiebamus firmam discordiae potione albam ferantur, epicureum loquerer videretur formidinum utrisque simulent postremo, praesidia variari fecerit ferantur. Hominibus doctissimos multi, ferentur, certissimam medicorum bonum iucundius depravare facile. Degendae istius perfunctio quisquis ordinem ornatum, praeda atomi degendae animus. Mens eximiae placuit terrore, sollicitant efficeret audeam tantalo, vulgo laudantium evertitur spe meminerunt timentis populo, senserit inprobitas facilius referri consiliisque."))))), React.createElement("div", {
      className: "clearfix visible-lg-block"
    }), React.createElement("div", {
      className: "col-lg-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("div", {
      className: "nav-tabs-horizontal nav-tabs-inverse content-padding nav-tabs-solid"
    }, React.createElement(Tabs, {
      defaultActiveKey: 2,
      id: "uncontrolled-tab-example",
      bsStyle: "tabs"
    }, React.createElement(Tab, {
      eventKey: 1,
      title: "Home"
    }, "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Neglegentur sabinum instructus fingitur accusantibus harum neque consuetudine intereant numeris, ipse tuemur suum apud mediocrem iactant. Libidinibus amatoriis dicta albuci manum, statue."), React.createElement(Tab, {
      eventKey: 2,
      title: "Components"
    }, "Negant parvos fructu nostram mutans supplicii ac dissentias, maius tibi licebit ruinae philosophia. Salutatus repellere titillaret expetendum ipsi. Cupiditates intellegam exercitumque privatio concederetur, sempiternum, verbis malint dissensio nullas noctesque earumque."), React.createElement(Tab, {
      eventKey: 3,
      title: "CSS"
    }, "Benivole horrent tantalo fuisset adamare fugiendam tractatos indicaverunt animis chaere, brevi minuendas, ubi angoribus iisque deorsum audita haec dedocendi utilitas. Panaetium erimus platonem varias imperitos animum, iudiciorumque operis multa disputando."), React.createElement(Tab, {
      eventKey: 4,
      title: "Javascript"
    }, "Metus subtilius texit consilio fugiendam, opinionum levius amici inertissimae pecuniae tribus ordiamur, alienus artes solitudo, minime praesidia proficiscuntur reiciat detracta involuta veterum. Rutilius quis honestatis hominum, quisquis percussit sibi explicari."))))), React.createElement("div", {
      className: "col-lg-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("div", {
      className: "nav-tabs-vertical content-padding-vertical nav-tabs-inverse nav-tabs-solid"
    }, React.createElement(Tabs, {
      defaultActiveKey: 2,
      id: "uncontrolled-tab-example",
      bsStyle: "tabs"
    }, React.createElement(Tab, {
      eventKey: 1,
      title: "Home"
    }, "Puto loqueretur maxime tuentur statuam quanta quamquam multoque cogitavisse, romano continens repellat omnis liquidae, inveneris aegritudine inesse dirigentur graece secundum ipso unam, cognitionis isdem mortem tantis opibus turma virtus legum, procedat accusantium ipse sine fuissent desideraturam. Naturalem virtutum familiari nasci tenebo provident convincere. Senserit ultima faciam deterius plurimum ornateque curiosi. Oratione sit, dices malunt quibusdam. Distinguique parendum contentam graecam sale."), React.createElement(Tab, {
      eventKey: 2,
      title: "Components"
    }, "Quaerat delectus arte exhorrescere summum disputando agatur perfunctio, e videntur repellere errorem opinor facete invidi perspici simul liberos, inhumanus. Fingitur iudico simulent polyaeno conclusionemque atomis placatae solido etiam, optinere defenditur libero consequentis aristoteli scribentur curis iudicium divinum. Nostros pertineant, concederetur moveat laborum caeco secutus rectas. Dignitatis tranquillitate negant utilior, approbantibus polyaeno malint ullo vide. Possum sane confidam cogitavisse. Sumitur. Diis."), React.createElement(Tab, {
      eventKey: 3,
      title: "CSS"
    }, "Chrysippe rebus institutionem utrisque dixisset manus quippiam ignorare defatigatio doctiores, essent doctus ipsam tamquam complexiones corporisque, ars umbram sentiri venandi. Ipsam. Reprehenderit tantum debent sicine assumenda comprobavit, assumenda primos fuerit atomos amicorum inducitur quaedam miserum, potitur numquid effluere haeret ipsos consuetudine, munere putet fugiendis orationis quantumcumque. Perferendis attento saluti liberatione contra, constituam efficeret quaeso accusamus quieti petat rem nisi amicum."), React.createElement(Tab, {
      eventKey: 4,
      title: "Javascript"
    }, "Laudabilis. At artes audiebamus firmam discordiae potione albam ferantur, epicureum loquerer videretur formidinum utrisque simulent postremo, praesidia variari fecerit ferantur. Hominibus doctissimos multi, ferentur, certissimam medicorum bonum iucundius depravare facile. Degendae istius perfunctio quisquis ordinem ornatum, praeda atomi degendae animus. Mens eximiae placuit terrore, sollicitant efficeret audeam tantalo, vulgo laudantium evertitur spe meminerunt timentis populo, senserit inprobitas facilius referri consiliisque.")))))), React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-heading"
    }, React.createElement("h3", {
      className: "panel-title"
    }, "Collapse")), React.createElement("div", {
      className: "panel-body container-fluid"
    }, React.createElement("div", {
      className: "row row-lg"
    }, React.createElement("div", {
      className: "col-lg-6"
    }, React.createElement("div", {
      className: "example-wrap margin-lg-0"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Example"), React.createElement("p", null, "Click the buttons below to show and hide another element via class changes:"), React.createElement("ul", null, React.createElement("li", null, React.createElement("code", null, ".collapse"), " hides content"), React.createElement("li", null, React.createElement("code", null, ".collapsing"), " is applied during transitions"), React.createElement("li", null, React.createElement("code", null, ".collapse.in"), " shows content")), React.createElement("p", null, "You can use a link with the ", React.createElement("code", null, "href"), " attribute, or a button with the ", React.createElement("code", null, "data-target"), " attribute. In both cases, the", React.createElement("code", null, "data-toggle=\"collapse\""), " is required."), React.createElement("div", {
      className: "example"
    }, React.createElement("div", {
      className: "example-buttons"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-primary",
      onClick: () => {
        console.log("CLICK_THIS", this);
        this.setState({
          openCollapse: !this.state.openCollapse
        });
      }
    }, "Collapsible")), React.createElement(Panel, {
      collapsible: true,
      expanded: this.state.openCollapse
    }, React.createElement(Well, null, "Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident."))))), React.createElement("div", {
      className: "col-lg-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Accordion Example"), React.createElement("div", {
      className: "example"
    }, React.createElement(Accordion, {
      className: " panel-group-simple"
    }, React.createElement(Panel, {
      header: "Collapsible Group Item #1",
      eventKey: "1",
      bsClass: "panel"
    }, "De moveat laudatur vestra parum doloribus labitur sentire partes, eripuit praesenti congressus ostendit alienae, voluptati ornateque accusamus clamat reperietur convicia albucius."), React.createElement(Panel, {
      header: "Collapsible Group Item #2",
      eventKey: "2",
      bsClass: "panel"
    }, "Praestabiliorem. Pellat excruciant legantur ullum leniter vacare foris voluptate loco ignavi, credo videretur multoque choro fatemur mortis animus adoptionem, bello statuat expediunt naturales."), React.createElement(Panel, {
      header: "Collapsible Group Item #3",
      eventKey: "3",
      bsClass: "panel"
    }, "Horum, antiquitate perciperet d conspectum locus obruamus animumque perspici probabis suscipere. Desiderat magnum, contenta poena desiderant concederetur menandri damna disputandum corporum.")))))))), React.createElement("div", null, React.createElement("h3", null, "Accordions"), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-lg-6"
    }, React.createElement("div", {
      className: "examle-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Default Accordion"), React.createElement("div", {
      className: "example"
    }, React.createElement(Accordion, {
      className: "panel-group-white "
    }, React.createElement(Panel, {
      header: "Collapsible Group Item #1",
      eventKey: "1",
      bsClass: "panel"
    }, "De moveat laudatur vestra parum doloribus labitur sentire partes, eripuit praesenti congressus ostendit alienae, voluptati ornateque accusamus clamat reperietur convicia albucius."), React.createElement(Panel, {
      header: "Collapsible Group Item #2",
      eventKey: "2",
      bsClass: "panel"
    }, "Praestabiliorem. Pellat excruciant legantur ullum leniter vacare foris voluptate loco ignavi, credo videretur multoque choro fatemur mortis animus adoptionem, bello statuat expediunt naturales."), React.createElement(Panel, {
      header: "Collapsible Group Item #3",
      eventKey: "3",
      bsClass: "panel"
    }, "Horum, antiquitate perciperet d conspectum locus obruamus animumque perspici probabis suscipere. Desiderat magnum, contenta poena desiderant concederetur menandri damna disputandum corporum."))))), React.createElement("div", {
      className: "col-lg-6"
    }, React.createElement("div", {
      className: "examle-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Continuous Accordion"), React.createElement("div", {
      className: "example"
    }, React.createElement(Accordion, {
      className: " panel-group-white panel-group-continuous"
    }, React.createElement(Panel, {
      header: "Collapsible Group Item #1",
      eventKey: "1",
      bsClass: "panel"
    }, "De moveat laudatur vestra parum doloribus labitur sentire partes, eripuit praesenti congressus ostendit alienae, voluptati ornateque accusamus clamat reperietur convicia albucius."), React.createElement(Panel, {
      header: "Collapsible Group Item #2",
      eventKey: "2",
      bsClass: "panel"
    }, "Praestabiliorem. Pellat excruciant legantur ullum leniter vacare foris voluptate loco ignavi, credo videretur multoque choro fatemur mortis animus adoptionem, bello statuat expediunt naturales."), React.createElement(Panel, {
      header: "Collapsible Group Item #3",
      eventKey: "3",
      bsClass: "panel"
    }, "Horum, antiquitate perciperet d conspectum locus obruamus animumque perspici probabis suscipere. Desiderat magnum, contenta poena desiderant concederetur menandri damna disputandum corporum.")))))))));
  }

}

module.exportDefault(TabsAccordionsExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"tooltip-popover.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/uikit/tooltip-popover.jsx                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class TooltipPopoverExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "TooltipPopoverExample")), React.createElement("div", {
      className: "page-content container-fluid"
    }));
  }

}

module.exportDefault(TooltipPopoverExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"typography.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/uikit/typography.jsx                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class TypographyExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("ol", {
      className: "breadcrumb"
    }, React.createElement("li", {
      className: "breadcrumb-item"
    }, React.createElement("a", {
      href: "../index.html"
    }, "Home")), React.createElement("li", {
      className: "breadcrumb-item active"
    }, "Basic UI")), React.createElement("h1", {
      className: "page-title"
    }, "Typography"), React.createElement("div", {
      className: "page-header-actions"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-sm btn-icon btn-inverse btn-round",
      "data-toggle": "tooltip",
      "data-original-title": "Edit"
    }, React.createElement("i", {
      className: "icon wb-pencil",
      "aria-hidden": "true"
    })), React.createElement("button", {
      type: "button",
      className: "btn btn-sm btn-icon btn-inverse btn-round",
      "data-toggle": "tooltip",
      "data-original-title": "Refresh"
    }, React.createElement("i", {
      className: "icon wb-refresh",
      "aria-hidden": "true"
    })), React.createElement("button", {
      type: "button",
      className: "btn btn-sm btn-icon btn-inverse btn-round",
      "data-toggle": "tooltip",
      "data-original-title": "Setting"
    }, React.createElement("i", {
      className: "icon wb-settings",
      "aria-hidden": "true"
    })))), React.createElement("div", {
      className: "page-content"
    }, React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-body container-fluid"
    }, React.createElement("div", {
      className: "row row-lg"
    }, React.createElement("div", {
      className: "col-xl-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Headings"), React.createElement("p", null, "All HTML headings, ", React.createElement("code", null, "<h1>"), " through ", React.createElement("code", null, "<h6>"), ", are available. ", React.createElement("code", null, ".h1"), " through ", React.createElement("code", null, ".h6"), " classes are also available, for when you want to match the font styling of a heading but still want your text to be displayed inline."), React.createElement("div", {
      className: "example"
    }, React.createElement("h1", null, "h1. Bootstrap heading"), React.createElement("h2", null, "h2. Bootstrap heading"), React.createElement("h3", null, "h3. Bootstrap heading"), React.createElement("h4", null, "h4. Bootstrap heading"), React.createElement("h5", null, "h5. Bootstrap heading"), React.createElement("h6", null, "h6. Bootstrap heading")))), React.createElement("div", {
      className: "col-xl-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Styled Headings"), React.createElement("p", null, "Create lighter, secondary text in any heading with a generic", React.createElement("code", null, "<small>"), " tag or the ", React.createElement("code", null, ".small"), " class."), React.createElement("div", {
      className: "example"
    }, React.createElement("h1", null, React.createElement("i", {
      className: "icon wb-book",
      "aria-hidden": "true"
    }), "Bootstrap heading", React.createElement("small", null, "Secondary text")), React.createElement("h2", null, React.createElement("i", {
      className: "icon wb-book",
      "aria-hidden": "true"
    }), "Bootstrap heading", React.createElement("small", null, "Secondary text")), React.createElement("h3", null, React.createElement("i", {
      className: "icon wb-book",
      "aria-hidden": "true"
    }), "Bootstrap heading", React.createElement("small", null, "Secondary text")), React.createElement("h4", null, React.createElement("i", {
      className: "icon wb-book",
      "aria-hidden": "true"
    }), "Bootstrap heading", React.createElement("small", null, "Secondary text")), React.createElement("h5", null, React.createElement("i", {
      className: "icon wb-book",
      "aria-hidden": "true"
    }), "Bootstrap heading", React.createElement("small", null, "Secondary text")), React.createElement("h6", null, React.createElement("i", {
      className: "icon wb-book",
      "aria-hidden": "true"
    }), "Bootstrap heading", React.createElement("small", null, "Secondary text")))))), React.createElement("div", {
      className: "row row-lg"
    }, React.createElement("div", {
      className: "col-xl-4 col-md-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Body Copy"), React.createElement("p", null, "Bootstrap's global default ", React.createElement("code", null, "font-size"), " is", React.createElement("strong", null, "14px"), ", with a ", React.createElement("code", null, "line-height"), " of", React.createElement("strong", null, "1.428"), ". This is applied to the ", React.createElement("code", null, "<body>"), "                  and all paragraphs. In addition, ", React.createElement("code", null, "<p>"), " (paragraphs) receive a bottom margin of half their computed line-height (10px by default)."))), React.createElement("div", {
      className: "col-xl-4 col-md-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Highlight"), React.createElement("p", null, "For highlighting a run of text due to its relevance in another context, use the ", React.createElement("code", null, "<mark>"), " tag. Like this:"), React.createElement("p", null, "You can use the mark tag to", React.createElement("mark", null, "highlight"), " text."))), React.createElement("div", {
      className: "col-xl-4 col-md-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Addresses"), React.createElement("p", null, "Present contact information for the nearest ancestor or the entire body of work. Preserve formatting by ending all lines with", React.createElement("code", null, "<br>"), "."), React.createElement("address", null, React.createElement("strong", null, "Twitter, Inc."), React.createElement("br", null), " 795 Folsom Ave, Suite 600", React.createElement("br", null), " San Francisco, CA 94107", React.createElement("br", null), React.createElement("abbr", {
      title: "Phone"
    }, "P:"), " (123) 456-7890"), React.createElement("address", null, React.createElement("strong", null, "Full Name"), React.createElement("br", null), React.createElement("a", {
      href: "mailto:#"
    }, "first.last@example.com")))), React.createElement("div", {
      className: "col-xl-4 col-md-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Lists - Unordered"), React.createElement("p", null, "A list of items in which the order does not explicitly matter."), React.createElement("ul", null, React.createElement("li", null, "Lorem ipsum dolor sit amet"), React.createElement("li", null, "Nulla volutpat aliquam velit", React.createElement("ul", null, React.createElement("li", null, "Phasellus iaculis neque"), React.createElement("li", null, "Purus sodales ultricies"), React.createElement("li", null, "Vestibulum laoreet porttitor sem"))), React.createElement("li", null, "Faucibus porta lacus fringilla vel"), React.createElement("li", null, "Aenean sit amet erat nunc"), React.createElement("li", null, "Eget porttitor lorem")))), React.createElement("div", {
      className: "col-xl-4 col-md-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Lists - Ordered"), React.createElement("p", null, "A list of items in which the order does explicitly matter."), React.createElement("ol", null, React.createElement("li", null, "Lorem ipsum dolor sit amet"), React.createElement("li", null, "Nulla volutpat aliquam velit", React.createElement("ol", null, React.createElement("li", null, "Phasellus iaculis neque"), React.createElement("li", null, "Purus sodales ultricies"), React.createElement("li", null, "Vestibulum laoreet porttitor sem"))), React.createElement("li", null, "Faucibus porta lacus fringilla vel"), React.createElement("li", null, "Aenean sit amet erat nunc"), React.createElement("li", null, "Eget porttitor lorem")))), React.createElement("div", {
      className: "col-xl-4 col-md-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Lists - Unstyled"), React.createElement("p", null, "Remove the default ", React.createElement("code", null, "list-style"), " and left margin on list items (immediate children only).", React.createElement("strong", null, "This only applies to immediate children list items"), ", meaning you will need to add the class for any nested lists as well."), React.createElement("ul", {
      className: "list-unstyled"
    }, React.createElement("li", null, "Lorem ipsum dolor sit amet"), React.createElement("li", null, "Nulla volutpat aliquam velit", React.createElement("ul", null, React.createElement("li", null, "Phasellus iaculis neque"), React.createElement("li", null, "Purus sodales ultricies"), React.createElement("li", null, "Vestibulum laoreet porttitor sem"))), React.createElement("li", null, "Faucibus porta lacus fringilla vel"), React.createElement("li", null, "Aenean sit amet erat nunc"), React.createElement("li", null, "Eget porttitor lorem")))), React.createElement("div", {
      className: "col-xl-4 col-md-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Lists - Icons"), React.createElement("p", null, "A list of terms with icons."), React.createElement("ul", {
      className: "list-icons"
    }, React.createElement("li", null, React.createElement("i", {
      className: "wb-check",
      "aria-hidden": "true"
    }), "Lorem ipsum dolor sit amet"), React.createElement("li", null, React.createElement("i", {
      className: "wb-check",
      "aria-hidden": "true"
    }), "Nulla volutpat aliquam velit", React.createElement("ul", null, React.createElement("li", null, "Phasellus iaculis neque"), React.createElement("li", null, "Purus sodales ultricies"))), React.createElement("li", null, React.createElement("i", {
      className: "wb-check",
      "aria-hidden": "true"
    }), "Faucibus porta lacus fringilla vel")))), React.createElement("div", {
      className: "col-xl-4 col-md-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Collapsible Submenu"), React.createElement("p", null, "A list of terms with icons."), React.createElement("ul", {
      className: "list-icons"
    }, React.createElement("li", null, React.createElement("i", {
      className: "wb-chevron-right-mini",
      "aria-hidden": "true"
    }), "Lorem ipsum dolor sit amet"), React.createElement("li", null, React.createElement("a", {
      "data-toggle": "collapse",
      href: "#exampleSubmenu",
      "aria-controls": "exampleSubmenu",
      "aria-expanded": "true"
    }, React.createElement("i", {
      className: "wb-chevron-right-mini",
      "aria-hidden": "true"
    }), "Nulla volutpat aliquam velit"), React.createElement("ul", {
      className: "collapse show",
      id: "exampleSubmenu"
    }, React.createElement("li", null, "Phasellus iaculis neque"), React.createElement("li", null, "Purus sodales ultricies"))), React.createElement("li", null, React.createElement("i", {
      className: "wb-chevron-right-mini",
      "aria-hidden": "true"
    }), "Faucibus porta lacus fringilla vel")))), React.createElement("div", {
      className: "col-xl-4 col-md-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Lists - Inline"), React.createElement("p", null, "Place all list items on a single line with ", React.createElement("code", null, "display: inline-block;"), "                  and some light padding."), React.createElement("ul", {
      className: "list-inline"
    }, React.createElement("li", {
      className: "list-inline-item"
    }, "Lorem ipsum"), React.createElement("li", {
      className: "list-inline-item"
    }, "Phasellus iaculis"), React.createElement("li", {
      className: "list-inline-item"
    }, "Nulla volutpat")))), React.createElement("div", {
      className: "col-xl-4 col-md-6"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Description"), React.createElement("p", null, "A list of terms with their associated descriptions."), React.createElement("dl", null, React.createElement("dt", null, "Description lists"), React.createElement("dd", null, "A description list is perfect for defining terms."), React.createElement("dt", null, "Euismod"), React.createElement("dd", null, "Vestibulum id ligula porta felis euismod semper eget lacinia odio."), React.createElement("dd", null, "Donec id elit non mi porta gravida at eget metus."), React.createElement("dt", null, "Malesuada porta"), React.createElement("dd", null, "Etiam porta sem malesuada magna mollis euismod.")))), React.createElement("div", {
      className: "col-xl-8"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Horizontal Description"), React.createElement("p", null, "Make terms and descriptions in ", React.createElement("code", null, "<dl>"), " line up side-by-side. Starts off stacked like default ", React.createElement("code", null, "<dl>"), "s, but when the navbar expands, so do these."), React.createElement("dl", {
      className: "dl-horizontal row"
    }, React.createElement("dt", {
      className: "col-sm-3"
    }, "Description lists"), React.createElement("dd", {
      className: "col-sm-9"
    }, "A description list is perfect for defining terms."), React.createElement("dt", {
      className: "col-sm-3"
    }, "Euismod"), React.createElement("dd", {
      className: "col-sm-9"
    }, "Vestibulum id ligula porta felis euismod semper eget lacinia odio sem nec elit."), React.createElement("dd", {
      className: "col-sm-9 offset-sm-3"
    }, "Donec id elit non mi porta gravida."), React.createElement("dt", {
      className: "col-sm-3"
    }, "Malesuada porta"), React.createElement("dd", {
      className: "col-sm-9"
    }, "Etiam porta sem malesuada magna mollis euismod."), React.createElement("dt", {
      className: "col-sm-3"
    }, "Qui eiusmod magna."), React.createElement("dd", {
      className: "col-sm-9"
    }, "Lorem ipsum In enim nostrud ut in mollit sint cillum laborum ea quis qui."))))), React.createElement("div", {
      className: "row row-lg"
    }, React.createElement("div", {
      className: "col-xl-12"
    }, React.createElement("div", {
      className: "example-wrap"
    }, React.createElement("h4", {
      className: "example-title"
    }, "Drop Cap"), React.createElement("p", null, "Use the class ", React.createElement("code", null, ".drop-cap"), " let the first letter drop down of content texts."), React.createElement("p", null, React.createElement("span", {
      className: "drop-cap"
    }, "L"), "ed cursus ante dapibus diam. Sed nisi. Nulla quis sem at nibh elementum imperdiet. Duis sagittis ipsum. Praesent mauris. Fusce nec tellus sed augue semper porta. Mauris massa. Vestibulum lacinia arcu eget nulla. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Curabitur sodales ligula in libero. Vestibulum lacinia arcu eget nulla. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Curabitur sodales ligula in libero. Sed dignissim lacinia nunc.sed cursus ante dapibus diam. Sed nisi. Nulla quis sem at nibh elementum imperdiet.Sed dignissim lacinia nunc.sed cursus ante dapibus diam. Sed nisi. Nulla quis sem at nibh elementum imperdiet.Vestibulum lacinia arcu eget nulla. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Curabitur sodales ligula in libero. Sed dignissim lacinia nunc.sed cursus ante dapibus diam. Sed nisi. Nulla quis sem at nibh elementum imperdiet."), React.createElement("p", null, React.createElement("span", {
      className: "drop-cap drop-cap-reversed"
    }, "L"), "ed cursus ante dapibus diam. Sed nisi. Nulla quis sem at nibh elementum imperdiet. Duis sagittis ipsum. Praesent mauris. Fusce nec tellus sed augue semper porta. Mauris massa. Vestibulum lacinia arcu eget nulla. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Curabitur sodales ligula in libero. Sed dignissim lacinia nunc.sed cursus ante dapibus diam. Sed nisi. Nulla quis sem at nibh elementum imperdiet. Duis sagittis ipsum. Praesent mauris. Fusce nec tellus sed augue semper porta. Mauris massa. Vestibulum lacinia arcu eget nulla. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Curabitur sodales ligula in libero. Duis sagittis ipsum. Praesent mauris. Fusce nec tellus sed augue semper porta. Mauris massa.Vestibulum lacinia arcu eget nulla. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Curabitur sodales ligula in libero. Sed dignissim lacinia nunc.sed cursus ante dapibus diam. Sed nisi. Nulla quis sem at nibh elementum imperdiet."))))))));
  }

}

module.exportDefault(TypographyExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"utilities.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/uikit/utilities.jsx                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class UtilitiesExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "UtilitiesExample")), React.createElement("div", {
      className: "page-content container-fluid"
    }));
  }

}

module.exportDefault(UtilitiesExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"widgets":{"blog.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/widgets/blog.jsx                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class BlogExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "BlogExample")), React.createElement("div", {
      className: "page-content container-fluid"
    }));
  }

}

module.exportDefault(BlogExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"chart.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/widgets/chart.jsx                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class ChartExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "ChartExample")), React.createElement("div", {
      className: "page-content container-fluid"
    }));
  }

}

module.exportDefault(ChartExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"data.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/widgets/data.jsx                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class DataExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "DataExample")), React.createElement("div", {
      className: "page-content container-fluid"
    }));
  }

}

module.exportDefault(DataExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"social.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/widgets/social.jsx                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class SocialExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "Social Widgets"), React.createElement("ol", {
      className: "breadcrumb"
    }, React.createElement("li", null, React.createElement("a", {
      href: "../index.html"
    }, "Home")), React.createElement("li", null, React.createElement("a", {
      href: "javascript:void(0)"
    }, "Widgets")), React.createElement("li", {
      className: "active"
    }, "Social")), React.createElement("div", {
      className: "page-header-actions"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-sm btn-outline btn-default btn-round"
    }, React.createElement("span", {
      className: "text hidden-xs"
    }, "Settings"), React.createElement("i", {
      className: "icon wb-chevron-right",
      "aria-hidden": "true"
    })))), React.createElement("div", {
      className: "page-content container-fluid"
    }, React.createElement("div", {
      className: "row",
      "data-plugin": "matchHeight",
      "data-by-row": "true"
    }, React.createElement("div", {
      className: "col-lg-4 col-md-6",
      style: {
        height: 470
      }
    }, React.createElement("div", {
      className: "widget widget-shadow text-center"
    }, React.createElement("div", {
      className: "widget-header cover overlay",
      style: {
        height: 'calc(100% - 100px)'
      }
    }, React.createElement("img", {
      className: "cover-image",
      src: "http://getbootstrapadmin.com/remark/global/photos/view-3-960x640.jpg",
      alt: "...",
      style: {
        height: '100%'
      }
    }), React.createElement("div", {
      className: "overlay-panel vertical-align"
    }, React.createElement("div", {
      className: "vertical-align-middle"
    }, React.createElement("a", {
      className: "avatar avatar-100 bg-white margin-bottom-10 img-bordered margin-xs-0",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/1.jpg",
      alt: true
    })), React.createElement("div", {
      className: "font-size-20"
    }, "Herman Beck"), React.createElement("div", {
      className: "font-size-14 grey-400"
    }, "Designer")))), React.createElement("div", {
      className: "widget-footer padding-horizontal-30 padding-vertical-20 height-100"
    }, React.createElement("div", {
      className: "row no-space"
    }, React.createElement("div", {
      className: "col-xs-4"
    }, React.createElement("div", {
      className: "counter"
    }, React.createElement("div", {
      className: "counter-label"
    }, "Followers"), React.createElement("span", {
      className: "counter-number"
    }, "11.2K"))), React.createElement("div", {
      className: "col-xs-4"
    }, React.createElement("div", {
      className: "counter"
    }, React.createElement("div", {
      className: "counter-label"
    }, "Following"), React.createElement("span", {
      className: "counter-number"
    }, "683"))), React.createElement("div", {
      className: "col-xs-4"
    }, React.createElement("div", {
      className: "counter"
    }, React.createElement("div", {
      className: "counter-label"
    }, "Tweets"), React.createElement("span", {
      className: "counter-number"
    }, "326"))))))), React.createElement("div", {
      className: "col-lg-4 col-md-6",
      style: {
        height: 470
      }
    }, React.createElement("div", {
      className: "widget widget-shadow"
    }, React.createElement("div", {
      className: "widget-header cover overlay",
      style: {
        height: 'calc(100% - 100px)'
      }
    }, React.createElement("img", {
      className: "cover-image",
      src: "http://getbootstrapadmin.com/remark/global/photos/view-2-960x640.jpg",
      alt: "...",
      style: {
        height: '100%'
      }
    }), React.createElement("div", {
      className: "overlay-panel overlay-background overlay-top"
    }, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-xs-6"
    }, React.createElement("div", {
      className: "font-size-20 white"
    }, "Mary Adams"), React.createElement("div", {
      className: "font-size-14 grey-400"
    }, "Designer")), React.createElement("div", {
      className: "col-xs-6 text-right"
    }, React.createElement("div", {
      className: "avatar"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/2.jpg",
      alt: true
    })))))), React.createElement("div", {
      className: "widget-footer text-center bg-white padding-horizontal-30 padding-vertical-20 height-100"
    }, React.createElement("div", {
      className: "row no-space"
    }, React.createElement("div", {
      className: "col-xs-4"
    }, React.createElement("div", {
      className: "counter"
    }, React.createElement("span", {
      className: "counter-number"
    }, "6809"), React.createElement("div", {
      className: "counter-label"
    }, "Followers"))), React.createElement("div", {
      className: "col-xs-4"
    }, React.createElement("div", {
      className: "counter"
    }, React.createElement("span", {
      className: "counter-number"
    }, "569"), React.createElement("div", {
      className: "counter-label"
    }, "Following"))), React.createElement("div", {
      className: "col-xs-4"
    }, React.createElement("div", {
      className: "counter"
    }, React.createElement("span", {
      className: "counter-number"
    }, "357"), React.createElement("div", {
      className: "counter-label"
    }, "Tweets"))))))), React.createElement("div", {
      className: "col-lg-4 col-md-6",
      style: {
        height: 470
      }
    }, React.createElement("div", {
      className: "widget widget-shadow"
    }, React.createElement("div", {
      className: "widget-header cover overlay"
    }, React.createElement("div", {
      className: "cover-background height-150",
      style: {
        backgroundImage: 'url("http://getbootstrapadmin.com/remark/global/photos/focus-4-960x480.jpg")'
      }
    })), React.createElement("div", {
      className: "widget-body padding-horizontal-30 padding-vertical-20",
      style: {
        height: 'calc(100% - 250px)'
      }
    }, React.createElement("div", {
      style: {
        position: 'relative',
        paddingLeft: 110
      }
    }, React.createElement("a", {
      className: "avatar avatar-100 bg-white img-bordered",
      href: "javascript:void(0)",
      style: {
        position: 'absolute',
        top: '-50px',
        left: 0
      }
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/2.jpg",
      alt: true
    })), React.createElement("div", {
      className: "margin-bottom-20"
    }, React.createElement("div", {
      className: "font-size-20"
    }, "Caleb Richards"), React.createElement("div", {
      className: "font-size-14"
    }, "Designer"))), React.createElement("p", null, "Reiciendis iactant eligendi. Vestrae referenda mundus asperum physico miserum viderer potiendi, feci dissentiunt ardore, audaces.")), React.createElement("div", {
      className: "widget-footer text-center bg-blue-grey-400 padding-30 height-100"
    }, React.createElement("div", {
      className: "row no-space"
    }, React.createElement("div", {
      className: "col-xs-6"
    }, React.createElement("div", {
      className: "counter counter-inverse"
    }, React.createElement("span", {
      className: "counter-number"
    }, "7896"), React.createElement("div", {
      className: "counter-label inline-block margin-left-5"
    }, "Followers"))), React.createElement("div", {
      className: "col-xs-6"
    }, React.createElement("div", {
      className: "counter counter-inverse"
    }, React.createElement("span", {
      className: "counter-number"
    }, "621"), React.createElement("div", {
      className: "counter-label inline-block margin-left-5"
    }, "Following"))))))), React.createElement("div", {
      className: "col-lg-4 col-md-6",
      style: {
        height: 269
      }
    }, React.createElement("div", {
      className: "widget widget-shadow"
    }, React.createElement("div", {
      className: "widget-content padding-20 bg-green-500 white height-full"
    }, React.createElement("a", {
      className: "avatar pull-left margin-right-20",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/15.jpg",
      alt: true
    })), React.createElement("div", {
      style: {
        overflow: 'hidden'
      }
    }, React.createElement("small", {
      className: "pull-right grey-200"
    }, "Yeserday, 13:48"), React.createElement("div", {
      className: "font-size-18"
    }, "Robin Ahrens"), React.createElement("div", {
      className: "grey-200 font-size-14 margin-bottom-10"
    }, "Web Designer"), React.createElement("blockquote", {
      className: "cover-quote font-size-16 white"
    }, "Oportet magnopere optio ignavia tribuat derigatur, idem, vituperatum."))))), React.createElement("div", {
      className: "col-lg-4 col-md-6",
      style: {
        height: 269
      }
    }, React.createElement("div", {
      className: "widget widget-shadow"
    }, React.createElement("div", {
      className: "widget-content white bg-twitter padding-20 height-full"
    }, React.createElement("h3", {
      className: "white margin-top-0"
    }, "Astris fere mediocris evertunt deterruisset impetu, fabulae praetorem."), React.createElement("small", null, "21 May, 2016 via mobile"), React.createElement("div", {
      className: "margin-top-30"
    }, React.createElement("i", {
      className: "icon bd-twitter font-size-26"
    }), React.createElement("ul", {
      className: "list-inline pull-right margin-top-15"
    }, React.createElement("li", null, React.createElement("i", {
      className: "icon wb-heart"
    }), " 598"), React.createElement("li", null, React.createElement("i", {
      className: "icon wb-thumb-up"
    }), " 96")))))), React.createElement("div", {
      className: "col-lg-4 col-md-6",
      style: {
        height: 269
      }
    }, React.createElement("div", {
      className: "widget widget-shadow"
    }, React.createElement("div", {
      className: "widget-content white bg-facebook padding-20 height-full"
    }, React.createElement("h3", {
      className: "white margin-top-0"
    }, "Pertinerent iucunditatem animal dixit ipsos, probabo proprius universas."), React.createElement("small", null, "21 May, 2016 via mobile"), React.createElement("div", {
      className: "margin-top-30"
    }, React.createElement("i", {
      className: "icon bd-facebook font-size-26"
    }), React.createElement("ul", {
      className: "list-inline pull-right margin-top-15"
    }, React.createElement("li", null, React.createElement("i", {
      className: "icon wb-heart"
    }), " 1256"), React.createElement("li", null, React.createElement("i", {
      className: "icon wb-star"
    }), " 379")))))), React.createElement("div", {
      className: "col-lg-3 col-md-6",
      style: {
        height: 190
      }
    }, React.createElement("div", {
      className: "widget widget-shadow"
    }, React.createElement("div", {
      className: "widget-header bg-green-600 padding-30 white"
    }, React.createElement("a", {
      className: "avatar avatar-100 img-bordered bg-white pull-left margin-right-20",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/11.jpg",
      alt: true
    })), React.createElement("div", {
      className: "vertical-align height-100 text-truncate"
    }, React.createElement("div", {
      className: "vertical-align-middle"
    }, React.createElement("div", {
      className: "font-size-20 margin-bottom-5 text-truncate"
    }, "Gwendolyn Wheeler"), React.createElement("div", {
      className: "font-size-14 text-truncate"
    }, "Adminnistrator")))))), React.createElement("div", {
      className: "col-lg-3 col-md-6",
      style: {
        height: 190
      }
    }, React.createElement("div", {
      className: "widget widget-shadow"
    }, React.createElement("div", {
      className: "widget-header bg-blue-600 padding-30 white text-center"
    }, React.createElement("a", {
      className: "avatar avatar-100 img-bordered bg-white",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/12.jpg",
      alt: true
    }))))), React.createElement("div", {
      className: "col-lg-3 col-md-6",
      style: {
        height: 190
      }
    }, React.createElement("div", {
      className: "widget widget-shadow"
    }, React.createElement("div", {
      className: "widget-header padding-30 bg-white"
    }, React.createElement("a", {
      className: "avatar avatar-100 pull-left margin-right-20",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/13.jpg",
      alt: true
    })), React.createElement("div", {
      className: "vertical-align text-right height-100 text-truncate"
    }, React.createElement("div", {
      className: "vertical-align-middle"
    }, React.createElement("div", {
      className: "font-size-20 margin-bottom-5 blue-600 text-truncate"
    }, "Sarah Graves"), React.createElement("div", {
      className: "font-size-14 text-truncate"
    }, "Web Designer")))))), React.createElement("div", {
      className: "col-lg-3 col-md-6",
      style: {
        height: 190
      }
    }, React.createElement("div", {
      className: "widget widget-shadow"
    }, React.createElement("div", {
      className: "widget-header padding-30 bg-blue-600 white"
    }, React.createElement("a", {
      className: "avatar avatar-100 img-bordered bg-white pull-right",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/14.jpg",
      alt: true
    })), React.createElement("div", {
      className: "vertical-align height-100 text-truncate"
    }, React.createElement("div", {
      className: "vertical-align-middle"
    }, React.createElement("div", {
      className: "font-size-20 margin-bottom-5 text-truncate"
    }, "Andrew Hoffman"), React.createElement("div", {
      className: "font-size-14 text-truncate"
    }, "Web Designer"))))))), React.createElement("div", {
      className: "row",
      "data-plugin": "masonry",
      style: {
        position: 'relative',
        height: 1342
      }
    }, React.createElement("div", {
      className: "col-md-6 col-xs-12 masonry-item",
      style: {
        position: 'absolute',
        left: 0,
        top: 0
      }
    }, React.createElement("div", {
      className: "widget widget-shadow"
    }, React.createElement("div", {
      className: "widget-header bg-blue-600 text-center padding-30 padding-bottom-15"
    }, React.createElement("div", {
      className: "font-size-20 white"
    }, "June Lane"), React.createElement("div", {
      className: "grey-300 font-size-14 margin-bottom-20"
    }, "Web Designer"), React.createElement("a", {
      className: "avatar avatar-100 img-bordered margin-bottom-10 bg-white",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/4.jpg",
      alt: true
    }))), React.createElement("div", {
      className: "widget-footer padding-horizontal-30 padding-vertical-20 text-center"
    }, React.createElement("div", {
      className: "row no-space"
    }, React.createElement("div", {
      className: "col-xs-4"
    }, React.createElement("div", {
      className: "counter"
    }, React.createElement("span", {
      className: "counter-number blue-600"
    }, "102"), React.createElement("div", {
      className: "counter-label"
    }, "Projects"))), React.createElement("div", {
      className: "col-xs-4"
    }, React.createElement("div", {
      className: "counter"
    }, React.createElement("span", {
      className: "counter-number blue-600"
    }, "83"), React.createElement("div", {
      className: "counter-label"
    }, "Clients"))), React.createElement("div", {
      className: "col-xs-4"
    }, React.createElement("div", {
      className: "counter"
    }, React.createElement("span", {
      className: "counter-number blue-600"
    }, "13.5K"), React.createElement("div", {
      className: "counter-label"
    }, "Followers"))))))), React.createElement("div", {
      className: "col-md-6 col-xs-12 masonry-item",
      style: {
        position: 'absolute',
        left: 695,
        top: 0
      }
    }, React.createElement("div", {
      className: "widget"
    }, React.createElement("div", {
      className: "widget-header white bg-cyan-600 padding-30 clearfix"
    }, React.createElement("a", {
      className: "avatar avatar-100 pull-left margin-right-20",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/5.jpg",
      alt: true
    })), React.createElement("div", {
      className: "pull-left"
    }, React.createElement("div", {
      className: "font-size-20 margin-bottom-15"
    }, "Robin Ahrens"), React.createElement("p", {
      className: "margin-bottom-5 text-nowrap"
    }, React.createElement("i", {
      className: "icon wb-map margin-right-10",
      "aria-hidden": "true"
    }), React.createElement("span", {
      className: "text-break"
    }, "Mountain View,CA 94043, United States")), React.createElement("p", {
      className: "margin-bottom-5 text-nowrap"
    }, React.createElement("i", {
      className: "icon wb-envelope margin-right-10",
      "aria-hidden": "true"
    }), React.createElement("span", {
      className: "text-break"
    }, "amazingSurge@yahoo.com")), React.createElement("p", {
      className: "margin-bottom-5 text-nowrap"
    }, React.createElement("i", {
      className: "icon bd-twitter margin-right-10",
      "aria-hidden": "true"
    }), React.createElement("span", {
      className: "text-break"
    }, "Kolage")))), React.createElement("div", {
      className: "widget-content"
    }, React.createElement("div", {
      className: "row no-space padding-vertical-20 padding-horizontal-30 text-center"
    }, React.createElement("div", {
      className: "col-xs-4"
    }, React.createElement("div", {
      className: "counter"
    }, React.createElement("span", {
      className: "counter-number cyan-600"
    }, "102"), React.createElement("div", {
      className: "counter-label"
    }, "Projects"))), React.createElement("div", {
      className: "col-xs-4"
    }, React.createElement("div", {
      className: "counter"
    }, React.createElement("span", {
      className: "counter-number cyan-600"
    }, "125"), React.createElement("div", {
      className: "counter-label"
    }, "Clients"))), React.createElement("div", {
      className: "col-xs-4"
    }, React.createElement("div", {
      className: "counter"
    }, React.createElement("span", {
      className: "counter-number cyan-600"
    }, "10.8K"), React.createElement("div", {
      className: "counter-label"
    }, "Followers"))))))), React.createElement("div", {
      className: "col-md-6 col-xs-12 masonry-item",
      style: {
        position: 'absolute',
        left: 695,
        top: 319
      }
    }, React.createElement("div", {
      className: "widget widget-shadow avatar-group"
    }, React.createElement("div", {
      className: "widget-header text-center padding-30"
    }, React.createElement("ul", {
      className: "list-unstyled list-inline"
    }, React.createElement("li", null, React.createElement("a", {
      className: "avatar avatar-lg margin-5",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/7.jpg",
      alt: true
    }))), React.createElement("li", null, React.createElement("a", {
      className: "avatar avatar-lg margin-5",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/8.jpg",
      alt: true
    }))), React.createElement("li", null, React.createElement("a", {
      className: "avatar avatar-lg margin-5",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/9.jpg",
      alt: true
    })))), React.createElement("div", {
      className: "font-size-18 blue-600"
    }, "Amazing Surge"), React.createElement("div", {
      className: "font-size-14"
    }, "Design")), React.createElement("div", {
      className: "widget-footer bg-blue-grey-400 white text-center padding-vertical-20 padding-horizontal-30"
    }, React.createElement("div", {
      className: "row no-space "
    }, React.createElement("div", {
      className: "col-xs-4"
    }, React.createElement("div", {
      className: "counter counter-inverse"
    }, React.createElement("span", {
      className: "counter-icon"
    }, React.createElement("i", {
      className: "icon wb-eye margin-right-15",
      "aria-hidden": "true"
    })), React.createElement("span", {
      className: "counter-number"
    }, "102"))), React.createElement("div", {
      className: "col-xs-4"
    }, React.createElement("div", {
      className: "counter counter-inverse"
    }, React.createElement("span", {
      className: "counter-icon"
    }, React.createElement("i", {
      className: "icon wb-heart margin-right-15",
      "aria-hidden": "true"
    })), React.createElement("span", {
      className: "counter-number"
    }, "8"))), React.createElement("div", {
      className: "col-xs-4"
    }, React.createElement("div", {
      className: "counter counter-inverse"
    }, React.createElement("span", {
      className: "counter-icon"
    }, React.createElement("i", {
      className: "icon wb-user margin-right-15",
      "aria-hidden": "true"
    })), React.createElement("span", {
      className: "counter-number"
    }, "12.6K"))))))), React.createElement("div", {
      className: "col-md-6 col-xs-12 masonry-item",
      style: {
        position: 'absolute',
        left: 0,
        top: 351
      }
    }, React.createElement("div", {
      className: "widget widget-shadow background-bottom"
    }, React.createElement("div", {
      className: "widget-header cover overlay"
    }, React.createElement("div", {
      className: "cover-background height-250",
      style: {
        backgroundImage: 'url(http://getbootstrapadmin.com/remark/global/photos/object-5-960x480.jpg)'
      }
    }), React.createElement("div", {
      className: "overlay-panel overlay-background overlay-bottom"
    }, React.createElement("div", {
      className: "row no-space"
    }, React.createElement("div", {
      className: "col-xs-6"
    }, React.createElement("a", {
      className: "avatar avatar-lg bg-white pull-left margin-right-20 img-bordered",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/10.jpg",
      alt: true
    })), React.createElement("div", null, React.createElement("div", {
      className: "font-size-20"
    }, "William Dalebout"), React.createElement("div", {
      className: "font-size-14"
    }, "CEO"))), React.createElement("div", {
      className: "col-xs-6"
    }, React.createElement("div", {
      className: "row no-space text-center"
    }, React.createElement("div", {
      className: "col-xs-4"
    }, React.createElement("div", {
      className: "counter counter-inverse"
    }, React.createElement("div", {
      className: "counter-label"
    }, "Followers"), React.createElement("span", {
      className: "counter-number"
    }, "6584"))), React.createElement("div", {
      className: "col-xs-4"
    }, React.createElement("div", {
      className: "counter counter-inverse"
    }, React.createElement("div", {
      className: "counter-label"
    }, "Following"), React.createElement("span", {
      className: "counter-number"
    }, "2046"))), React.createElement("div", {
      className: "col-xs-4"
    }, React.createElement("div", {
      className: "counter counter-inverse"
    }, React.createElement("div", {
      className: "counter-label"
    }, "Tweets"), React.createElement("span", {
      className: "counter-number"
    }, "325")))))))))), React.createElement("div", {
      className: "col-md-6 col-xs-12 masonry-item",
      style: {
        position: 'absolute',
        left: 695,
        top: 601
      }
    }, React.createElement("div", {
      className: "widget widget-shadow text-center"
    }, React.createElement("div", {
      className: "widget-header cover overlay"
    }, React.createElement("div", {
      className: "cover-background",
      style: {
        backgroundImage: 'url(http://getbootstrapadmin.com/remark/global/photos/view-5-960x640.jpg)'
      }
    }, React.createElement("div", {
      className: "vertical-align padding-horizontal-0"
    }, React.createElement("div", {
      className: "vertical-align-bottom width-full"
    }, React.createElement("a", {
      className: "avatar avatar-100 img-bordered bg-white margin-top-20",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/17.jpg",
      alt: true
    })), React.createElement("h3", {
      className: "white"
    }, "Herman Beck"), React.createElement("p", {
      className: "white"
    }, React.createElement("i", {
      className: "icon wb-map margin-right-10",
      "aria-hidden": "true"
    }), "United States"), React.createElement("button", {
      type: "button",
      className: "btn btn-primary margin-bottom-20"
    }, "Follow"), React.createElement("div", {
      className: "row no-space overlay-background"
    }, React.createElement("div", {
      className: "col-xs-4"
    }, React.createElement("div", {
      className: "counter counter-inverse"
    }, React.createElement("span", {
      className: "counter-number"
    }, "13.2K"), React.createElement("div", {
      className: "counter-label"
    }, "Followers"))), React.createElement("div", {
      className: "col-xs-4"
    }, React.createElement("div", {
      className: "counter counter-inverse"
    }, React.createElement("span", {
      className: "counter-number"
    }, "246"), React.createElement("div", {
      className: "counter-label"
    }, "Following"))), React.createElement("div", {
      className: "col-xs-4"
    }, React.createElement("div", {
      className: "counter counter-inverse"
    }, React.createElement("span", {
      className: "counter-number"
    }, "32"), React.createElement("div", {
      className: "counter-label"
    }, "Tweets")))))))))), React.createElement("div", {
      className: "col-md-6 col-xs-12 masonry-item",
      style: {
        position: 'absolute',
        left: 0,
        top: 631
      }
    }, React.createElement("div", {
      className: "widget widget-shadow"
    }, React.createElement("div", {
      className: "widget-header bg-blue-600 white padding-15 clearfix"
    }, React.createElement("a", {
      className: "avatar avatar-lg pull-left margin-right-20",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/16.jpg",
      alt: true
    })), React.createElement("div", {
      className: "font-size-18"
    }, "Robin Ahrens"), React.createElement("div", {
      className: "grey-300 font-size-14"
    }, "Web Designer")), React.createElement("div", {
      className: "widget-content"
    }, React.createElement("ul", {
      className: "list-group list-group-bordered"
    }, React.createElement("li", {
      className: "list-group-item"
    }, React.createElement("span", {
      className: "badge badge-success"
    }, "6"), React.createElement("i", {
      className: "icon wb-inbox",
      "aria-hidden": "true",
      draggable: "true"
    }), "                  Cras justo odio"), React.createElement("li", {
      className: "list-group-item"
    }, React.createElement("span", {
      className: "badge badge-info"
    }, "2"), React.createElement("i", {
      className: "icon wb-user",
      "aria-hidden": "true",
      draggable: "true"
    }), "                  Dapibus ac facilisis in"), React.createElement("li", {
      className: "list-group-item"
    }, React.createElement("i", {
      className: "icon wb-bell",
      "aria-hidden": "true",
      draggable: "true"
    }), "                  Morbi leo risus"), React.createElement("li", {
      className: "list-group-item"
    }, React.createElement("span", {
      className: "badge badge-info"
    }, "10"), React.createElement("i", {
      className: "icon wb-info-circle",
      "aria-hidden": "true",
      draggable: "true"
    }), "                  Porta ac consectetur ac"))))), React.createElement("div", {
      className: "col-md-6 col-xs-12 masonry-item",
      style: {
        position: 'absolute',
        left: 0,
        top: 914
      }
    }, React.createElement("div", {
      className: "widget widget-shadow"
    }, React.createElement("div", {
      className: "widget-header cover"
    }, React.createElement("div", {
      className: "cover-background padding-30",
      style: {
        backgroundImage: 'url("http://getbootstrapadmin.com/remark/global/photos/focus-1-960x640.jpg")'
      }
    }, React.createElement("blockquote", {
      className: "cover-quote white"
    }, "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer nec odio. "))), React.createElement("div", {
      className: "widget-body"
    }, React.createElement("div", {
      className: "avatar avatar-sm pull-left margin-right-10 margin-top-5"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/3.jpg",
      alt: true
    })), React.createElement("div", {
      className: "info margin-bottom-25"
    }, React.createElement("div", {
      className: "blue-grey-700 text-uppercase"
    }, "John Doe"), React.createElement("div", {
      className: "blue-grey-400 text-capitalize"
    }, "Design")), React.createElement("p", {
      className: "margin-bottom-40"
    }, "Rudem falso dicitis, curis depravatum affecti stoicos rerum."), React.createElement("div", {
      className: "text-right"
    }, React.createElement("a", {
      className: "text-action",
      href: "javascript:void(0)"
    }, React.createElement("i", {
      className: "icon wb-heart"
    }), React.createElement("span", null, "23")))))), React.createElement("div", {
      className: "col-md-6 col-xs-12 masonry-item",
      style: {
        position: 'absolute',
        left: 695,
        top: 954
      }
    }, React.createElement("div", {
      className: "widget widget-shadow"
    }, React.createElement("div", {
      className: "widget-header height-150 bg-blue-600 vertical-align padding-vertical-20 padding-horizontal-25"
    }, React.createElement("blockquote", {
      className: "cover-quote vertical-align-middle white font-size-20"
    }, "Corporis dicere disputatione laborat quamque. ")), React.createElement("div", {
      className: "widget-body padding-top-0",
      style: {
        marginTop: '-30px'
      }
    }, React.createElement("div", {
      className: "avatar avatar-lg img-bordered bg-white margin-bottom-10"
    }, React.createElement("img", {
      src: "http://getbootstrapadmin.com/remark/global/portraits/13.jpg",
      alt: true
    })), React.createElement("div", {
      className: "info margin-bottom-25"
    }, React.createElement("div", {
      className: "blue-grey-700"
    }, "Sarah Graves"), React.createElement("div", {
      className: "blue-grey-400"
    }, "Developer")), React.createElement("p", {
      className: "margin-bottom-35 blue-grey-500"
    }, "Menandri nixam arguerent quanti fecerit laudem vidisse elegantis."), React.createElement("div", {
      className: "text-right"
    }, React.createElement("a", {
      className: "text-action",
      href: "javascript:void(0)"
    }, React.createElement("i", {
      className: "icon wb-heart"
    }), React.createElement("span", null, "16")))))))));
  }

}

module.exportDefault(SocialExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"statistics.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/widgets/statistics.jsx                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class StatisticsExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "Statistics Widgets"), React.createElement("ol", {
      className: "breadcrumb"
    }, React.createElement("li", null, React.createElement("a", {
      href: "../index.html"
    }, "Home")), React.createElement("li", null, React.createElement("a", {
      href: "javascript:void(0)"
    }, "Widgets")), React.createElement("li", {
      className: "active"
    }, "Statistics")), React.createElement("div", {
      className: "page-header-actions"
    }, React.createElement("button", {
      type: "button",
      className: "btn btn-sm btn-outline btn-default btn-round"
    }, React.createElement("span", {
      className: "text hidden-xs"
    }, "Settings"), React.createElement("i", {
      className: "icon wb-chevron-right",
      "aria-hidden": "true"
    })))), React.createElement("div", {
      className: "page-content container-fluid"
    }, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-lg-6 col-md-12"
    }, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "widget"
    }, React.createElement("div", {
      className: "widget-content padding-25 bg-white"
    }, React.createElement("div", {
      className: "counter counter-lg"
    }, React.createElement("span", {
      className: "counter-number"
    }, "60"), React.createElement("div", {
      className: "counter-label text-uppercase"
    }, "counters"))))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "widget"
    }, React.createElement("div", {
      className: "widget-content padding-25 bg-white"
    }, React.createElement("div", {
      className: "counter counter-lg"
    }, React.createElement("div", {
      className: "counter-number-group"
    }, React.createElement("span", {
      className: "counter-number-related"
    }, "-"), React.createElement("span", {
      className: "counter-number"
    }, "120")), React.createElement("div", {
      className: "counter-label text-uppercase"
    }, "points"))))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "widget"
    }, React.createElement("div", {
      className: "widget-content padding-25 bg-blue-600"
    }, React.createElement("div", {
      className: "counter counter-lg counter-inverse"
    }, React.createElement("div", {
      className: "counter-label text-uppercase"
    }, "score"), React.createElement("span", {
      className: "counter-number"
    }, "220"))))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "widget"
    }, React.createElement("div", {
      className: "widget-content padding-25 bg-purple-600"
    }, React.createElement("div", {
      className: "counter counter-lg counter-inverse"
    }, React.createElement("div", {
      className: "counter-label text-uppercase"
    }, "earn"), React.createElement("div", {
      className: "counter-number-group"
    }, React.createElement("span", {
      className: "counter-number-related"
    }, "-"), React.createElement("span", {
      className: "counter-number"
    }, "90")))))))), React.createElement("div", {
      className: "col-lg-6 col-md-12"
    }, React.createElement("div", {
      className: "widget",
      style: {
        overflow: 'hidden'
      }
    }, React.createElement("div", {
      className: "widget-content"
    }, React.createElement("div", {
      className: "row no-space"
    }, React.createElement("div", {
      className: "col-sm-6"
    }, React.createElement("div", {
      className: "counter counter-md vertical-align bg-white height-300"
    }, React.createElement("div", {
      className: "counter-icon padding-30 green-600",
      style: {
        position: 'absolute',
        top: 0,
        left: 0
      }
    }, React.createElement("i", {
      className: "icon wb-stats-bars",
      "aria-hidden": "true"
    })), React.createElement("div", {
      className: "counter-number-group font-size-30 vertical-align-middle"
    }, React.createElement("span", {
      className: "counter-icon green-600 margin-right-10"
    }, React.createElement("i", {
      className: "wb-graph-up"
    })), React.createElement("span", {
      className: "counter-number"
    }, "9"), React.createElement("span", {
      className: "counter-number-related"
    }, "%"), React.createElement("div", {
      className: "font-size-20 margin-top-3"
    }, "More sales")))), React.createElement("div", {
      className: "col-sm-6"
    }, React.createElement("div", {
      className: "vertical-align text-center bg-red-700 white padding-30 height-300"
    }, React.createElement("div", {
      className: "vertical-align-middle font-size-40"
    }, React.createElement("p", null, "AS"), React.createElement("p", null, "Tshirt")))))))), React.createElement("div", {
      className: "clearfix visible-lg-block"
    }), React.createElement("div", {
      className: "col-lg-6 col-md-12"
    }, React.createElement("div", {
      className: "widget"
    }, React.createElement("div", {
      className: "widget-content padding-30 bg-white"
    }, React.createElement("div", {
      className: "row no-space"
    }, React.createElement("div", {
      className: "col-sm-6"
    }, React.createElement("div", {
      className: "counter counter-lg text-left padding-left-20"
    }, React.createElement("span", {
      className: "counter-number"
    }, "286"), React.createElement("div", {
      className: "counter-label text-uppercase"
    }, "Online Players"))), React.createElement("div", {
      className: "col-sm-6"
    }, React.createElement("div", {
      className: "counter counter-lg text-left padding-left-20"
    }, React.createElement("span", {
      className: "counter-number"
    }, "286"), React.createElement("div", {
      className: "counter-label text-uppercase"
    }, "Online Players"))))))), React.createElement("div", {
      className: "col-lg-3 col-md-6"
    }, React.createElement("div", {
      className: "widget"
    }, React.createElement("div", {
      className: "widget-content padding-30 bg-white"
    }, React.createElement("div", {
      className: "counter counter-lg"
    }, React.createElement("div", {
      className: "counter-label text-uppercase"
    }, "bounce rate"), React.createElement("div", {
      className: "counter-number-group"
    }, React.createElement("span", {
      className: "counter-icon margin-right-10 green-600"
    }, React.createElement("i", {
      className: "wb-stats-bars"
    })), React.createElement("span", {
      className: "counter-number"
    }, "2.8"), React.createElement("span", {
      className: "counter-number-related"
    }, "%")))))), React.createElement("div", {
      className: "col-lg-3 col-md-6"
    }, React.createElement("div", {
      className: "widget"
    }, React.createElement("div", {
      className: "widget-content padding-30 bg-white"
    }, React.createElement("div", {
      className: "counter counter-lg"
    }, React.createElement("div", {
      className: "counter-label text-uppercase"
    }, "bounce rate"), React.createElement("div", {
      className: "counter-number-group"
    }, React.createElement("span", {
      className: "counter-number"
    }, "4.5"), React.createElement("span", {
      className: "counter-number-related"
    }, "%")))))), React.createElement("div", {
      className: "clearfix visible-lg-block"
    }), React.createElement("div", {
      className: "col-lg-6 col-md-12"
    }, React.createElement("div", {
      className: "widget"
    }, React.createElement("div", {
      className: "widget-content"
    }, React.createElement("div", {
      className: "row no-space"
    }, React.createElement("div", {
      className: "col-sm-4"
    }, React.createElement("div", {
      className: "counter counter-lg counter-inverse bg-blue-600 vertical-align height-150"
    }, React.createElement("div", {
      className: "vertical-align-middle"
    }, React.createElement("div", {
      className: "counter-icon margin-bottom-5"
    }, React.createElement("i", {
      className: "icon wb-image",
      "aria-hidden": "true"
    })), React.createElement("span", {
      className: "counter-number"
    }, "1,286")))), React.createElement("div", {
      className: "col-sm-4"
    }, React.createElement("div", {
      className: "counter counter-lg counter-inverse bg-red-600 vertical-align height-150"
    }, React.createElement("div", {
      className: "vertical-align-middle"
    }, React.createElement("div", {
      className: "counter-icon margin-bottom-5"
    }, React.createElement("i", {
      className: "icon wb-video",
      "aria-hidden": "true"
    })), React.createElement("span", {
      className: "counter-number"
    }, "620")))), React.createElement("div", {
      className: "col-sm-4"
    }, React.createElement("div", {
      className: "counter counter-lg counter-inverse bg-purple-600 vertical-align height-150"
    }, React.createElement("div", {
      className: "vertical-align-middle"
    }, React.createElement("div", {
      className: "counter-icon margin-bottom-5"
    }, React.createElement("i", {
      className: "icon wb-envelope",
      "aria-hidden": "true"
    })), React.createElement("span", {
      className: "counter-number"
    }, "2,860")))))))), React.createElement("div", {
      className: "col-lg-3 col-md-6"
    }, React.createElement("div", {
      className: "widget"
    }, React.createElement("div", {
      className: "widget-content padding-20 bg-white"
    }, React.createElement("div", {
      className: "counter counter-lg"
    }, React.createElement("div", {
      className: "counter-label text-uppercase font-size-16"
    }, "we have"), React.createElement("div", {
      className: "counter-number-group"
    }, React.createElement("span", {
      className: "counter-number"
    }, "300"), React.createElement("span", {
      className: "counter-number-related"
    }, "+")), React.createElement("div", {
      className: "counter-label text-uppercase font-size-16"
    }, "followers"))))), React.createElement("div", {
      className: "col-lg-3 col-md-6"
    }, React.createElement("div", {
      className: "widget"
    }, React.createElement("div", {
      className: "widget-content padding-20 bg-blue-600 white"
    }, React.createElement("div", {
      className: "counter counter-lg counter-inverse"
    }, React.createElement("div", {
      className: "counter-label text-uppercase font-size-16"
    }, "we have"), React.createElement("div", {
      className: "counter-number-group"
    }, React.createElement("span", {
      className: "counter-number"
    }, "365"), React.createElement("span", {
      className: "counter-icon margin-left-10"
    }, React.createElement("i", {
      className: "icon wb-image",
      "aria-hidden": "true"
    }))), React.createElement("div", {
      className: "counter-label text-uppercase font-size-16"
    }, "pictures"))))), React.createElement("div", {
      className: "clearfix visible-lg-block"
    }), React.createElement("div", {
      className: "col-lg-8 col-md-12"
    }, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "widget"
    }, React.createElement("div", {
      className: "widget-content padding-35 bg-white clearfix"
    }, React.createElement("div", {
      className: "pull-left white"
    }, React.createElement("i", {
      className: "icon icon-circle icon-2x wb-clipboard bg-red-600",
      "aria-hidden": "true"
    })), React.createElement("div", {
      className: "counter counter-md counter text-right pull-right"
    }, React.createElement("div", {
      className: "counter-number-group"
    }, React.createElement("span", {
      className: "counter-number"
    }, "25"), React.createElement("span", {
      className: "counter-number-related text-capitalize"
    }, "projects")), React.createElement("div", {
      className: "counter-label text-capitalize font-size-16"
    }, "in design"))))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "widget"
    }, React.createElement("div", {
      className: "widget-content padding-35 bg-white clearfix"
    }, React.createElement("div", {
      className: "counter counter-md pull-left text-left"
    }, React.createElement("div", {
      className: "counter-number-group"
    }, React.createElement("span", {
      className: "counter-number"
    }, "42"), React.createElement("span", {
      className: "counter-number-related text-capitalize"
    }, "people")), React.createElement("div", {
      className: "counter-label text-capitalize font-size-16"
    }, "in room")), React.createElement("div", {
      className: "pull-right white"
    }, React.createElement("i", {
      className: "icon icon-circle icon-2x wb-users bg-blue-600",
      "aria-hidden": "true"
    }))))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "widget"
    }, React.createElement("div", {
      className: "widget-content padding-30 bg-white"
    }, React.createElement("div", {
      className: "counter counter-md text-left"
    }, React.createElement("div", {
      className: "counter-label text-uppercase margin-bottom-5"
    }, "New Visitors"), React.createElement("div", {
      className: "counter-number-group margin-bottom-10"
    }, React.createElement("span", {
      className: "counter-number"
    }, "12,657")), React.createElement("div", {
      className: "counter-label"
    }, React.createElement("div", {
      className: "progress progress-xs margin-bottom-10"
    }, React.createElement("div", {
      className: "progress-bar progress-bar-info bg-blue-600",
      "aria-valuenow": "70.3",
      "aria-valuemin": 0,
      "aria-valuemax": 100,
      style: {
        width: '70.3%'
      },
      role: "progressbar"
    }, React.createElement("span", {
      className: "sr-only"
    }, "70.3%"))), React.createElement("div", {
      className: "counter counter-sm text-left"
    }, React.createElement("div", {
      className: "counter-number-group"
    }, React.createElement("span", {
      className: "counter-icon blue-600 margin-right-5"
    }, React.createElement("i", {
      className: "wb-graph-up"
    })), React.createElement("span", {
      className: "counter-number"
    }, "38%"), React.createElement("span", {
      className: "counter-number-related"
    }, "more than last month")))))))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "widget"
    }, React.createElement("div", {
      className: "widget-content padding-30 bg-white"
    }, React.createElement("div", {
      className: "counter counter-md text-left"
    }, React.createElement("div", {
      className: "counter-label text-uppercase margin-bottom-5"
    }, "New Orders"), React.createElement("div", {
      className: "counter-number-group margin-bottom-10"
    }, React.createElement("span", {
      className: "counter-number"
    }, "2,381")), React.createElement("div", {
      className: "counter-label"
    }, React.createElement("div", {
      className: "progress progress-xs margin-bottom-5"
    }, React.createElement("div", {
      className: "progress-bar progress-bar-info bg-red-600",
      "aria-valuenow": "20.3",
      "aria-valuemin": 0,
      "aria-valuemax": 100,
      style: {
        width: '20.3%'
      },
      role: "progressbar"
    }, React.createElement("span", {
      className: "sr-only"
    }, "20.3%"))), React.createElement("div", {
      className: "counter counter-sm text-left"
    }, React.createElement("div", {
      className: "counter-number-group"
    }, React.createElement("span", {
      className: "counter-icon red-600 margin-right-5"
    }, React.createElement("i", {
      className: "wb-graph-down"
    })), React.createElement("span", {
      className: "counter-number"
    }, "14%"), React.createElement("span", {
      className: "counter-number-related"
    }, "less than last month")))))))))), React.createElement("div", {
      className: "col-lg-2 col-sm-6"
    }, React.createElement("div", {
      className: "widget"
    }, React.createElement("div", {
      className: "widget-content padding-30 bg-green-600 height-350"
    }, React.createElement("div", {
      className: "counter counter-lg counter-inverse"
    }, React.createElement("div", {
      className: "counter-label"
    }, React.createElement("div", {
      className: "font-size-30"
    }, "2016"), React.createElement("div", {
      className: "font-size-14"
    }, "Total Expenses")), React.createElement("div", {
      className: "counter-number-group text-center",
      style: {
        width: '100%',
        position: 'absolute',
        bottom: 30,
        left: 0
      }
    }, React.createElement("span", {
      className: "counter-number"
    }, "356"), React.createElement("span", {
      className: "counter-number-related font-size-30"
    }, "$")))))), React.createElement("div", {
      className: "col-lg-2 col-sm-6"
    }, React.createElement("div", {
      className: "widget"
    }, React.createElement("div", {
      className: "widget-content padding-30 bg-orange-600 text-center vertical-align height-350"
    }, React.createElement("div", {
      className: "counter counter-lg counter-inverse vertical-align-middle"
    }, React.createElement("span", {
      className: "counter-number"
    }, "7.3"), React.createElement("div", {
      className: "counter-label text-capitalize"
    }, "IMDB Rating"))))), React.createElement("div", {
      className: "clearfix visible-lg-block"
    }), React.createElement("div", {
      className: "col-sm-6"
    }, React.createElement("div", {
      className: "widget"
    }, React.createElement("div", {
      className: "widget-content padding-30 bg-blue-600"
    }, React.createElement("div", {
      className: "widget-watermark darker font-size-60 margin-15"
    }, React.createElement("i", {
      className: "icon wb-clipboard",
      "aria-hidden": "true"
    })), React.createElement("div", {
      className: "counter counter-md counter-inverse text-left"
    }, React.createElement("div", {
      className: "counter-number-group"
    }, React.createElement("span", {
      className: "counter-number"
    }, "25"), React.createElement("span", {
      className: "counter-number-related text-capitalize"
    }, "projects")), React.createElement("div", {
      className: "counter-label text-capitalize"
    }, "in design"))))), React.createElement("div", {
      className: "col-sm-6"
    }, React.createElement("div", {
      className: "widget"
    }, React.createElement("div", {
      className: "widget-content padding-30 bg-red-600"
    }, React.createElement("div", {
      className: "widget-watermark darker font-size-60 margin-15"
    }, React.createElement("i", {
      className: "icon wb-users",
      "aria-hidden": "true"
    })), React.createElement("div", {
      className: "counter counter-md counter-inverse text-left"
    }, React.createElement("div", {
      className: "counter-number-group"
    }, React.createElement("span", {
      className: "counter-number"
    }, "42"), React.createElement("span", {
      className: "counter-number-related text-capitalize"
    }, "pepele")), React.createElement("div", {
      className: "counter-label text-capitalize"
    }, "in room"))))), React.createElement("div", {
      className: "col-sm-6"
    }, React.createElement("div", {
      className: "widget"
    }, React.createElement("div", {
      className: "widget-content padding-30 bg-green-600"
    }, React.createElement("div", {
      className: "widget-watermark darker font-size-60 margin-15"
    }, React.createElement("i", {
      className: "icon wb-musical",
      "aria-hidden": "true"
    })), React.createElement("div", {
      className: "counter counter-md counter-inverse text-left"
    }, React.createElement("div", {
      className: "counter-number-group"
    }, React.createElement("span", {
      className: "counter-number"
    }, "661"), React.createElement("span", {
      className: "counter-number-related text-capitalize"
    }, "songs")), React.createElement("div", {
      className: "counter-label text-capitalize"
    }, "in album"))))), React.createElement("div", {
      className: "col-sm-6"
    }, React.createElement("div", {
      className: "widget"
    }, React.createElement("div", {
      className: "widget-content padding-30 bg-purple-600"
    }, React.createElement("div", {
      className: "widget-watermark lighter font-size-60 margin-15"
    }, React.createElement("i", {
      className: "icon wb-image",
      "aria-hidden": "true"
    })), React.createElement("div", {
      className: "counter counter-md counter-inverse text-left"
    }, React.createElement("div", {
      className: "counter-number-wrap font-size-30"
    }, React.createElement("span", {
      className: "counter-number"
    }, "1025"), React.createElement("span", {
      className: "counter-number-related text-capitalize"
    }, "photos")), React.createElement("div", {
      className: "counter-label text-capitalize"
    }, "in family"))))))));
  }

}

module.exportDefault(StatisticsExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"weather.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/components/widgets/weather.jsx                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class WeatherExample extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "WeatherExample")), React.createElement("div", {
      className: "page-content container-fluid"
    }));
  }

}

module.exportDefault(WeatherExample);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"layouts":{"advanced.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/layouts/advanced.jsx                                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class Advanced extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    let filter = obj => {
      let newProps = {};
      let key;

      for (key in obj) {
        if (key !== "children") {
          newProps[key] = obj[key];
        }
      }

      return newProps;
    };

    return React.createElement("div", null, React.createElement("h1", null, "Advanced"), React.cloneElement(this.props.children, filter(this.props)));
  }

}

module.exportDefault(Advanced);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"analytics.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/layouts/analytics.jsx                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class Analytics extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "Analytics Overview")), React.createElement("div", {
      className: "page-content container-fluid"
    }));
  }

}

module.exportDefault(Analytics);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"charts.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/layouts/charts.jsx                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class Charts extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    let filter = obj => {
      let newProps = {};
      let key;

      for (key in obj) {
        if (key !== "children") {
          newProps[key] = obj[key];
        }
      }

      return newProps;
    };

    return React.createElement("div", null, React.createElement("h1", null, "Charts"), React.cloneElement(this.props.children, filter(this.props)));
  }

}

module.exportDefault(Charts);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"dashboard.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/layouts/dashboard.jsx                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class Dashboard extends React.Component {
  constructor(props) {
    super(props);
    this.data = [{
      "title": "General",
      "items": [{
        "icon": "wb-dashboard",
        "title": "Dashboard",
        "slug": "dashboard",
        "children": [{
          "title": "Home",
          "link": "examples"
        }, {
          "title": "Dashboard v1",
          "link": "examples/dashboard/v1"
        }, {
          "title": "Ecommerce",
          "link": "examples/dashboard/ecommerce"
        }, {
          "title": "Analytics",
          "link": "examples/dashboard/analytics"
        }, {
          "title": "Team",
          "link": "examples/dashboard/team"
        }],
        "badge": {
          "modifier": "label-success",
          "text": "3"
        }
      }, {
        "icon": "wb-file",
        "title": "Pages",
        "slug": "pages",
        "children": [{
          "title": "FAQ",
          "link": "examples/pages/faq"
        }, {
          "title": "Gallery Grid",
          "link": "examples/pages/gallery-grid"
        }, {
          "title": "Search Result",
          "link": "examples/pages/search-result"
        }, {
          "title": "User List",
          "link": "examples/pages/user"
        }, {
          "title": "Invoice",
          "link": "examples/pages/invoice"
        }, {
          "title": "Email",
          "link": "examples/pages/email"
        }, {
          "title": "Profile",
          "link": "examples/pages/profile"
        }, {
          "title": "Sitemap",
          "link": "examples/pages/site-map"
        }]
      }]
    }, {
      "title": "Elements",
      "items": [{
        "icon": "wb-bookmark",
        "title": "Basic UI",
        "slug": "uikit",
        "children": [{
          "title": "Panel",
          "slug": "uikit/panel",
          "children": [{
            "title": "Panel Structure",
            "link": "examples/uikit/panel-structure"
          }, {
            "title": "Panel Actions",
            "link": "examples/uikit/panel-actions"
          }, {
            "title": "Panel Portlets",
            "link": "examples/uikit/panel-portlets"
          }]
        }, {
          "title": "Buttons",
          "link": "examples/uikit/buttons"
        }, {
          "title": "Cards",
          "link": "examples/uikit/cards"
        }, {
          "title": "Dropdowns",
          "link": "examples/uikit/dropdowns"
        }, {
          "title": "List",
          "link": "examples/uikit/list"
        }, {
          "title": "Tooltip & Popover",
          "link": "examples/uikit/tooltip-popover"
        }, {
          "title": "Modals",
          "link": "examples/uikit/modals"
        }, {
          "title": "Tabs & Accordions",
          "link": "examples/uikit/tabs-accordions"
        }, {
          "title": "Images",
          "link": "examples/uikit/images"
        }, {
          "title": "Labels",
          "link": "examples/uikit/labels"
        }, {
          "title": "Progress Bars",
          "link": "examples/uikit/progress-bars"
        }, {
          "title": "Carousel",
          "link": "examples/uikit/carousel"
        }, {
          "title": "Typography",
          "link": "examples/uikit/typography"
        }, {
          "title": "Colors",
          "link": "examples/uikit/colors"
        }, {
          "title": "Utilties",
          "link": "examples/uikit/utilities"
        }]
      }, {
        "icon": "wb-hammer",
        "title": "Advanced UI",
        "slug": "advanced",
        "children": [{
          "title": "Animation",
          "link": "examples/advanced/animation"
        }, {
          "title": "Highlight",
          "link": "examples/advanced/highlight"
        }, {
          "title": "Lightbox",
          "link": "examples/advanced/lightbox"
        }, {
          "title": "Scrollable",
          "link": "examples/advanced/scrollable"
        }, {
          "title": "Rating",
          "link": "examples/advanced/rating"
        }, {
          "title": "Context Menu",
          "link": "examples/advanced/context-menu"
        }, {
          "title": "Alertify",
          "link": "examples/advanced/alertify"
        }, {
          "title": "Masonry",
          "link": "examples/advanced/masonry"
        }, {
          "title": "Treeview",
          "link": "examples/advanced/treeview"
        }, {
          "title": "Toastr",
          "link": "examples/advanced/toastr"
        }, {
          "title": "Vector Maps",
          "link": "examples/advanced/maps-vector"
        }, {
          "title": "Sortable & Nestable",
          "link": "examples/advanced/sortable-nestable"
        }, {
          "title": "Bootbox & Sweetalert",
          "link": "examples/advanced/bootbox-sweetalert"
        }]
      }, {
        "icon": "wb-plugin",
        "title": "Structure",
        "slug": "structure",
        "children": [{
          "title": "Alerts",
          "link": "examples/structure/alerts"
        }, {
          "title": "Ribbon",
          "link": "examples/structure/ribbon"
        }, {
          "title": "Pricing Tables",
          "link": "examples/structure/pricing-tables"
        }, {
          "title": "Overlay",
          "link": "examples/structure/overlay"
        }, {
          "title": "Cover",
          "link": "examples/structure/cover"
        }, {
          "title": "Simple Timeline",
          "link": "examples/structure/timeline-simple"
        }, {
          "title": "Timeline",
          "link": "examples/structure/timeline"
        }, {
          "title": "Step",
          "link": "examples/structure/step"
        }, {
          "title": "Comments",
          "link": "examples/structure/comments"
        }, {
          "title": "Media",
          "link": "examples/structure/media"
        }, {
          "title": "Chat",
          "link": "examples/structure/chat"
        }, {
          "title": "Testimonials",
          "link": "examples/structure/testimonials"
        }, {
          "title": "Nav",
          "link": "examples/structure/nav"
        }, {
          "title": "Navbars",
          "link": "examples/structure/navbars"
        }, {
          "title": "Blockquotes",
          "link": "examples/structure/blockquotes"
        }, {
          "title": "Pagination",
          "link": "examples/structure/pagination"
        }, {
          "title": "Breadcrumbs",
          "link": "examples/structure/breadcrumbs"
        }]
      }, {
        "icon": "wb-extension",
        "title": "Widgets",
        "slug": "widgets",
        "children": [{
          "title": "Statistics Widgets",
          "link": "examples/widgets/statistics"
        }, {
          "title": "Data Widgets",
          "link": "examples/widgets/data"
        }, {
          "title": "Blog Widgets",
          "link": "examples/widgets/blog"
        }, {
          "title": "Chart Widgets",
          "link": "examples/widgets/chart"
        }, {
          "title": "Social Widgets",
          "link": "examples/widgets/social"
        }, {
          "title": "Weather Widgets",
          "link": "examples/widgets/weather"
        }]
      }, {
        "icon": "wb-library",
        "title": "Forms",
        "slug": "forms",
        "children": [{
          "title": "General Elements",
          "link": "examples/forms/general"
        }, {
          "title": "Material Elements",
          "link": "examples/forms/material"
        }, {
          "title": "Advanced Elements",
          "link": "examples/forms/advanced"
        }, {
          "title": "Form Layouts",
          "link": "examples/forms/layouts"
        }, {
          "title": "Form Wizard",
          "link": "examples/forms/wizard"
        }, {
          "title": "Form Validation",
          "link": "examples/forms/validation"
        }, {
          "title": "Form Masks",
          "link": "examples/forms/masks"
        }, {
          "title": "Editors",
          "slug": "forms/editor",
          "children": [{
            "title": "Summernote",
            "link": "examples/forms/editor-summernote"
          }, {
            "title": "Markdown",
            "link": "examples/forms/editor-markdown"
          }, {
            "title": "Ace Editor",
            "link": "examples/forms/editor-ace"
          }]
        }, {
          "title": "Image Cropping",
          "link": "examples/forms/image-cropping"
        }, {
          "title": "File Uploads",
          "link": "examples/forms/file-uploads"
        }]
      }, {
        "icon": "wb-table",
        "title": "Tables",
        "slug": "tables",
        "children": [{
          "title": "Basic Tables",
          "link": "examples/tables/basic"
        }, {
          "title": "Bootstrap Tables",
          "link": "examples/tables/bootstrap"
        }, {
          "title": "floatThead",
          "link": "examples/tables/floatthead"
        }, {
          "title": "Responsive Tables",
          "link": "examples/tables/responsive"
        }, {
          "title": "Editable Tables",
          "link": "examples/tables/editable"
        }, {
          "title": "jsGrid",
          "link": "examples/tables/jsgrid"
        }, {
          "title": "FooTable",
          "link": "examples/tables/footable"
        }, {
          "title": "DataTables",
          "link": "examples/tables/datatable"
        }]
      }, {
        "icon": "wb-pie-chart",
        "title": "Chart",
        "slug": "charts",
        "children": [{
          "title": "Chart.js",
          "link": "examples/charts/chartjs"
        }, {
          "title": "Gauges",
          "link": "examples/charts/gauges"
        }, {
          "title": "Peity",
          "link": "examples/charts/peity"
        }, {
          "title": "Sparkline",
          "link": "examples/charts/sparkline"
        }, {
          "title": "Morris",
          "link": "examples/charts/morris"
        }, {
          "title": "Chartist.js",
          "link": "examples/charts/chartist"
        }, {
          "title": "Rickshaw",
          "link": "examples/charts/rickshaw"
        }, {
          "title": "Pie Progress",
          "link": "examples/charts/pie-progress"
        }, {
          "title": "C3",
          "link": "examples/charts/c3"
        }]
      }]
    }];
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-content container-fluid"
    }, React.createElement("h1", null, "Dashboard")));
  }

}

module.exportDefault(Dashboard);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"ecommerce.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/layouts/ecommerce.jsx                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class Ecommerce extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("h1", {
      className: "page-title"
    }, "Ecommerce Overview")), React.createElement("div", {
      className: "page-content container-fluid"
    }));
  }

}

module.exportDefault(Ecommerce);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"examples.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/layouts/examples.jsx                                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class Examples extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    let filter = obj => {
      let newProps = {};
      let key;

      for (key in obj) {
        if (key !== "children") {
          newProps[key] = obj[key];
        }
      }

      return newProps;
    };

    return React.createElement("div", {
      id: "examples"
    }, React.cloneElement(this.props.children, filter(this.props)));
  }

}

module.exportDefault(Examples);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"forms.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/layouts/forms.jsx                                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class Forms extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    let filter = obj => {
      let newProps = {};
      let key;

      for (key in obj) {
        if (key !== "children") {
          newProps[key] = obj[key];
        }
      }

      return newProps;
    };

    return React.createElement("div", null, React.cloneElement(this.props.children, filter(this.props)));
  }

}

module.exportDefault(Forms);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"index.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/layouts/index.jsx                                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Link;
module.watch(require("react-router"), {
  Link(v) {
    Link = v;
  }

}, 1);
let $;
module.watch(require("jquery"), {
  default(v) {
    $ = v;
  }

}, 2);

class Index extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      data: [{
        "title": "General",
        "items": [{
          "icon": "wb-dashboard",
          "title": "Dashboard",
          "slug": "dashboard",
          "children": [{
            "title": "Dashboard v1",
            "link": "/examples/dashboard"
          }, {
            "title": "Ecommerce",
            "link": "/examples/ecommerce"
          }, {
            "title": "Analytics",
            "link": "/examples/analytics"
          }, {
            "title": "Team",
            "link": "/examples/team"
          }],
          "badge": {
            "modifier": "label-success",
            "text": "3"
          }
        }, {
          "icon": "wb-file",
          "title": "Pages",
          "slug": "pages",
          "children": [{
            "title": "FAQ",
            "link": "/examples/pages/faq"
          }, {
            "title": "Gallery Grid",
            "link": "/examples/pages/gallery-grid"
          }, {
            "title": "Gallery",
            "link": "/examples/pages/gallery"
          }, {
            "title": "Search Result",
            "link": "/examples/pages/search-result",
            "icon": "wb-check-circle"
          }, {
            "title": "User List",
            "link": "/examples/pages/user"
          }, {
            "title": "Invoice",
            "link": "/examples/pages/invoice"
          }, {
            "title": "Email",
            "link": "/examples/pages/email"
          }, {
            "title": "Profile",
            "link": "/examples/pages/profile"
          }, {
            "title": "Sitemap",
            "link": "/examples/pages/site-map"
          }]
        }]
      }, {
        "title": "Elements",
        "items": [{
          "icon": "wb-bookmark",
          "title": "Basic UI",
          "slug": "uikit",
          "children": [{
            "title": "Panel",
            "slug": "uikit/panel",
            "children": [{
              "title": "Panel Structure",
              "link": "/examples/uikit/panel-structure"
            }, {
              "title": "Panel Actions",
              "link": "/examples/uikit/panel-actions"
            }, {
              "title": "Panel Portlets",
              "link": "/examples/uikit/panel-portlets"
            }]
          }, {
            "title": "Buttons",
            "link": "/examples/uikit/buttons"
          }, {
            "title": "Cards",
            "link": "/examples/uikit/cards",
            "icon": "wb-check-circle"
          }, {
            "title": "Dropdowns",
            "link": "/examples/uikit/dropdowns"
          }, {
            "title": "Icons",
            "link": "/examples/uikit/icons"
          }, {
            "title": "List",
            "link": "/examples/uikit/list",
            "icon": "wb-check-circle"
          }, {
            "title": "Tooltip & Popover",
            "link": "/examples/uikit/tooltip-popover"
          }, {
            "title": "Modals",
            "link": "/examples/uikit/modals"
          }, {
            "title": "Tabs & Accordions",
            "link": "/examples/uikit/tabs-accordions",
            "icon": "wb-check-circle"
          }, {
            "title": "Images",
            "link": "/examples/uikit/images"
          }, {
            "title": "Labels",
            "link": "/examples/uikit/labels",
            "icon": "wb-check-circle"
          }, {
            "title": "Progress Bars",
            "link": "/examples/uikit/progress-bars",
            "icon": "wb-check-circle"
          }, {
            "title": "Carousel",
            "link": "/examples/uikit/carousel"
          }, {
            "title": "Typography",
            "link": "/examples/uikit/typography",
            "icon": "wb-check-circle"
          }, {
            "title": "Colors",
            "link": "/examples/uikit/colors"
          }, {
            "title": "Utilties",
            "link": "/examples/uikit/utilities"
          }]
        }, {
          "icon": "wb-hammer",
          "title": "Advanced UI",
          "slug": "advanced",
          "children": [{
            "title": "Animation",
            "link": "/examples/advanced/animation"
          }, {
            "title": "Highlight",
            "link": "examples/advanced/highlight"
          }, {
            "title": "Lightbox",
            "link": "/examples/advanced/lightbox"
          }, {
            "title": "Scrollable",
            "link": "/examples/advanced/scrollable"
          }, {
            "title": "Rating",
            "link": "/examples/advanced/rating"
          }, {
            "title": "Context Menu",
            "link": "/examples/advanced/context-menu"
          }, {
            "title": "Alertify",
            "link": "/examples/advanced/alertify"
          }, {
            "title": "Masonry",
            "link": "/examples/advanced/masonry"
          }, {
            "title": "Treeview",
            "link": "/examples/advanced/treeview"
          }, {
            "title": "Toastr",
            "link": "examples/advanced/toastr"
          }, {
            "title": "Vector Maps",
            "link": "/examples/advanced/maps-vector"
          }, {
            "title": "Sortable & Nestable",
            "link": "/examples/advanced/sortable-nestable"
          }, {
            "title": "Bootbox & Sweetalert",
            "link": "/examples/advanced/bootbox-sweetalert"
          }, {
            "title": "Chardin JS",
            "link": "/examples/advanced/chardin"
          }]
        }, {
          "icon": "wb-plugin",
          "title": "Structure",
          "slug": "structure",
          "children": [{
            "title": "Alerts",
            "link": "/examples/structure/alerts"
          }, {
            "title": "Ribbon",
            "link": "/examples/structure/ribbon"
          }, {
            "title": "Pricing Tables",
            "link": "/examples/structure/pricing-tables",
            "icon": "wb-check-circle"
          }, {
            "title": "Overlay",
            "link": "/examples/structure/overlay",
            "icon": "wb-check-circle"
          }, {
            "title": "Cover",
            "link": "/examples/structure/cover"
          }, {
            "title": "Simple Timeline",
            "link": "/examples/structure/timeline-simple"
          }, {
            "title": "Timeline",
            "link": "/examples/structure/timeline"
          }, {
            "title": "Step",
            "link": "/examples/structure/step"
          }, {
            "title": "Comments",
            "link": "/examples/structure/comments"
          }, {
            "title": "Media",
            "link": "/examples/structure/media"
          }, {
            "title": "Chat",
            "link": "/examples/structure/chat"
          }, {
            "title": "Testimonials",
            "link": "/examples/structure/testimonials",
            "icon": "wb-check-circle"
          }, {
            "title": "Nav",
            "link": "/examples/structure/nav"
          }, {
            "title": "Navbars",
            "link": "/examples/structure/navbars"
          }, {
            "title": "Blockquotes",
            "link": "/examples/structure/blockquotes",
            "icon": "wb-check-circle"
          }, {
            "title": "Pagination",
            "link": "/examples/structure/pagination",
            "icon": "wb-check-circle"
          }, {
            "title": "Breadcrumbs",
            "link": "/examples/structure/breadcrumbs",
            "icon": "wb-check-circle"
          }]
        }, {
          "icon": "wb-extension",
          "title": "Widgets",
          "slug": "widgets",
          "children": [{
            "title": "Statistics Widgets",
            "link": "/examples/widgets/statistics"
          }, {
            "title": "Data Widgets",
            "link": "/examples/widgets/data"
          }, {
            "title": "Blog Widgets",
            "link": "/examples/widgets/blog"
          }, {
            "title": "Chart Widgets",
            "link": "/examples/widgets/chart"
          }, {
            "title": "Social Widgets",
            "link": "/examples/widgets/social"
          }, {
            "title": "Weather Widgets",
            "link": "/examples/widgets/weather"
          }]
        }, {
          "icon": "wb-library",
          "title": "Forms",
          "slug": "forms",
          "children": [{
            "title": "General Elements",
            "link": "/examples/forms/general",
            "icon": "wb-check-circle"
          }, {
            "title": "Material Elements",
            "link": "/examples/forms/material",
            "icon": "wb-check-circle"
          }, {
            "title": "Advanced Elements",
            "link": "/examples/forms/advanced"
          }, {
            "title": "Form Layouts",
            "link": "/examples/forms/layouts",
            "icon": "wb-check-circle"
          }, {
            "title": "Form Wizard",
            "link": "/examples/forms/wizard"
          }, {
            "title": "Form Validation",
            "link": "/examples/forms/validation"
          }, {
            "title": "Form Masks",
            "link": "/examples/forms/masks"
          }, {
            "title": "Editors",
            "slug": "forms/editor",
            "children": [{
              "title": "Summernote",
              "link": "/examples/forms/editor-summernote"
            }, {
              "title": "Markdown",
              "link": "/examples/forms/editor-markdown"
            }, {
              "title": "Ace Editor",
              "link": "/examples/forms/editor-ace"
            }]
          }, {
            "title": "Image Cropping",
            "link": "/examples/forms/image-cropping"
          }, {
            "title": "File Uploads",
            "link": "/examples/forms/file-uploads"
          }]
        }, {
          "icon": "wb-table",
          "title": "Tables",
          "slug": "tables",
          "children": [{
            "title": "Basic Tables",
            "link": "/examples/tables/basic"
          }, {
            "title": "Bootstrap Tables",
            "link": "/examples/tables/bootstrap"
          }, {
            "title": "floatThead",
            "link": "/examples/tables/floatthead"
          }, {
            "title": "Responsive Tables",
            "link": "/examples/tables/responsive"
          }, {
            "title": "Editable Tables",
            "link": "/examples/tables/editable"
          }, {
            "title": "jsGrid",
            "link": "/examples/tables/jsgrid"
          }, {
            "title": "FooTable",
            "link": "/examples/tables/footable"
          }, {
            "title": "DataTables",
            "link": "/examples/tables/datatable"
          }]
        }, {
          "icon": "wb-pie-chart",
          "title": "Chart",
          "slug": "charts",
          "children": [{
            "title": "Chart.js",
            "link": "/examples/charts/chartjs"
          }, {
            "title": "Gauges",
            "link": "/examples/charts/gauges"
          }, {
            "title": "Peity",
            "link": "/examples/charts/peity"
          }, {
            "title": "Sparkline",
            "link": "/examples/charts/sparkline"
          }, {
            "title": "Morris",
            "link": "/examples/charts/morris"
          }, {
            "title": "Chartist.js",
            "link": "/examples/charts/chartist"
          }, {
            "title": "Rickshaw",
            "link": "/examples/charts/rickshaw"
          }, {
            "title": "Pie Progress",
            "link": "/examples/charts/pie-progress"
          }, {
            "title": "C3",
            "link": "/examples/charts/c3"
          }, {
            "title": "Highcharts",
            "link": "/examples/charts/highcharts"
          }]
        }]
      }]
    };
  }

  items(data) {
    let menu = [];

    let subMenuOpen = e => {
      console.log("SUB_MENU_OPEN", e.target);
      $(e.target).closest('li').toggleClass("open");
    };

    data.forEach(item => {
      if (item.children) {
        menu.push(React.createElement("li", {
          key: item.title,
          className: "site-menu-item has-sub " + (this.class ? this.class : ""),
          onClick: subMenuOpen
        }, this.itemContent(item), this.subMenu(item)));
      } else {
        menu.push(React.createElement("li", {
          key: item.title,
          className: "site-menu-item " + (this.class ? this.class : '')
        }, this.itemContent(item)));
      }
    });
    return menu;
  }

  componentDidUpdate() {
    if (!this.init) {
      let $item = $("[href*=\"path=".concat(encodeURIComponent(this.props.path), "\"]"));

      if ($item.length === 1) {
        $item.trigger('click.site.menu');
        $item.parents('.has-sub').trigger('open.site.menu');
        this.init = true;
      }
    }
  }

  render() {
    let menu = [];
    this.state.data.forEach((item, itemIndex) => {
      let items = [];

      if (item.items) {
        item.items.forEach(subItem => {
          let links = [];
          subItem.children.forEach(link => {
            if (link.children) {
              link.children.forEach(linkChildren => {
                links.push(React.createElement("li", {
                  className: "list-group-item"
                }, React.createElement(Link, {
                  to: linkChildren.link
                }, linkChildren.icon ? React.createElement("i", {
                  className: "site-menu-icon " + linkChildren.icon,
                  "aria-hidden": "true"
                }) : "", linkChildren.title)));
              });
            } else {
              links.push(React.createElement("li", {
                className: "list-group-item"
              }, React.createElement(Link, {
                to: link.link
              }, link.icon ? React.createElement("i", {
                className: "site-menu-icon " + link.icon,
                "aria-hidden": "true"
              }) : "", link.title)));
            }
          });
          let itemClass = itemIndex === 0 ? "col-md-12" : "col-md-6 col-lg-4";
          items.push(React.createElement("div", {
            className: itemClass
          }, React.createElement("div", {
            className: "example-wrap"
          }, React.createElement("h4", {
            className: "example-title"
          }, subItem.icon ? React.createElement("i", {
            className: "site-menu-icon " + subItem.icon,
            "aria-hidden": "true"
          }) : "", subItem.title), React.createElement("ul", {
            className: "list-group list-group-full"
          }, links))));

          if (subItem.chidlren) {} else {}
        });
      }

      let colClass = itemIndex === 0 ? "col-md-4" : "col-md-8";
      let cat = React.createElement("div", {
        className: colClass
      }, React.createElement("div", {
        className: "panel",
        key: item.title
      }, React.createElement("div", {
        className: "panel-heading"
      }, React.createElement("h3", {
        className: "panel-title"
      }, item.title)), React.createElement("div", {
        className: "panel-body container-fluid"
      }, React.createElement("div", {
        className: "row row-lg"
      }, item.items ? items : ""))));
      menu.push(cat);
    });
    return React.createElement("div", null, React.createElement("div", {
      className: "page-header"
    }, React.createElement("ol", {
      className: "breadcrumb"
    }, React.createElement("li", null, React.createElement("a", {
      href: "../index.html"
    }, "Home")), React.createElement("li", {
      className: "active"
    }, "Examples")), React.createElement("h1", {
      className: "page-title"
    }, "Example")), React.createElement("div", {
      className: "page-content container-fluid"
    }, React.createElement("div", {
      className: "row"
    }, menu)));
  }

}

module.exportDefault(Index);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"pages.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/layouts/pages.jsx                                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class Pages extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    let filter = obj => {
      let newProps = {};
      let key;

      for (key in obj) {
        if (key !== "children") {
          newProps[key] = obj[key];
        }
      }

      return newProps;
    };

    return React.createElement("div", null, React.cloneElement(this.props.children, filter(this.props)));
  }

}

module.exportDefault(Pages);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"structure.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/layouts/structure.jsx                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class Structure extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    let filter = obj => {
      let newProps = {};
      let key;

      for (key in obj) {
        if (key !== "children") {
          newProps[key] = obj[key];
        }
      }

      return newProps;
    };

    return React.createElement("div", null, React.cloneElement(this.props.children, filter(this.props)));
  }

}

module.exportDefault(Structure);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"tables.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/layouts/tables.jsx                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class Tables extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    let filter = obj => {
      let newProps = {};
      let key;

      for (key in obj) {
        if (key !== "children") {
          newProps[key] = obj[key];
        }
      }

      return newProps;
    };

    return React.createElement("div", null, React.createElement("h1", null, "Tables"), React.cloneElement(this.props.children, filter(this.props)));
  }

}

module.exportDefault(Tables);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"team.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/layouts/team.jsx                                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class Team extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", null, React.createElement("div", {
      className: "page-content container-fluid"
    }, React.createElement("h1", null, "Team")));
  }

}

module.exportDefault(Team);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"ui-kit.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/layouts/ui-kit.jsx                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class UiKit extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    let filter = obj => {
      let newProps = {};
      let key;

      for (key in obj) {
        if (key !== "children") {
          newProps[key] = obj[key];
        }
      }

      return newProps;
    };

    return React.createElement("div", null, React.cloneElement(this.props.children, filter(this.props)));
  }

}

module.exportDefault(UiKit);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"widgets.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/ui/layouts/widgets.jsx                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class Widgets extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    let filter = obj => {
      let newProps = {};
      let key;

      for (key in obj) {
        if (key !== "children") {
          newProps[key] = obj[key];
        }
      }

      return newProps;
    };

    return React.createElement("div", null, React.cloneElement(this.props.children, filter(this.props)));
  }

}

module.exportDefault(Widgets);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"actions":{"bundle.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/actions/bundle.jsx                                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let Actions = {};
module.exportDefault(Actions);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"client":{"bundle.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/client/bundle.jsx                                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let Routes;
module.watch(require("./routes"), {
  default(v) {
    Routes = v;
  }

}, 0);
let Reducers;
module.watch(require("../reducers/bundle"), {
  default(v) {
    Reducers = v;
  }

}, 1);
let Actions;
module.watch(require("../actions/bundle"), {
  default(v) {
    Actions = v;
  }

}, 2);
module.exportDefault({
  reducers: Reducers,
  routes: Routes,
  actions: Actions
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"routes.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/client/routes.jsx                                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Route, IndexRoute;
module.watch(require("react-router"), {
  Route(v) {
    Route = v;
  },

  IndexRoute(v) {
    IndexRoute = v;
  }

}, 1);
let Examples;
module.watch(require("../ui/layouts/examples"), {
  default(v) {
    Examples = v;
  }

}, 2);
let Index;
module.watch(require("../ui/layouts/index"), {
  default(v) {
    Index = v;
  }

}, 3);
let Dashboard;
module.watch(require("../ui/layouts/dashboard"), {
  default(v) {
    Dashboard = v;
  }

}, 4);
let Ecommerce;
module.watch(require("../ui/layouts/ecommerce"), {
  default(v) {
    Ecommerce = v;
  }

}, 5);
let Analytics;
module.watch(require("../ui/layouts/analytics"), {
  default(v) {
    Analytics = v;
  }

}, 6);
let Team;
module.watch(require("../ui/layouts/team"), {
  default(v) {
    Team = v;
  }

}, 7);
let Pages;
module.watch(require("../ui/layouts/pages"), {
  default(v) {
    Pages = v;
  }

}, 8);
let UiKit;
module.watch(require("../ui/layouts/ui-kit"), {
  default(v) {
    UiKit = v;
  }

}, 9);
let Structure;
module.watch(require("../ui/layouts/structure"), {
  default(v) {
    Structure = v;
  }

}, 10);
let Advanced;
module.watch(require("../ui/layouts/advanced"), {
  default(v) {
    Advanced = v;
  }

}, 11);
let Widgets;
module.watch(require("../ui/layouts/widgets"), {
  default(v) {
    Widgets = v;
  }

}, 12);
let Forms;
module.watch(require("../ui/layouts/forms"), {
  default(v) {
    Forms = v;
  }

}, 13);
let Tables;
module.watch(require("../ui/layouts/tables"), {
  default(v) {
    Tables = v;
  }

}, 14);
let Charts;
module.watch(require("../ui/layouts/charts"), {
  default(v) {
    Charts = v;
  }

}, 15);
let AlertifyExample;
module.watch(require("../ui/components/advanced/alertify"), {
  default(v) {
    AlertifyExample = v;
  }

}, 16);
let AnimationExample;
module.watch(require("../ui/components/advanced/animation"), {
  default(v) {
    AnimationExample = v;
  }

}, 17);
let SweetalertExample;
module.watch(require("../ui/components/advanced/bootbox-sweetalert"), {
  default(v) {
    SweetalertExample = v;
  }

}, 18);
let ChardinExample;
module.watch(require("../ui/components/advanced/chardin"), {
  default(v) {
    ChardinExample = v;
  }

}, 19);
let ContextMenuExample;
module.watch(require("../ui/components/advanced/context-menu"), {
  default(v) {
    ContextMenuExample = v;
  }

}, 20);
let HighlightExample;
module.watch(require("../ui/components/advanced/highlight"), {
  default(v) {
    HighlightExample = v;
  }

}, 21);
let LightboxExample;
module.watch(require("../ui/components/advanced/lightbox"), {
  default(v) {
    LightboxExample = v;
  }

}, 22);
let MapsVectorExample;
module.watch(require("../ui/components/advanced/maps-vector"), {
  default(v) {
    MapsVectorExample = v;
  }

}, 23);
let MasonryExample;
module.watch(require("../ui/components/advanced/masonry"), {
  default(v) {
    MasonryExample = v;
  }

}, 24);
let RatingExample;
module.watch(require("../ui/components/advanced/rating"), {
  default(v) {
    RatingExample = v;
  }

}, 25);
let ScrollableExample;
module.watch(require("../ui/components/advanced/scrollable"), {
  default(v) {
    ScrollableExample = v;
  }

}, 26);
let SortableNestedExample;
module.watch(require("../ui/components/advanced/sortable-nestable"), {
  default(v) {
    SortableNestedExample = v;
  }

}, 27);
let ToastrExample;
module.watch(require("../ui/components/advanced/toastr"), {
  default(v) {
    ToastrExample = v;
  }

}, 28);
let TreeViewExample;
module.watch(require("../ui/components/advanced/treeview"), {
  default(v) {
    TreeViewExample = v;
  }

}, 29);
let C3Example;
module.watch(require("../ui/components/charts/c3"), {
  default(v) {
    C3Example = v;
  }

}, 30);
let ChartistExample;
module.watch(require("../ui/components/charts/chartist"), {
  default(v) {
    ChartistExample = v;
  }

}, 31);
let ChartJSExample;
module.watch(require("../ui/components/charts/chartjs"), {
  default(v) {
    ChartJSExample = v;
  }

}, 32);
let GaugesExample;
module.watch(require("../ui/components/charts/gauges"), {
  default(v) {
    GaugesExample = v;
  }

}, 33);
let HighchartsExample;
module.watch(require("../ui/components/charts/highcharts"), {
  default(v) {
    HighchartsExample = v;
  }

}, 34);
let MorrisExample;
module.watch(require("../ui/components/charts/morris"), {
  default(v) {
    MorrisExample = v;
  }

}, 35);
let PeityExample;
module.watch(require("../ui/components/charts/peity"), {
  default(v) {
    PeityExample = v;
  }

}, 36);
let PieProgressExample;
module.watch(require("../ui/components/charts/pie-progress"), {
  default(v) {
    PieProgressExample = v;
  }

}, 37);
let RickshawExample;
module.watch(require("../ui/components/charts/rickshaw"), {
  default(v) {
    RickshawExample = v;
  }

}, 38);
let SparklineExample;
module.watch(require("../ui/components/charts/sparkline"), {
  default(v) {
    SparklineExample = v;
  }

}, 39);
let AdvancedExample;
module.watch(require("../ui/components/forms/advanced"), {
  default(v) {
    AdvancedExample = v;
  }

}, 40);
let EditorAceExample;
module.watch(require("../ui/components/forms/editor-ace"), {
  default(v) {
    EditorAceExample = v;
  }

}, 41);
let EditorMarkdownExample;
module.watch(require("../ui/components/forms/editor-markdown"), {
  default(v) {
    EditorMarkdownExample = v;
  }

}, 42);
let EditorSummernoteExample;
module.watch(require("../ui/components/forms/editor-summernote"), {
  default(v) {
    EditorSummernoteExample = v;
  }

}, 43);
let FileUploadsExample;
module.watch(require("../ui/components/forms/file-uploads"), {
  default(v) {
    FileUploadsExample = v;
  }

}, 44);
let GeneralExample;
module.watch(require("../ui/components/forms/general"), {
  default(v) {
    GeneralExample = v;
  }

}, 45);
let ImageCroppingExample;
module.watch(require("../ui/components/forms/image-cropping"), {
  default(v) {
    ImageCroppingExample = v;
  }

}, 46);
let LayoutsExample;
module.watch(require("../ui/components/forms/layouts"), {
  default(v) {
    LayoutsExample = v;
  }

}, 47);
let MasksExample;
module.watch(require("../ui/components/forms/masks"), {
  default(v) {
    MasksExample = v;
  }

}, 48);
let MaterialExample;
module.watch(require("../ui/components/forms/material"), {
  default(v) {
    MaterialExample = v;
  }

}, 49);
let ValidationExample;
module.watch(require("../ui/components/forms/validation"), {
  default(v) {
    ValidationExample = v;
  }

}, 50);
let WizardExample;
module.watch(require("../ui/components/forms/wizard"), {
  default(v) {
    WizardExample = v;
  }

}, 51);
let EmailExample;
module.watch(require("../ui/components/pages/email"), {
  default(v) {
    EmailExample = v;
  }

}, 52);
let FaqExample;
module.watch(require("../ui/components/pages/faq"), {
  default(v) {
    FaqExample = v;
  }

}, 53);
let GalleryExample;
module.watch(require("../ui/components/pages/gallery"), {
  default(v) {
    GalleryExample = v;
  }

}, 54);
let GalleryGridExample;
module.watch(require("../ui/components/pages/gallery-grid"), {
  default(v) {
    GalleryGridExample = v;
  }

}, 55);
let InvoiceExample;
module.watch(require("../ui/components/pages/invoice"), {
  default(v) {
    InvoiceExample = v;
  }

}, 56);
let ProfileExample;
module.watch(require("../ui/components/pages/profile"), {
  default(v) {
    ProfileExample = v;
  }

}, 57);
let SearchResultExample;
module.watch(require("../ui/components/pages/search-result"), {
  default(v) {
    SearchResultExample = v;
  }

}, 58);
let SiteMapExample;
module.watch(require("../ui/components/pages/site-map"), {
  default(v) {
    SiteMapExample = v;
  }

}, 59);
let UserListExample;
module.watch(require("../ui/components/pages/user-list"), {
  default(v) {
    UserListExample = v;
  }

}, 60);
let AlertsExample;
module.watch(require("../ui/components/structure/alerts"), {
  default(v) {
    AlertsExample = v;
  }

}, 61);
let BlockquotesExample;
module.watch(require("../ui/components/structure/blockquotes"), {
  default(v) {
    BlockquotesExample = v;
  }

}, 62);
let BreadcrumbsExample;
module.watch(require("../ui/components/structure/breadcrumbs"), {
  default(v) {
    BreadcrumbsExample = v;
  }

}, 63);
let ChatExample;
module.watch(require("../ui/components/structure/chat"), {
  default(v) {
    ChatExample = v;
  }

}, 64);
let CommentsExample;
module.watch(require("../ui/components/structure/comments"), {
  default(v) {
    CommentsExample = v;
  }

}, 65);
let CoverExample;
module.watch(require("../ui/components/structure/cover"), {
  default(v) {
    CoverExample = v;
  }

}, 66);
let MediaExample;
module.watch(require("../ui/components/structure/media"), {
  default(v) {
    MediaExample = v;
  }

}, 67);
let NavExample;
module.watch(require("../ui/components/structure/nav"), {
  default(v) {
    NavExample = v;
  }

}, 68);
let NavBarsExample;
module.watch(require("../ui/components/structure/navbars"), {
  default(v) {
    NavBarsExample = v;
  }

}, 69);
let OverlayExample;
module.watch(require("../ui/components/structure/overlay"), {
  default(v) {
    OverlayExample = v;
  }

}, 70);
let PaginationExample;
module.watch(require("../ui/components/structure/pagination"), {
  default(v) {
    PaginationExample = v;
  }

}, 71);
let PricingTablesExample;
module.watch(require("../ui/components/structure/pricing-tables"), {
  default(v) {
    PricingTablesExample = v;
  }

}, 72);
let RibbonExample;
module.watch(require("../ui/components/structure/ribbon"), {
  default(v) {
    RibbonExample = v;
  }

}, 73);
let StepExample;
module.watch(require("../ui/components/structure/step"), {
  default(v) {
    StepExample = v;
  }

}, 74);
let TestimonialsExample;
module.watch(require("../ui/components/structure/testimonials"), {
  default(v) {
    TestimonialsExample = v;
  }

}, 75);
let TimelineExample;
module.watch(require("../ui/components/structure/timeline"), {
  default(v) {
    TimelineExample = v;
  }

}, 76);
let TimelineSimpleExample;
module.watch(require("../ui/components/structure/timeline-simple"), {
  default(v) {
    TimelineSimpleExample = v;
  }

}, 77);
let BasicExample;
module.watch(require("../ui/components/tables/basic"), {
  default(v) {
    BasicExample = v;
  }

}, 78);
let BootstrapExample;
module.watch(require("../ui/components/tables/bootstrap"), {
  default(v) {
    BootstrapExample = v;
  }

}, 79);
let DatatableExample;
module.watch(require("../ui/components/tables/datatable"), {
  default(v) {
    DatatableExample = v;
  }

}, 80);
let EditableExample;
module.watch(require("../ui/components/tables/editable"), {
  default(v) {
    EditableExample = v;
  }

}, 81);
let FloatTheadExample;
module.watch(require("../ui/components/tables/floatthead"), {
  default(v) {
    FloatTheadExample = v;
  }

}, 82);
let FootableExample;
module.watch(require("../ui/components/tables/footable"), {
  default(v) {
    FootableExample = v;
  }

}, 83);
let JSGridExample;
module.watch(require("../ui/components/tables/jsgrid"), {
  default(v) {
    JSGridExample = v;
  }

}, 84);
let ResponsiveExample;
module.watch(require("../ui/components/tables/responsive"), {
  default(v) {
    ResponsiveExample = v;
  }

}, 85);
let ButtonsExample;
module.watch(require("../ui/components/uikit/buttons"), {
  default(v) {
    ButtonsExample = v;
  }

}, 86);
let CardsExample;
module.watch(require("../ui/components/uikit/cards"), {
  default(v) {
    CardsExample = v;
  }

}, 87);
let CarouselExample;
module.watch(require("../ui/components/uikit/carousel"), {
  default(v) {
    CarouselExample = v;
  }

}, 88);
let ColorsExample;
module.watch(require("../ui/components/uikit/colors"), {
  default(v) {
    ColorsExample = v;
  }

}, 89);
let DropdownsExample;
module.watch(require("../ui/components/uikit/dropdowns"), {
  default(v) {
    DropdownsExample = v;
  }

}, 90);
let IconsExample;
module.watch(require("../ui/components/uikit/icons"), {
  default(v) {
    IconsExample = v;
  }

}, 91);
let ImagesExample;
module.watch(require("../ui/components/uikit/images"), {
  default(v) {
    ImagesExample = v;
  }

}, 92);
let LabelsExample;
module.watch(require("../ui/components/uikit/labels"), {
  default(v) {
    LabelsExample = v;
  }

}, 93);
let ListExample;
module.watch(require("../ui/components/uikit/list"), {
  default(v) {
    ListExample = v;
  }

}, 94);
let ModalsExamples;
module.watch(require("../ui/components/uikit/modals"), {
  default(v) {
    ModalsExamples = v;
  }

}, 95);
let PanelActionsExample;
module.watch(require("../ui/components/uikit/panel-actions"), {
  default(v) {
    PanelActionsExample = v;
  }

}, 96);
let PanelPortletsExample;
module.watch(require("../ui/components/uikit/panel-portlets"), {
  default(v) {
    PanelPortletsExample = v;
  }

}, 97);
let PanelStructureExample;
module.watch(require("../ui/components/uikit/panel-structure"), {
  default(v) {
    PanelStructureExample = v;
  }

}, 98);
let ProgressBarsExample;
module.watch(require("../ui/components/uikit/progress-bars"), {
  default(v) {
    ProgressBarsExample = v;
  }

}, 99);
let TabsAccordionsExample;
module.watch(require("../ui/components/uikit/tabs-accordions"), {
  default(v) {
    TabsAccordionsExample = v;
  }

}, 100);
let TooltipPopoverExample;
module.watch(require("../ui/components/uikit/tooltip-popover"), {
  default(v) {
    TooltipPopoverExample = v;
  }

}, 101);
let TypographyExample;
module.watch(require("../ui/components/uikit/typography"), {
  default(v) {
    TypographyExample = v;
  }

}, 102);
let UtilitiesExample;
module.watch(require("../ui/components/uikit/utilities"), {
  default(v) {
    UtilitiesExample = v;
  }

}, 103);
let BlogExample;
module.watch(require("../ui/components/widgets/blog"), {
  default(v) {
    BlogExample = v;
  }

}, 104);
let ChartExample;
module.watch(require("../ui/components/widgets/chart"), {
  default(v) {
    ChartExample = v;
  }

}, 105);
let DataExample;
module.watch(require("../ui/components/widgets/data"), {
  default(v) {
    DataExample = v;
  }

}, 106);
let SocialExample;
module.watch(require("../ui/components/widgets/social"), {
  default(v) {
    SocialExample = v;
  }

}, 107);
let StatisticsExample;
module.watch(require("../ui/components/widgets/statistics"), {
  default(v) {
    StatisticsExample = v;
  }

}, 108);
let WeatherExample;
module.watch(require("../ui/components/widgets/weather"), {
  default(v) {
    WeatherExample = v;
  }

}, 109);
const ExampleRoutes = React.createElement(Route, {
  path: "examples",
  component: Examples
}, React.createElement(IndexRoute, {
  component: Index
}), React.createElement(Route, {
  path: "dashboard",
  component: Dashboard
}), React.createElement(Route, {
  path: "ecommerce",
  component: Ecommerce
}), React.createElement(Route, {
  path: "analytics",
  component: Analytics
}), React.createElement(Route, {
  path: "team",
  component: Team
}), React.createElement(Route, {
  path: "pages",
  component: Pages
}, React.createElement(Route, {
  path: "email",
  component: EmailExample
}), React.createElement(Route, {
  path: "faq",
  component: FaqExample
}), React.createElement(Route, {
  path: "gallery-grid",
  component: GalleryGridExample
}), React.createElement(Route, {
  path: "gallery",
  component: GalleryExample
}), React.createElement(Route, {
  path: "invoice",
  component: InvoiceExample
}), React.createElement(Route, {
  path: "profile",
  component: ProfileExample
}), React.createElement(Route, {
  path: "search-result",
  component: SearchResultExample
}), React.createElement(Route, {
  path: "site-map",
  component: SiteMapExample
}), React.createElement(Route, {
  path: "user",
  component: UserListExample
})), React.createElement(Route, {
  path: "uikit",
  component: UiKit
}, React.createElement(Route, {
  path: "buttons",
  component: ButtonsExample
}), React.createElement(Route, {
  path: "cards",
  component: CardsExample
}), React.createElement(Route, {
  path: "carousel",
  component: CarouselExample
}), React.createElement(Route, {
  path: "colors",
  component: ColorsExample
}), React.createElement(Route, {
  path: "dropdowns",
  component: DropdownsExample
}), React.createElement(Route, {
  path: "icons",
  component: IconsExample
}), React.createElement(Route, {
  path: "images",
  component: ImagesExample
}), React.createElement(Route, {
  path: "labels",
  component: LabelsExample
}), React.createElement(Route, {
  path: "list",
  component: ListExample
}), React.createElement(Route, {
  path: "modals",
  component: ModalsExamples
}), React.createElement(Route, {
  path: "panel-actions",
  component: PanelActionsExample
}), React.createElement(Route, {
  path: "panel-portlets",
  component: PanelPortletsExample
}), React.createElement(Route, {
  path: "panel-structure",
  component: PanelStructureExample
}), React.createElement(Route, {
  path: "progress-bars",
  component: ProgressBarsExample
}), React.createElement(Route, {
  path: "tabs-accordions",
  component: TabsAccordionsExample
}), React.createElement(Route, {
  path: "tooltip-popover",
  component: TooltipPopoverExample
}), React.createElement(Route, {
  path: "typography",
  component: TypographyExample
}), React.createElement(Route, {
  path: "utilities",
  component: UtilitiesExample
})), React.createElement(Route, {
  path: "structure",
  component: Structure
}, React.createElement(Route, {
  path: "alerts",
  component: AlertsExample
}), React.createElement(Route, {
  path: "blockquotes",
  component: BlockquotesExample
}), React.createElement(Route, {
  path: "breadcrumbs",
  component: BreadcrumbsExample
}), React.createElement(Route, {
  path: "chat",
  component: ChatExample
}), React.createElement(Route, {
  path: "comments",
  component: CommentsExample
}), React.createElement(Route, {
  path: "cover",
  component: CoverExample
}), React.createElement(Route, {
  path: "media",
  component: MediaExample
}), React.createElement(Route, {
  path: "nav",
  component: NavExample
}), React.createElement(Route, {
  path: "navbars",
  component: NavBarsExample
}), React.createElement(Route, {
  path: "overlay",
  component: OverlayExample
}), React.createElement(Route, {
  path: "pagination",
  component: PaginationExample
}), React.createElement(Route, {
  path: "pricing-tables",
  component: PricingTablesExample
}), React.createElement(Route, {
  path: "ribbon",
  component: RibbonExample
}), React.createElement(Route, {
  path: "step",
  component: StepExample
}), React.createElement(Route, {
  path: "testimonials",
  component: TestimonialsExample
}), React.createElement(Route, {
  path: "timeline",
  component: TimelineExample
}), React.createElement(Route, {
  path: "timeline-simple",
  component: TimelineSimpleExample
})), React.createElement(Route, {
  path: "advanced",
  component: Advanced
}, React.createElement(Route, {
  path: "alertify",
  component: AlertifyExample
}), React.createElement(Route, {
  path: "animation",
  component: AnimationExample
}), React.createElement(Route, {
  path: "bootbox-sweetalert",
  component: SweetalertExample
}), React.createElement(Route, {
  path: "chardin",
  component: ChardinExample
}), React.createElement(Route, {
  path: "context-menu",
  component: ContextMenuExample
}), React.createElement(Route, {
  path: "highlight",
  component: HighlightExample
}), React.createElement(Route, {
  path: "lightbox",
  component: LightboxExample
}), React.createElement(Route, {
  path: "maps-vector",
  component: MapsVectorExample
}), React.createElement(Route, {
  path: "masonry",
  component: MasonryExample
}), React.createElement(Route, {
  path: "rating",
  component: RatingExample
}), React.createElement(Route, {
  path: "scrollable",
  component: ScrollableExample
}), React.createElement(Route, {
  path: "sortable-nestable",
  component: SortableNestedExample
}), React.createElement(Route, {
  path: "toastr",
  component: ToastrExample
}), React.createElement(Route, {
  path: "treeview",
  component: TreeViewExample
})), React.createElement(Route, {
  path: "widgets",
  component: Widgets
}, React.createElement(Route, {
  path: "blog",
  component: BlogExample
}), React.createElement(Route, {
  path: "chart",
  component: ChartExample
}), React.createElement(Route, {
  path: "data",
  component: DataExample
}), React.createElement(Route, {
  path: "social",
  component: SocialExample
}), React.createElement(Route, {
  path: "statistics",
  component: StatisticsExample
}), React.createElement(Route, {
  path: "weather",
  component: WeatherExample
})), React.createElement(Route, {
  path: "forms",
  component: Forms
}, React.createElement(Route, {
  path: "advanced",
  component: AdvancedExample
}), React.createElement(Route, {
  path: "editor-ace",
  component: EditorAceExample
}), React.createElement(Route, {
  path: "editor-markdown",
  component: EditorMarkdownExample
}), React.createElement(Route, {
  path: "editor-summernote",
  component: EditorSummernoteExample
}), React.createElement(Route, {
  path: "file-uploads",
  component: FileUploadsExample
}), React.createElement(Route, {
  path: "general",
  component: GeneralExample
}), React.createElement(Route, {
  path: "image-cropping",
  component: ImageCroppingExample
}), React.createElement(Route, {
  path: "layouts",
  component: LayoutsExample
}), React.createElement(Route, {
  path: "masks",
  component: MasksExample
}), React.createElement(Route, {
  path: "material",
  component: MaterialExample
}), React.createElement(Route, {
  path: "validation",
  component: ValidationExample
}), React.createElement(Route, {
  path: "wizard",
  component: WizardExample
})), React.createElement(Route, {
  path: "tables",
  component: Tables
}, React.createElement(Route, {
  path: "basic",
  component: BasicExample
}), React.createElement(Route, {
  path: "bootstrap",
  component: BootstrapExample
}), React.createElement(Route, {
  path: "datatable",
  component: DatatableExample
}), React.createElement(Route, {
  path: "editable",
  component: EditableExample
}), React.createElement(Route, {
  path: "floatthead",
  component: FloatTheadExample
}), React.createElement(Route, {
  path: "footable",
  component: FootableExample
}), React.createElement(Route, {
  path: "jsgrid",
  component: JSGridExample
}), React.createElement(Route, {
  path: "responsive",
  component: ResponsiveExample
})), React.createElement(Route, {
  path: "charts",
  component: Charts
}, React.createElement(Route, {
  path: "c3",
  component: C3Example
}), React.createElement(Route, {
  path: "chartist",
  component: ChartistExample
}), React.createElement(Route, {
  path: "chartjs",
  component: ChartJSExample
}), React.createElement(Route, {
  path: "gauges",
  component: GaugesExample
}), React.createElement(Route, {
  path: "highcharts",
  component: HighchartsExample
}), React.createElement(Route, {
  path: "morris",
  component: MorrisExample
}), React.createElement(Route, {
  path: "peity",
  component: PeityExample
}), React.createElement(Route, {
  path: "pie-progress",
  component: PieProgressExample
}), React.createElement(Route, {
  path: "rickshaw",
  component: RickshawExample
}), React.createElement(Route, {
  path: "sparkline",
  component: SparklineExample
})));
module.exportDefault(ExampleRoutes);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"reducers":{"bundle.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/examples/reducers/bundle.jsx                                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
const Reducers = {};
module.exportDefault(Reducers);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"pricing":{"ui":{"components":{"table":{"basic.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/pricing/ui/components/table/basic.jsx                                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Link;
module.watch(require("react-router"), {
  Link(v) {
    Link = v;
  }

}, 1);
let Modal;
module.watch(require("react-modal"), {
  default(v) {
    Modal = v;
  }

}, 2);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 3);

class Basic extends React.Component {
  render() {
    let getTranslation = key => {
      return "Pricing.table." + key;
    };

    return React.createElement("div", {
      className: "pricing-column-five"
    }, React.createElement("div", {
      className: "pricing-header"
    }, React.createElement("div", {
      className: "pricing-price"
    }, React.createElement("span", {
      className: "pricing-currency"
    }, "$"), React.createElement("span", {
      className: "pricing-amount"
    }, "29"), React.createElement("span", {
      className: "pricing-period"
    }, "/ m")), React.createElement("div", {
      className: "pricing-title"
    }, React.createElement(Translate, {
      value: getTranslation("basic.title")
    }))), React.createElement("ul", {
      className: "pricing-features"
    }, React.createElement("li", null, "6%"), React.createElement("li", null, "-"), React.createElement("li", null, "10%"), React.createElement("li", null, "Basic"), React.createElement("li", null, "Basic"), React.createElement("li", null, React.createElement("i", {
      className: "fa fa-check",
      "aria-hidden": "true"
    })), React.createElement("li", null, React.createElement("i", {
      className: "fa fa-check",
      "aria-hidden": "true"
    })), React.createElement("li", null, "7/2"), React.createElement("li", null, "3"), React.createElement("li", null, React.createElement("i", {
      className: "fa fa-check",
      "aria-hidden": "true"
    })), React.createElement("li", null, React.createElement("i", {
      className: "fa fa-check",
      "aria-hidden": "true"
    })), React.createElement("li", null, React.createElement("i", {
      className: "fa fa-times",
      "aria-hidden": "true"
    })), React.createElement("li", null, "10"), React.createElement("li", null, "3%"), React.createElement("li", null, React.createElement("i", {
      className: "fa fa-times",
      "aria-hidden": "true"
    })), React.createElement("li", null, React.createElement("i", {
      className: "fa fa-check",
      "aria-hidden": "true"
    })), React.createElement("li", null, "1"), React.createElement("li", null, "3")), React.createElement("div", {
      className: "pricing-footer"
    }, React.createElement("a", {
      className: "btn btn-primary btn-outline",
      role: "button",
      href: "#"
    }, React.createElement(Translate, {
      value: getTranslation("legends.selectPlan")
    }))));
  }

}

module.exportDefault(Basic);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"enterprise.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/pricing/ui/components/table/enterprise.jsx                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Link;
module.watch(require("react-router"), {
  Link(v) {
    Link = v;
  }

}, 1);
let Modal;
module.watch(require("react-modal"), {
  default(v) {
    Modal = v;
  }

}, 2);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 3);

class Basic extends React.Component {
  render() {
    let getTranslation = key => {
      return "Pricing.table." + key;
    };

    return React.createElement("div", {
      className: "pricing-column-five"
    }, React.createElement("div", {
      className: "pricing-header"
    }, React.createElement("div", {
      className: "pricing-price"
    }, React.createElement("span", {
      className: "pricing-currency"
    }, "$"), React.createElement("span", {
      className: "pricing-amount"
    }, "299"), React.createElement("span", {
      className: "pricing-period"
    }, "/ m")), React.createElement("div", {
      className: "pricing-title"
    }, React.createElement(Translate, {
      value: getTranslation("enterprise.title")
    }))), React.createElement("ul", {
      className: "pricing-features"
    }, React.createElement("li", null, "Free"), React.createElement("li", null, "High"), React.createElement("li", null, "Free"), React.createElement("li", null, "Advance"), React.createElement("li", null, "Advance"), React.createElement("li", null, React.createElement("i", {
      className: "fa fa-times",
      "aria-hidden": "true"
    })), React.createElement("li", null, React.createElement("i", {
      className: "fa fa-check",
      "aria-hidden": "true"
    })), React.createElement("li", null, "60/10"), React.createElement("li", null, "30"), React.createElement("li", null, React.createElement("i", {
      className: "fa fa-check",
      "aria-hidden": "true"
    })), React.createElement("li", null, React.createElement("i", {
      className: "fa fa-check",
      "aria-hidden": "true"
    })), React.createElement("li", null, React.createElement("i", {
      className: "fa fa-check",
      "aria-hidden": "true"
    })), React.createElement("li", null, "Unlimited"), React.createElement("li", null, "10%"), React.createElement("li", null, "24"), React.createElement("li", null, React.createElement("i", {
      className: "fa fa-times",
      "aria-hidden": "true"
    })), React.createElement("li", null, "7"), React.createElement("li", null, "12")), React.createElement("div", {
      className: "pricing-footer"
    }, React.createElement("a", {
      className: "btn btn-primary btn-outline",
      role: "button",
      href: "#"
    }, React.createElement(Translate, {
      value: getTranslation("legends.selectPlan")
    }))));
  }

}

module.exportDefault(Basic);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"free.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/pricing/ui/components/table/free.jsx                                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Link;
module.watch(require("react-router"), {
  Link(v) {
    Link = v;
  }

}, 1);
let Modal;
module.watch(require("react-modal"), {
  default(v) {
    Modal = v;
  }

}, 2);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 3);

class Basic extends React.Component {
  render() {
    let getTranslation = key => {
      return "Pricing.table." + key;
    };

    return React.createElement("div", {
      className: "pricing-column-five"
    }, React.createElement("div", {
      className: "pricing-header"
    }, React.createElement("div", {
      className: "pricing-price"
    }, React.createElement("span", {
      className: "pricing-currency"
    }, "$"), React.createElement("span", {
      className: "pricing-amount"
    }, "0"), React.createElement("span", {
      className: "pricing-period"
    }, "/ m")), React.createElement("div", {
      className: "pricing-title"
    }, React.createElement(Translate, {
      value: getTranslation("free.title")
    }))), React.createElement("ul", {
      className: "pricing-features"
    }, React.createElement("li", null, "10%"), React.createElement("li", null, "-"), React.createElement("li", null, "15%"), React.createElement("li", null, React.createElement("i", {
      className: "fa fa-times",
      "aria-hidden": "true"
    })), React.createElement("li", null, "-"), React.createElement("li", null, React.createElement("i", {
      className: "fa fa-check",
      "aria-hidden": "true"
    })), React.createElement("li", null, "-"), React.createElement("li", null, "3/1"), React.createElement("li", null, "1"), React.createElement("li", null, React.createElement("i", {
      className: "fa fa-times",
      "aria-hidden": "true"
    })), React.createElement("li", null, React.createElement("i", {
      className: "fa fa-times",
      "aria-hidden": "true"
    })), React.createElement("li", null, React.createElement("i", {
      className: "fa fa-times",
      "aria-hidden": "true"
    })), React.createElement("li", null, React.createElement("i", {
      className: "fa fa-times",
      "aria-hidden": "true"
    })), React.createElement("li", null, "-"), React.createElement("li", null, React.createElement("i", {
      className: "fa fa-times",
      "aria-hidden": "true"
    })), React.createElement("li", null, React.createElement("i", {
      className: "fa fa-check",
      "aria-hidden": "true"
    })), React.createElement("li", null, "-"), React.createElement("li", null, "1")), React.createElement("div", {
      className: "pricing-footer"
    }, React.createElement("a", {
      className: "btn btn-primary btn-outline",
      role: "button",
      href: "#"
    }, React.createElement(Translate, {
      value: getTranslation("legends.selectPlan")
    }))));
  }

}

module.exportDefault(Basic);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"index.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/pricing/ui/components/table/index.jsx                                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Link;
module.watch(require("react-router"), {
  Link(v) {
    Link = v;
  }

}, 1);
let Modal;
module.watch(require("react-modal"), {
  default(v) {
    Modal = v;
  }

}, 2);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 3);
let Legends;
module.watch(require("./legends"), {
  default(v) {
    Legends = v;
  }

}, 4);
let Free;
module.watch(require("./free"), {
  default(v) {
    Free = v;
  }

}, 5);
let Basic;
module.watch(require("./basic"), {
  default(v) {
    Basic = v;
  }

}, 6);
let Management;
module.watch(require("./management"), {
  default(v) {
    Management = v;
  }

}, 7);
let Professional;
module.watch(require("./professional"), {
  default(v) {
    Professional = v;
  }

}, 8);
let Enterprise;
module.watch(require("./enterprise"), {
  default(v) {
    Enterprise = v;
  }

}, 9);

class PricingTable extends React.Component {
  render() {
    let getTranslation = key => {
      return "Pricing.table." + key;
    };

    return React.createElement("div", {
      className: "page-content container-fluid pricing"
    }, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-3"
    }, React.createElement(Legends, null)), React.createElement("div", {
      className: "col-md-9"
    }, React.createElement("div", {
      className: "pricing-table"
    }, React.createElement(Free, null), React.createElement(Basic, null), React.createElement(Management, null), React.createElement(Professional, null), React.createElement(Enterprise, null)))));
  }

}

module.exportDefault(PricingTable);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"legends.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/pricing/ui/components/table/legends.jsx                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Link;
module.watch(require("react-router"), {
  Link(v) {
    Link = v;
  }

}, 1);
let Modal;
module.watch(require("react-modal"), {
  default(v) {
    Modal = v;
  }

}, 2);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 3);

class Legends extends React.Component {
  render() {
    let getTranslation = key => {
      return "Pricing.table." + key;
    };

    return React.createElement("div", {
      className: "pricing-table"
    }, React.createElement("div", {
      className: "pricing-column-one"
    }, React.createElement("div", {
      className: "pricing-header"
    }, React.createElement("div", {
      className: "pricing-price"
    }, React.createElement("div", {
      style: {
        height: 84
      }
    }))), React.createElement("ul", {
      className: "pricing-features"
    }, React.createElement("li", null, React.createElement(Translate, {
      value: getTranslation("legends.advertisingPercentage")
    })), React.createElement("li", null, React.createElement(Translate, {
      value: getTranslation("legends.newsExposition")
    })), React.createElement("li", null, React.createElement(Translate, {
      value: getTranslation("legends.hashtagRemoval")
    })), React.createElement("li", null, React.createElement(Translate, {
      value: getTranslation("legends.profileAnalytics")
    })), React.createElement("li", null, React.createElement(Translate, {
      value: getTranslation("legends.campaignAnalytics")
    })), React.createElement("li", null, React.createElement(Translate, {
      value: getTranslation("legends.ibolAdvertising")
    })), React.createElement("li", null, React.createElement(Translate, {
      value: getTranslation("legends.teamAttack")
    })), React.createElement("li", null, React.createElement(Translate, {
      value: getTranslation("legends.photosAndVideo")
    })), React.createElement("li", null, React.createElement(Translate, {
      value: getTranslation("legends.addRemoveAccounts")
    })), React.createElement("li", null, React.createElement(Translate, {
      value: getTranslation("legends.referenceCostCount")
    })), React.createElement("li", null, React.createElement(Translate, {
      value: getTranslation("legends.accountObjectives")
    })), React.createElement("li", null, React.createElement(Translate, {
      value: getTranslation("legends.activityReport")
    })), React.createElement("li", null, React.createElement(Translate, {
      value: getTranslation("legends.searchLimit")
    })), React.createElement("li", null, React.createElement(Translate, {
      value: getTranslation("legends.annualDiscount")
    })), React.createElement("li", null, React.createElement(Translate, {
      value: getTranslation("legends.support")
    })), React.createElement("li", null, React.createElement(Translate, {
      value: getTranslation("legends.audioAdvertising")
    })), React.createElement("li", null, React.createElement(Translate, {
      value: getTranslation("legends.subManagers")
    })), React.createElement("li", null, React.createElement(Translate, {
      value: getTranslation("legends.inviteActions")
    })))));
  }

}

module.exportDefault(Legends);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"management.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/pricing/ui/components/table/management.jsx                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Link;
module.watch(require("react-router"), {
  Link(v) {
    Link = v;
  }

}, 1);
let Modal;
module.watch(require("react-modal"), {
  default(v) {
    Modal = v;
  }

}, 2);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 3);

class Basic extends React.Component {
  render() {
    let getTranslation = key => {
      return "Pricing.table." + key;
    };

    return React.createElement("div", {
      className: "pricing-column-five featured"
    }, React.createElement("div", {
      className: "pricing-header"
    }, React.createElement("div", {
      className: "pricing-price"
    }, React.createElement("span", {
      className: "pricing-currency"
    }, "$"), React.createElement("span", {
      className: "pricing-amount"
    }, "89"), React.createElement("span", {
      className: "pricing-period"
    }, "/ m")), React.createElement("div", {
      className: "pricing-title"
    }, React.createElement(Translate, {
      value: getTranslation("management.title")
    }))), React.createElement("ul", {
      className: "pricing-features"
    }, React.createElement("li", null, "3%"), React.createElement("li", null, "Low"), React.createElement("li", null, "5%"), React.createElement("li", null, "Medium"), React.createElement("li", null, "Medium"), React.createElement("li", null, React.createElement("i", {
      className: "fa fa-times",
      "aria-hidden": "true"
    })), React.createElement("li", null, React.createElement("i", {
      className: "fa fa-check",
      "aria-hidden": "true"
    })), React.createElement("li", null, "17/3"), React.createElement("li", null, "5"), React.createElement("li", null, React.createElement("i", {
      className: "fa fa-check",
      "aria-hidden": "true"
    })), React.createElement("li", null, React.createElement("i", {
      className: "fa fa-check",
      "aria-hidden": "true"
    })), React.createElement("li", null, React.createElement("i", {
      className: "fa fa-check",
      "aria-hidden": "true"
    })), React.createElement("li", null, "25"), React.createElement("li", null, "5%"), React.createElement("li", null, React.createElement("i", {
      className: "fa fa-times",
      "aria-hidden": "true"
    })), React.createElement("li", null, React.createElement("i", {
      className: "fa fa-times",
      "aria-hidden": "true"
    })), React.createElement("li", null, "2"), React.createElement("li", null, "5")), React.createElement("div", {
      className: "pricing-footer"
    }, React.createElement("a", {
      className: "btn btn-primary btn-outline",
      role: "button",
      href: "#"
    }, React.createElement(Translate, {
      value: getTranslation("legends.selectPlan")
    }))));
  }

}

module.exportDefault(Basic);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"professional.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/pricing/ui/components/table/professional.jsx                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Link;
module.watch(require("react-router"), {
  Link(v) {
    Link = v;
  }

}, 1);
let Modal;
module.watch(require("react-modal"), {
  default(v) {
    Modal = v;
  }

}, 2);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 3);

class Basic extends React.Component {
  render() {
    let getTranslation = key => {
      return "Pricing.table." + key;
    };

    return React.createElement("div", {
      className: "pricing-column-five"
    }, React.createElement("div", {
      className: "pricing-header"
    }, React.createElement("div", {
      className: "pricing-price"
    }, React.createElement("span", {
      className: "pricing-currency"
    }, "$"), React.createElement("span", {
      className: "pricing-amount"
    }, "199"), React.createElement("span", {
      className: "pricing-period"
    }, "/ m")), React.createElement("div", {
      className: "pricing-title"
    }, React.createElement(Translate, {
      value: getTranslation("professional.title")
    }))), React.createElement("ul", {
      className: "pricing-features"
    }, React.createElement("li", null, "1%"), React.createElement("li", null, "Medium"), React.createElement("li", null, "Free"), React.createElement("li", null, "Advance"), React.createElement("li", null, "Advance"), React.createElement("li", null, React.createElement("i", {
      className: "fa fa-times",
      "aria-hidden": "true"
    })), React.createElement("li", null, React.createElement("i", {
      className: "fa fa-check",
      "aria-hidden": "true"
    })), React.createElement("li", null, "25/5"), React.createElement("li", null, "10"), React.createElement("li", null, React.createElement("i", {
      className: "fa fa-check",
      "aria-hidden": "true"
    })), React.createElement("li", null, React.createElement("i", {
      className: "fa fa-check",
      "aria-hidden": "true"
    })), React.createElement("li", null, React.createElement("i", {
      className: "fa fa-check",
      "aria-hidden": "true"
    })), React.createElement("li", null, "Unlimited"), React.createElement("li", null, "7%"), React.createElement("li", null, "12"), React.createElement("li", null, React.createElement("i", {
      className: "fa fa-times",
      "aria-hidden": "true"
    })), React.createElement("li", null, "5"), React.createElement("li", null, "7")), React.createElement("div", {
      className: "pricing-footer"
    }, React.createElement("a", {
      className: "btn btn-primary btn-outline",
      role: "button",
      href: "#"
    }, React.createElement(Translate, {
      value: getTranslation("legends.selectPlan")
    }))));
  }

}

module.exportDefault(Basic);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"layouts":{"layout.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/pricing/ui/layouts/layout.jsx                                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let PricingTable;
module.watch(require("../components/table/index"), {
  default(v) {
    PricingTable = v;
  }

}, 1);

class Layout extends React.Component {
  render() {
    let getTranslation = key => {
      return "Pricing.table." + key;
    };

    return React.createElement("div", null, React.createElement(PricingTable, null));
  }

}

module.exportDefault(Layout);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"pricing.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/pricing/ui/layouts/pricing.jsx                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class Pricing extends React.Component {
  render() {
    let filter = obj => {
      let newProps = {};
      let key;

      for (key in obj) {
        if (key !== "children") {
          newProps[key] = obj[key];
        }
      }

      return newProps;
    };

    return React.createElement("div", {
      className: "page-content container-fluid"
    }, React.cloneElement(this.props.children, filter(this.props)));
  }

}

module.exportDefault(Pricing);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"actions":{"bundle.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/pricing/actions/bundle.jsx                                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let Actions = {};
module.exportDefault(Actions);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"client":{"bundle.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/pricing/client/bundle.jsx                                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let Routes;
module.watch(require("./routes"), {
  default(v) {
    Routes = v;
  }

}, 0);
let Reducers;
module.watch(require("../reducers/bundle"), {
  default(v) {
    Reducers = v;
  }

}, 1);
let Actions;
module.watch(require("../actions/bundle"), {
  default(v) {
    Actions = v;
  }

}, 2);
let Translations;
module.watch(require("./translations"), {
  default(v) {
    Translations = v;
  }

}, 3);
module.exportDefault({
  reducers: Reducers,
  routes: Routes,
  actions: Actions,
  translations: Translations
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"routes.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/pricing/client/routes.jsx                                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Route, IndexRoute;
module.watch(require("react-router"), {
  Route(v) {
    Route = v;
  },

  IndexRoute(v) {
    IndexRoute = v;
  }

}, 1);
let Pricing;
module.watch(require("../ui/layouts/pricing"), {
  default(v) {
    Pricing = v;
  }

}, 2);
let Layout;
module.watch(require("../ui/layouts/layout"), {
  default(v) {
    Layout = v;
  }

}, 3);
module.exportDefault(React.createElement(Route, {
  path: "/pricing",
  component: Pricing
}, React.createElement(IndexRoute, {
  component: Layout
})));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"translations.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/pricing/client/translations.jsx                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.exportDefault({
  en: {
    menu: "Plans",
    table: {
      legends: {
        advertisingPercentage: "Advertising Percentage Cost",
        newsExposition: "Increase Account Promotion in News",
        hashtagRemoval: "Remove default hashtags",
        profileAnalytics: "Profile Analytics",
        campaignAnalytics: "Campaign Analytics",
        ibolAdvertising: "Platform Advertising",
        teamAttack: "Team Attack",
        photosAndVideo: "Photos & Video",
        addRemoveAccounts: "Add & Remove Accounts per Month",
        referenceCostCount: "Reference Cost per Account & Post",
        accountObjectives: "Account Objectives",
        activityReport: "Activity Report",
        searchLimit: "Universal Search Limit",
        annualDiscount: "Annual Discount",
        support: "Support 12/24",
        audioAdvertising: "Audio Advertising",
        subManagers: "Sub-Managers",
        inviteActions: "Invite Actions",
        selectPlan: "Select Plan"
      },
      free: {
        title: "Free"
      },
      basic: {
        title: "Basic"
      },
      management: {
        title: "Management"
      },
      professional: {
        title: "Professional"
      },
      enterprise: {
        title: "Enterprise"
      }
    }
  },
  es: {
    menu: "Planes",
    table: {
      legends: {
        advertisingPercentage: "Porcentaje de cobro por publicidad ",
        newsExposition: "Mayor exposicion de tu RS en NEWS",
        hashtagRemoval: "Quitar Hashtags predefinidos",
        profileAnalytics: "Analytics (Estado Actual RS)",
        campaignAnalytics: "Analytics campaña",
        ibolAdvertising: "Publicidad en Plataforma",
        teamAttack: "Team Attack",
        photosAndVideo: "Fotos y video",
        addRemoveAccounts: "Agregar y quitar cuentas un máximo por mes",
        referenceCostCount: "Referencias de costo por cuenta y post de rs",
        accountObjectives: "Perfil Metas",
        activityReport: "Reporte de actividades",
        searchLimit: "Número de busquedas Buscador Universal",
        annualDiscount: "Descuento por pago anual",
        support: "Soporte 12/24",
        audioAdvertising: "Publicidad en Audio",
        subManagers: "SubAdministradores",
        inviteActions: "Mensajes por convocatoria",
        selectPlan: "Seleccionar Plan"
      },
      free: {
        title: "Gratuita"
      },
      basic: {
        title: "Básica"
      },
      management: {
        title: "Management"
      },
      professional: {
        title: "Profesional"
      },
      enterprise: {
        title: "Empresarial"
      }
    }
  },
  zz: {
    menu: "測試",
    table: {
      legends: {
        advertisingPercentage: "測試 測試 測試",
        newsExposition: "測試 測試 測試 測試 測試",
        hashtagRemoval: "測試 測試 測試",
        profileAnalytics: "測試 測試",
        campaignAnalytics: "測試 測試",
        ibolAdvertising: "測試 測試",
        teamAttack: "測試 測試",
        photosAndVideo: "測試 & 測試",
        addRemoveAccounts: "測試 & 測試 測試 測試 測試",
        referenceCostCount: "測試 測試 測試 測試 & 測試",
        accountObjectives: "測試 測試",
        activityReport: "測試 測試",
        searchLimit: "測試 測試 測試",
        annualDiscount: "測試 測試",
        support: "測試 12/24",
        audioAdvertising: "測試 測試",
        subManagers: "測試-測試",
        inviteActions: "測試 測試",
        selectPlan: "測試 測試"
      },
      free: {
        title: "測試"
      },
      basic: {
        title: "測試"
      },
      management: {
        title: "測試"
      },
      professional: {
        title: "測試"
      },
      enterprise: {
        title: "測試"
      }
    }
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"reducers":{"bundle.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/pricing/reducers/bundle.jsx                                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
const Reducers = {};
module.exportDefault(Reducers);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"search":{"ui":{"components":{"previews":{"facebook.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/search/ui/components/previews/facebook.jsx                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Video;
module.watch(require("react-html5video"), {
  DefaultPlayer(v) {
    Video = v;
  }

}, 1);
module.watch(require("react-html5video/dist/styles.css"));
let anchorme;
module.watch(require("anchorme"), {
  default(v) {
    anchorme = v;
  }

}, 2);

class FacebookPreview extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    let post = this.props.data;
    let {
      showBadge
    } = this.props;
    return React.createElement("div", {
      className: "facebook-preview"
    }, showBadge !== false && React.createElement("div", {
      className: "network"
    }, React.createElement("i", {
      className: "social-icon facebook"
    })), React.createElement("a", {
      href: post.link ? post.link : "https://facebook.com/" + post.user.screenName,
      target: "_blank",
      className: "profile"
    }, React.createElement("div", {
      className: "avatar"
    }, React.createElement("img", {
      src: post.user.avatar,
      alt: post.user.name
    })), React.createElement("div", {
      className: "information"
    }, React.createElement("div", {
      className: "name"
    }, post.user.name), React.createElement("div", {
      className: "time"
    }, moment(new Date(post.date)).fromNow()))), React.createElement("div", {
      className: "post"
    }, React.createElement("div", {
      className: "message",
      dangerouslySetInnerHTML: {
        __html: anchorme(post.description, {
          attributes: [{
            name: "target",
            value: "_blank"
          }]
        })
      }
    }), post.media.url && post.media.type === "photo" && React.createElement("div", {
      className: "media"
    }, React.createElement("img", {
      src: post.media.url,
      alt: post.description
    })), post.media.url && post.media.type === "video" && React.createElement("div", {
      className: "video"
    }, React.createElement(Video, {
      loop: true,
      muted: true,
      controls: ['PlayPause', 'Seek', 'Time', 'Volume'],
      poster: post.media.preview
    }, React.createElement("source", {
      src: post.media.url,
      type: "video/mp4"
    })))));
  }

}

module.exportDefault(FacebookPreview);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"google.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/search/ui/components/previews/google.jsx                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let anchorme;
module.watch(require("anchorme"), {
  default(v) {
    anchorme = v;
  }

}, 1);

class GooglePreview extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    let search = this.props.data;
    return React.createElement("div", {
      className: "google-preview"
    }, React.createElement("div", {
      className: "network"
    }, React.createElement("i", {
      className: "social-icon google"
    })), React.createElement("div", {
      className: "title"
    }, search.title), React.createElement("div", {
      className: "link"
    }, search.link), React.createElement("div", {
      className: "description",
      dangerouslySetInnerHTML: {
        __html: anchorme(search.description, {
          attributes: [{
            name: "target",
            value: "_blank"
          }]
        })
      }
    }));
  }

}

module.exportDefault(GooglePreview);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"instagram.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/search/ui/components/previews/instagram.jsx                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Video;
module.watch(require("react-html5video"), {
  DefaultPlayer(v) {
    Video = v;
  }

}, 1);
module.watch(require("react-html5video/dist/styles.css"));
let anchorme;
module.watch(require("anchorme"), {
  default(v) {
    anchorme = v;
  }

}, 2);

class InstagramPreview extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    let post = this.props.data;
    return React.createElement("div", {
      className: "instagram-preview"
    }, React.createElement("div", {
      className: "network"
    }, React.createElement("i", {
      className: "social-icon instagram"
    })), React.createElement("a", {
      href: "https://instagram.com/" + post.user.screenName,
      target: "_blank",
      className: "profile"
    }, React.createElement("div", {
      className: "avatar"
    }, React.createElement("img", {
      src: post.user.avatar,
      alt: post.user.name
    })), React.createElement("div", {
      className: "information"
    }, React.createElement("div", {
      className: "name"
    }, post.user.name)), React.createElement("div", {
      className: "time"
    }, React.createElement("i", {
      className: "icon wb-time",
      "aria-hidden": "true"
    }), moment(new Date(post.date)).fromNow())), React.createElement("div", {
      className: "post"
    }, post.media.url && post.media.type === "photo" && React.createElement("div", {
      className: "media"
    }, React.createElement("img", {
      src: post.media.url,
      alt: post.description
    })), post.media.url && post.media.type === "video" && React.createElement("div", {
      className: "video"
    }, React.createElement(Video, {
      loop: true,
      muted: true,
      controls: ['PlayPause', 'Seek', 'Time', 'Volume'],
      poster: post.media.preview
    }, React.createElement("source", {
      src: post.media.url,
      type: "video/mp4"
    }))), React.createElement("div", {
      className: "message"
    }, React.createElement("span", {
      className: "name"
    }, post.user.name), React.createElement("span", {
      dangerouslySetInnerHTML: {
        __html: anchorme(post.description, {
          attributes: [{
            name: "target",
            value: "_blank"
          }]
        })
      }
    }))));
  }

}

module.exportDefault(InstagramPreview);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"twitter.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/search/ui/components/previews/twitter.jsx                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Video;
module.watch(require("react-html5video"), {
  DefaultPlayer(v) {
    Video = v;
  }

}, 1);
module.watch(require("react-html5video/dist/styles.css"));
let anchorme;
module.watch(require("anchorme"), {
  default(v) {
    anchorme = v;
  }

}, 2);

class TwitterPreview extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    let tweet = this.props.data;
    return React.createElement("div", {
      className: "twitter-preview"
    }, React.createElement("div", {
      className: "network"
    }, React.createElement("i", {
      className: "social-icon twitter"
    })), React.createElement("a", {
      href: "https://twitter.com/" + tweet.user.screenName,
      target: "_blank",
      className: "profile"
    }, React.createElement("div", {
      className: "avatar"
    }, React.createElement("img", {
      src: tweet.user.avatar,
      alt: tweet.user.name
    })), React.createElement("div", {
      className: "information"
    }, React.createElement("div", {
      className: "name"
    }, tweet.user.name), React.createElement("div", {
      className: "screen-name"
    }, "@", tweet.user.screenName, tweet.date && React.createElement("span", {
      className: "time"
    }, moment(new Date(tweet.date)).fromNow())))), React.createElement("div", {
      className: "post"
    }, React.createElement("div", {
      className: "message",
      dangerouslySetInnerHTML: {
        __html: anchorme(tweet.description, {
          attributes: [{
            name: "target",
            value: "_blank"
          }]
        })
      }
    }), tweet.media.url && tweet.media.type === "photo" && React.createElement("div", {
      className: "media"
    }, React.createElement("img", {
      src: tweet.media.url,
      alt: tweet.description
    })), tweet.media.url && tweet.media.type === "video" && React.createElement("div", {
      className: "video"
    }, React.createElement(Video, {
      loop: true,
      muted: true,
      controls: ['PlayPause', 'Seek', 'Time', 'Volume'],
      poster: tweet.media.preview
    }, React.createElement("source", {
      src: tweet.media.url,
      type: "video/mp4"
    })))));
  }

}

module.exportDefault(TwitterPreview);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"trends":{"places.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/search/ui/components/trends/places.jsx                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 1);

class TrendingPlaces extends React.Component {
  constructor() {
    super();
    this.state = {
      selectedCountries: []
    };
    this.updateCountry = this.updateCountry.bind(this);
    this.updateCity = this.updateCity.bind(this);
  }

  updateCountry(e) {
    let {
      input: {
        onChange
      }
    } = this.props;
    let options = e.target.options;
    let selectedCountries = [];

    for (let i = 0, l = options.length; i < l; i++) {
      if (options[i].selected) {
        selectedCountries.push(options[i].value);
      }
    }

    this.setState({
      selectedCountries
    }, function () {
      if (selectedCountries.length === 1 && selectedCountries[0] === "1") {
        console.log("WORLDWIDE_SELECTED");
        onChange(selectedCountries[0]);
      }
    });
  }

  updateCity(e) {
    let {
      input: {
        onChange
      }
    } = this.props;
    let options = e.target.options;
    let selectedCities = [];

    for (let i = 0, l = options.length; i < l; i++) {
      if (options[i].selected) {
        selectedCities.push(options[i].value);
      }
    }

    let val = selectedCities[0];
    if (val) onChange(val);
  }

  render() {
    let getTranslation = key => {
      return "Search.tabs.trending." + key;
    };

    let {
      places
    } = this.props;
    let {
      selectedCountries
    } = this.state;
    window.places = places;
    selectedCountries = places.filter(place => selectedCountries.indexOf(place.woeid) !== -1);
    let cities = places.filter(place => selectedCountries.map(c => c.country).indexOf(place.country) !== -1);
    return React.createElement("div", {
      className: "places"
    }, React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-heading"
    }, React.createElement("h3", {
      className: "panel-title"
    }, React.createElement(Translate, {
      value: getTranslation("controls.countries")
    }))), React.createElement("div", {
      className: "panel-body container-fluid"
    }, React.createElement("select", {
      multiple: true,
      defaultValue: ["1"],
      className: "form-control",
      onChange: this.updateCountry
    }, places.filter(p => p.type === "Supername").map(location => React.createElement("option", {
      key: location.woeid,
      value: location.woeid
    }, location.name)), places.filter(p => p.type === "Country").map(location => React.createElement("option", {
      key: location.woeid,
      value: location.woeid
    }, location.name))))), React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-heading"
    }, React.createElement("h3", {
      className: "panel-title"
    }, React.createElement(Translate, {
      value: getTranslation("controls.cities")
    }))), React.createElement("div", {
      className: "panel-body container-fluid"
    }, React.createElement("select", {
      multiple: true,
      className: "form-control",
      onChange: this.updateCity
    }, cities.filter(p => p.type === "Country").map(country => React.createElement("optgroup", {
      key: country.woeid,
      label: country.name
    }, React.createElement("option", {
      value: country.woeid
    }, I18n.t(getTranslation("controls.all"))), cities.filter(p => p.country === country.country && p.type !== "Country").map(location => React.createElement("option", {
      key: location.woeid,
      value: location.woeid
    }, location.name))))))));
  }

}

module.exportDefault(TrendingPlaces);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"trends.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/search/ui/components/trends/trends.jsx                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, Localize, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  Localize(v) {
    Localize = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 1);

let _;

module.watch(require("lodash"), {
  default(v) {
    _ = v;
  }

}, 2);

class TrendingTopics extends React.Component {
  constructor() {
    super();
    this.searchTrend = this.searchTrend.bind(this);
  }

  searchTrend(trend) {
    let component = this;
    return function () {
      let networks = {
        twitter: true,
        instagram: true,
        google: true
      };
      component.props.createSearch({
        query: trend.hashtag,
        networks
      });
    };
  }

  render() {
    window.I18N = I18n;

    let getTranslation = key => {
      return "Search.tabs.trending.trends." + key;
    };

    let {
      trends
    } = this.props;

    let highestReach = _.maxBy(trends, t => t.volume);

    trends = _.sortBy(trends.map((t, index) => Object.assign({}, t, {
      index: index + 1,
      reach: t.volume / highestReach.volume * 100
    })), ["reach"]).reverse();
    return React.createElement("div", {
      className: "trends"
    }, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-10"
    }, React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-heading"
    }, React.createElement("h3", {
      className: "panel-title"
    }, React.createElement(Translate, {
      value: getTranslation("title")
    }))), React.createElement("div", {
      className: "panel-body container-fluid"
    }, React.createElement("div", {
      className: "table-responsive"
    }, React.createElement("table", {
      className: "table table-analytics margin-bottom-0 text-nowrap"
    }, React.createElement("thead", null, React.createElement("tr", null, React.createElement("th", {
      className: "index"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.index")
    })), React.createElement("th", {
      className: "language"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.topic")
    })), React.createElement("th", {
      className: "vists"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.volume")
    })), React.createElement("th", {
      className: "vists-percent"
    }, React.createElement(Translate, {
      value: getTranslation("table.headers.reach")
    })))), React.createElement("tbody", null, trends.map((trend, i) => React.createElement("tr", {
      key: i,
      onClick: this.searchTrend(trend)
    }, React.createElement("td", null, i + 1), React.createElement("td", null, React.createElement("span", {
      className: "country-name",
      onClick: this.searchTrend(trend)
    }, trend.hashtag, trend.promoted && React.createElement("i", {
      className: "fa fa-money",
      "aria-hidden": "true"
    }))), React.createElement("td", null, trend.volume ? React.createElement(Localize, {
      value: Number(trend.volume),
      options: {
        style: "decimal",
        useGrouping: true,
        minimumFractionDigits: 0,
        maximumFractionDigits: 0
      }
    }) : "-"), React.createElement("td", null, React.createElement("div", {
      className: "progress progress-xs margin-bottom-0"
    }, React.createElement("div", {
      className: "progress-bar progress-bar-info bg-blue-600",
      style: {
        width: trend.reach + '%'
      },
      "aria-valuemax": 100,
      "aria-valuemin": 0,
      "aria-valuenow": 90,
      role: "progressbar"
    })), React.createElement("span", {
      className: "progress-percent"
    }, trend.reach.toFixed(2), "%"))))))))))));
  }

}

module.exportDefault(TrendingTopics);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"form.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/search/ui/components/form.jsx                                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/objectSpread"));

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let withRouter;
module.watch(require("react-router"), {
  withRouter(v) {
    withRouter = v;
  }

}, 1);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 2);
let PropTypes;
module.watch(require("prop-types"), {
  default(v) {
    PropTypes = v;
  }

}, 3);
let Tabs, Tab;
module.watch(require("react-bootstrap"), {
  Tabs(v) {
    Tabs = v;
  },

  Tab(v) {
    Tab = v;
  }

}, 4);

class Form extends React.Component {
  constructor() {
    super();
    this.state = {
      networks: {
        twitter: false,
        instagram: false,
        google: false
      },
      query: ""
    };
    this.selectNetwork = this.selectNetwork.bind(this);
    this.updateQuery = this.updateQuery.bind(this);
    this.search = this.search.bind(this);
  }

  selectNetwork(network) {
    let component = this;
    return function () {
      let newState = (0, _objectSpread2.default)({}, component.state);
      newState.networks[network] = !newState.networks[network];
      component.setState(newState);
    };
  }

  updateQuery(e) {
    let query = e.target.value;
    this.setState({
      query
    });
  }

  search() {
    let {
      networks,
      query
    } = this.state;
    this.props.createSearch({
      query,
      networks
    });
  }

  render() {
    let getTranslation = key => {
      return "Search.search." + key;
    };

    return React.createElement("div", {
      className: "page-content container-fluid"
    }, React.createElement("div", {
      className: "search-form"
    }, React.createElement("div", {
      className: "content"
    }, React.createElement("h1", null, React.createElement(Translate, {
      value: getTranslation("form.title")
    })), React.createElement("input", {
      type: "text",
      className: "form-control",
      value: this.state.query,
      onChange: this.updateQuery
    }), React.createElement("div", null, React.createElement("ul", {
      className: "profile-list"
    }, React.createElement("li", {
      onClick: this.selectNetwork("twitter"),
      className: this.state.networks.twitter ? "active" : ""
    }, React.createElement("div", {
      className: "selected"
    }, React.createElement("i", {
      className: "icon wb-check"
    })), React.createElement("i", {
      className: "social-icon twitter"
    })), React.createElement("li", {
      onClick: this.selectNetwork("instagram"),
      className: this.state.networks.instagram ? "active" : ""
    }, React.createElement("div", {
      className: "selected"
    }, React.createElement("i", {
      className: "icon wb-check"
    })), React.createElement("i", {
      className: "social-icon instagram"
    })), React.createElement("li", {
      onClick: this.selectNetwork("google"),
      className: this.state.networks.google ? "active" : ""
    }, React.createElement("div", {
      className: "selected"
    }, React.createElement("i", {
      className: "icon wb-check"
    })), React.createElement("i", {
      className: "social-icon google"
    })))), React.createElement("button", {
      className: "btn btn-primary",
      onClick: this.search
    }, React.createElement(Translate, {
      value: getTranslation("button")
    })))));
  }

}

let FormWithRouter = withRouter(Form);
Form.propTypes = {
  router: PropTypes.shape({
    push: PropTypes.func.isRequired
  }).isRequired
};
module.exportDefault(FormWithRouter);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"search-list.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/search/ui/components/search-list.jsx                                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/objectSpread"));

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let GooglePreview;
module.watch(require("./previews/google"), {
  default(v) {
    GooglePreview = v;
  }

}, 1);
let TwitterPreview;
module.watch(require("./previews/twitter"), {
  default(v) {
    TwitterPreview = v;
  }

}, 2);
let FacebookPreview;
module.watch(require("./previews/facebook"), {
  default(v) {
    FacebookPreview = v;
  }

}, 3);
let InstagramPreview;
module.watch(require("./previews/instagram"), {
  default(v) {
    InstagramPreview = v;
  }

}, 4);

class SearchList extends React.Component {
  constructor() {
    super();
    this.state = {
      networks: {
        twitter: true,
        instagram: true,
        google: true
      }
    };
  }

  componentWillMount() {
    let {
      google,
      twitter,
      instagram
    } = this.props;
    this.setState({
      networks: {
        google,
        twitter,
        instagram
      }
    });
  }

  selectNetwork(network) {
    let component = this;
    return function () {
      let newState = (0, _objectSpread2.default)({}, component.state);
      newState.networks[network] = !newState.networks[network];
      component.setState(newState);
    };
  }

  getElement(element, i) {
    let preview = null;

    switch (element.network) {
      case "twitter":
        preview = React.createElement(TwitterPreview, {
          data: element
        });
        break;

      case "instagram":
        preview = React.createElement(InstagramPreview, {
          data: element
        });
        break;

      case "google":
        preview = React.createElement(GooglePreview, {
          data: element
        });
        break;
    }

    return React.createElement("div", {
      key: i,
      className: "element"
    }, preview);
  }

  render() {
    let {
      query,
      data,
      twitter,
      instagram,
      google
    } = this.props;
    return React.createElement("div", {
      className: "query-results padding-20"
    }, React.createElement("div", {
      className: "header"
    }, React.createElement("h1", {
      style: {
        marginTop: 0
      }
    }, query), React.createElement("ul", {
      className: "profile-list pull-right"
    }, twitter && React.createElement("li", {
      onClick: this.selectNetwork("twitter")
    }, React.createElement("i", {
      className: "social-icon twitter " + (this.state.networks.twitter ? "" : "disabled")
    })), instagram && React.createElement("li", {
      onClick: this.selectNetwork("instagram")
    }, React.createElement("i", {
      className: "social-icon instagram " + (this.state.networks.instagram ? "" : "disabled")
    })), google && React.createElement("li", {
      onClick: this.selectNetwork("google")
    }, React.createElement("i", {
      className: "social-icon google " + (this.state.networks.google ? "" : "disabled")
    })))), React.createElement("div", {
      className: "search-list"
    }, data && data.filter(el => this.state.networks[el.network]).map((element, i) => this.getElement(element, i))));
  }

}

module.exportDefault(SearchList);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"tabs.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/search/ui/components/tabs.jsx                                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Trends;
module.watch(require("./trends"), {
  default(v) {
    Trends = v;
  }

}, 1);
let Tabs, Tab;
module.watch(require("react-bootstrap"), {
  Tabs(v) {
    Tabs = v;
  },

  Tab(v) {
    Tab = v;
  }

}, 2);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 3);
let SearchTab;
module.watch(require("../layouts/search-tab"), {
  default(v) {
    SearchTab = v;
  }

}, 4);

class TabsContainer extends React.Component {
  constructor() {
    super();
    this.state = {
      active: "search"
    };
    this.handleSelect = this.handleSelect.bind(this);
    this.createSearch = this.createSearch.bind(this);
    this.setSearchCreate = this.setSearchCreate.bind(this);
  }

  handleSelect(active) {
    this.setState({
      active
    });
  }

  setSearchCreate(createSearch) {
    this.searchCreate = createSearch;
  }

  createSearch(search) {
    console.log("INITIALIZE_SEARCH_OUTSIDE", search);
    this.setState({
      active: "search"
    }, function () {
      console.log("STATE_UPDATED_CREATING_SEARCH", this.state);
      this.searchCreate(search);
    });
  }

  render() {
    let getTranslation = key => {
      return "Search.tabs." + key;
    };

    return React.createElement("div", null, React.createElement(Tabs, {
      activeKey: this.state.active,
      id: "uncontrolled-tab-example",
      bsStyle: "tabs",
      onSelect: this.handleSelect
    }, React.createElement(Tab, {
      eventKey: "search",
      title: React.createElement(Translate, {
        value: getTranslation("new")
      })
    }, React.createElement(SearchTab, {
      setSearchCreate: this.setSearchCreate
    })), React.createElement(Tab, {
      eventKey: "trending",
      title: React.createElement(Translate, {
        value: getTranslation("trending.title")
      })
    }, React.createElement(Trends, {
      createSearch: this.createSearch
    }))));
  }

}

module.exportDefault(TabsContainer);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"trends.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/search/ui/components/trends.jsx                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 1);
let Places;
module.watch(require("../containers/places"), {
  default(v) {
    Places = v;
  }

}, 2);
let Trends;
module.watch(require("../containers/trends"), {
  default(v) {
    Trends = v;
  }

}, 3);

class TrendingTopicsTab extends React.Component {
  constructor() {
    super();
    this.state = {
      place: "1"
    };
    this.updatePlace = this.updatePlace.bind(this);
  }

  updatePlace(place) {
    //console.log("UPDATE_PLACE", place);
    this.setState({
      place
    });
  }

  render() {
    let {
      createSearch
    } = this.props;

    let getTranslation = key => {
      return "Search.tabs.trending." + key;
    };

    return React.createElement("div", {
      className: "trending-places row"
    }, React.createElement("div", {
      className: "col-md-3"
    }, React.createElement(Places, {
      input: {
        onChange: this.updatePlace,
        value: this.state.place
      }
    })), React.createElement("div", {
      className: "col-md-9"
    }, React.createElement(Trends, {
      woeid: this.state.place,
      createSearch: createSearch
    })));
  }

}

module.exportDefault(TrendingTopicsTab);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"containers":{"places.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/search/ui/containers/places.jsx                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/taggedTemplateLiteral"));

function _templateObject() {
  const data = (0, _taggedTemplateLiteral2.default)(["\nquery {\n\twoeidPlaces{\n    woeid,\n    name,\n    type,\n    parent,\n    country\n  }   \n}\n"]);

  _templateObject = function () {
    return data;
  };

  return data;
}

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let graphql;
module.watch(require("react-apollo"), {
  graphql(v) {
    graphql = v;
  }

}, 1);
let Loading;
module.watch(require("../../../core/ui/components/loading"), {
  default(v) {
    Loading = v;
  }

}, 2);
let SearchList;
module.watch(require("../components/search-list"), {
  default(v) {
    SearchList = v;
  }

}, 3);
let createContainer;
module.watch(require("meteor/react-meteor-data"), {
  createContainer(v) {
    createContainer = v;
  }

}, 4);
let gql;
module.watch(require("graphql-tag"), {
  default(v) {
    gql = v;
  }

}, 5);
let Places;
module.watch(require("../components/trends/places"), {
  default(v) {
    Places = v;
  }

}, 6);

class PlacesContainer extends React.Component {
  render() {
    let {
      woeidPlaces,
      refetch,
      input
    } = this.props;
    return React.createElement("div", null, this.props.loading ? React.createElement(Loading, null) : React.createElement(Places, {
      places: woeidPlaces,
      input: input
    }));
  }

}

const QUERY = gql(_templateObject());
const withData = graphql(QUERY, {
  props: (_ref) => {
    let {
      data: {
        error,
        loading,
        woeidPlaces,
        refetch
      }
    } = _ref;
    if (loading) return {
      loading: true
    };
    if (error) return {
      hasErrors: true
    };
    return {
      loading,
      woeidPlaces,
      refetch
    };
  },
  options: ownProps => ({
    pollInterval: 150000,
    variables: {}
  })
});
const PlacesContainerWithData = withData(PlacesContainer);
module.exportDefault(PlacesContainerWithData);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"query.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/search/ui/containers/query.jsx                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/taggedTemplateLiteral"));

function _templateObject() {
  const data = (0, _taggedTemplateLiteral2.default)(["\nquery($query:String!, $twitter: Boolean, $instagram: Boolean, $google: Boolean){\n  search(query:$query, twitter:$twitter, instagram:$instagram, google:$google){\n    link,\n    title,\n    description,\n    date,\n    network,\n    media{\n      type,\n      url,\n      preview\n    },\n    user{\n      name,\n      screenName,\n      avatar\n    }\n  }\n}\n"]);

  _templateObject = function () {
    return data;
  };

  return data;
}

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let graphql;
module.watch(require("react-apollo"), {
  graphql(v) {
    graphql = v;
  }

}, 1);
let Loading;
module.watch(require("../../../core/ui/components/loading"), {
  default(v) {
    Loading = v;
  }

}, 2);
let SearchList;
module.watch(require("../components/search-list"), {
  default(v) {
    SearchList = v;
  }

}, 3);
let createContainer;
module.watch(require("meteor/react-meteor-data"), {
  createContainer(v) {
    createContainer = v;
  }

}, 4);
let gql;
module.watch(require("graphql-tag"), {
  default(v) {
    gql = v;
  }

}, 5);

class QueryContainer extends React.Component {
  render() {
    let {
      search,
      query,
      refetch,
      twitter,
      instagram,
      google
    } = this.props;
    return React.createElement("div", null, this.props.loading ? React.createElement(Loading, null) : React.createElement(SearchList, {
      data: search,
      query: query,
      refetch: refetch,
      twitter: twitter,
      google: google,
      instagram: instagram
    }));
  }

}

const QUERY = gql(_templateObject());
const withData = graphql(QUERY, {
  props: (_ref) => {
    let {
      data: {
        error,
        loading,
        search,
        refetch
      }
    } = _ref;
    if (loading) return {
      loading: true
    };
    if (error) return {
      hasErrors: true
    };
    return {
      loading,
      search,
      refetch
    };
  },
  options: ownProps => ({
    pollInterval: 150000,
    variables: {
      "query": ownProps.query,
      "twitter": ownProps.twitter,
      "instagram": ownProps.instagram,
      "google": ownProps.google
    }
  })
});
const QueryContainerWithData = withData(QueryContainer);
module.exportDefault(QueryContainerWithData);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"trends.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/search/ui/containers/trends.jsx                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/taggedTemplateLiteral"));

function _templateObject() {
  const data = (0, _taggedTemplateLiteral2.default)(["\nquery($woeid:String!) {\n  twitterTrends(woeid:$woeid){\n    hashtag,\n    promoted,\n    volume\n  }\n}\n"]);

  _templateObject = function () {
    return data;
  };

  return data;
}

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let graphql;
module.watch(require("react-apollo"), {
  graphql(v) {
    graphql = v;
  }

}, 1);
let Loading;
module.watch(require("../../../core/ui/components/loading"), {
  default(v) {
    Loading = v;
  }

}, 2);
let SearchList;
module.watch(require("../components/search-list"), {
  default(v) {
    SearchList = v;
  }

}, 3);
let createContainer;
module.watch(require("meteor/react-meteor-data"), {
  createContainer(v) {
    createContainer = v;
  }

}, 4);
let gql;
module.watch(require("graphql-tag"), {
  default(v) {
    gql = v;
  }

}, 5);
let Trends;
module.watch(require("../components/trends/trends"), {
  default(v) {
    Trends = v;
  }

}, 6);

class TrendsContainer extends React.Component {
  render() {
    let {
      twitterTrends,
      refetch,
      createSearch
    } = this.props;
    return React.createElement("div", null, this.props.loading ? React.createElement(Loading, null) : React.createElement(Trends, {
      trends: twitterTrends,
      createSearch: createSearch
    }));
  }

}

const QUERY = gql(_templateObject());
const withData = graphql(QUERY, {
  props: (_ref) => {
    let {
      data: {
        error,
        loading,
        twitterTrends,
        refetch
      }
    } = _ref;
    if (loading) return {
      loading: true
    };
    if (error) return {
      hasErrors: true
    };
    return {
      loading,
      twitterTrends,
      refetch
    };
  },
  options: ownProps => ({
    pollInterval: 150000,
    variables: {
      woeid: ownProps.woeid
    }
  })
});
const TrendsContainerWithData = withData(TrendsContainer);
module.exportDefault(TrendsContainerWithData);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"layouts":{"search-tab.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/search/ui/layouts/search-tab.jsx                                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/builtin/interopRequireDefault");

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/extends"));

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/builtin/objectSpread"));

let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Tabs, Tab;
module.watch(require("react-bootstrap"), {
  Tabs(v) {
    Tabs = v;
  },

  Tab(v) {
    Tab = v;
  }

}, 1);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 2);
let Query;
module.watch(require("../containers/query"), {
  default(v) {
    Query = v;
  }

}, 3);
let Form;
module.watch(require("../components/form"), {
  default(v) {
    Form = v;
  }

}, 4);
let CookieName;
module.watch(require("../../../core/settings"), {
  CookieName(v) {
    CookieName = v;
  }

}, 5);

class SearchTab extends React.Component {
  constructor() {
    super();
    this.state = {
      searches: [],
      active: "search"
    };
    this.createSearch = this.createSearch.bind(this);
    this.deleteSearch = this.deleteSearch.bind(this);
    this.saveSearch = this.saveSearch.bind(this);
    this.handleSelect = this.handleSelect.bind(this);
  }

  createSearch(search) {
    console.log("CREATE_SEARCH_INSIDE", search);
    let newState = (0, _objectSpread2.default)({}, this.state);
    let match = newState.searches.filter(s => s.query === search.query)[0];
    if (match) return;
    newState.searches.push(search);
    newState.active = search.query + "_" + newState.searches.length;
    this.setState(newState);
    this.saveSearch(newState);
  }

  getCookieName() {
    return CookieName + "_SAVED_SEARCH";
  }

  saveSearch(search) {
    search = search || this.state;
    window.localStorage.setItem(this.getCookieName(), JSON.stringify(search));
  }

  deleteSearch(search) {
    let component = this;
    return function (e) {
      e.preventDefault();
      e.stopPropagation();
      console.log("DELETE TAB", search);
      let newState = (0, _objectSpread2.default)({}, component.state);
      let index = newState.searches.indexOf(search);
      newState.searches.splice(index, 1);

      if (newState.searches.length) {
        let lastSearch = newState.searches[newState.searches.length - 1];
        newState.active = lastSearch.query + "_" + newState.searches.length;
      }

      component.setState(newState);
      component.saveSearch(newState);
      return false;
    };
  }

  componentWillMount() {
    let {
      setSearchCreate
    } = this.props;
    setSearchCreate(this.createSearch);
    let savedSearch = window.localStorage.getItem(this.getCookieName());

    if (savedSearch) {
      this.setState(JSON.parse(savedSearch));
    }
  }

  componentWillUpdate() {
    if (this.state.key !== this.props.active) {
      this.setState({
        key: this.props.active
      });
    }
  }

  handleSelect(active) {
    this.setState({
      active
    });
  }

  render() {
    let getTranslation = key => {
      return "Search.tabs." + key;
    };

    let {
      createSearch,
      deleteSearch
    } = this;
    let {
      searches
    } = this.state;
    return React.createElement("div", null, React.createElement("div", {
      className: "search-tabs"
    }, React.createElement(Tabs, {
      activeKey: this.state.active,
      id: "uncontrolled-tab-example",
      bsStyle: "tabs",
      onSelect: this.handleSelect
    }, searches.map((t, i) => React.createElement(Tab, {
      eventKey: t.query + "_" + (i + 1),
      key: i,
      title: React.createElement("div", null, t.query, " ", React.createElement("i", {
        className: "close icon wb-close-mini",
        "aria-hidden": "true",
        onClick: deleteSearch(t)
      }))
    }, React.createElement(Query, (0, _extends2.default)({}, t, t.networks)))), React.createElement(Tab, {
      eventKey: "search",
      title: React.createElement(Translate, {
        value: getTranslation("new")
      })
    }, React.createElement(Form, {
      createSearch: createSearch
    })))));
  }

}

module.exportDefault(SearchTab);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"search.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/search/ui/layouts/search.jsx                                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class Search extends React.Component {
  render() {
    let filter = obj => {
      let newProps = {};
      let key;

      for (key in obj) {
        if (key !== "children") {
          newProps[key] = obj[key];
        }
      }

      return newProps;
    };

    return React.createElement("div", {
      className: "social-search"
    }, React.cloneElement(this.props.children, filter(this.props)));
  }

}

module.exportDefault(Search);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"tabs.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/search/ui/layouts/tabs.jsx                                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Form;
module.watch(require("../components/form"), {
  default(v) {
    Form = v;
  }

}, 1);
let Tabs;
module.watch(require("../components/tabs"), {
  default(v) {
    Tabs = v;
  }

}, 2);

class SearchTabs extends React.Component {
  render() {
    return React.createElement(Tabs, null);
  }

}

module.exportDefault(SearchTabs);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"actions":{"bundle.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/search/actions/bundle.jsx                                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let Actions = {};
module.exportDefault(Actions);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"client":{"bundle.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/search/client/bundle.jsx                                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let Routes;
module.watch(require("./routes"), {
  default(v) {
    Routes = v;
  }

}, 0);
let Reducers;
module.watch(require("../reducers/bundle"), {
  default(v) {
    Reducers = v;
  }

}, 1);
let Actions;
module.watch(require("../actions/bundle"), {
  default(v) {
    Actions = v;
  }

}, 2);
let Translations;
module.watch(require("./translations"), {
  default(v) {
    Translations = v;
  }

}, 3);
module.exportDefault({
  reducers: Reducers,
  routes: Routes,
  actions: Actions,
  translations: Translations
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"routes.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/search/client/routes.jsx                                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Route, IndexRoute;
module.watch(require("react-router"), {
  Route(v) {
    Route = v;
  },

  IndexRoute(v) {
    IndexRoute = v;
  }

}, 1);
let Search;
module.watch(require("../ui/layouts/search"), {
  default(v) {
    Search = v;
  }

}, 2);
let SearchTabs;
module.watch(require("../ui/layouts/tabs"), {
  default(v) {
    SearchTabs = v;
  }

}, 3);
module.exportDefault(React.createElement(Route, {
  path: "/search",
  component: Search
}, React.createElement(IndexRoute, {
  component: SearchTabs
})));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"translations.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/search/client/translations.jsx                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.exportDefault({
  en: {
    menu: "Search",
    search: {
      form: {
        title: "What are you searching for?"
      },
      button: "Search"
    },
    tabs: {
      new: "New Search",
      trending: {
        title: "Trending Topics",
        controls: {
          all: "All",
          cities: "Cities",
          countries: "Countries"
        },
        trends: {
          title: "Trending Topics",
          table: {
            headers: {
              index: "#",
              topic: "Topic",
              volume: "# of People",
              reach: "Reach"
            }
          }
        }
      }
    }
  },
  es: {
    menu: "Buscador Universal",
    search: {
      form: {
        title: "¿Qué estas buscando?"
      },
      button: "Buscar"
    },
    tabs: {
      new: "Buscador Universal",
      trending: {
        title: "Trending Topics",
        controls: {
          all: "Todos",
          cities: "Ciudades",
          countries: "Paises"
        },
        trends: {
          title: "Top Trends",
          table: {
            headers: {
              index: "Nº",
              topic: "Tema",
              volume: "No. de Personas    ",
              reach: "Alcance"
            }
          }
        }
      }
    }
  },
  zz: {
    menu: "測試",
    search: {
      form: {
        title: "測試 測試 測試 測試 測試?"
      },
      button: "測試"
    },
    tabs: {
      new: "測試 測試",
      trending: {
        title: "測試 測試",
        controls: {
          all: "測試",
          cities: "測試",
          countries: "測試"
        },
        trends: {
          title: "測試 測試",
          table: {
            headers: {
              index: "測",
              topic: "測試",
              volume: "測試",
              reach: "測試"
            }
          }
        }
      }
    }
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"reducers":{"bundle.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/search/reducers/bundle.jsx                                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
const Reducers = {};
module.exportDefault(Reducers);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"settings":{"ui":{"components":{"profile":{"avatar.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/settings/ui/components/profile/avatar.jsx                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let createContainer;
module.watch(require("meteor/react-meteor-data"), {
  createContainer(v) {
    createContainer = v;
  }

}, 1);

class ProfileAvatar extends React.Component {
  render() {
    let getTranslation = key => {
      return "Core.modals.profile." + key;
    };

    let {
      user
    } = this.props;
    if (!user) return null;
    let profile = user.profile;
    let emailAddress = user.emails && user.emails[0] ? user.emails[0].address : "User";
    return React.createElement("div", {
      className: "panel",
      style: {
        textAlign: "center"
      }
    }, React.createElement("div", {
      className: "panel-body container-fluid"
    }, React.createElement("a", {
      className: "avatar avatar-lg",
      href: "javascript:void(0)"
    }, React.createElement("img", {
      src: user.profile.avatar,
      alt: "..."
    })), React.createElement("h4", {
      className: "profile-user"
    }, profile.name && profile.lastName ? profile.name + " " + profile.lastName : emailAddress)));
  }

}

const AvatarMenuWithUserId = createContainer(() => {
  return {
    user: Meteor.user() || ''
  };
}, ProfileAvatar);
module.exportDefault(AvatarMenuWithUserId);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"form.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/settings/ui/components/profile/form.jsx                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 1);
let Field, FormSection, reduxForm;
module.watch(require("redux-form"), {
  Field(v) {
    Field = v;
  },

  FormSection(v) {
    FormSection = v;
  },

  reduxForm(v) {
    reduxForm = v;
  }

}, 2);
let FormGroup, ControlLabel, FormControl, HelpBlock;
module.watch(require("react-bootstrap"), {
  FormGroup(v) {
    FormGroup = v;
  },

  ControlLabel(v) {
    ControlLabel = v;
  },

  FormControl(v) {
    FormControl = v;
  },

  HelpBlock(v) {
    HelpBlock = v;
  }

}, 3);
let InputPhone;
module.watch(require("../../../../core/ui/components/forms/input-phone"), {
  default(v) {
    InputPhone = v;
  }

}, 4);

class ProfileForm extends React.Component {
  render() {
    let getTranslation = key => {
      return "Core.modals.profile." + key;
    };

    return React.createElement("div", null, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-12"
    }, React.createElement("h2", null, React.createElement(Translate, {
      value: getTranslation("title")
    })), React.createElement("p", null, React.createElement(Translate, {
      value: getTranslation("description")
    })))), React.createElement("div", {
      className: "padding-20"
    }, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("form.name")
    })), React.createElement(Field, {
      component: "input",
      name: "name",
      className: "form-control"
    }))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("form.lastName")
    })), React.createElement(Field, {
      component: "input",
      name: "lastName",
      className: "form-control"
    })))), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("form.phone")
    })), React.createElement(Field, {
      component: InputPhone,
      name: "phone",
      className: "form-control"
    }))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("form.profile.label")
    })), React.createElement(Field, {
      component: "select",
      name: "profile",
      className: "form-control"
    }, React.createElement("option", {
      value: ""
    }, I18n.t(getTranslation("form.profile.values.notSelected"))), React.createElement("option", {
      value: "manager"
    }, I18n.t(getTranslation("form.profile.values.manager"))), React.createElement("option", {
      value: "influencer"
    }, I18n.t(getTranslation("form.profile.values.influencer"))), React.createElement("option", {
      value: "brand"
    }, I18n.t(getTranslation("form.profile.values.brand"))), React.createElement("option", {
      value: "all"
    }, I18n.t(getTranslation("form.profile.values.all"))))))), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-12"
    }, React.createElement("h4", null, React.createElement(Translate, {
      value: getTranslation("form.address.title")
    }))), React.createElement(FormSection, {
      name: "address"
    }, React.createElement("div", {
      className: "col-md-12"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("form.address.address")
    }), " 1"), React.createElement(Field, {
      component: "input",
      name: "address1",
      className: "form-control"
    }))), React.createElement("div", {
      className: "col-md-12"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("form.address.address")
    }), " 2"), React.createElement(Field, {
      component: "input",
      name: "address2",
      className: "form-control"
    }))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("form.address.city")
    })), React.createElement(Field, {
      component: "input",
      name: "city",
      className: "form-control"
    }))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("form.address.state")
    })), React.createElement(Field, {
      component: "input",
      name: "state",
      className: "form-control"
    }))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("form.address.country")
    })), React.createElement(Field, {
      component: "input",
      name: "country",
      className: "form-control"
    }))), React.createElement("div", {
      className: "col-md-6"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("form.address.zipCode")
    })), React.createElement(Field, {
      component: "input",
      name: "zipCode",
      className: "form-control"
    }))))), React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-md-12"
    }, React.createElement("button", {
      type: "submit",
      className: "btn btn-primary pull-right"
    }, React.createElement(Translate, {
      value: getTranslation("form.button")
    }))))));
  }

}

ProfileForm = reduxForm({
  form: 'profile-form'
})(ProfileForm);
module.exportDefault(ProfileForm);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"password.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/settings/ui/components/profile/password.jsx                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 1);
let Accounts;
module.watch(require("meteor/accounts-base"), {
  Accounts(v) {
    Accounts = v;
  }

}, 2);

class ProfilePassword extends React.Component {
  constructor() {
    super();
  }

  changePassword() {
    var oldPassword = $scope.passwordChange.old,
        newPassword = $scope.passwordChange.new;
    Accounts.changePassword(oldPassword, newPassword, function (err) {
      if (err) {
        notie.alert(3, "Password Incorrect, No changes were made.", 3);
        return;
      }

      notie.alert(1, "Password Change Successful.", 3);
      $scope.passwordChange = {
        old: null,
        new: null,
        repeat: null
      };
    });
  }

  render() {
    let getTranslation = key => {
      return "Settings.tabs.profile.password." + key;
    };

    return React.createElement("div", {
      className: "panel"
    }, React.createElement("div", {
      className: "panel-heading"
    }, React.createElement("h3", {
      className: "panel-title"
    }, React.createElement(Translate, {
      value: getTranslation("title")
    }))), React.createElement("div", {
      className: "panel-body container-fluid"
    }, React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("form.current")
    })), React.createElement("input", {
      type: "text",
      className: "form-control"
    })), React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("form.new")
    })), React.createElement("input", {
      type: "text",
      className: "form-control"
    })), React.createElement("div", {
      className: "form-group"
    }, React.createElement("label", {
      htmlFor: "informationName"
    }, React.createElement(Translate, {
      value: getTranslation("form.repeat")
    })), React.createElement("input", {
      type: "text",
      className: "form-control"
    })), React.createElement("button", {
      type: "button",
      className: "btn btn-primary btn-block"
    }, React.createElement(Translate, {
      value: getTranslation("form.button")
    }))));
  }

}

module.exportDefault(ProfilePassword);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"about-us.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/settings/ui/components/about-us.jsx                                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let AppSettings;
module.watch(require("../../../../settings"), {
  default(v) {
    AppSettings = v;
  }

}, 1);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 2);

class AboutUs extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    let getTranslation = key => {
      return "Settings.tabs.about." + key;
    };

    const currentYear = moment().get("year");
    return React.createElement("div", {
      className: "content-padding-30"
    }, React.createElement("h1", null, React.createElement(Translate, {
      value: getTranslation("title")
    })), React.createElement("p", null, React.createElement("a", {
      href: "http://viralizing.me/terms-conditions/",
      target: "_blank"
    }, React.createElement(Translate, {
      value: getTranslation("labels.terms")
    }))), React.createElement("p", null, React.createElement("a", {
      href: "http://viralizing.me/privacy-policy/",
      target: "_blank"
    }, React.createElement(Translate, {
      value: getTranslation("labels.privacy")
    }))), React.createElement("footer", {
      className: "page-copyright"
    }, React.createElement("p", null, AppSettings.name), React.createElement("p", null, "\xA9 ", currentYear, ". ", React.createElement(Translate, {
      value: getTranslation("labels.rightsReserved")
    }))));
  }

}

module.exportDefault(AboutUs);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"billing.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/settings/ui/components/billing.jsx                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 1);

class Billing extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", {
      className: "content-padding-30 row"
    }, React.createElement("div", {
      className: "col-md-9"
    }, React.createElement("div", {
      className: "table-responsive"
    }, React.createElement("table", {
      className: "table"
    }, React.createElement("thead", null, React.createElement("tr", null, React.createElement("th", null, "Date"), React.createElement("th", null, "Concept"), React.createElement("th", null, "Paid"), React.createElement("th", null, "Amount"))), React.createElement("tbody", null, React.createElement("tr", null, React.createElement("td", null, "2569"), React.createElement("td", null, "@Jessica"), React.createElement("td", null, React.createElement("span", {
      className: "label label-pill label-dark"
    }, "Credit Card")), React.createElement("td", null, "$256.10")), React.createElement("tr", null, React.createElement("td", null, "4582"), React.createElement("td", null, "@William"), React.createElement("td", null, React.createElement("span", {
      className: "label label-pill label-success"
    }, "Credit Card")), React.createElement("td", null, "$96.75")), React.createElement("tr", null, React.createElement("td", null, "2563"), React.createElement("td", null, "@Jennifer"), React.createElement("td", null, React.createElement("span", {
      className: "label label-pill label-dark"
    }, "Credit Card")), React.createElement("td", null, "$458.00")), React.createElement("tr", null, React.createElement("td", null, "4378"), React.createElement("td", null, "@Rolando"), React.createElement("td", null, React.createElement("span", {
      className: "label label-pill label-success"
    }, "Credit Card")), React.createElement("td", null, "$30.25")), React.createElement("tr", null, React.createElement("td", null, "8465"), React.createElement("td", null, "@Katelin"), React.createElement("td", null, React.createElement("span", {
      className: "label label-pill label-dark"
    }, "Credit Card")), React.createElement("td", null, "$158.50")), React.createElement("tr", null, React.createElement("td", null, "1526"), React.createElement("td", null, "@Richard"), React.createElement("td", null, React.createElement("span", {
      className: "label label-pill label-success"
    }, "Credit Card")), React.createElement("td", null, "$58.80")))))), React.createElement("div", {
      className: "col-md-3"
    }));
  }

}

module.exportDefault(Billing);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"payments.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/settings/ui/components/payments.jsx                                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let AppSettings;
module.watch(require("../../../../settings"), {
  default(v) {
    AppSettings = v;
  }

}, 1);
let Translate;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  }

}, 2);

class Payments extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    let getTranslation = key => {
      return "Settings.tabs.payments." + key;
    };

    return React.createElement("div", {
      className: "content-padding-30"
    }, React.createElement("h1", null, React.createElement(Translate, {
      value: getTranslation("title")
    })));
  }

}

module.exportDefault(Payments);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"profile.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/settings/ui/components/profile.jsx                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let ProfileForm;
module.watch(require("./profile/form"), {
  default(v) {
    ProfileForm = v;
  }

}, 1);
let ProfilePassword;
module.watch(require("./profile/password"), {
  default(v) {
    ProfilePassword = v;
  }

}, 2);
let ProfileAvatar;
module.watch(require("./profile/avatar"), {
  default(v) {
    ProfileAvatar = v;
  }

}, 3);

class Profile extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    let getTranslation = key => {
      return "Settings.tabs.profile." + key;
    };

    return React.createElement("div", {
      className: "content-padding-30 row"
    }, React.createElement("div", {
      className: "col-lg-3"
    }, React.createElement(ProfileAvatar, null), React.createElement(ProfilePassword, null)), React.createElement("div", {
      className: "col-md-9"
    }, React.createElement(ProfileForm, null)));
  }

}

module.exportDefault(Profile);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"settings.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/settings/ui/components/settings.jsx                                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Switch;
module.watch(require("react-switchery"), {
  default(v) {
    Switch = v;
  }

}, 1);

class Settings extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return React.createElement("div", {
      className: "content-padding-30"
    }, React.createElement("h5", null, "General Settings"), React.createElement("div", null, React.createElement("div", {
      className: "pull-xs-left margin-right-20"
    }, React.createElement(Switch, {
      className: "switch-class",
      onChange: this.onChange,
      options: {
        size: 'small'
      },
      checked: true
    })), React.createElement("label", {
      className: "padding-top-3",
      htmlFor: "inputBasicOff"
    }, "Browser Notifications")), React.createElement("div", null, React.createElement("div", {
      className: "pull-xs-left margin-right-20"
    }, React.createElement(Switch, {
      className: "switch-class",
      onChange: this.onChange,
      options: {
        size: 'small'
      },
      checked: true
    })), React.createElement("label", {
      className: "padding-top-3",
      htmlFor: "inputBasicOff"
    }, "Email Notifications")));
  }

}

module.exportDefault(Settings);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"layouts":{"settings.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/settings/ui/layouts/settings.jsx                                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Tabs, Tab;
module.watch(require("react-bootstrap"), {
  Tabs(v) {
    Tabs = v;
  },

  Tab(v) {
    Tab = v;
  }

}, 1);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 2);
let AboutUs;
module.watch(require("../components/about-us"), {
  default(v) {
    AboutUs = v;
  }

}, 3);
let Billing;
module.watch(require("../components/billing"), {
  default(v) {
    Billing = v;
  }

}, 4);
let Payment;
module.watch(require("../components/payments"), {
  default(v) {
    Payment = v;
  }

}, 5);
let Profile;
module.watch(require("../components/profile"), {
  default(v) {
    Profile = v;
  }

}, 6);
let Settings;
module.watch(require("../components/settings"), {
  default(v) {
    Settings = v;
  }

}, 7);

class SettingsLayout extends React.Component {
  render() {
    let getTranslation = key => {
      return "Settings.tabs." + key;
    };

    return React.createElement("div", null, React.createElement("div", {
      className: "row"
    }, React.createElement("div", {
      className: "col-lg-12"
    }, React.createElement("div", {
      className: "nav-tabs-horizontal"
    }, React.createElement(Tabs, {
      defaultActiveKey: this.props.params.tab,
      id: "uncontrolled-tab-example",
      bsStyle: "tabs"
    }, React.createElement(Tab, {
      eventKey: "profile",
      title: React.createElement(Translate, {
        value: getTranslation("profile.title")
      })
    }, React.createElement(Profile, null)), React.createElement(Tab, {
      eventKey: "about-us",
      title: React.createElement(Translate, {
        value: getTranslation("about.title")
      })
    }, React.createElement(AboutUs, null)))))));
  }

}

module.exportDefault(SettingsLayout);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"actions":{"bundle.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/settings/actions/bundle.jsx                                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let Actions = {};
module.exportDefault(Actions);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"client":{"bundle.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/settings/client/bundle.jsx                                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let Routes;
module.watch(require("./routes"), {
  default(v) {
    Routes = v;
  }

}, 0);
let Reducers;
module.watch(require("../reducers/bundle"), {
  default(v) {
    Reducers = v;
  }

}, 1);
let Actions;
module.watch(require("../actions/bundle"), {
  default(v) {
    Actions = v;
  }

}, 2);
let Translations;
module.watch(require("./translations"), {
  default(v) {
    Translations = v;
  }

}, 3);
module.exportDefault({
  reducers: Reducers,
  routes: Routes,
  actions: Actions,
  translations: Translations
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"routes.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/settings/client/routes.jsx                                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Route;
module.watch(require("react-router"), {
  Route(v) {
    Route = v;
  }

}, 1);
let Settings;
module.watch(require("../ui/layouts/settings"), {
  default(v) {
    Settings = v;
  }

}, 2);
const SettingsRoutes = React.createElement(Route, {
  path: "settings/:tab",
  component: Settings
});
module.exportDefault(SettingsRoutes);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"translations.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/settings/client/translations.jsx                                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.exportDefault({
  en: {
    menu: "Settings",
    tabs: {
      profile: {
        title: "Profile",
        description: "We want to know a little more about you so we can be more helpful. Please fill this information.",
        form: {
          name: "Name",
          lastName: "Last Name",
          profile: {
            label: "Profile",
            values: {
              manager: "Manager",
              influencer: "Influencer",
              brand: "Brand",
              all: "All",
              notSelected: "Not Selected"
            }
          },
          phone: "Phone",
          address: {
            title: "Billing Address",
            address: "Address",
            city: "City",
            state: "State",
            country: "Country",
            zipCode: "Zip Code"
          },
          button: "Save"
        },
        messages: {
          success: "Profile updated",
          error: "There was an error saving your profile"
        },
        password: {
          title: "Change Password",
          form: {
            current: "Current Password",
            new: "New Password",
            repeat: "Repeat New Password",
            button: "Change Password"
          }
        }
      },
      billing: {
        title: "Billing"
      },
      payments: {
        title: "Payments",
        description: "To receive payments we need an email address to send the payments to. This can be different from your accounts email address.",
        form: {}
      },
      settings: {
        title: "Settings"
      },
      about: {
        title: "About Us",
        labels: {
          terms: "Terms and Conditions",
          privacy: "Privacy Policy",
          rightsReserved: "All Rights Reserved"
        }
      }
    }
  },
  es: {
    menu: "Configuraciones",
    tabs: {
      profile: {
        title: "Perfil",
        description: "We want to know a little more about you so we can be more helpful. Please fill this information.",
        form: {
          name: "Nombre",
          lastName: "Apellido",
          profile: {
            label: "Perfil",
            values: {
              manager: "Manager",
              influencer: "Influencer",
              brand: "Marca",
              all: "Todos",
              notSelected: "No Seleccionado"
            }
          },
          phone: "Teléfono",
          address: {
            title: "Dirección",
            address: "Dirección",
            city: "Ciudad",
            state: "Estado",
            country: "País",
            zipCode: "Código Postal"
          },
          button: "Guardar"
        },
        messages: {
          success: "Perfil actualizado",
          error: "Hubo un error actualizando tu perfil"
        },
        password: {
          title: "Cambiar Contraseña",
          form: {
            current: "Contraseña Actual",
            new: "Nueva Contraseña",
            repeat: "Repetir Nueva Contraseña",
            button: "Cambiar Contraseña"
          }
        }
      },
      billing: {
        title: "Facturación",
        form: {
          title: "Cuenta",
          name: "Nombre",
          lastName: "Apellido",
          profile: "Perfil",
          billing: {
            title: "Dirección de Facturación",
            address: "Dirección",
            city: "Ciudad",
            state: "Estado",
            country: "País",
            zipCode: "Código Postal"
          },
          button: "Guardar"
        },
        password: {
          button: "Cambiar Contraseña"
        }
      },
      payments: {
        title: "Pagos"
      },
      settings: {
        title: "Configuraciones"
      },
      about: {
        title: "Acerca de",
        labels: {
          terms: "Térimos y Condiciones",
          privacy: "Política de Privacidad",
          rightsReserved: "Todos los Derechos Reservados."
        }
      }
    }
  },
  zz: {
    menu: "測試",
    tabs: {
      profile: {
        title: "測試 測試 測試 測試",
        description: "測試 測試 測試 測試 測試 測試 測試 測試 測試 測試 測試 測試 測試 測試 測試. 測試 測試 測試 測試.",
        form: {
          name: "測試",
          lastName: "測試 測試",
          profile: {
            label: "測試",
            values: {
              manager: "測試",
              influencer: "測試",
              brand: "測試",
              all: "測試",
              notSelected: "測試 測試"
            }
          },
          phone: "測試",
          address: {
            title: "測試 測試",
            address: "測試",
            city: "測試",
            state: "測試",
            country: "測試",
            zipCode: "測試 測試"
          },
          button: "測試"
        },
        messages: {
          success: "測試 測試",
          error: "測試 測試 測試 測試 測試 測試 測試"
        },
        password: {
          title: "測試 測試",
          form: {
            current: "測試 測試",
            new: "測試 測試",
            repeat: "測試 測試 測試",
            button: "測試 測試"
          }
        }
      },
      billing: {
        title: "測試"
      },
      payments: {
        title: "測試"
      },
      settings: {
        title: "測試"
      },
      about: {
        title: "測試 測試",
        labels: {
          terms: "測試 測試 測試",
          privacy: "測試 測試",
          rightsReserved: "測試 測試 測試"
        }
      }
    }
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"reducers":{"bundle.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/settings/reducers/bundle.jsx                                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
const Reducers = {};
module.exportDefault(Reducers);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"code":{"ui":{"layouts":{"code.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/code/ui/layouts/code.jsx                                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);

class Code extends React.Component {
  render() {
    let filter = obj => {
      let newProps = {};
      let key;

      for (key in obj) {
        if (key !== "children") {
          newProps[key] = obj[key];
        }
      }

      return newProps;
    };

    return React.createElement("div", {
      className: "page-content container-fluid"
    }, React.cloneElement(this.props.children, filter(this.props)));
  }

}

module.exportDefault(Code);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"layout.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/code/ui/layouts/layout.jsx                                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Link;
module.watch(require("react-router"), {
  Link(v) {
    Link = v;
  }

}, 1);
let Modal;
module.watch(require("react-modal"), {
  default(v) {
    Modal = v;
  }

}, 2);
let swal;
module.watch(require("sweetalert2"), {
  default(v) {
    swal = v;
  }

}, 3);
let Translate, I18n;
module.watch(require("react-redux-i18n"), {
  Translate(v) {
    Translate = v;
  },

  I18n(v) {
    I18n = v;
  }

}, 4);

let getTranslation = key => {
  return "Code." + key;
};

class Layout extends React.Component {
  constructor() {
    super();
    this.state = {
      code: ""
    };
    this.submitCode = this.submitCode.bind(this);
    this.updateCode = this.updateCode.bind(this);
  }

  submitCode() {
    swal({
      title: I18n.t(getTranslation("submit.done.title")),
      text: I18n.t(getTranslation("submit.done.description")),
      type: 'success',
      confirmButtonText: I18n.t(getTranslation("submit.done.confirm"))
    });
  }

  updateCode() {
    let code = e.target.value;
    this.setState({
      code
    });
  }

  render() {
    return React.createElement("div", {
      className: "page-content container-fluid"
    }, React.createElement("div", {
      className: "app-code"
    }, React.createElement("div", {
      className: "code-form"
    }, React.createElement("div", {
      className: "content"
    }, React.createElement("h1", null, React.createElement(Translate, {
      value: getTranslation("form.title")
    })), React.createElement("input", {
      type: "text",
      className: "form-control",
      value: this.state.code,
      onChange: this.updateCode
    }), React.createElement("button", {
      className: "btn btn-primary",
      onClick: this.submitCode
    }, React.createElement(Translate, {
      value: getTranslation("form.button")
    }))))));
  }

}

module.exportDefault(Layout);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"actions":{"bundle.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/code/actions/bundle.jsx                                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let Actions = {};
module.exportDefault(Actions);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"client":{"bundle.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/code/client/bundle.jsx                                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let Routes;
module.watch(require("./routes"), {
  default(v) {
    Routes = v;
  }

}, 0);
let Reducers;
module.watch(require("../reducers/bundle"), {
  default(v) {
    Reducers = v;
  }

}, 1);
let Actions;
module.watch(require("../actions/bundle"), {
  default(v) {
    Actions = v;
  }

}, 2);
let Translations;
module.watch(require("./translations"), {
  default(v) {
    Translations = v;
  }

}, 3);
module.exportDefault({
  reducers: Reducers,
  routes: Routes,
  actions: Actions,
  translations: Translations
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"routes.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/code/client/routes.jsx                                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let React;
module.watch(require("react"), {
  default(v) {
    React = v;
  }

}, 0);
let Route, IndexRoute;
module.watch(require("react-router"), {
  Route(v) {
    Route = v;
  },

  IndexRoute(v) {
    IndexRoute = v;
  }

}, 1);
let Code;
module.watch(require("../ui/layouts/code"), {
  default(v) {
    Code = v;
  }

}, 2);
let Layout;
module.watch(require("../ui/layouts/layout"), {
  default(v) {
    Layout = v;
  }

}, 3);
module.exportDefault(React.createElement(Route, {
  path: "/code",
  component: Code
}, React.createElement(IndexRoute, {
  component: Layout
})));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"translations.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/code/client/translations.jsx                                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.exportDefault({
  en: {
    menu: "Code",
    form: {
      title: "Enter your code",
      button: "Save"
    },
    submit: {
      done: {
        title: "Done!",
        description: "Your code has been accepted.",
        confirm: "OK"
      }
    }
  },
  es: {
    menu: "Código",
    form: {
      title: "Ingresar Código",
      button: "Guardar"
    },
    submit: {
      done: {
        title: "Listo!",
        description: "Tu código ha sido procesado.",
        confirm: "OK"
      }
    }
  },
  zz: {
    menu: "測試",
    form: {
      title: "測試 測試 測試",
      button: "測試"
    },
    submit: {
      done: {
        title: "測試!",
        description: "測試 測試 測試 測試 測試",
        confirm: "測試"
      }
    }
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"reducers":{"bundle.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/code/reducers/bundle.jsx                                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
const Reducers = {};
module.exportDefault(Reducers);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"bundles":{"client.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/modules/bundles/client.jsx                                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
let Core;
module.watch(require("../core/client/main"), {
  default(v) {
    Core = v;
  }

}, 0);
let Examples;
module.watch(require("../examples/client/bundle"), {
  default(v) {
    Examples = v;
  }

}, 1);
let Accounts;
module.watch(require("../accounts/client/bundle"), {
  default(v) {
    Accounts = v;
  }

}, 2);
let Campaigns;
module.watch(require("../campaigns/client/bundle"), {
  default(v) {
    Campaigns = v;
  }

}, 3);
let Reporter;
module.watch(require("../reporter/client/bundle"), {
  default(v) {
    Reporter = v;
  }

}, 4);
let Agenda;
module.watch(require("../agenda/client/bundle"), {
  default(v) {
    Agenda = v;
  }

}, 5);
let Search;
module.watch(require("../search/client/bundle"), {
  default(v) {
    Search = v;
  }

}, 6);
let Settings;
module.watch(require("../settings/client/bundle"), {
  default(v) {
    Settings = v;
  }

}, 7);
let Code;
module.watch(require("../code/client/bundle"), {
  default(v) {
    Code = v;
  }

}, 8);
let Statement;
module.watch(require("../statement/client/bundle"), {
  default(v) {
    Statement = v;
  }

}, 9);
let Pricing;
module.watch(require("../pricing/client/bundle"), {
  default(v) {
    Pricing = v;
  }

}, 10);
let TeamAttack;
module.watch(require("../teamattack/client/bundle"), {
  default(v) {
    TeamAttack = v;
  }

}, 11);
let Advertising;
module.watch(require("../advertising/client/bundle"), {
  default(v) {
    Advertising = v;
  }

}, 12);
module.exportDefault({
  Core,
  Examples,
  Accounts,
  Campaigns,
  Reporter,
  Agenda,
  Search,
  Settings,
  Code,
  Statement,
  Pricing,
  TeamAttack,
  Advertising
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"constants":{"countries.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/constants/countries.jsx                                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.exportDefault(["Bangladesh", "Belgium", "Burkina Faso", "Bulgaria", "Bosnia and Herz.", "Brunei", "Bolivia", "Japan", "Burundi", "Benin", "Bhutan", "Jamaica", "Botswana", "Brazil", "Bahamas", "Belarus", "Belize", "Russia", "Rwanda", "Serbia", "Timor-Leste", "Turkmenistan", "Tajikistan", "Romania", "Guinea-Bissau", "Guatemala", "Greece", "Eq. Guinea", "Guyana", "Georgia", "United Kingdom", "Gabon", "Guinea", "Gambia", "Greenland", "Ghana", "Oman", "Tunisia", "Jordan", "Croatia", "Haiti", "Hungary", "Honduras", "Puerto Rico", "Palestine", "Portugal", "Paraguay", "Panama", "Papua New Guinea", "Peru", "Pakistan", "Philippines", "Poland", "Zambia", "W. Sahara", "Estonia", "Egypt", "South Africa", "Ecuador", "Italy", "Vietnam", "Solomon Is.", "Ethiopia", "Somalia", "Zimbabwe", "Spain", "Eritrea", "Montenegro", "Moldova", "Madagascar", "Morocco", "Uzbekistan", "Myanmar", "Mali", "Mongolia", "Macedonia", "Malawi", "Mauritania", "Uganda", "Malaysia", "Mexico", "Israel", "France", "Somaliland", "Finland", "Fiji", "Falkland Is.", "Nicaragua", "Netherlands", "Norway", "Namibia", "Vanuatu", "New Caledonia", "Niger", "Nigeria", "New Zealand", "Nepal", "Kosovo", "Côte d'Ivoire", "Switzerland", "Colombia", "China", "Cameroon", "Chile", "N. Cyprus", "Canada", "Congo", "Central African Rep.", "Dem. Rep. Congo", "Czech Rep.", "Cyprus", "Costa Rica", "Cuba", "Swaziland", "Syria", "Kyrgyzstan", "Kenya", "S. Sudan", "Suriname", "Cambodia", "El Salvador", "Slovakia", "Korea", "Slovenia", "Dem. Rep. Korea", "Kuwait", "Senegal", "Sierra Leone", "Kazakhstan", "Saudi Arabia", "Sweden", "Sudan", "Dominican Rep.", "Djibouti", "Denmark", "Germany", "Yemen", "Algeria", "United States", "Uruguay", "Lebanon", "Lao PDR", "Taiwan", "Trinidad and Tobago", "Turkey", "Sri Lanka", "Latvia", "Lithuania", "Luxembourg", "Liberia", "Lesotho", "Thailand", "Fr. S. Antarctic Lands", "Togo", "Chad", "Libya", "United Arab Emirates", "Venezuela", "Afghanistan", "Iraq", "Iceland", "Iran", "Armenia", "Albania", "Angola", "Argentina", "Australia", "Austria", "India", "Tanzania", "Azerbaijan", "Ireland", "Indonesia", "Ukraine", "Qatar", "Mozambique"]);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"reducers.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/reducers.jsx                                                                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  apolloClient: () => apolloClient
});
let combineReducers;
module.watch(require("redux"), {
  combineReducers(v) {
    combineReducers = v;
  }

}, 0);
let ApolloClient;
module.watch(require("apollo-client"), {
  default(v) {
    ApolloClient = v;
  }

}, 1);
let reduxFormReducer;
module.watch(require("redux-form"), {
  reducer(v) {
    reduxFormReducer = v;
  }

}, 2);
let routerReducer;
module.watch(require("react-router-redux"), {
  routerReducer(v) {
    routerReducer = v;
  }

}, 3);
let i18nReducer;
module.watch(require("react-redux-i18n"), {
  i18nReducer(v) {
    i18nReducer = v;
  }

}, 4);
let meteorClientConfig;
module.watch(require("meteor/apollo"), {
  meteorClientConfig(v) {
    meteorClientConfig = v;
  }

}, 5);
let Modules;
module.watch(require("./modules/bundles/client"), {
  default(v) {
    Modules = v;
  }

}, 6);
const apolloClient = new ApolloClient(meteorClientConfig()); //Define Reducers Object

let reducers = {
  routing: routerReducer,
  form: reduxFormReducer,
  i18n: i18nReducer,
  apollo: apolloClient.reducer()
}; //Add all reducers from Modules

for (let key in Modules) {
  let AppModule = Modules[key];
  let moduleReducers = AppModule.reducers || false;

  if (moduleReducers) {
    for (mkey in moduleReducers) {
      reducers[mkey] = moduleReducers[mkey];
    }
  }
}

const rootReducer = combineReducers(reducers);
module.exportDefault(rootReducer);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"settings.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/settings.jsx                                                                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.exportDefault({
  name: "IBOL",
  logo: "https://s3.amazonaws.com/ibol-app-media/logo.png",
  altLogo: "https://s3.amazonaws.com/ibol-app-media/logo-alt.png",
  social: {
    facebook: "",
    twitter: ""
  },
  email: {
    noReply: "no-reply@viralizing.me"
  },
  support: {
    email: "support@viralizing.me"
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"store.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/store.jsx                                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  history: () => history
});
let applyMiddleware, createStore, compose;
module.watch(require("redux"), {
  applyMiddleware(v) {
    applyMiddleware = v;
  },

  createStore(v) {
    createStore = v;
  },

  compose(v) {
    compose = v;
  }

}, 0);
let thunk;
module.watch(require("redux-thunk"), {
  default(v) {
    thunk = v;
  }

}, 1);
let syncHistoryWithStore;
module.watch(require("react-router-redux"), {
  syncHistoryWithStore(v) {
    syncHistoryWithStore = v;
  }

}, 2);
let browserHistory;
module.watch(require("react-router"), {
  browserHistory(v) {
    browserHistory = v;
  }

}, 3);
let createReactiveMiddlewares;
module.watch(require("meteor-redux-middlewares"), {
  default(v) {
    createReactiveMiddlewares = v;
  }

}, 4);
let loadTranslations, setLocale, syncTranslationWithStore;
module.watch(require("react-redux-i18n"), {
  loadTranslations(v) {
    loadTranslations = v;
  },

  setLocale(v) {
    setLocale = v;
  },

  syncTranslationWithStore(v) {
    syncTranslationWithStore = v;
  }

}, 5);
let translations;
module.watch(require("./translations"), {
  default(v) {
    translations = v;
  }

}, 6);
let rootReducer, apolloClient;
module.watch(require("./reducers"), {
  default(v) {
    rootReducer = v;
  },

  apolloClient(v) {
    apolloClient = v;
  }

}, 7);
// create an object for the default data
const defaultState = {};
const {
  sources,
  subscriptions
} = createReactiveMiddlewares(Tracker);
const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;
const store = createStore(rootReducer, defaultState, composeEnhancers(applyMiddleware(apolloClient.middleware(), sources, subscriptions, thunk)));
syncTranslationWithStore(store);
store.dispatch(loadTranslations(translations));
let defaultLanguage = window.localStorage.getItem("APPLICATION_LANGUAGE") || "en";
store.dispatch(setLocale(defaultLanguage));
const history = syncHistoryWithStore(browserHistory, store);
module.exportDefault(store);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"translations.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/translations.jsx                                                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  languages: () => languages,
  isoLangs: () => isoLangs
});
let Modules;
module.watch(require("./modules/bundles/client"), {
  default(v) {
    Modules = v;
  }

}, 0);
let translations = {};
let languages = [];
const isoLangs = {
  "ab": {
    "name": "Abkhaz",
    "code": "ab",
    "native": "аҧсуа",
    "icon": "flag-icon-ru"
  },
  "aa": {
    "name": "Afar",
    "code": "aa",
    "native": "Afaraf",
    "icon": "flag-icon-et"
  },
  "af": {
    "name": "Afrikaans",
    "code": "af",
    "native": "Afrikaans",
    "icon": "flag-icon-za"
  },
  "ak": {
    "name": "Akan",
    "code": "ak",
    "native": "Akan",
    "icon": "flag-icon-gh"
  },
  "sq": {
    "name": "Albanian",
    "code": "sq",
    "native": "Shqip",
    "icon": "flag-icon-al"
  },
  "am": {
    "name": "Amharic",
    "code": "am",
    "native": "አማርኛ",
    "icon": "flag-icon-et"
  },
  "ar": {
    "name": "Arabic",
    "code": "ar",
    "native": "العربية",
    "icon": "flag-icon-sa"
  },
  "an": {
    "name": "Aragonese",
    "code": "an",
    "native": "Aragonés",
    "icon": "flag-icon-es"
  },
  "hy": {
    "name": "Armenian",
    "code": "hy",
    "native": "Հայերեն",
    "icon": "flag-icon-am"
  },
  "as": {
    "name": "Assamese",
    "code": "as",
    "native": "অসমীয়া",
    "icon": "flag-icon-in"
  },
  "av": {
    "name": "Avaric",
    "code": "av",
    "native": "авар мацӀ, магӀарул мацӀ",
    "icon": "flag-icon-ru"
  },
  "ay": {
    "name": "Aymara",
    "code": "ay",
    "native": "aymar aru",
    "icon": "flag-icon-cl"
  },
  "az": {
    "name": "Azerbaijani",
    "code": "az",
    "native": "azərbaycan dili",
    "icon": "flag-icon-az"
  },
  "bm": {
    "name": "Bambara",
    "code": "bm",
    "native": "Bamanankan",
    "icon": "flag-icon-ml"
  },
  "ba": {
    "name": "Bashkir",
    "code": "ba",
    "native": "башҡорт теле",
    "icon": "flag-icon-ru"
  },
  "eu": {
    "name": "Basque",
    "code": "eu",
    "native": "Euskara, euskera",
    "icon": "flag-icon-es"
  },
  "be": {
    "name": "Belarusian",
    "code": "be",
    "native": "Беларуская",
    "icon": "flag-icon-by"
  },
  "bn": {
    "name": "Bengali",
    "code": "bn",
    "native": "বাংলা",
    "icon": "flag-icon-in"
  },
  "bh": {
    "name": "Bihari",
    "code": "bh",
    "native": "भोजपुरी",
    "icon": "flag-icon-in"
  },
  "bi": {
    "name": "Bislama",
    "code": "bi",
    "native": "Bislama",
    "icon": "flag-icon-vu"
  },
  "bs": {
    "name": "Bosnian",
    "code": "bs",
    "native": "Bosanski jezik",
    "icon": "flag-icon-ba"
  },
  "br": {
    "name": "Breton",
    "code": "br",
    "native": "Brezhoneg",
    "icon": "flag-icon-fr"
  },
  "bg": {
    "name": "Bulgarian",
    "code": "bg",
    "native": "български език",
    "icon": "flag-icon-bg"
  },
  "my": {
    "name": "Burmese",
    "code": "my",
    "native": "ဗမာစာ",
    "icon": "flag-icon-mm"
  },
  "ca": {
    "name": "Catalan",
    "code": "ca",
    "native": "Català",
    "icon": "flag-icon-ad"
  },
  "ch": {
    "name": "Chamorro",
    "code": "ch",
    "native": "Chamoru",
    "icon": "flag-icon-gu"
  },
  "ce": {
    "name": "Chechen",
    "code": "ce",
    "native": "нохчийн мотт",
    "icon": "flag-icon-ru"
  },
  "ny": {
    "name": "Chichewa",
    "code": "ny",
    "native": "ChiCheŵa",
    "icon": "flag-icon-mw"
  },
  "zh": {
    "name": "Chinese",
    "code": "zh",
    "native": "中文",
    "icon": "flag-icon-cn"
  },
  "cv": {
    "name": "Chuvash",
    "code": "cv",
    "native": "чӑваш чӗлхи",
    "icon": "flag-icon-ru"
  },
  "kw": {
    "name": "Cornish",
    "code": "kw",
    "native": "Kernewek",
    "icon": "flag-icon-gb"
  },
  "co": {
    "name": "Corsican",
    "code": "co",
    "native": "Corsu, lingua corsa",
    "icon": "flag-icon-fr"
  },
  "cr": {
    "name": "Cree",
    "code": "cr",
    "native": "ᓀᐦᐃᔭᐍᐏᐣ",
    "icon": "flag-icon-ca"
  },
  "hr": {
    "name": "Croatian",
    "code": "hr",
    "native": "Hrvatski",
    "icon": "flag-icon-hr"
  },
  "cs": {
    "name": "Czech",
    "code": "cs",
    "native": "česky, čeština",
    "icon": "flag-icon-cz"
  },
  "da": {
    "name": "Danish",
    "code": "da",
    "native": "Dansk",
    "icon": "flag-icon-dk"
  },
  "dv": {
    "name": "Divehi",
    "code": "dv",
    "native": "ދިވެހި",
    "icon": "flag-icon-mv"
  },
  "nl": {
    "name": "Dutch",
    "code": "nl",
    "native": "Nederlands, Vlaams",
    "icon": "flag-icon-nl"
  },
  "en": {
    "name": "English",
    "code": "en",
    "native": "English",
    "icon": "flag-icon-us"
  },
  "et": {
    "name": "Estonian",
    "code": "et",
    "native": "Eesti, eesti keel",
    "icon": "flag-icon-ee"
  },
  "ee": {
    "name": "Ewe",
    "code": "ee",
    "native": "Eʋegbe",
    "icon": "flag-icon-gh"
  },
  "fo": {
    "name": "Faroese",
    "code": "fo",
    "native": "føroyskt",
    "icon": "flag-icon-dk"
  },
  "fj": {
    "name": "Fijian",
    "code": "fj",
    "native": "vosa Vakaviti",
    "icon": "flag-icon-fj"
  },
  "fi": {
    "name": "Finnish",
    "code": "fi",
    "native": "suomi, suomen kieli",
    "icon": "flag-icon-fi"
  },
  "fr": {
    "name": "French",
    "code": "fr",
    "native": "français",
    "icon": "flag-icon-fr"
  },
  "gl": {
    "name": "Galician",
    "code": "gl",
    "native": "Galego",
    "icon": "flag-icon-es"
  },
  "ka": {
    "name": "Georgian",
    "code": "ka",
    "native": "ქართული",
    "icon": "flag-icon-ge"
  },
  "de": {
    "name": "German",
    "code": "de",
    "native": "Deutsch",
    "icon": "flag-icon-de"
  },
  "el": {
    "name": "Greek",
    "code": "el",
    "native": "Ελληνικά",
    "icon": "flag-icon-gr"
  },
  "gn": {
    "name": "Guaraní",
    "code": "gn",
    "native": "Avañeẽ",
    "icon": "flag-icon-py"
  },
  "gu": {
    "name": "Gujarati",
    "code": "gu",
    "native": "ગુજરાતી",
    "icon": "flag-icon-in"
  },
  "ht": {
    "name": "Haitian",
    "code": "ht",
    "native": "Kreyòl ayisyen",
    "icon": "flag-icon-ht"
  },
  "ha": {
    "name": "Hausa",
    "code": "ha",
    "native": "Hausa, هَوُسَ",
    "icon": "flag-icon-ng"
  },
  "he": {
    "name": "Hebrew",
    "code": "he",
    "native": "עברית",
    "icon": "flag-icon-il"
  },
  "hi": {
    "name": "Hindi",
    "code": "hi",
    "native": "हिन्दी, हिंदी",
    "icon": "flag-icon-in"
  },
  "ho": {
    "name": "Hiri Motu",
    "code": "ho",
    "native": "Hiri Motu",
    "icon": "flag-icon-pg"
  },
  "hu": {
    "name": "Hungarian",
    "code": "hu",
    "native": "Magyar",
    "icon": "flag-icon-hu"
  },
  "id": {
    "name": "Indonesian",
    "code": "id",
    "native": "Bahasa Indonesia",
    "icon": "flag-icon-id"
  },
  "ga": {
    "name": "Irish",
    "code": "ga",
    "native": "Gaeilge",
    "icon": "flag-icon-gb"
  },
  "ig": {
    "name": "Igbo",
    "code": "ig",
    "native": "Asụsụ Igbo",
    "icon": "flag-icon-ng"
  },
  "ik": {
    "name": "Inupiaq",
    "code": "ik",
    "native": "Iñupiaq, Iñupiatun",
    "icon": "flag-icon-us"
  },
  "is": {
    "name": "Icelandic",
    "code": "is",
    "native": "Íslenska",
    "icon": "flag-icon-is"
  },
  "it": {
    "name": "Italian",
    "code": "it",
    "native": "Italiano",
    "icon": "flag-icon-it"
  },
  "iu": {
    "name": "Inuktitut",
    "code": "iu",
    "native": "ᐃᓄᒃᑎᑐᑦ",
    "icon": "flag-icon-ca"
  },
  "ja": {
    "name": "Japanese",
    "code": "ja",
    "native": "日本語",
    "icon": "flag-icon-jp"
  },
  "jv": {
    "name": "Javanese",
    "code": "jv",
    "native": "basa Jawa",
    "icon": "flag-icon-id"
  },
  "kl": {
    "name": "Kalaallisut",
    "code": "kl",
    "native": "kalaallisut",
    "icon": "flag-icon-gl"
  },
  "kn": {
    "name": "Kannada",
    "code": "kn",
    "native": "ಕನ್ನಡ",
    "icon": "flag-icon-in"
  },
  "kr": {
    "name": "Kanuri",
    "code": "kr",
    "native": "Kanuri",
    "icon": "flag-icon-ng"
  },
  "ks": {
    "name": "Kashmiri",
    "code": "ks",
    "native": "कश्मीरी, كشميري‎",
    "icon": "flag-icon-in"
  },
  "kk": {
    "name": "Kazakh",
    "code": "kk",
    "native": "Қазақ тілі",
    "icon": "flag-icon-kz"
  },
  "km": {
    "name": "Khmer",
    "code": "km",
    "native": "ភាសាខ្មែរ",
    "icon": "flag-icon-kh"
  },
  "ki": {
    "name": "Kikuyu",
    "code": "ki",
    "native": "Gĩkũyũ",
    "icon": "flag-icon-ke"
  },
  "rw": {
    "name": "Kinyarwanda",
    "code": "rw",
    "native": "Ikinyarwanda",
    "icon": "flag-icon-rw"
  },
  "ky": {
    "name": "Kirghiz",
    "code": "ky",
    "native": "кыргыз тили",
    "icon": "flag-icon-kg"
  },
  "kv": {
    "name": "Komi",
    "code": "kv",
    "native": "коми кыв",
    "icon": "flag-icon-ru"
  },
  "kg": {
    "name": "Kongo",
    "code": "kg",
    "native": "KiKongo",
    "icon": "flag-icon-cd"
  },
  "ko": {
    "name": "Korean",
    "code": "ko",
    "native": "한국어",
    "icon": "flag-icon-kr"
  },
  "ku": {
    "name": "Kurdish",
    "code": "ku",
    "native": "كوردی‎",
    "icon": "flag-icon-iq"
  },
  "kj": {
    "name": "Kwanyama",
    "code": "kj",
    "native": "Kuanyama",
    "icon": "flag-icon-ao"
  },
  "lb": {
    "name": "Luxembourgish",
    "code": "lb",
    "native": "Lëtzebuergesch",
    "icon": "flag-icon-lu"
  },
  "lg": {
    "name": "Luganda",
    "code": "lg",
    "native": "Luganda",
    "icon": "flag-icon-ug"
  },
  "li": {
    "name": "Limburgish",
    "code": "li",
    "native": "Limburgs",
    "icon": "flag-icon-nl"
  },
  "ln": {
    "name": "Lingala",
    "code": "ln",
    "native": "Lingála",
    "icon": "flag-icon-cd"
  },
  "lo": {
    "name": "Lao",
    "code": "lo",
    "native": "ພາສາລາວ",
    "icon": "flag-icon-la"
  },
  "lt": {
    "name": "Lithuanian",
    "code": "lt",
    "native": "lietuvių kalba",
    "icon": "flag-icon-lt"
  },
  "lv": {
    "name": "Latvian",
    "code": "lv",
    "native": "latviešu valoda",
    "icon": "flag-icon-lv"
  },
  "gv": {
    "name": "Manx",
    "code": "gv",
    "native": "Gaelg, Gailck",
    "icon": "flag-icon-im"
  },
  "mk": {
    "name": "Macedonian",
    "code": "mk",
    "native": "македонски јазик",
    "icon": "flag-icon-mk"
  },
  "mg": {
    "name": "Malagasy",
    "code": "mg",
    "native": "Malagasy fiteny",
    "icon": "flag-icon-mg"
  },
  "ms": {
    "name": "Malay",
    "code": "ms",
    "native": "بهاس ملايو‎",
    "icon": "flag-icon-my"
  },
  "ml": {
    "name": "Malayalam",
    "code": "ml",
    "native": "മലയാളം",
    "icon": "flag-icon-in"
  },
  "mt": {
    "name": "Maltese",
    "code": "mt",
    "native": "Malti",
    "icon": "flag-icon-mt"
  },
  "mi": {
    "name": "Māori",
    "code": "mi",
    "native": "te reo Māori",
    "icon": "flag-icon-nz"
  },
  "mr": {
    "name": "Marathi",
    "code": "mr",
    "native": "मराठी",
    "icon": "flag-icon-in"
  },
  "mh": {
    "name": "Marshallese",
    "code": "mh",
    "native": "Kajin M̧ajeļ",
    "icon": "flag-icon-mh"
  },
  "mn": {
    "name": "Mongolian",
    "code": "mn",
    "native": "монгол",
    "icon": "flag-icon-mn"
  },
  "na": {
    "name": "Nauru",
    "code": "na",
    "native": "Ekakairũ Naoero",
    "icon": "flag-icon-nr"
  },
  "nv": {
    "name": "Navajo",
    "code": "nv",
    "native": "Diné bizaad, Dinékʼehǰí",
    "icon": "flag-icon-us"
  },
  "nb": {
    "name": "Norwegian Bokmål",
    "code": "nb",
    "native": "Norsk bokmål",
    "icon": "flag-icon-no"
  },
  "nd": {
    "name": "North Ndebele",
    "code": "nd",
    "native": "isiNdebele",
    "icon": "flag-icon-zw"
  },
  "ne": {
    "name": "Nepali",
    "code": "ne",
    "native": "नेपाली",
    "icon": "flag-icon-np"
  },
  "ng": {
    "name": "Ndonga",
    "code": "ng",
    "native": "Owambo",
    "icon": "flag-icon-ao"
  },
  "nn": {
    "name": "Norwegian Nynorsk",
    "code": "nn",
    "native": "Norsk nynorsk",
    "icon": "flag-icon-no"
  },
  "no": {
    "name": "Norwegian",
    "code": "no",
    "native": "Norsk",
    "icon": "flag-icon-no"
  },
  "ii": {
    "name": "Nuosu",
    "code": "ii",
    "native": "ꆈꌠ꒿ Nuosuhxop",
    "icon": "flag-icon-cn"
  },
  "nr": {
    "name": "South Ndebele",
    "code": "nr",
    "native": "isiNdebele",
    "icon": "flag-icon-za"
  },
  "oc": {
    "name": "Occitan",
    "code": "oc",
    "native": "Occitan",
    "icon": "flag-icon-es"
  },
  "oj": {
    "name": "Ojibwe",
    "code": "oj",
    "native": "ᐊᓂᔑᓈᐯᒧᐎᓐ",
    "icon": "flag-icon-ca"
  },
  "om": {
    "name": "Oromo",
    "code": "om",
    "native": "Afaan Oromoo",
    "icon": "flag-icon-et"
  },
  "or": {
    "name": "Oriya",
    "code": "or",
    "native": "ଓଡ଼ିଆ",
    "icon": "flag-icon-in"
  },
  "os": {
    "name": "Ossetian",
    "code": "os",
    "native": "ирон æвзаг",
    "icon": "flag-icon-ru"
  },
  "pa": {
    "name": "Panjabi, Punjabi",
    "code": "pa",
    "native": "ਪੰਜਾਬੀ, پنجابی‎",
    "icon": "flag-icon-in"
  },
  "pi": {
    "name": "Pāli",
    "code": "pi",
    "native": "पाऴि",
    "icon": "flag-icon-in"
  },
  "fa": {
    "name": "Persian",
    "code": "fa",
    "native": "فارسی",
    "icon": "flag-icon-ir"
  },
  "pl": {
    "name": "Polish",
    "code": "pl",
    "native": "polski",
    "icon": "flag-icon-pl"
  },
  "ps": {
    "name": "Pashto",
    "code": "ps",
    "native": "پښتو",
    "icon": "flag-icon-af"
  },
  "pt": {
    "name": "Portuguese",
    "code": "pt",
    "native": "Português",
    "icon": "flag-icon-pt"
  },
  "qu": {
    "name": "Quechua",
    "code": "qu",
    "native": "Runa Simi, Kichwa",
    "icon": "flag-icon-ar"
  },
  "rm": {
    "name": "Romansh",
    "code": "rm",
    "native": "rumantsch grischun",
    "icon": "flag-icon-ch"
  },
  "rn": {
    "name": "Kirundi",
    "code": "rn",
    "native": "kiRundi",
    "icon": "flag-icon-bi"
  },
  "ro": {
    "name": "Romanian",
    "code": "ro",
    "native": "română",
    "icon": "flag-icon-ro"
  },
  "ru": {
    "name": "Russian",
    "code": "ru",
    "native": "русский язык",
    "icon": "flag-icon-ru"
  },
  "sa": {
    "name": "Sanskrit",
    "code": "sa",
    "native": "संस्कृतम्",
    "icon": "flag-icon-in"
  },
  "sc": {
    "name": "Sardinian",
    "code": "sc",
    "native": "sardu",
    "icon": "flag-icon-it"
  },
  "sd": {
    "name": "Sindhi",
    "code": "sd",
    "native": "सिन्धी, سنڌي، سندھی‎",
    "icon": "flag-icon-pk"
  },
  "se": {
    "name": "Northern Sami",
    "code": "se",
    "native": "Davvisámegiella",
    "icon": "flag-icon-no"
  },
  "sm": {
    "name": "Samoan",
    "code": "sm",
    "native": "gagana faa Samoa",
    "icon": "flag-icon-ws"
  },
  "sg": {
    "name": "Sango",
    "code": "sg",
    "native": "yângâ tî sängö",
    "icon": "flag-icon-cf"
  },
  "sr": {
    "name": "Serbian",
    "code": "sr",
    "native": "српски језик",
    "icon": "flag-icon-rs"
  },
  "gd": {
    "name": "Gaelic",
    "code": "gd",
    "native": "Gàidhlig",
    "icon": "flag-icon-gb"
  },
  "sn": {
    "name": "Shona",
    "code": "sn",
    "native": "chiShona",
    "icon": "flag-icon-zw"
  },
  "si": {
    "name": "Sinhala",
    "code": "si",
    "native": "සිංහල",
    "icon": "flag-icon-lk"
  },
  "sk": {
    "name": "Slovak",
    "code": "sk",
    "native": "slovenčina",
    "icon": "flag-icon-sk"
  },
  "sl": {
    "name": "Slovene",
    "code": "sl",
    "native": "slovenščina",
    "icon": "flag-icon-si"
  },
  "so": {
    "name": "Somali",
    "code": "so",
    "native": "Soomaaliga, af Soomaali",
    "icon": "flag-icon-so"
  },
  "st": {
    "name": "Southern Sotho",
    "code": "st",
    "native": "Sesotho",
    "icon": "flag-icon-za"
  },
  "es": {
    "name": "Spanish",
    "code": "es",
    "native": "Español",
    "icon": "flag-icon-mx"
  },
  "su": {
    "name": "Sundanese",
    "code": "su",
    "native": "Basa Sunda",
    "icon": "flag-icon-id"
  },
  "sw": {
    "name": "Swahili",
    "code": "sw",
    "native": "Kiswahili",
    "icon": "flag-icon-tz"
  },
  "ss": {
    "name": "Swati",
    "code": "ss",
    "native": "SiSwati",
    "icon": "flag-icon-sz"
  },
  "sv": {
    "name": "Swedish",
    "code": "sv",
    "native": "svenska",
    "icon": "flag-icon-se"
  },
  "ta": {
    "name": "Tamil",
    "code": "ta",
    "native": "தமிழ்",
    "icon": "flag-icon-in"
  },
  "te": {
    "name": "Telugu",
    "code": "te",
    "native": "తెలుగు",
    "icon": "flag-icon-in"
  },
  "tg": {
    "name": "Tajik",
    "code": "tg",
    "native": "тоҷикӣ, toğikī, تاجیکی‎",
    "icon": "flag-icon-tj"
  },
  "th": {
    "name": "Thai",
    "code": "th",
    "native": "ไทย",
    "icon": "flag-icon-th"
  },
  "ti": {
    "name": "Tigrinya",
    "code": "ti",
    "native": "ትግርኛ",
    "icon": "flag-icon-er"
  },
  "bo": {
    "name": "Tibetan Standard, Tibetan, Central",
    "code": "bo",
    "native": "བོད་ཡིག",
    "icon": "flag-icon-cn"
  },
  "tk": {
    "name": "Turkmen",
    "code": "tk",
    "native": "Türkmen, Түркмен",
    "icon": "flag-icon-tm"
  },
  "tl": {
    "name": "Tagalog",
    "code": "tl",
    "native": "Wikang Tagalog, ᜏᜒᜃᜅ᜔ ᜆᜄᜎᜓᜄ᜔",
    "icon": "flag-icon-ph"
  },
  "tn": {
    "name": "Tswana",
    "code": "tn",
    "native": "Setswana",
    "icon": "flag-icon-bw"
  },
  "to": {
    "name": "Tonga (Tonga Islands)",
    "code": "to",
    "native": "faka Tonga",
    "icon": "flag-icon-to"
  },
  "tr": {
    "name": "Turkish",
    "code": "tr",
    "native": "Türkçe",
    "icon": "flag-icon-tr"
  },
  "ts": {
    "name": "Tsonga",
    "code": "ts",
    "native": "Xitsonga",
    "icon": "flag-icon-mz"
  },
  "tt": {
    "name": "Tatar",
    "code": "tt",
    "native": "татарча, tatarça, تاتارچا‎",
    "icon": "flag-icon-ru"
  },
  "tw": {
    "name": "Twi",
    "code": "tw",
    "native": "Twi",
    "icon": "flag-icon-gh"
  },
  "ty": {
    "name": "Tahitian",
    "code": "ty",
    "native": "Reo Tahiti",
    "icon": "flag-icon-pf"
  },
  "ug": {
    "name": "Uighur",
    "code": "ug",
    "native": "ئۇيغۇرچە‎",
    "icon": "flag-icon-cn"
  },
  "uk": {
    "name": "Ukrainian",
    "code": "uk",
    "native": "українська",
    "icon": "flag-icon-ua"
  },
  "ur": {
    "name": "Urdu",
    "code": "ur",
    "native": "اردو",
    "icon": "flag-icon-pk"
  },
  "uz": {
    "name": "Uzbek",
    "code": "uz",
    "native": "zbek, Ўзбек, أۇزبېك‎",
    "icon": "flag-icon-uz"
  },
  "ve": {
    "name": "Venda",
    "code": "ve",
    "native": "Tshivenḓa",
    "icon": "flag-icon-za"
  },
  "vi": {
    "name": "Vietnamese",
    "code": "vi",
    "native": "Tiếng Việt",
    "icon": "flag-icon-vn"
  },
  "wa": {
    "name": "Walloon",
    "code": "wa",
    "native": "Walon",
    "icon": "flag-icon-be"
  },
  "cy": {
    "name": "Welsh",
    "code": "cy",
    "native": "Cymraeg",
    "icon": "flag-icon-gb"
  },
  "wo": {
    "name": "Wolof",
    "code": "wo",
    "native": "Wollof",
    "icon": "flag-icon-sn"
  },
  "fy": {
    "name": "Western Frisian",
    "code": "fy",
    "native": "Frysk",
    "icon": "flag-icon-nl"
  },
  "xh": {
    "name": "Xhosa",
    "code": "xh",
    "native": "isiXhosa",
    "icon": "flag-icon-za"
  },
  "yi": {
    "name": "Yiddish",
    "code": "yi",
    "native": "ייִדיש",
    "icon": "flag-icon-il"
  },
  "yo": {
    "name": "Yoruba",
    "code": "yo",
    "native": "Yorùbá",
    "icon": "flag-icon-bj"
  },
  "za": {
    "name": "Zhuang",
    "code": "za",
    "native": "Saɯ cueŋƅ, Saw cuengh",
    "icon": "flag-icon-cn"
  },
  "zz": {
    "name": "Test",
    "code": "zz",
    "native": "Test",
    "icon": "flag-icon-us"
  }
}; //Add all reducers from Modules

Object.keys(Modules).forEach(function (moduleName) {
  let AppModule = Modules[moduleName];
  let moduleTranslations = AppModule.translations || false;

  if (moduleTranslations) {
    Object.keys(moduleTranslations).forEach(function (langCode) {
      if (!translations[langCode]) {
        languages.push(isoLangs[langCode]);
        translations[langCode] = {};
      }

      let translation = moduleTranslations[langCode];

      if (!translations[langCode][moduleName]) {
        translations[langCode][moduleName] = {};
      }

      Object.keys(translation).forEach(function (tLib) {
        translations[langCode][moduleName][tLib] = translation[tLib];
      });
    });
  }
});
module.exportDefault(translations);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"collections":{"accountInvites.jsx":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// collections/accountInvites.jsx                                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
SocialAccountsInvites = new Meteor.Collection("accountsInvites");
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"accounts.jsx":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// collections/accounts.jsx                                                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
SocialAccounts = new Meteor.Collection("accounts");
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"advertising.jsx":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// collections/advertising.jsx                                                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
Advertising = new Meteor.Collection("advertising");
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"campaignInvites.jsx":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// collections/campaignInvites.jsx                                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
CampaignInvites = new Meteor.Collection("campaignInvites");
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"campaigns.jsx":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// collections/campaigns.jsx                                                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
Campaigns = new Meteor.Collection("campaigns");
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"invites.jsx":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// collections/invites.jsx                                                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
Invites = new Meteor.Collection("invites");
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"payments.jsx":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// collections/payments.jsx                                                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
Payments = new Meteor.Collection("payments");
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"posts.jsx":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// collections/posts.jsx                                                                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
Posts = new Meteor.Collection("posts");
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"reports.jsx":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// collections/reports.jsx                                                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
Reports = new Meteor.Collection("reports");
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"team-attack.jsx":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// collections/team-attack.jsx                                                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
TeamAttack = new Meteor.Collection("teamAttack");
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"notifications":{"notifications.jsx":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// notifications/notifications.jsx                                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
Herald.addCourier('appNotifications', {
  media: {
    onsite: {
      onRun: function () {
        console.log("NOTIFICATION_RUN");
        return this.run();
      } //Send notifications to client, with no custom configuration

    }
  },
  //will be a function on the collection instance, returned from find()
  message: function () {
    return 'There is a new post: "' + this.data.post.name + '"';
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},{
  "extensions": [
    ".js",
    ".json",
    ".html",
    ".css",
    ".jsx",
    ".styl"
  ]
});
require("/client/template.main.js");
require("/client/lib/jVectorMap/jquery-jvectormap-2.0.3.min.js");
require("/client/lib/jVectorMap/jquery-jvectormap-world-mill.js");
require("/client/lib/switchery.js");
require("/client/startup.jsx");
require("/collections/accountInvites.jsx");
require("/collections/accounts.jsx");
require("/collections/advertising.jsx");
require("/collections/campaignInvites.jsx");
require("/collections/campaigns.jsx");
require("/collections/invites.jsx");
require("/collections/payments.jsx");
require("/collections/posts.jsx");
require("/collections/reports.jsx");
require("/collections/team-attack.jsx");
require("/notifications/notifications.jsx");
require("/client/main.jsx");