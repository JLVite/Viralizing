[{"type":"js","data":"(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar Accounts = Package['accounts-base'].Accounts;\nvar Random = Package.random.Random;\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////\n//                                                                                   //\n// packages/fongandrew_login-as-user/packages/fongandrew_login-as-user.js            //\n//                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////\n                                                                                     //\n(function () {\n\n/////////////////////////////////////////////////////////////////////////////////\n//                                                                             //\n// packages/fongandrew:login-as-user/login_as_user_server.js                   //\n//                                                                             //\n/////////////////////////////////////////////////////////////////////////////////\n                                                                               //\n(function() {                                                                  // 1\n  'use strict';                                                                // 2\n                                                                               // 3\n  Accounts.impSvc = {};                                                        // 4\n                                                                               // 5\n  // Call from a Meteor method to set/get a token that client can use to login // 6\n  Accounts.impSvc.set = function(userId) {                                     // 7\n    var token = Random.secret();                                               // 8\n    Meteor.users.update(userId, {                                              // 9\n      $set: {\"services.impersonate.token\": token}                              // 10\n    });                                                                        // 11\n    return token;                                                              // 12\n  };                                                                           // 13\n                                                                               // 14\n  //////                                                                       // 15\n                                                                               // 16\n  Accounts.registerLoginHandler(\"impersonate\", function(options) {             // 17\n    if (! (options.impToken && typeof options.impToken === 'string'))          // 18\n      return undefined; // Don't handle                                        // 19\n                                                                               // 20\n    var user = Meteor.users.findOne({                                          // 21\n      \"services.impersonate.token\": options.impToken                           // 22\n    });                                                                        // 23\n                                                                               // 24\n    if (user) {                                                                // 25\n      return {                                                                 // 26\n        userId: user._id                                                       // 27\n      };                                                                       // 28\n    } else {                                                                   // 29\n      return {                                                                 // 30\n        error: new Meteor.Error(403, \"invalid-token\")                          // 31\n      };                                                                       // 32\n    }                                                                          // 33\n  });                                                                          // 34\n                                                                               // 35\n})();                                                                          // 36\n/////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n///////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nPackage._define(\"fongandrew:login-as-user\");\n\n})();\n","servePath":"/packages/fongandrew_login-as-user.js"}]