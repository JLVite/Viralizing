[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                 //\n// packages/mixmax_smart-disconnect/disconnect-when-backgrounded.js                                                //\n//                                                                                                                 //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                   //\nvar disconnectTimer = null;\n\n// 60 seconds by default\nvar disconnectTime = (Meteor.settings && Meteor.settings.public && Meteor.settings.public.disconnectTimeSec || 60) * 1000;\nvar disconnectVoids = (Meteor.settings && Meteor.settings.public && Meteor.settings.public.disconnectVoids || []);\n\nMeteor.startup(disconnectIfHidden);\n\ndocument.addEventListener('visibilitychange', disconnectIfHidden);\n\nif (Meteor.isCordova) {\n    document.addEventListener('resume', function () { Meteor.reconnect(); });\n    document.addEventListener('pause', function () { createDisconnectTimeout(); });\n}\n\nfunction disconnectIfHidden() {\n    removeDisconnectTimeout();\n\n    if (document.hidden) {\n        if(!Package[\"iron:router\"] || disconnectVoids.indexOf(Router.current().route.getName()) < 0){\n            createDisconnectTimeout();\n        }\n    } else {\n        Meteor.reconnect();\n    }\n}\n\nfunction createDisconnectTimeout() {\n    removeDisconnectTimeout();\n\n    disconnectTimer = setTimeout(function () {\n        Meteor.disconnect();\n    }, disconnectTime);\n}\n\nfunction removeDisconnectTimeout() {\n    if (disconnectTimer) {\n        clearTimeout(disconnectTimer);\n    }\n}\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nPackage._define(\"mixmax:smart-disconnect\");\n\n})();\n","servePath":"/packages/mixmax_smart-disconnect.js"}]